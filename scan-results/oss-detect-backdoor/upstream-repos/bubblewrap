{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-seccomp.py"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 53,
                  "endLine": 183,
                  "endColumn": 57,
                  "snippet": {
                    "text": "utimes\n'''.split())\n\n# Miscellaneous syscalls used during process startup, at least on x86_64\nALLOWED = DEFAULT_SET | BASIC_IO_SET | FILESYSTEM_SET | set('''\narch_prctl\nioctl\n",
                    "rendered": {
                      "text": "utimes\n'''.split())\n\n# Miscellaneous syscalls used during process startup, at least on x86_64\nALLOWED = DEFAULT_SET | BASIC_IO_SET | FILESYSTEM_SET | set('''\narch_prctl\nioctl\n",
                      "markdown": "`utimes\n'''.split())\n\n# Miscellaneous syscalls used during process startup, at least on x86_64\nALLOWED = DEFAULT_SET | BASIC_IO_SET | FILESYSTEM_SET | set('''\narch_prctl\nioctl\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-seccomp.py"
                },
                "region": {
                  "startLine": 493,
                  "startColumn": 21,
                  "endLine": 493,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                    else:\n                        self.assertEqual(completed.returncode, errno.EFAULT)\n                else:\n                    # chmod is allowed by the allowlist but blocked by the\n                    # denylist. Denying takes precedence over allowing,\n                    # regardless of order.\n                    self.assertEqual(completed.returncode, errno.ECONNREFUSED)\n",
                    "rendered": {
                      "text": "                    else:\n                        self.assertEqual(completed.returncode, errno.EFAULT)\n                else:\n                    # chmod is allowed by the allowlist but blocked by the\n                    # denylist. Denying takes precedence over allowing,\n                    # regardless of order.\n                    self.assertEqual(completed.returncode, errno.ECONNREFUSED)\n",
                      "markdown": "`                    else:\n                        self.assertEqual(completed.returncode, errno.EFAULT)\n                else:\n                    # chmod is allowed by the allowlist but blocked by the\n                    # denylist. Denying takes precedence over allowing,\n                    # regardless of order.\n                    self.assertEqual(completed.returncode, errno.ECONNREFUSED)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-seccomp.py"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 5,
                  "endLine": 108,
                  "snippet": {
                    "text": "# This is the @filesystem-io set from systemd\nFILESYSTEM_SET = set('''\naccess\nchdir\nchmod\nclose\ncreat\nfaccessat\nfaccessat2\n",
                    "rendered": {
                      "text": "# This is the @filesystem-io set from systemd\nFILESYSTEM_SET = set('''\naccess\nchdir\nchmod\nclose\ncreat\nfaccessat\nfaccessat2\n",
                      "markdown": "`# This is the @filesystem-io set from systemd\nFILESYSTEM_SET = set('''\naccess\nchdir\nchmod\nclose\ncreat\nfaccessat\nfaccessat2\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-seccomp.py"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 9,
                  "endLine": 79,
                  "snippet": {
                    "text": "set_thread_area\nset_tid_address\nset_tls\nsigreturn\ntime\nugetrlimit\n'''.split())\n\n# This is the @basic-io set from systemd\n",
                    "rendered": {
                      "text": "set_thread_area\nset_tid_address\nset_tls\nsigreturn\ntime\nugetrlimit\n'''.split())\n\n# This is the @basic-io set from systemd\n",
                      "markdown": "`set_thread_area\nset_tid_address\nset_tls\nsigreturn\ntime\nugetrlimit\n'''.split())\n\n# This is the @basic-io set from systemd\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 24,
                  "endLine": 161,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    if ! test -L \"$1\"; then\n        fatal \"File '$1' is not a symbolic link\"\n    fi\n    if ! readlink \"$1\" | grep -q -e \"$2\"; then\n        _fatal_print_file \"$1\" \"Symbolic link '$1' doesn't match regexp '$2'\"\n    fi\n}\n",
                    "rendered": {
                      "text": "    if ! test -L \"$1\"; then\n        fatal \"File '$1' is not a symbolic link\"\n    fi\n    if ! readlink \"$1\" | grep -q -e \"$2\"; then\n        _fatal_print_file \"$1\" \"Symbolic link '$1' doesn't match regexp '$2'\"\n    fi\n}\n",
                      "markdown": "`    if ! test -L \"$1\"; then\n        fatal \"File '$1' is not a symbolic link\"\n    fi\n    if ! readlink \"$1\" | grep -q -e \"$2\"; then\n        _fatal_print_file \"$1\" \"Symbolic link '$1' doesn't match regexp '$2'\"\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 12,
                  "endLine": 144,
                  "endColumn": 18,
                  "snippet": {
                    "text": "assert_file_has_content_literal () {\n    fpath=$1; shift\n    for s in \"$@\"; do\n        if ! grep -q -F -e \"$s\" \"$fpath\"; then\n            _fatal_print_file \"$fpath\" \"File '$fpath' doesn't match fixed string list '$s'\"\n        fi\n    done\n",
                    "rendered": {
                      "text": "assert_file_has_content_literal () {\n    fpath=$1; shift\n    for s in \"$@\"; do\n        if ! grep -q -F -e \"$s\" \"$fpath\"; then\n            _fatal_print_file \"$fpath\" \"File '$fpath' doesn't match fixed string list '$s'\"\n        fi\n    done\n",
                      "markdown": "`assert_file_has_content_literal () {\n    fpath=$1; shift\n    for s in \"$@\"; do\n        if ! grep -q -F -e \"$s\" \"$fpath\"; then\n            _fatal_print_file \"$fpath\" \"File '$fpath' doesn't match fixed string list '$s'\"\n        fi\n    done\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    fpath=$1\n    shift\n    for re in \"$@\"; do\n        if ! grep -q -e \"$re\" \"$fpath\"; then\n            _fatal_print_file \"$fpath\" \"File '$fpath' doesn't match regexp '$re'\"\n        fi\n    done\n",
                    "rendered": {
                      "text": "    fpath=$1\n    shift\n    for re in \"$@\"; do\n        if ! grep -q -e \"$re\" \"$fpath\"; then\n            _fatal_print_file \"$fpath\" \"File '$fpath' doesn't match regexp '$re'\"\n        fi\n    done\n",
                      "markdown": "`    fpath=$1\n    shift\n    for re in \"$@\"; do\n        if ! grep -q -e \"$re\" \"$fpath\"; then\n            _fatal_print_file \"$fpath\" \"File '$fpath' doesn't match regexp '$re'\"\n        fi\n    done\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 10,
                  "endLine": 109,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    fpath=$1\n    shift\n    for re in \"$@\"; do\n        if grep -q -e \"$re\" \"$fpath\"; then\n            _fatal_print_file \"$fpath\" \"File '$fpath' matches regexp '$re'\"\n        fi\n    done\n",
                    "rendered": {
                      "text": "    fpath=$1\n    shift\n    for re in \"$@\"; do\n        if grep -q -e \"$re\" \"$fpath\"; then\n            _fatal_print_file \"$fpath\" \"File '$fpath' matches regexp '$re'\"\n        fi\n    done\n",
                      "markdown": "`    fpath=$1\n    shift\n    for re in \"$@\"; do\n        if grep -q -e \"$re\" \"$fpath\"; then\n            _fatal_print_file \"$fpath\" \"File '$fpath' matches regexp '$re'\"\n        fi\n    done\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 3,
                  "endLine": 95,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    ls -al \"$file1\" >&2\n    sed -e 's/^/# /' < \"$file1\" >&2\n    ls -al \"$file2\" >&2\n    sed -e 's/^/# /' < \"$file2\" >&2\n    fatal \"$@\"\n}\n\n",
                    "rendered": {
                      "text": "    ls -al \"$file1\" >&2\n    sed -e 's/^/# /' < \"$file1\" >&2\n    ls -al \"$file2\" >&2\n    sed -e 's/^/# /' < \"$file2\" >&2\n    fatal \"$@\"\n}\n\n",
                      "markdown": "`    ls -al \"$file1\" >&2\n    sed -e 's/^/# /' < \"$file1\" >&2\n    ls -al \"$file2\" >&2\n    sed -e 's/^/# /' < \"$file2\" >&2\n    fatal \"$@\"\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 3,
                  "endLine": 93,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    file2=\"$1\"\n    shift\n    ls -al \"$file1\" >&2\n    sed -e 's/^/# /' < \"$file1\" >&2\n    ls -al \"$file2\" >&2\n    sed -e 's/^/# /' < \"$file2\" >&2\n    fatal \"$@\"\n",
                    "rendered": {
                      "text": "    file2=\"$1\"\n    shift\n    ls -al \"$file1\" >&2\n    sed -e 's/^/# /' < \"$file1\" >&2\n    ls -al \"$file2\" >&2\n    sed -e 's/^/# /' < \"$file2\" >&2\n    fatal \"$@\"\n",
                      "markdown": "`    file2=\"$1\"\n    shift\n    ls -al \"$file1\" >&2\n    sed -e 's/^/# /' < \"$file1\" >&2\n    ls -al \"$file2\" >&2\n    sed -e 's/^/# /' < \"$file2\" >&2\n    fatal \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 3,
                  "endLine": 83,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    file=\"$1\"\n    shift\n    ls -al \"$file\" >&2\n    sed -e 's/^/# /' < \"$file\" >&2\n    fatal \"$@\"\n}\n\n",
                    "rendered": {
                      "text": "    file=\"$1\"\n    shift\n    ls -al \"$file\" >&2\n    sed -e 's/^/# /' < \"$file\" >&2\n    fatal \"$@\"\n}\n\n",
                      "markdown": "`    file=\"$1\"\n    shift\n    ls -al \"$file\" >&2\n    sed -e 's/^/# /' < \"$file\" >&2\n    fatal \"$@\"\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 35,
                  "endLine": 75,
                  "endColumn": 41,
                  "snippet": {
                    "text": "}\n\nassert_has_dir () {\n    test -d \"$1\" || fatal \"Couldn't find '$1'\"\n}\n\n# Dump ls -al + file contents to stderr, then fatal()\n",
                    "rendered": {
                      "text": "}\n\nassert_has_dir () {\n    test -d \"$1\" || fatal \"Couldn't find '$1'\"\n}\n\n# Dump ls -al + file contents to stderr, then fatal()\n",
                      "markdown": "`}\n\nassert_has_dir () {\n    test -d \"$1\" || fatal \"Couldn't find '$1'\"\n}\n\n# Dump ls -al + file contents to stderr, then fatal()\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 35,
                  "endLine": 71,
                  "endColumn": 41,
                  "snippet": {
                    "text": "}\n\nassert_has_file () {\n    test -f \"$1\" || fatal \"Couldn't find '$1'\"\n}\n\nassert_has_dir () {\n",
                    "rendered": {
                      "text": "}\n\nassert_has_file () {\n    test -f \"$1\" || fatal \"Couldn't find '$1'\"\n}\n\nassert_has_dir () {\n",
                      "markdown": "`}\n\nassert_has_file () {\n    test -f \"$1\" || fatal \"Couldn't find '$1'\"\n}\n\nassert_has_dir () {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 20,
                  "endLine": 61,
                  "endColumn": 26,
                  "snippet": {
                    "text": "}\n\nassert_str_match () {\n    if ! echo \"$1\" | grep -E -q \"$2\"; then\n\t      fatal \"$1 does not match regexp $2\"\n    fi\n}\n",
                    "rendered": {
                      "text": "}\n\nassert_str_match () {\n    if ! echo \"$1\" | grep -E -q \"$2\"; then\n\t      fatal \"$1 does not match regexp $2\"\n    fi\n}\n",
                      "markdown": "`}\n\nassert_str_match () {\n    if ! echo \"$1\" | grep -E -q \"$2\"; then\n\t      fatal \"$1 does not match regexp $2\"\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 44,
                  "endLine": 46,
                  "endColumn": 50,
                  "snippet": {
                    "text": "# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n    if [ -z \"${LC_ALL}\" ]; then fatal \"Can't find suitable UTF-8 locale\"; fi\nelse\n    export LC_ALL=C.UTF-8\nfi\n",
                    "rendered": {
                      "text": "# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n    if [ -z \"${LC_ALL}\" ]; then fatal \"Can't find suitable UTF-8 locale\"; fi\nelse\n    export LC_ALL=C.UTF-8\nfi\n",
                      "markdown": "`# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n    if [ -z \"${LC_ALL}\" ]; then fatal \"Can't find suitable UTF-8 locale\"; fi\nelse\n    export LC_ALL=C.UTF-8\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 71,
                  "endLine": 45,
                  "endColumn": 77,
                  "snippet": {
                    "text": "# If we can't find the locale command assume we have support for C.UTF-8\n# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n    if [ -z \"${LC_ALL}\" ]; then fatal \"Can't find suitable UTF-8 locale\"; fi\nelse\n    export LC_ALL=C.UTF-8\n",
                    "rendered": {
                      "text": "# If we can't find the locale command assume we have support for C.UTF-8\n# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n    if [ -z \"${LC_ALL}\" ]; then fatal \"Can't find suitable UTF-8 locale\"; fi\nelse\n    export LC_ALL=C.UTF-8\n",
                      "markdown": "`# If we can't find the locale command assume we have support for C.UTF-8\n# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n    if [ -z \"${LC_ALL}\" ]; then fatal \"Can't find suitable UTF-8 locale\"; fi\nelse\n    export LC_ALL=C.UTF-8\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 31,
                  "endLine": 45,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# If we can't find the locale command assume we have support for C.UTF-8\n# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n    if [ -z \"${LC_ALL}\" ]; then fatal \"Can't find suitable UTF-8 locale\"; fi\nelse\n    export LC_ALL=C.UTF-8\n",
                    "rendered": {
                      "text": "# If we can't find the locale command assume we have support for C.UTF-8\n# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n    if [ -z \"${LC_ALL}\" ]; then fatal \"Can't find suitable UTF-8 locale\"; fi\nelse\n    export LC_ALL=C.UTF-8\n",
                      "markdown": "`# If we can't find the locale command assume we have support for C.UTF-8\n# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n    if [ -z \"${LC_ALL}\" ]; then fatal \"Can't find suitable UTF-8 locale\"; fi\nelse\n    export LC_ALL=C.UTF-8\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13,
                  "endLine": 42,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# of the C (POSIX) locale if we have one, or fall back to en_US.UTF-8\n# (https://sourceware.org/glibc/wiki/Proposals/C.UTF-8)\n#\n# If we can't find the locale command assume we have support for C.UTF-8\n# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n",
                    "rendered": {
                      "text": "# of the C (POSIX) locale if we have one, or fall back to en_US.UTF-8\n# (https://sourceware.org/glibc/wiki/Proposals/C.UTF-8)\n#\n# If we can't find the locale command assume we have support for C.UTF-8\n# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n",
                      "markdown": "`# of the C (POSIX) locale if we have one, or fall back to en_US.UTF-8\n# (https://sourceware.org/glibc/wiki/Proposals/C.UTF-8)\n#\n# If we can't find the locale command assume we have support for C.UTF-8\n# (e.g. musl based systems)\nif type -p locale >/dev/null; then\n    export LC_ALL=$(locale -a | grep -iEe '^(C|en_US)\\.(UTF-8|utf8)$' | head -n1 || true)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest-core.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 31,
                  "endLine": 1,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Core source library for shell script tests; the\n# canonical version lives in:\n#\n#   https://github.com/ostreedev/ostree\n",
                    "rendered": {
                      "text": "# Core source library for shell script tests; the\n# canonical version lives in:\n#\n#   https://github.com/ostreedev/ostree\n",
                      "markdown": "`# Core source library for shell script tests; the\n# canonical version lives in:\n#\n#   https://github.com/ostreedev/ostree\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/packaging/bubblewrap.spec"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 60,
                  "endLine": 37,
                  "endColumn": 5,
                  "snippet": {
                    "text": "make %{?_smp_mflags}\n\n%install\nmake install DESTDIR=$RPM_BUILD_ROOT INSTALL=\"install -p -c\"\nfind $RPM_BUILD_ROOT -name '*.la' -delete\n\n%files\n%license COPYING\n",
                    "rendered": {
                      "text": "make %{?_smp_mflags}\n\n%install\nmake install DESTDIR=$RPM_BUILD_ROOT INSTALL=\"install -p -c\"\nfind $RPM_BUILD_ROOT -name '*.la' -delete\n\n%files\n%license COPYING\n",
                      "markdown": "`make %{?_smp_mflags}\n\n%install\nmake install DESTDIR=$RPM_BUILD_ROOT INSTALL=\"install -p -c\"\nfind $RPM_BUILD_ROOT -name '*.la' -delete\n\n%files\n%license COPYING\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/packaging/bubblewrap.spec"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 6,
                  "endLine": 30,
                  "endColumn": 4,
                  "snippet": {
                    "text": "%prep\n%autosetup -Sgit -n %{name}-%{version}\n\n%build\nenv NOCONFIGURE=1 ./autogen.sh\n%configure --disable-silent-rules --with-priv-mode=none\n\nmake %{?_smp_mflags}\n",
                    "rendered": {
                      "text": "%prep\n%autosetup -Sgit -n %{name}-%{version}\n\n%build\nenv NOCONFIGURE=1 ./autogen.sh\n%configure --disable-silent-rules --with-priv-mode=none\n\nmake %{?_smp_mflags}\n",
                      "markdown": "`%prep\n%autosetup -Sgit -n %{name}-%{version}\n\n%build\nenv NOCONFIGURE=1 ./autogen.sh\n%configure --disable-silent-rules --with-priv-mode=none\n\nmake %{?_smp_mflags}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/packaging/bubblewrap.spec"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 14,
                  "endLine": 14,
                  "snippet": {
                    "text": "License: LGPLv2+\nURL: https://github.com/projectatomic/bubblewrap\n\nBuildRequires: git\n# We always run autogen.sh\nBuildRequires: autoconf automake libtool\nBuildRequires: libcap-devel\nBuildRequires: pkgconfig(libselinux)\n",
                    "rendered": {
                      "text": "License: LGPLv2+\nURL: https://github.com/projectatomic/bubblewrap\n\nBuildRequires: git\n# We always run autogen.sh\nBuildRequires: autoconf automake libtool\nBuildRequires: libcap-devel\nBuildRequires: pkgconfig(libselinux)\n",
                      "markdown": "`License: LGPLv2+\nURL: https://github.com/projectatomic/bubblewrap\n\nBuildRequires: git\n# We always run autogen.sh\nBuildRequires: autoconf automake libtool\nBuildRequires: libcap-devel\nBuildRequires: pkgconfig(libselinux)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 73,
                  "endLine": 51,
                  "endColumn": 81,
                  "snippet": {
                    "text": "bel[File label for temporary sandbox content]:SELinux label:_selinux_contexts'\n    '--gid[Custom gid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '--help[Print help and exit]'\n    '--hostname[Custom hostname in the sandbox (requires --unshare-uts)]:hostname:'\n    '--info-fd[Write information about the running container to FD]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--json-status-fd[Write container status to FD as multiple JSON documents]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--lock-file[Take a lock on DEST while sandbox i",
                    "rendered": {
                      "text": "bel[File label for temporary sandbox content]:SELinux label:_selinux_contexts'\n    '--gid[Custom gid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '--help[Print help and exit]'\n    '--hostname[Custom hostname in the sandbox (requires --unshare-uts)]:hostname:'\n    '--info-fd[Write information about the running container to FD]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--json-status-fd[Write container status to FD as multiple JSON documents]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--lock-file[Take a lock on DEST while sandbox i",
                      "markdown": "`bel[File label for temporary sandbox content]:SELinux label:_selinux_contexts'\n    '--gid[Custom gid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '--help[Print help and exit]'\n    '--hostname[Custom hostname in the sandbox (requires --unshare-uts)]:hostname:'\n    '--info-fd[Write information about the running container to FD]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--json-status-fd[Write container status to FD as multiple JSON documents]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--lock-file[Take a lock on DEST while sandbox i`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 23,
                  "endLine": 51,
                  "endColumn": 31,
                  "snippet": {
                    "text": "x]:SELinux label:_selinux_contexts'\n    '--file-label[File label for temporary sandbox content]:SELinux label:_selinux_contexts'\n    '--gid[Custom gid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '--help[Print help and exit]'\n    '--hostname[Custom hostname in the sandbox (requires --unshare-uts)]:hostname:'\n    '--info-fd[Write information about the running container to FD]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--json-status-fd[Write container status to FD as multiple JSON documents]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n  ",
                    "rendered": {
                      "text": "x]:SELinux label:_selinux_contexts'\n    '--file-label[File label for temporary sandbox content]:SELinux label:_selinux_contexts'\n    '--gid[Custom gid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '--help[Print help and exit]'\n    '--hostname[Custom hostname in the sandbox (requires --unshare-uts)]:hostname:'\n    '--info-fd[Write information about the running container to FD]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--json-status-fd[Write container status to FD as multiple JSON documents]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n  ",
                      "markdown": "`x]:SELinux label:_selinux_contexts'\n    '--file-label[File label for temporary sandbox content]:SELinux label:_selinux_contexts'\n    '--gid[Custom gid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '--help[Print help and exit]'\n    '--hostname[Custom hostname in the sandbox (requires --unshare-uts)]:hostname:'\n    '--info-fd[Write information about the running container to FD]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--json-status-fd[Write container status to FD as multiple JSON documents]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n  `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 7,
                  "endLine": 51,
                  "endColumn": 15,
                  "snippet": {
                    "text": "l for the sandbox]:SELinux label:_selinux_contexts'\n    '--file-label[File label for temporary sandbox content]:SELinux label:_selinux_contexts'\n    '--gid[Custom gid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '--help[Print help and exit]'\n    '--hostname[Custom hostname in the sandbox (requires --unshare-uts)]:hostname:'\n    '--info-fd[Write information about the running container to FD]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--json-status-fd[Write container status to FD as multiple JSON documents]: :_guard \"[0-9]#\" \"file descriptor ",
                    "rendered": {
                      "text": "l for the sandbox]:SELinux label:_selinux_contexts'\n    '--file-label[File label for temporary sandbox content]:SELinux label:_selinux_contexts'\n    '--gid[Custom gid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '--help[Print help and exit]'\n    '--hostname[Custom hostname in the sandbox (requires --unshare-uts)]:hostname:'\n    '--info-fd[Write information about the running container to FD]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--json-status-fd[Write container status to FD as multiple JSON documents]: :_guard \"[0-9]#\" \"file descriptor ",
                      "markdown": "`l for the sandbox]:SELinux label:_selinux_contexts'\n    '--file-label[File label for temporary sandbox content]:SELinux label:_selinux_contexts'\n    '--gid[Custom gid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '--help[Print help and exit]'\n    '--hostname[Custom hostname in the sandbox (requires --unshare-uts)]:hostname:'\n    '--info-fd[Write information about the running container to FD]: :_guard \"[0-9]#\" \"file descriptor to write to\"'\n    '--json-status-fd[Write container status to FD as multiple JSON documents]: :_guard \"[0-9]#\" \"file descriptor `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 29,
                  "endLine": 66,
                  "endColumn": 33,
                  "snippet": {
                    "text": " use seccomp rules from FD]: :_guard \"[0-9]#\" \"file descriptor to read seccomp rules from\"'\n    '--setenv[Set an environment variable]:variable to set:_parameters -g \"*export*\":value of variable: :'\n    '--size[Set size in bytes for next action argument]: :->after_size'\n    '--symlink[Create symlink at DEST with target SRC]:symlink target:_files:symlink to create:_files:'\n    '--sync-fd[Keep this fd open while sandbox is running]: :_guard \"[0-9]#\" \"file descriptor to keep open\"'\n    '--uid[Custom uid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '(",
                    "rendered": {
                      "text": " use seccomp rules from FD]: :_guard \"[0-9]#\" \"file descriptor to read seccomp rules from\"'\n    '--setenv[Set an environment variable]:variable to set:_parameters -g \"*export*\":value of variable: :'\n    '--size[Set size in bytes for next action argument]: :->after_size'\n    '--symlink[Create symlink at DEST with target SRC]:symlink target:_files:symlink to create:_files:'\n    '--sync-fd[Keep this fd open while sandbox is running]: :_guard \"[0-9]#\" \"file descriptor to keep open\"'\n    '--uid[Custom uid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '(",
                      "markdown": "` use seccomp rules from FD]: :_guard \"[0-9]#\" \"file descriptor to read seccomp rules from\"'\n    '--setenv[Set an environment variable]:variable to set:_parameters -g \"*export*\":value of variable: :'\n    '--size[Set size in bytes for next action argument]: :->after_size'\n    '--symlink[Create symlink at DEST with target SRC]:symlink target:_files:symlink to create:_files:'\n    '--sync-fd[Keep this fd open while sandbox is running]: :_guard \"[0-9]#\" \"file descriptor to keep open\"'\n    '--uid[Custom uid in the sandbox (requires --unshare-user or --userns)]: :_guard \"[0-9]#\" \"numeric group ID\"'\n    '(`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 21,
                  "endLine": 11,
                  "endColumn": 25,
                  "snippet": {
                    "text": "n DEST]:mount point for tmpfs:_files -/'\n)\n\n_bwrap_args_after_perms=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--bind-data[Copy from FD to file which is bind-mounted on DEST]: :_guard \"[0-9]#\" \"file descriptor to read content\":destination:_files'\n    '--dir[Create dir at DEST]:directory to create:_files -/'\n    '--file[Copy from FD to destination DEST]: :_guard \"[0-9]#\" \"file descriptor to read content from\":destination:_files'\n    '--ro-bind-data[Copy from FD to file which is readonly bind-mounted on DEST]: :_guard \"[0-9]#\" \"file descriptor to read content from\":de",
                    "rendered": {
                      "text": "n DEST]:mount point for tmpfs:_files -/'\n)\n\n_bwrap_args_after_perms=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--bind-data[Copy from FD to file which is bind-mounted on DEST]: :_guard \"[0-9]#\" \"file descriptor to read content\":destination:_files'\n    '--dir[Create dir at DEST]:directory to create:_files -/'\n    '--file[Copy from FD to destination DEST]: :_guard \"[0-9]#\" \"file descriptor to read content from\":destination:_files'\n    '--ro-bind-data[Copy from FD to file which is readonly bind-mounted on DEST]: :_guard \"[0-9]#\" \"file descriptor to read content from\":de",
                      "markdown": "`n DEST]:mount point for tmpfs:_files -/'\n)\n\n_bwrap_args_after_perms=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--bind-data[Copy from FD to file which is bind-mounted on DEST]: :_guard \"[0-9]#\" \"file descriptor to read content\":destination:_files'\n    '--dir[Create dir at DEST]:directory to create:_files -/'\n    '--file[Copy from FD to destination DEST]: :_guard \"[0-9]#\" \"file descriptor to read content from\":destination:_files'\n    '--ro-bind-data[Copy from FD to file which is readonly bind-mounted on DEST]: :_guard \"[0-9]#\" \"file descriptor to read content from\":de`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 104,
                  "endLine": 101,
                  "endColumn": 111,
                  "snippet": {
                    "text": "            ;;\n\n        caps)\n            # $ grep -E '#define\\sCAP_\\w+\\s+[0-9]+' /usr/include/linux/capability.h | awk '{print $2}' | xargs echo\n            local all_caps=(\n                CAP_CHOWN CAP_DAC_OVERRIDE CAP_DAC_READ_SEARCH CAP_FOWNER CAP_FSETID \\\n                CAP_KILL CAP_SETGID CAP_SETUID CAP_SETPCAP CAP_LINUX_IMMUTABLE \\\n",
                    "rendered": {
                      "text": "            ;;\n\n        caps)\n            # $ grep -E '#define\\sCAP_\\w+\\s+[0-9]+' /usr/include/linux/capability.h | awk '{print $2}' | xargs echo\n            local all_caps=(\n                CAP_CHOWN CAP_DAC_OVERRIDE CAP_DAC_READ_SEARCH CAP_FOWNER CAP_FSETID \\\n                CAP_KILL CAP_SETGID CAP_SETUID CAP_SETPCAP CAP_LINUX_IMMUTABLE \\\n",
                      "markdown": "`            ;;\n\n        caps)\n            # $ grep -E '#define\\sCAP_\\w+\\s+[0-9]+' /usr/include/linux/capability.h | awk '{print $2}' | xargs echo\n            local all_caps=(\n                CAP_CHOWN CAP_DAC_OVERRIDE CAP_DAC_READ_SEARCH CAP_FOWNER CAP_FSETID \\\n                CAP_KILL CAP_SETGID CAP_SETUID CAP_SETPCAP CAP_LINUX_IMMUTABLE \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 85,
                  "endLine": 101,
                  "endColumn": 90,
                  "snippet": {
                    "text": "            ;;\n\n        caps)\n            # $ grep -E '#define\\sCAP_\\w+\\s+[0-9]+' /usr/include/linux/capability.h | awk '{print $2}' | xargs echo\n            local all_caps=(\n                CAP_CHOWN CAP_DAC_OVERRIDE CAP_DAC_READ_SEARCH CAP_FOWNER CAP_FSETID \\\n                CAP_KILL CAP_SETGID CAP_SETUID CAP_SETPCAP CAP_LINUX_IMMUTABLE \\\n",
                    "rendered": {
                      "text": "            ;;\n\n        caps)\n            # $ grep -E '#define\\sCAP_\\w+\\s+[0-9]+' /usr/include/linux/capability.h | awk '{print $2}' | xargs echo\n            local all_caps=(\n                CAP_CHOWN CAP_DAC_OVERRIDE CAP_DAC_READ_SEARCH CAP_FOWNER CAP_FSETID \\\n                CAP_KILL CAP_SETGID CAP_SETUID CAP_SETPCAP CAP_LINUX_IMMUTABLE \\\n",
                      "markdown": "`            ;;\n\n        caps)\n            # $ grep -E '#define\\sCAP_\\w+\\s+[0-9]+' /usr/include/linux/capability.h | awk '{print $2}' | xargs echo\n            local all_caps=(\n                CAP_CHOWN CAP_DAC_OVERRIDE CAP_DAC_READ_SEARCH CAP_FOWNER CAP_FSETID \\\n                CAP_KILL CAP_SETGID CAP_SETUID CAP_SETPCAP CAP_LINUX_IMMUTABLE \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 15,
                  "endLine": 101,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            ;;\n\n        caps)\n            # $ grep -E '#define\\sCAP_\\w+\\s+[0-9]+' /usr/include/linux/capability.h | awk '{print $2}' | xargs echo\n            local all_caps=(\n                CAP_CHOWN CAP_DAC_OVERRIDE CAP_DAC_READ_SEARCH CAP_FOWNER CAP_FSETID \\\n                CAP_KILL CAP_SETGID CAP_SETUID CAP_SETPCAP CAP_LINUX_IMMUTABLE \\\n",
                    "rendered": {
                      "text": "            ;;\n\n        caps)\n            # $ grep -E '#define\\sCAP_\\w+\\s+[0-9]+' /usr/include/linux/capability.h | awk '{print $2}' | xargs echo\n            local all_caps=(\n                CAP_CHOWN CAP_DAC_OVERRIDE CAP_DAC_READ_SEARCH CAP_FOWNER CAP_FSETID \\\n                CAP_KILL CAP_SETGID CAP_SETUID CAP_SETPCAP CAP_LINUX_IMMUTABLE \\\n",
                      "markdown": "`            ;;\n\n        caps)\n            # $ grep -E '#define\\sCAP_\\w+\\s+[0-9]+' /usr/include/linux/capability.h | awk '{print $2}' | xargs echo\n            local all_caps=(\n                CAP_CHOWN CAP_DAC_OVERRIDE CAP_DAC_READ_SEARCH CAP_FOWNER CAP_FSETID \\\n                CAP_KILL CAP_SETGID CAP_SETUID CAP_SETPCAP CAP_LINUX_IMMUTABLE \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 19,
                  "endLine": 62,
                  "endColumn": 26,
                  "snippet": {
                    "text": "roc[Mount new procfs on DEST]:mount point for procfs:_files -/'\n    '--remount-ro[Remount DEST as readonly; does not recursively remount]:mount point to remount read-only:_files'\n    '--ro-bind-try[Equal to --ro-bind but ignores non-existent SRC]:source:_files:destination:_files'\n    '--ro-bind[Bind mount the host path SRC readonly on DEST]:source:_files:destination:_files'\n    '--seccomp[Load and use seccomp rules from FD]: :_guard \"[0-9]#\" \"file descriptor to read seccomp rules from\"'\n    '--setenv[Set an environment variable]:variable to set:_parameters -g \"*export*\":value of variable: :'\n    '--s",
                    "rendered": {
                      "text": "roc[Mount new procfs on DEST]:mount point for procfs:_files -/'\n    '--remount-ro[Remount DEST as readonly; does not recursively remount]:mount point to remount read-only:_files'\n    '--ro-bind-try[Equal to --ro-bind but ignores non-existent SRC]:source:_files:destination:_files'\n    '--ro-bind[Bind mount the host path SRC readonly on DEST]:source:_files:destination:_files'\n    '--seccomp[Load and use seccomp rules from FD]: :_guard \"[0-9]#\" \"file descriptor to read seccomp rules from\"'\n    '--setenv[Set an environment variable]:variable to set:_parameters -g \"*export*\":value of variable: :'\n    '--s",
                      "markdown": "`roc[Mount new procfs on DEST]:mount point for procfs:_files -/'\n    '--remount-ro[Remount DEST as readonly; does not recursively remount]:mount point to remount read-only:_files'\n    '--ro-bind-try[Equal to --ro-bind but ignores non-existent SRC]:source:_files:destination:_files'\n    '--ro-bind[Bind mount the host path SRC readonly on DEST]:source:_files:destination:_files'\n    '--seccomp[Load and use seccomp rules from FD]: :_guard \"[0-9]#\" \"file descriptor to read seccomp rules from\"'\n    '--setenv[Set an environment variable]:variable to set:_parameters -g \"*export*\":value of variable: :'\n    '--s`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 20,
                  "endLine": 43,
                  "endColumn": 27,
                  "snippet": {
                    "text": "or sandbox: _files -/'\n    '--chmod[Set permissions]: :_guard \"[0-7]#\" \"permissions in octal\":path to set permissions:_files'\n    '--clearenv[Unset all environment variables]'\n    '--dev-bind-try[Equal to --dev-bind but ignores non-existent SRC]:source:_files:destination:_files'\n    '--dev-bind[Bind mount the host path SRC on DEST, allowing device access]:source:_files:destination:_files'\n    '--dev[Mount new dev on DEST]:mount point for /dev:_files -/'\n    \"--die-with-parent[Kills with SIGKILL child process (COMMAND) when bwrap or bwrap's parent dies.]\"\n    '--disable-userns[Disable further use of u",
                    "rendered": {
                      "text": "or sandbox: _files -/'\n    '--chmod[Set permissions]: :_guard \"[0-7]#\" \"permissions in octal\":path to set permissions:_files'\n    '--clearenv[Unset all environment variables]'\n    '--dev-bind-try[Equal to --dev-bind but ignores non-existent SRC]:source:_files:destination:_files'\n    '--dev-bind[Bind mount the host path SRC on DEST, allowing device access]:source:_files:destination:_files'\n    '--dev[Mount new dev on DEST]:mount point for /dev:_files -/'\n    \"--die-with-parent[Kills with SIGKILL child process (COMMAND) when bwrap or bwrap's parent dies.]\"\n    '--disable-userns[Disable further use of u",
                      "markdown": "`or sandbox: _files -/'\n    '--chmod[Set permissions]: :_guard \"[0-7]#\" \"permissions in octal\":path to set permissions:_files'\n    '--clearenv[Unset all environment variables]'\n    '--dev-bind-try[Equal to --dev-bind but ignores non-existent SRC]:source:_files:destination:_files'\n    '--dev-bind[Bind mount the host path SRC on DEST, allowing device access]:source:_files:destination:_files'\n    '--dev[Mount new dev on DEST]:mount point for /dev:_files -/'\n    \"--die-with-parent[Kills with SIGKILL child process (COMMAND) when bwrap or bwrap's parent dies.]\"\n    '--disable-userns[Disable further use of u`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 16,
                  "endLine": 35,
                  "endColumn": 23,
                  "snippet": {
                    "text": " \"file descriptor with NUL-separated arguments\"'\n    '--argv0[Set argv0 to the value VALUE before running the program]:value:'\n    '--as-pid-1[Do not install a reaper process with PID=1]'\n    '--bind-try[Equal to --bind but ignores non-existent SRC]:source:_files:destination:_files'\n    '--bind[Bind mount the host path SRC on DEST]:source:_files:destination:_files'\n    '--block-fd[Block on FD until some data to read is available]: :_guard \"[0-9]#\" \"file descriptor to block on\"'\n    '--cap-add[Add cap CAP when running as privileged user]:capability to add:->caps'\n    '--cap-drop[Drop cap CAP when runn",
                    "rendered": {
                      "text": " \"file descriptor with NUL-separated arguments\"'\n    '--argv0[Set argv0 to the value VALUE before running the program]:value:'\n    '--as-pid-1[Do not install a reaper process with PID=1]'\n    '--bind-try[Equal to --bind but ignores non-existent SRC]:source:_files:destination:_files'\n    '--bind[Bind mount the host path SRC on DEST]:source:_files:destination:_files'\n    '--block-fd[Block on FD until some data to read is available]: :_guard \"[0-9]#\" \"file descriptor to block on\"'\n    '--cap-add[Add cap CAP when running as privileged user]:capability to add:->caps'\n    '--cap-drop[Drop cap CAP when runn",
                      "markdown": "` \"file descriptor with NUL-separated arguments\"'\n    '--argv0[Set argv0 to the value VALUE before running the program]:value:'\n    '--as-pid-1[Do not install a reaper process with PID=1]'\n    '--bind-try[Equal to --bind but ignores non-existent SRC]:source:_files:destination:_files'\n    '--bind[Bind mount the host path SRC on DEST]:source:_files:destination:_files'\n    '--block-fd[Block on FD until some data to read is available]: :_guard \"[0-9]#\" \"file descriptor to block on\"'\n    '--cap-add[Add cap CAP when running as privileged user]:capability to add:->caps'\n    '--cap-drop[Drop cap CAP when runn`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 12,
                  "endLine": 28,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    '*::arguments:_normal'\n    $_bwrap_args_after_perms\n\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--add-seccomp-fd[Load and use seccomp rules from FD]: :_guard \"[0-9]#\" \"file descriptor to read seccomp rules from\"'\n    '--assert-userns-disabled[Fail unless further use of user namespace inside sandbox is disabled]'\n    '--args[Parse NUL-separated args from FD]: :_guard \"[0-9]#\" \"file descriptor with NUL-separated arguments\"'\n",
                    "rendered": {
                      "text": "    '*::arguments:_normal'\n    $_bwrap_args_after_perms\n\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--add-seccomp-fd[Load and use seccomp rules from FD]: :_guard \"[0-9]#\" \"file descriptor to read seccomp rules from\"'\n    '--assert-userns-disabled[Fail unless further use of user namespace inside sandbox is disabled]'\n    '--args[Parse NUL-separated args from FD]: :_guard \"[0-9]#\" \"file descriptor with NUL-separated arguments\"'\n",
                      "markdown": "`    '*::arguments:_normal'\n    $_bwrap_args_after_perms\n\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--add-seccomp-fd[Load and use seccomp rules from FD]: :_guard \"[0-9]#\" \"file descriptor to read seccomp rules from\"'\n    '--assert-userns-disabled[Fail unless further use of user namespace inside sandbox is disabled]'\n    '--args[Parse NUL-separated args from FD]: :_guard \"[0-9]#\" \"file descriptor with NUL-separated arguments\"'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 12,
                  "endLine": 19,
                  "endColumn": 18,
                  "snippet": {
                    "text": ")\n\n_bwrap_args_after_size=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--perms[Set permissions for next action argument]: :_guard \"[0-7]#\" \"permissions in octal\": :->after_perms_size'\n    '--tmpfs[Mount new tmpfs on DEST]:mount point for tmpfs:_files -/'\n)\n",
                    "rendered": {
                      "text": ")\n\n_bwrap_args_after_size=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--perms[Set permissions for next action argument]: :_guard \"[0-7]#\" \"permissions in octal\": :->after_perms_size'\n    '--tmpfs[Mount new tmpfs on DEST]:mount point for tmpfs:_files -/'\n)\n",
                      "markdown": "`)\n\n_bwrap_args_after_size=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--perms[Set permissions for next action argument]: :_guard \"[0-7]#\" \"permissions in octal\": :->after_perms_size'\n    '--tmpfs[Mount new tmpfs on DEST]:mount point for tmpfs:_files -/'\n)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 12,
                  "endLine": 9,
                  "endColumn": 18,
                  "snippet": {
                    "text": ")\n\n_bwrap_args_after_perms=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--bind-data[Copy from FD to file which is bind-mounted on DEST]: :_guard \"[0-9]#\" \"file descriptor to read content\":destination:_files'\n    '--dir[Create dir at DEST]:directory to create:_files -/'\n    '--file[Copy from FD to destination DEST]: :_guard \"[0-9]#\" \"file descriptor to read content from\":destination:_files'\n",
                    "rendered": {
                      "text": ")\n\n_bwrap_args_after_perms=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--bind-data[Copy from FD to file which is bind-mounted on DEST]: :_guard \"[0-9]#\" \"file descriptor to read content\":destination:_files'\n    '--dir[Create dir at DEST]:directory to create:_files -/'\n    '--file[Copy from FD to destination DEST]: :_guard \"[0-9]#\" \"file descriptor to read content from\":destination:_files'\n",
                      "markdown": "`)\n\n_bwrap_args_after_perms=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--bind-data[Copy from FD to file which is bind-mounted on DEST]: :_guard \"[0-9]#\" \"file descriptor to read content\":destination:_files'\n    '--dir[Create dir at DEST]:directory to create:_files -/'\n    '--file[Copy from FD to destination DEST]: :_guard \"[0-9]#\" \"file descriptor to read content from\":destination:_files'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/zsh/_bwrap"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 12,
                  "endLine": 4,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#compdef bwrap\n\n_bwrap_args_after_perms_size=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--tmpfs[Mount new tmpfs on DEST]:mount point for tmpfs:_files -/'\n)\n\n",
                    "rendered": {
                      "text": "#compdef bwrap\n\n_bwrap_args_after_perms_size=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--tmpfs[Mount new tmpfs on DEST]:mount point for tmpfs:_files -/'\n)\n\n",
                      "markdown": "`#compdef bwrap\n\n_bwrap_args_after_perms_size=(\n    # Please sort alphabetically (in LC_ALL=C order) by option name\n    '--tmpfs[Mount new tmpfs on DEST]:mount point for tmpfs:_files -/'\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/bash/bwrap"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 4,
                  "endLine": 51,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t--file\n\t\t--file-label\n\t\t--gid\n\t\t--hostname\n\t\t--info-fd\n\t\t--lock-file\n\t\t--perms\n",
                    "rendered": {
                      "text": "\t\t--file\n\t\t--file-label\n\t\t--gid\n\t\t--hostname\n\t\t--info-fd\n\t\t--lock-file\n\t\t--perms\n",
                      "markdown": "`\t\t--file\n\t\t--file-label\n\t\t--gid\n\t\t--hostname\n\t\t--info-fd\n\t\t--lock-file\n\t\t--perms\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/bash/bwrap"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# shellcheck shell=bash\n\n# bash completion file for bubblewrap commands\n#\n\n_bwrap() {\n",
                    "rendered": {
                      "text": "# shellcheck shell=bash\n\n# bash completion file for bubblewrap commands\n#\n\n_bwrap() {\n",
                      "markdown": "`# shellcheck shell=bash\n\n# bash completion file for bubblewrap commands\n#\n\n_bwrap() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/completions/bash/bwrap"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# shellcheck shell=bash\n\n# bash completion file for bubblewrap commands\n#\n\n_bwrap() {\n",
                    "rendered": {
                      "text": "# shellcheck shell=bash\n\n# bash completion file for bubblewrap commands\n#\n\n_bwrap() {\n",
                      "markdown": "`# shellcheck shell=bash\n\n# bash completion file for bubblewrap commands\n#\n\n_bwrap() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/demos/flatpak-run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# For this to work you first have to run these commands:\n#  curl -O http://sdk.gnome.org/nightly/keys/nightly.gpg\n#  flatpak --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/\n#  flatpak --user install gnome-nightly org.gnome.Platform\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# For this to work you first have to run these commands:\n#  curl -O http://sdk.gnome.org/nightly/keys/nightly.gpg\n#  flatpak --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/\n#  flatpak --user install gnome-nightly org.gnome.Platform\n",
                      "markdown": "`#!/usr/bin/env bash\n# For this to work you first have to run these commands:\n#  curl -O http://sdk.gnome.org/nightly/keys/nightly.gpg\n#  flatpak --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/\n#  flatpak --user install gnome-nightly org.gnome.Platform\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/demos/flatpak-run.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 2,
                  "endLine": 3,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# For this to work you first have to run these commands:\n#  curl -O http://sdk.gnome.org/nightly/keys/nightly.gpg\n#  flatpak --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/\n#  flatpak --user install gnome-nightly org.gnome.Platform\n#  flatpak --user install gnome-nightly org.gnome.Weather\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# For this to work you first have to run these commands:\n#  curl -O http://sdk.gnome.org/nightly/keys/nightly.gpg\n#  flatpak --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/\n#  flatpak --user install gnome-nightly org.gnome.Platform\n#  flatpak --user install gnome-nightly org.gnome.Weather\n",
                      "markdown": "`#!/usr/bin/env bash\n# For this to work you first have to run these commands:\n#  curl -O http://sdk.gnome.org/nightly/keys/nightly.gpg\n#  flatpak --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/\n#  flatpak --user install gnome-nightly org.gnome.Platform\n#  flatpak --user install gnome-nightly org.gnome.Weather\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/demos/flatpak-run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# For this to work you first have to run these commands:\n#  curl -O http://sdk.gnome.org/nightly/keys/nightly.gpg\n#  flatpak --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/\n#  flatpak --user install gnome-nightly org.gnome.Platform\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# For this to work you first have to run these commands:\n#  curl -O http://sdk.gnome.org/nightly/keys/nightly.gpg\n#  flatpak --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/\n#  flatpak --user install gnome-nightly org.gnome.Platform\n",
                      "markdown": "`#!/usr/bin/env bash\n# For this to work you first have to run these commands:\n#  curl -O http://sdk.gnome.org/nightly/keys/nightly.gpg\n#  flatpak --user remote-add --gpg-key=nightly.gpg gnome-nightly http://sdk.gnome.org/nightly/repo/\n#  flatpak --user install gnome-nightly org.gnome.Platform\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 2854,
                  "startColumn": 23,
                  "endLine": 2854,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    die (\"Specifying --gid requires --unshare-user or --userns\");\n\n  if (!opt_unshare_uts && opt_sandbox_hostname != NULL)\n    die (\"Specifying --hostname requires --unshare-uts\");\n\n  if (opt_as_pid_1 && !opt_unshare_pid)\n    die (\"Specifying --as-pid-1 requires --unshare-pid\");\n",
                    "rendered": {
                      "text": "    die (\"Specifying --gid requires --unshare-user or --userns\");\n\n  if (!opt_unshare_uts && opt_sandbox_hostname != NULL)\n    die (\"Specifying --hostname requires --unshare-uts\");\n\n  if (opt_as_pid_1 && !opt_unshare_pid)\n    die (\"Specifying --as-pid-1 requires --unshare-pid\");\n",
                      "markdown": "`    die (\"Specifying --gid requires --unshare-user or --userns\");\n\n  if (!opt_unshare_uts && opt_sandbox_hostname != NULL)\n    die (\"Specifying --hostname requires --unshare-uts\");\n\n  if (opt_as_pid_1 && !opt_unshare_pid)\n    die (\"Specifying --as-pid-1 requires --unshare-pid\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 2853,
                  "startColumn": 38,
                  "endLine": 2853,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  if (!opt_unshare_user && opt_userns_fd == -1 && opt_sandbox_gid != real_gid)\n    die (\"Specifying --gid requires --unshare-user or --userns\");\n\n  if (!opt_unshare_uts && opt_sandbox_hostname != NULL)\n    die (\"Specifying --hostname requires --unshare-uts\");\n\n  if (opt_as_pid_1 && !opt_unshare_pid)\n",
                    "rendered": {
                      "text": "  if (!opt_unshare_user && opt_userns_fd == -1 && opt_sandbox_gid != real_gid)\n    die (\"Specifying --gid requires --unshare-user or --userns\");\n\n  if (!opt_unshare_uts && opt_sandbox_hostname != NULL)\n    die (\"Specifying --hostname requires --unshare-uts\");\n\n  if (opt_as_pid_1 && !opt_unshare_pid)\n",
                      "markdown": "`  if (!opt_unshare_user && opt_userns_fd == -1 && opt_sandbox_gid != real_gid)\n    die (\"Specifying --gid requires --unshare-user or --userns\");\n\n  if (!opt_unshare_uts && opt_sandbox_hostname != NULL)\n    die (\"Specifying --hostname requires --unshare-uts\");\n\n  if (opt_as_pid_1 && !opt_unshare_pid)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 2417,
                  "startColumn": 22,
                  "endLine": 2417,
                  "endColumn": 30,
                  "snippet": {
                    "text": "          op->dest = argv[1];\n          op->flags = NO_CREATE_DEST;\n\n          opt_sandbox_hostname = argv[1];\n\n          argv += 1;\n          argc -= 1;\n",
                    "rendered": {
                      "text": "          op->dest = argv[1];\n          op->flags = NO_CREATE_DEST;\n\n          opt_sandbox_hostname = argv[1];\n\n          argv += 1;\n          argc -= 1;\n",
                      "markdown": "`          op->dest = argv[1];\n          op->flags = NO_CREATE_DEST;\n\n          opt_sandbox_hostname = argv[1];\n\n          argv += 1;\n          argc -= 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 2411,
                  "startColumn": 38,
                  "endLine": 2411,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            die (\"--hostname takes an argument\");\n\n          if (opt_sandbox_hostname != NULL)\n            warn_only_last_option (\"--hostname\");\n\n          op = setup_op_new (SETUP_SET_HOSTNAME);\n          op->dest = argv[1];\n",
                    "rendered": {
                      "text": "            die (\"--hostname takes an argument\");\n\n          if (opt_sandbox_hostname != NULL)\n            warn_only_last_option (\"--hostname\");\n\n          op = setup_op_new (SETUP_SET_HOSTNAME);\n          op->dest = argv[1];\n",
                      "markdown": "`            die (\"--hostname takes an argument\");\n\n          if (opt_sandbox_hostname != NULL)\n            warn_only_last_option (\"--hostname\");\n\n          op = setup_op_new (SETUP_SET_HOSTNAME);\n          op->dest = argv[1];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 2410,
                  "startColumn": 26,
                  "endLine": 2410,
                  "endColumn": 34,
                  "snippet": {
                    "text": "          if (argc < 2)\n            die (\"--hostname takes an argument\");\n\n          if (opt_sandbox_hostname != NULL)\n            warn_only_last_option (\"--hostname\");\n\n          op = setup_op_new (SETUP_SET_HOSTNAME);\n",
                    "rendered": {
                      "text": "          if (argc < 2)\n            die (\"--hostname takes an argument\");\n\n          if (opt_sandbox_hostname != NULL)\n            warn_only_last_option (\"--hostname\");\n\n          op = setup_op_new (SETUP_SET_HOSTNAME);\n",
                      "markdown": "`          if (argc < 2)\n            die (\"--hostname takes an argument\");\n\n          if (opt_sandbox_hostname != NULL)\n            warn_only_last_option (\"--hostname\");\n\n          op = setup_op_new (SETUP_SET_HOSTNAME);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 2408,
                  "startColumn": 20,
                  "endLine": 2408,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      else if (strcmp (arg, \"--hostname\") == 0)\n        {\n          if (argc < 2)\n            die (\"--hostname takes an argument\");\n\n          if (opt_sandbox_hostname != NULL)\n            warn_only_last_option (\"--hostname\");\n",
                    "rendered": {
                      "text": "      else if (strcmp (arg, \"--hostname\") == 0)\n        {\n          if (argc < 2)\n            die (\"--hostname takes an argument\");\n\n          if (opt_sandbox_hostname != NULL)\n            warn_only_last_option (\"--hostname\");\n",
                      "markdown": "`      else if (strcmp (arg, \"--hostname\") == 0)\n        {\n          if (argc < 2)\n            die (\"--hostname takes an argument\");\n\n          if (opt_sandbox_hostname != NULL)\n            warn_only_last_option (\"--hostname\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 2405,
                  "startColumn": 31,
                  "endLine": 2405,
                  "endColumn": 39,
                  "snippet": {
                    "text": "          argv += 1;\n          argc -= 1;\n        }\n      else if (strcmp (arg, \"--hostname\") == 0)\n        {\n          if (argc < 2)\n            die (\"--hostname takes an argument\");\n",
                    "rendered": {
                      "text": "          argv += 1;\n          argc -= 1;\n        }\n      else if (strcmp (arg, \"--hostname\") == 0)\n        {\n          if (argc < 2)\n            die (\"--hostname takes an argument\");\n",
                      "markdown": "`          argv += 1;\n          argc -= 1;\n        }\n      else if (strcmp (arg, \"--hostname\") == 0)\n        {\n          if (argc < 2)\n            die (\"--hostname takes an argument\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1150,
                  "startColumn": 35,
                  "endLine": 1150,
                  "endColumn": 43,
                  "snippet": {
                    "text": "      if (!opt_unshare_uts)\n        die (\"Refusing to set hostname in original namespace\");\n      if (sethostname (arg1, strlen(arg1)) != 0)\n        die_with_error (\"Can't set hostname to %s\", arg1);\n      break;\n\n    default:\n",
                    "rendered": {
                      "text": "      if (!opt_unshare_uts)\n        die (\"Refusing to set hostname in original namespace\");\n      if (sethostname (arg1, strlen(arg1)) != 0)\n        die_with_error (\"Can't set hostname to %s\", arg1);\n      break;\n\n    default:\n",
                      "markdown": "`      if (!opt_unshare_uts)\n        die (\"Refusing to set hostname in original namespace\");\n      if (sethostname (arg1, strlen(arg1)) != 0)\n        die_with_error (\"Can't set hostname to %s\", arg1);\n      break;\n\n    default:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1148,
                  "startColumn": 30,
                  "endLine": 1148,
                  "endColumn": 38,
                  "snippet": {
                    "text": "      /* This is checked at the start, but lets verify it here in case\n         something manages to send hacked priv-sep operation requests. */\n      if (!opt_unshare_uts)\n        die (\"Refusing to set hostname in original namespace\");\n      if (sethostname (arg1, strlen(arg1)) != 0)\n        die_with_error (\"Can't set hostname to %s\", arg1);\n      break;\n",
                    "rendered": {
                      "text": "      /* This is checked at the start, but lets verify it here in case\n         something manages to send hacked priv-sep operation requests. */\n      if (!opt_unshare_uts)\n        die (\"Refusing to set hostname in original namespace\");\n      if (sethostname (arg1, strlen(arg1)) != 0)\n        die_with_error (\"Can't set hostname to %s\", arg1);\n      break;\n",
                      "markdown": "`      /* This is checked at the start, but lets verify it here in case\n         something manages to send hacked priv-sep operation requests. */\n      if (!opt_unshare_uts)\n        die (\"Refusing to set hostname in original namespace\");\n      if (sethostname (arg1, strlen(arg1)) != 0)\n        die_with_error (\"Can't set hostname to %s\", arg1);\n      break;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 52,
                  "endLine": 323,
                  "endColumn": 60,
                  "snippet": {
                    "text": "using --unshare-pid)\\n\"\n           \"    --uid UID                    Custom uid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --gid GID                    Custom gid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --hostname NAME              Custom hostname in the sandbox (requires --unshare-uts)\\n\"\n           \"    --chdir DIR                  Change directory to DIR\\n\"\n           \"    --clearenv                   Unset all environment variables\\n\"\n           \"    --setenv VAR VALUE           Set an environment variable\\n\"\n           \"    --unsetenv V",
                    "rendered": {
                      "text": "using --unshare-pid)\\n\"\n           \"    --uid UID                    Custom uid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --gid GID                    Custom gid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --hostname NAME              Custom hostname in the sandbox (requires --unshare-uts)\\n\"\n           \"    --chdir DIR                  Change directory to DIR\\n\"\n           \"    --clearenv                   Unset all environment variables\\n\"\n           \"    --setenv VAR VALUE           Set an environment variable\\n\"\n           \"    --unsetenv V",
                      "markdown": "`using --unshare-pid)\\n\"\n           \"    --uid UID                    Custom uid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --gid GID                    Custom gid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --hostname NAME              Custom hostname in the sandbox (requires --unshare-uts)\\n\"\n           \"    --chdir DIR                  Change directory to DIR\\n\"\n           \"    --clearenv                   Unset all environment variables\\n\"\n           \"    --setenv VAR VALUE           Set an environment variable\\n\"\n           \"    --unsetenv V`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 18,
                  "endLine": 323,
                  "endColumn": 26,
                  "snippet": {
                    "text": "namespace (as parent namespace if using --unshare-pid)\\n\"\n           \"    --uid UID                    Custom uid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --gid GID                    Custom gid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --hostname NAME              Custom hostname in the sandbox (requires --unshare-uts)\\n\"\n           \"    --chdir DIR                  Change directory to DIR\\n\"\n           \"    --clearenv                   Unset all environment variables\\n\"\n           \"    --setenv VAR VALUE           Set an environment variab",
                    "rendered": {
                      "text": "namespace (as parent namespace if using --unshare-pid)\\n\"\n           \"    --uid UID                    Custom uid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --gid GID                    Custom gid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --hostname NAME              Custom hostname in the sandbox (requires --unshare-uts)\\n\"\n           \"    --chdir DIR                  Change directory to DIR\\n\"\n           \"    --clearenv                   Unset all environment variables\\n\"\n           \"    --setenv VAR VALUE           Set an environment variab",
                      "markdown": "`namespace (as parent namespace if using --unshare-pid)\\n\"\n           \"    --uid UID                    Custom uid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --gid GID                    Custom gid in the sandbox (requires --unshare-user or --userns)\\n\"\n           \"    --hostname NAME              Custom hostname in the sandbox (requires --unshare-uts)\\n\"\n           \"    --chdir DIR                  Change directory to DIR\\n\"\n           \"    --clearenv                   Unset all environment variables\\n\"\n           \"    --setenv VAR VALUE           Set an environment variab`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 31,
                  "endLine": 89,
                  "endColumn": 39,
                  "snippet": {
                    "text": "static int opt_info_fd = -1;\nstatic int opt_json_status_fd = -1;\nstatic int opt_seccomp_fd = -1;\nstatic const char *opt_sandbox_hostname = NULL;\nstatic char *opt_args_data = NULL;  /* owned */\nstatic int opt_userns_fd = -1;\nstatic int opt_userns2_fd = -1;\n",
                    "rendered": {
                      "text": "static int opt_info_fd = -1;\nstatic int opt_json_status_fd = -1;\nstatic int opt_seccomp_fd = -1;\nstatic const char *opt_sandbox_hostname = NULL;\nstatic char *opt_args_data = NULL;  /* owned */\nstatic int opt_userns_fd = -1;\nstatic int opt_userns2_fd = -1;\n",
                      "markdown": "`static int opt_info_fd = -1;\nstatic int opt_json_status_fd = -1;\nstatic int opt_seccomp_fd = -1;\nstatic const char *opt_sandbox_hostname = NULL;\nstatic char *opt_args_data = NULL;  /* owned */\nstatic int opt_userns_fd = -1;\nstatic int opt_userns2_fd = -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1506,
                  "startColumn": 49,
                  "endLine": 1506,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n                  die (\"Can't make symlink at %s: existing destination is %s\", op->dest, existing);\n                }\n              die_with_error (\"Can't make symlink at %s\", op->dest);\n            }\n          break;\n\n",
                    "rendered": {
                      "text": "\n                  die (\"Can't make symlink at %s: existing destination is %s\", op->dest, existing);\n                }\n              die_with_error (\"Can't make symlink at %s\", op->dest);\n            }\n          break;\n\n",
                      "markdown": "`\n                  die (\"Can't make symlink at %s: existing destination is %s\", op->dest, existing);\n                }\n              die_with_error (\"Can't make symlink at %s\", op->dest);\n            }\n          break;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1504,
                  "startColumn": 42,
                  "endLine": 1504,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                  if (strcmp (existing, op->source) == 0)\n                    break;\n\n                  die (\"Can't make symlink at %s: existing destination is %s\", op->dest, existing);\n                }\n              die_with_error (\"Can't make symlink at %s\", op->dest);\n            }\n",
                    "rendered": {
                      "text": "                  if (strcmp (existing, op->source) == 0)\n                    break;\n\n                  die (\"Can't make symlink at %s: existing destination is %s\", op->dest, existing);\n                }\n              die_with_error (\"Can't make symlink at %s\", op->dest);\n            }\n",
                      "markdown": "`                  if (strcmp (existing, op->source) == 0)\n                    break;\n\n                  die (\"Can't make symlink at %s: existing destination is %s\", op->dest, existing);\n                }\n              die_with_error (\"Can't make symlink at %s\", op->dest);\n            }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1498,
                  "startColumn": 59,
                  "endLine": 1498,
                  "endColumn": 63,
                  "snippet": {
                    "text": "                      if (errno == EINVAL)\n                        die (\"Can't make symlink at %s: destination exists and is not a symlink\", op->dest);\n                      else\n                        die_with_error (\"Can't make symlink at %s: destination exists, and cannot read symlink target\", op->dest);\n                    }\n\n                  if (strcmp (existing, op->source) == 0)\n",
                    "rendered": {
                      "text": "                      if (errno == EINVAL)\n                        die (\"Can't make symlink at %s: destination exists and is not a symlink\", op->dest);\n                      else\n                        die_with_error (\"Can't make symlink at %s: destination exists, and cannot read symlink target\", op->dest);\n                    }\n\n                  if (strcmp (existing, op->source) == 0)\n",
                      "markdown": "`                      if (errno == EINVAL)\n                        die (\"Can't make symlink at %s: destination exists and is not a symlink\", op->dest);\n                      else\n                        die_with_error (\"Can't make symlink at %s: destination exists, and cannot read symlink target\", op->dest);\n                    }\n\n                  if (strcmp (existing, op->source) == 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1496,
                  "startColumn": 48,
                  "endLine": 1496,
                  "endColumn": 52,
                  "snippet": {
                    "text": "                  if (existing == NULL)\n                    {\n                      if (errno == EINVAL)\n                        die (\"Can't make symlink at %s: destination exists and is not a symlink\", op->dest);\n                      else\n                        die_with_error (\"Can't make symlink at %s: destination exists, and cannot read symlink target\", op->dest);\n                    }\n",
                    "rendered": {
                      "text": "                  if (existing == NULL)\n                    {\n                      if (errno == EINVAL)\n                        die (\"Can't make symlink at %s: destination exists and is not a symlink\", op->dest);\n                      else\n                        die_with_error (\"Can't make symlink at %s: destination exists, and cannot read symlink target\", op->dest);\n                    }\n",
                      "markdown": "`                  if (existing == NULL)\n                    {\n                      if (errno == EINVAL)\n                        die (\"Can't make symlink at %s: destination exists and is not a symlink\", op->dest);\n                      else\n                        die_with_error (\"Can't make symlink at %s: destination exists, and cannot read symlink target\", op->dest);\n                    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1472,
                  "startColumn": 48,
                  "endLine": 1472,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            assert (dest != NULL);\n\n            if (ensure_file (dest, 0444) != 0)\n              die_with_error (\"Can't create file at %s\", op->dest);\n\n            privileged_op (privileged_op_socket,\n                           PRIV_SEP_OP_BIND_MOUNT,\n",
                    "rendered": {
                      "text": "            assert (dest != NULL);\n\n            if (ensure_file (dest, 0444) != 0)\n              die_with_error (\"Can't create file at %s\", op->dest);\n\n            privileged_op (privileged_op_socket,\n                           PRIV_SEP_OP_BIND_MOUNT,\n",
                      "markdown": "`            assert (dest != NULL);\n\n            if (ensure_file (dest, 0444) != 0)\n              die_with_error (\"Can't create file at %s\", op->dest);\n\n            privileged_op (privileged_op_socket,\n                           PRIV_SEP_OP_BIND_MOUNT,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1355,
                  "startColumn": 49,
                  "endLine": 1355,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                           PRIV_SEP_OP_DEVPTS_MOUNT, 0, 0, 0, pts, NULL);\n\n            if (symlink (\"pts/ptmx\", ptmx) != 0)\n              die_with_error (\"Can't make symlink at %s/ptmx\", op->dest);\n          }\n\n          /* If stdout is a tty, that means the sandbox can write to the\n",
                    "rendered": {
                      "text": "                           PRIV_SEP_OP_DEVPTS_MOUNT, 0, 0, 0, pts, NULL);\n\n            if (symlink (\"pts/ptmx\", ptmx) != 0)\n              die_with_error (\"Can't make symlink at %s/ptmx\", op->dest);\n          }\n\n          /* If stdout is a tty, that means the sandbox can write to the\n",
                      "markdown": "`                           PRIV_SEP_OP_DEVPTS_MOUNT, 0, 0, 0, pts, NULL);\n\n            if (symlink (\"pts/ptmx\", ptmx) != 0)\n              die_with_error (\"Can't make symlink at %s/ptmx\", op->dest);\n          }\n\n          /* If stdout is a tty, that means the sandbox can write to the\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1242,
                  "startColumn": 48,
                  "endLine": 1242,
                  "endColumn": 52,
                  "snippet": {
                    "text": "              if (fstat(op->fd, &fd_st) != 0)\n                die_with_error(\"Can't stat fd %d\", op->fd);\n              if (lstat(dest, &mount_st) != 0)\n                die_with_error(\"Can't stat mount at %s\", dest);\n\n              if (fd_st.st_ino != mount_st.st_ino ||\n                  fd_st.st_dev != mount_st.st_dev)\n",
                    "rendered": {
                      "text": "              if (fstat(op->fd, &fd_st) != 0)\n                die_with_error(\"Can't stat fd %d\", op->fd);\n              if (lstat(dest, &mount_st) != 0)\n                die_with_error(\"Can't stat mount at %s\", dest);\n\n              if (fd_st.st_ino != mount_st.st_ino ||\n                  fd_st.st_dev != mount_st.st_dev)\n",
                      "markdown": "`              if (fstat(op->fd, &fd_st) != 0)\n                die_with_error(\"Can't stat fd %d\", op->fd);\n              if (lstat(dest, &mount_st) != 0)\n                die_with_error(\"Can't stat mount at %s\", dest);\n\n              if (fd_st.st_ino != mount_st.st_ino ||\n                  fd_st.st_dev != mount_st.st_dev)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1221,
                  "startColumn": 46,
                  "endLine": 1221,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                die_with_error (\"Can't mkdir %s\", op->dest);\n            }\n          else if (ensure_file (dest, 0444) != 0)\n            die_with_error (\"Can't create file at %s\", op->dest);\n\n          privileged_op (privileged_op_socket,\n                         PRIV_SEP_OP_BIND_MOUNT,\n",
                    "rendered": {
                      "text": "                die_with_error (\"Can't mkdir %s\", op->dest);\n            }\n          else if (ensure_file (dest, 0444) != 0)\n            die_with_error (\"Can't create file at %s\", op->dest);\n\n          privileged_op (privileged_op_socket,\n                         PRIV_SEP_OP_BIND_MOUNT,\n",
                      "markdown": "`                die_with_error (\"Can't mkdir %s\", op->dest);\n            }\n          else if (ensure_file (dest, 0444) != 0)\n            die_with_error (\"Can't create file at %s\", op->dest);\n\n          privileged_op (privileged_op_socket,\n                         PRIV_SEP_OP_BIND_MOUNT,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 59,
                  "endLine": 349,
                  "endColumn": 63,
                  "snippet": {
                    "text": "py from FD to destination DEST\\n\"\n           \"    --bind-data FD DEST          Copy from FD to file which is bind-mounted on DEST\\n\"\n           \"    --ro-bind-data FD DEST       Copy from FD to file which is readonly bind-mounted on DEST\\n\"\n           \"    --symlink SRC DEST           Create symlink at DEST with target SRC\\n\"\n           \"    --seccomp FD                 Load and use seccomp rules from FD (not repeatable)\\n\"\n           \"    --add-seccomp-fd FD          Load and use seccomp rules from FD (repeatable)\\n\"\n           \"    --block-fd FD                Block on FD until some data to read",
                    "rendered": {
                      "text": "py from FD to destination DEST\\n\"\n           \"    --bind-data FD DEST          Copy from FD to file which is bind-mounted on DEST\\n\"\n           \"    --ro-bind-data FD DEST       Copy from FD to file which is readonly bind-mounted on DEST\\n\"\n           \"    --symlink SRC DEST           Create symlink at DEST with target SRC\\n\"\n           \"    --seccomp FD                 Load and use seccomp rules from FD (not repeatable)\\n\"\n           \"    --add-seccomp-fd FD          Load and use seccomp rules from FD (repeatable)\\n\"\n           \"    --block-fd FD                Block on FD until some data to read",
                      "markdown": "`py from FD to destination DEST\\n\"\n           \"    --bind-data FD DEST          Copy from FD to file which is bind-mounted on DEST\\n\"\n           \"    --ro-bind-data FD DEST       Copy from FD to file which is readonly bind-mounted on DEST\\n\"\n           \"    --symlink SRC DEST           Create symlink at DEST with target SRC\\n\"\n           \"    --seccomp FD                 Load and use seccomp rules from FD (not repeatable)\\n\"\n           \"    --add-seccomp-fd FD          Load and use seccomp rules from FD (repeatable)\\n\"\n           \"    --block-fd FD                Block on FD until some data to read`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 55,
                  "endLine": 345,
                  "endColumn": 59,
                  "snippet": {
                    "text": "           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n           \"    --file FD DEST               Copy from FD to destination DEST\\n\"\n           \"    --bind-data FD DEST          Copy from FD to file which is bind-mounted on DEST\\n\"\n           \"    --ro-bind-data FD DEST       Copy from FD to file which is readonly bind-mounted on DEST\\n\"\n",
                    "rendered": {
                      "text": "           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n           \"    --file FD DEST               Copy from FD to destination DEST\\n\"\n           \"    --bind-data FD DEST          Copy from FD to file which is bind-mounted on DEST\\n\"\n           \"    --ro-bind-data FD DEST       Copy from FD to file which is readonly bind-mounted on DEST\\n\"\n",
                      "markdown": "`           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n           \"    --file FD DEST               Copy from FD to destination DEST\\n\"\n           \"    --bind-data FD DEST          Copy from FD to file which is bind-mounted on DEST\\n\"\n           \"    --ro-bind-data FD DEST       Copy from FD to file which is readonly bind-mounted on DEST\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 3298,
                  "startColumn": 11,
                  "endLine": 3298,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  if (opt_disable_userns || opt_assert_userns_disabled)\n    {\n      /* Verify that we can't make a new userns again */\n      res = unshare (CLONE_NEWUSER);\n\n      if (res == 0)\n        die (\"creation of new user namespaces was not disabled as requested\");\n",
                    "rendered": {
                      "text": "  if (opt_disable_userns || opt_assert_userns_disabled)\n    {\n      /* Verify that we can't make a new userns again */\n      res = unshare (CLONE_NEWUSER);\n\n      if (res == 0)\n        die (\"creation of new user namespaces was not disabled as requested\");\n",
                      "markdown": "`  if (opt_disable_userns || opt_assert_userns_disabled)\n    {\n      /* Verify that we can't make a new userns again */\n      res = unshare (CLONE_NEWUSER);\n\n      if (res == 0)\n        die (\"creation of new user namespaces was not disabled as requested\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 3131,
                  "startColumn": 36,
                  "endLine": 3131,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n  /* Create a tmpfs which we will use as / in the namespace */\n  if (mount (\"tmpfs\", base_path, \"tmpfs\", MS_NODEV | MS_NOSUID, NULL) != 0)\n    die_with_mount_error (\"Failed to mount tmpfs\");\n\n  old_cwd = get_current_dir_name ();\n\n",
                    "rendered": {
                      "text": "\n  /* Create a tmpfs which we will use as / in the namespace */\n  if (mount (\"tmpfs\", base_path, \"tmpfs\", MS_NODEV | MS_NOSUID, NULL) != 0)\n    die_with_mount_error (\"Failed to mount tmpfs\");\n\n  old_cwd = get_current_dir_name ();\n\n",
                      "markdown": "`\n  /* Create a tmpfs which we will use as / in the namespace */\n  if (mount (\"tmpfs\", base_path, \"tmpfs\", MS_NODEV | MS_NOSUID, NULL) != 0)\n    die_with_mount_error (\"Failed to mount tmpfs\");\n\n  old_cwd = get_current_dir_name ();\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 2840,
                  "startColumn": 23,
                  "endLine": 2840,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  if (argc <= 0)\n    usage (EXIT_FAILURE, stderr);\n\n  debug (\"Creating root mount point\");\n\n  if (opt_sandbox_uid == (uid_t)-1)\n    opt_sandbox_uid = real_uid;\n",
                    "rendered": {
                      "text": "  if (argc <= 0)\n    usage (EXIT_FAILURE, stderr);\n\n  debug (\"Creating root mount point\");\n\n  if (opt_sandbox_uid == (uid_t)-1)\n    opt_sandbox_uid = real_uid;\n",
                      "markdown": "`  if (argc <= 0)\n    usage (EXIT_FAILURE, stderr);\n\n  debug (\"Creating root mount point\");\n\n  if (opt_sandbox_uid == (uid_t)-1)\n    opt_sandbox_uid = real_uid;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1566,
                  "startColumn": 37,
                  "endLine": 1566,
                  "endColumn": 43,
                  "snippet": {
                    "text": "              if (op->flags & ALLOW_NOTEXIST && errno == ENOENT)\n                op->source = old_source;\n              else\n                die_with_error(\"Can't find source path %s\", old_source);\n            }\n          break;\n\n",
                    "rendered": {
                      "text": "              if (op->flags & ALLOW_NOTEXIST && errno == ENOENT)\n                op->source = old_source;\n              else\n                die_with_error(\"Can't find source path %s\", old_source);\n            }\n          break;\n\n",
                      "markdown": "`              if (op->flags & ALLOW_NOTEXIST && errno == ENOENT)\n                op->source = old_source;\n              else\n                die_with_error(\"Can't find source path %s\", old_source);\n            }\n          break;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1421,
                  "startColumn": 34,
                  "endLine": 1421,
                  "endColumn": 41,
                  "snippet": {
                    "text": "          assert (op->perms <= 07777);\n\n          if (chmod (dest, op->perms) != 0)\n            die_with_error (\"Can't chmod %#o %s\", op->perms, op->dest);\n\n          break;\n\n",
                    "rendered": {
                      "text": "          assert (op->perms <= 07777);\n\n          if (chmod (dest, op->perms) != 0)\n            die_with_error (\"Can't chmod %#o %s\", op->perms, op->dest);\n\n          break;\n\n",
                      "markdown": "`          assert (op->perms <= 07777);\n\n          if (chmod (dest, op->perms) != 0)\n            die_with_error (\"Can't chmod %#o %s\", op->perms, op->dest);\n\n          break;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1242,
                  "startColumn": 42,
                  "endLine": 1242,
                  "endColumn": 49,
                  "snippet": {
                    "text": "              if (fstat(op->fd, &fd_st) != 0)\n                die_with_error(\"Can't stat fd %d\", op->fd);\n              if (lstat(dest, &mount_st) != 0)\n                die_with_error(\"Can't stat mount at %s\", dest);\n\n              if (fd_st.st_ino != mount_st.st_ino ||\n                  fd_st.st_dev != mount_st.st_dev)\n",
                    "rendered": {
                      "text": "              if (fstat(op->fd, &fd_st) != 0)\n                die_with_error(\"Can't stat fd %d\", op->fd);\n              if (lstat(dest, &mount_st) != 0)\n                die_with_error(\"Can't stat mount at %s\", dest);\n\n              if (fd_st.st_ino != mount_st.st_ino ||\n                  fd_st.st_dev != mount_st.st_dev)\n",
                      "markdown": "`              if (fstat(op->fd, &fd_st) != 0)\n                die_with_error(\"Can't stat fd %d\", op->fd);\n              if (lstat(dest, &mount_st) != 0)\n                die_with_error(\"Can't stat mount at %s\", dest);\n\n              if (fd_st.st_ino != mount_st.st_ino ||\n                  fd_st.st_dev != mount_st.st_dev)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1141,
                  "startColumn": 36,
                  "endLine": 1141,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n    case PRIV_SEP_OP_MQUEUE_MOUNT:\n      if (mount (\"mqueue\", arg1, \"mqueue\", 0, NULL) != 0)\n        die_with_mount_error (\"Can't mount mqueue on %s\", arg1);\n      break;\n\n    case PRIV_SEP_OP_SET_HOSTNAME:\n",
                    "rendered": {
                      "text": "\n    case PRIV_SEP_OP_MQUEUE_MOUNT:\n      if (mount (\"mqueue\", arg1, \"mqueue\", 0, NULL) != 0)\n        die_with_mount_error (\"Can't mount mqueue on %s\", arg1);\n      break;\n\n    case PRIV_SEP_OP_SET_HOSTNAME:\n",
                      "markdown": "`\n    case PRIV_SEP_OP_MQUEUE_MOUNT:\n      if (mount (\"mqueue\", arg1, \"mqueue\", 0, NULL) != 0)\n        die_with_mount_error (\"Can't mount mqueue on %s\", arg1);\n      break;\n\n    case PRIV_SEP_OP_SET_HOSTNAME:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1136,
                  "startColumn": 36,
                  "endLine": 1136,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    case PRIV_SEP_OP_DEVPTS_MOUNT:\n      if (mount (\"devpts\", arg1, \"devpts\", MS_NOSUID | MS_NOEXEC,\n                 \"newinstance,ptmxmode=0666,mode=620\") != 0)\n        die_with_mount_error (\"Can't mount devpts on %s\", arg1);\n      break;\n\n    case PRIV_SEP_OP_MQUEUE_MOUNT:\n",
                    "rendered": {
                      "text": "    case PRIV_SEP_OP_DEVPTS_MOUNT:\n      if (mount (\"devpts\", arg1, \"devpts\", MS_NOSUID | MS_NOEXEC,\n                 \"newinstance,ptmxmode=0666,mode=620\") != 0)\n        die_with_mount_error (\"Can't mount devpts on %s\", arg1);\n      break;\n\n    case PRIV_SEP_OP_MQUEUE_MOUNT:\n",
                      "markdown": "`    case PRIV_SEP_OP_DEVPTS_MOUNT:\n      if (mount (\"devpts\", arg1, \"devpts\", MS_NOSUID | MS_NOEXEC,\n                 \"newinstance,ptmxmode=0666,mode=620\") != 0)\n        die_with_mount_error (\"Can't mount devpts on %s\", arg1);\n      break;\n\n    case PRIV_SEP_OP_MQUEUE_MOUNT:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1129,
                  "startColumn": 38,
                  "endLine": 1129,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n        cleanup_free char *opt = label_mount (mode, opt_file_label);\n        if (mount (\"tmpfs\", arg1, \"tmpfs\", MS_NOSUID | MS_NODEV, opt) != 0)\n          die_with_mount_error (\"Can't mount tmpfs on %s\", arg1);\n        break;\n      }\n\n",
                    "rendered": {
                      "text": "\n        cleanup_free char *opt = label_mount (mode, opt_file_label);\n        if (mount (\"tmpfs\", arg1, \"tmpfs\", MS_NOSUID | MS_NODEV, opt) != 0)\n          die_with_mount_error (\"Can't mount tmpfs on %s\", arg1);\n        break;\n      }\n\n",
                      "markdown": "`\n        cleanup_free char *opt = label_mount (mode, opt_file_label);\n        if (mount (\"tmpfs\", arg1, \"tmpfs\", MS_NOSUID | MS_NODEV, opt) != 0)\n          die_with_mount_error (\"Can't mount tmpfs on %s\", arg1);\n        break;\n      }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1110,
                  "startColumn": 36,
                  "endLine": 1110,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n    case PRIV_SEP_OP_PROC_MOUNT:\n      if (mount (\"proc\", arg1, \"proc\", MS_NOSUID | MS_NOEXEC | MS_NODEV, NULL) != 0)\n        die_with_mount_error (\"Can't mount proc on %s\", arg1);\n      break;\n\n    case PRIV_SEP_OP_TMPFS_MOUNT:\n",
                    "rendered": {
                      "text": "\n    case PRIV_SEP_OP_PROC_MOUNT:\n      if (mount (\"proc\", arg1, \"proc\", MS_NOSUID | MS_NOEXEC | MS_NODEV, NULL) != 0)\n        die_with_mount_error (\"Can't mount proc on %s\", arg1);\n      break;\n\n    case PRIV_SEP_OP_TMPFS_MOUNT:\n",
                      "markdown": "`\n    case PRIV_SEP_OP_PROC_MOUNT:\n      if (mount (\"proc\", arg1, \"proc\", MS_NOSUID | MS_NOEXEC | MS_NODEV, NULL) != 0)\n        die_with_mount_error (\"Can't mount proc on %s\", arg1);\n      break;\n\n    case PRIV_SEP_OP_TMPFS_MOUNT:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 41,
                  "endLine": 1103,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n      if (bind_result != BIND_MOUNT_SUCCESS)\n        die_with_bind_result (bind_result, errno, failing_path,\n                              \"Can't bind mount %s on %s\", arg1, arg2);\n\n      assert (failing_path == NULL);    /* otherwise we would have died */\n      break;\n",
                    "rendered": {
                      "text": "\n      if (bind_result != BIND_MOUNT_SUCCESS)\n        die_with_bind_result (bind_result, errno, failing_path,\n                              \"Can't bind mount %s on %s\", arg1, arg2);\n\n      assert (failing_path == NULL);    /* otherwise we would have died */\n      break;\n",
                      "markdown": "`\n      if (bind_result != BIND_MOUNT_SUCCESS)\n        die_with_bind_result (bind_result, errno, failing_path,\n                              \"Can't bind mount %s on %s\", arg1, arg2);\n\n      assert (failing_path == NULL);    /* otherwise we would have died */\n      break;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 597,
                  "startColumn": 12,
                  "endLine": 597,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      if (fd == -1)\n        die_with_error (\"Unable to open lock file %s\", lock->path);\n\n      struct flock l = {\n        .l_type = F_RDLCK,\n        .l_whence = SEEK_SET,\n        .l_start = 0,\n",
                    "rendered": {
                      "text": "      if (fd == -1)\n        die_with_error (\"Unable to open lock file %s\", lock->path);\n\n      struct flock l = {\n        .l_type = F_RDLCK,\n        .l_whence = SEEK_SET,\n        .l_start = 0,\n",
                      "markdown": "`      if (fd == -1)\n        die_with_error (\"Unable to open lock file %s\", lock->path);\n\n      struct flock l = {\n        .l_type = F_RDLCK,\n        .l_whence = SEEK_SET,\n        .l_start = 0,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 44,
                  "endLine": 344,
                  "endColumn": 51,
                  "snippet": {
                    "text": "           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n           \"    --file FD DEST               Copy from FD to destination DEST\\n\"\n           \"    --bind-data FD DEST          Copy from FD to file which is bind-mounted on DEST\\n\"\n",
                    "rendered": {
                      "text": "           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n           \"    --file FD DEST               Copy from FD to destination DEST\\n\"\n           \"    --bind-data FD DEST          Copy from FD to file which is bind-mounted on DEST\\n\"\n",
                      "markdown": "`           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n           \"    --file FD DEST               Copy from FD to destination DEST\\n\"\n           \"    --bind-data FD DEST          Copy from FD to file which is bind-mounted on DEST\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 44,
                  "endLine": 343,
                  "endColumn": 51,
                  "snippet": {
                    "text": "           \"    --file-label LABEL           File label for temporary sandbox content\\n\"\n           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n           \"    --file FD DEST               Copy from FD to destination DEST\\n\"\n",
                    "rendered": {
                      "text": "           \"    --file-label LABEL           File label for temporary sandbox content\\n\"\n           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n           \"    --file FD DEST               Copy from FD to destination DEST\\n\"\n",
                      "markdown": "`           \"    --file-label LABEL           File label for temporary sandbox content\\n\"\n           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n           \"    --file FD DEST               Copy from FD to destination DEST\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 44,
                  "endLine": 342,
                  "endColumn": 51,
                  "snippet": {
                    "text": "           \"    --exec-label LABEL           Exec label for the sandbox\\n\"\n           \"    --file-label LABEL           File label for temporary sandbox content\\n\"\n           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n",
                    "rendered": {
                      "text": "           \"    --exec-label LABEL           Exec label for the sandbox\\n\"\n           \"    --file-label LABEL           File label for temporary sandbox content\\n\"\n           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n",
                      "markdown": "`           \"    --exec-label LABEL           Exec label for the sandbox\\n\"\n           \"    --file-label LABEL           File label for temporary sandbox content\\n\"\n           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n           \"    --dir DEST                   Create dir at DEST\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 44,
                  "endLine": 341,
                  "endColumn": 51,
                  "snippet": {
                    "text": "           \"    --remount-ro DEST            Remount DEST as readonly; does not recursively remount\\n\"\n           \"    --exec-label LABEL           Exec label for the sandbox\\n\"\n           \"    --file-label LABEL           File label for temporary sandbox content\\n\"\n           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n",
                    "rendered": {
                      "text": "           \"    --remount-ro DEST            Remount DEST as readonly; does not recursively remount\\n\"\n           \"    --exec-label LABEL           Exec label for the sandbox\\n\"\n           \"    --file-label LABEL           File label for temporary sandbox content\\n\"\n           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n",
                      "markdown": "`           \"    --remount-ro DEST            Remount DEST as readonly; does not recursively remount\\n\"\n           \"    --exec-label LABEL           Exec label for the sandbox\\n\"\n           \"    --file-label LABEL           File label for temporary sandbox content\\n\"\n           \"    --proc DEST                  Mount new procfs on DEST\\n\"\n           \"    --dev DEST                   Mount new dev on DEST\\n\"\n           \"    --tmpfs DEST                 Mount new tmpfs on DEST\\n\"\n           \"    --mqueue DEST                Mount new mqueue on DEST\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 49,
                  "endLine": 334,
                  "endColumn": 56,
                  "snippet": {
                    "text": "al to --bind but ignores non-existent SRC\\n\"\n           \"    --dev-bind SRC DEST          Bind mount the host path SRC on DEST, allowing device access\\n\"\n           \"    --dev-bind-try SRC DEST      Equal to --dev-bind but ignores non-existent SRC\\n\"\n           \"    --ro-bind SRC DEST           Bind mount the host path SRC readonly on DEST\\n\"\n           \"    --ro-bind-try SRC DEST       Equal to --ro-bind but ignores non-existent SRC\\n\"\n           \"    --bind-fd FD DEST            Bind open directory or path fd on DEST\\n\"\n           \"    --ro-bind-fd FD DEST         Bind open directory or path fd rea",
                    "rendered": {
                      "text": "al to --bind but ignores non-existent SRC\\n\"\n           \"    --dev-bind SRC DEST          Bind mount the host path SRC on DEST, allowing device access\\n\"\n           \"    --dev-bind-try SRC DEST      Equal to --dev-bind but ignores non-existent SRC\\n\"\n           \"    --ro-bind SRC DEST           Bind mount the host path SRC readonly on DEST\\n\"\n           \"    --ro-bind-try SRC DEST       Equal to --ro-bind but ignores non-existent SRC\\n\"\n           \"    --bind-fd FD DEST            Bind open directory or path fd on DEST\\n\"\n           \"    --ro-bind-fd FD DEST         Bind open directory or path fd rea",
                      "markdown": "`al to --bind but ignores non-existent SRC\\n\"\n           \"    --dev-bind SRC DEST          Bind mount the host path SRC on DEST, allowing device access\\n\"\n           \"    --dev-bind-try SRC DEST      Equal to --dev-bind but ignores non-existent SRC\\n\"\n           \"    --ro-bind SRC DEST           Bind mount the host path SRC readonly on DEST\\n\"\n           \"    --ro-bind-try SRC DEST       Equal to --ro-bind but ignores non-existent SRC\\n\"\n           \"    --bind-fd FD DEST            Bind open directory or path fd on DEST\\n\"\n           \"    --ro-bind-fd FD DEST         Bind open directory or path fd rea`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 49,
                  "endLine": 332,
                  "endColumn": 56,
                  "snippet": {
                    "text": "sync-fd FD                 Keep this fd open while sandbox is running\\n\"\n           \"    --bind SRC DEST              Bind mount the host path SRC on DEST\\n\"\n           \"    --bind-try SRC DEST          Equal to --bind but ignores non-existent SRC\\n\"\n           \"    --dev-bind SRC DEST          Bind mount the host path SRC on DEST, allowing device access\\n\"\n           \"    --dev-bind-try SRC DEST      Equal to --dev-bind but ignores non-existent SRC\\n\"\n           \"    --ro-bind SRC DEST           Bind mount the host path SRC readonly on DEST\\n\"\n           \"    --ro-bind-try SRC DEST       Equal to --",
                    "rendered": {
                      "text": "sync-fd FD                 Keep this fd open while sandbox is running\\n\"\n           \"    --bind SRC DEST              Bind mount the host path SRC on DEST\\n\"\n           \"    --bind-try SRC DEST          Equal to --bind but ignores non-existent SRC\\n\"\n           \"    --dev-bind SRC DEST          Bind mount the host path SRC on DEST, allowing device access\\n\"\n           \"    --dev-bind-try SRC DEST      Equal to --dev-bind but ignores non-existent SRC\\n\"\n           \"    --ro-bind SRC DEST           Bind mount the host path SRC readonly on DEST\\n\"\n           \"    --ro-bind-try SRC DEST       Equal to --",
                      "markdown": "`sync-fd FD                 Keep this fd open while sandbox is running\\n\"\n           \"    --bind SRC DEST              Bind mount the host path SRC on DEST\\n\"\n           \"    --bind-try SRC DEST          Equal to --bind but ignores non-existent SRC\\n\"\n           \"    --dev-bind SRC DEST          Bind mount the host path SRC on DEST, allowing device access\\n\"\n           \"    --dev-bind-try SRC DEST      Equal to --dev-bind but ignores non-existent SRC\\n\"\n           \"    --ro-bind SRC DEST           Bind mount the host path SRC readonly on DEST\\n\"\n           \"    --ro-bind-try SRC DEST       Equal to --`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 49,
                  "endLine": 330,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\"    --unsetenv VAR               Unset an environment variable\\n\"\n           \"    --lock-file DEST             Take a lock on DEST while sandbox is running\\n\"\n           \"    --sync-fd FD                 Keep this fd open while sandbox is running\\n\"\n           \"    --bind SRC DEST              Bind mount the host path SRC on DEST\\n\"\n           \"    --bind-try SRC DEST          Equal to --bind but ignores non-existent SRC\\n\"\n           \"    --dev-bind SRC DEST          Bind mount the host path SRC on DEST, allowing device access\\n\"\n           \"    --dev-bind-try SRC DEST      Equal to --dev-bind but ",
                    "rendered": {
                      "text": "\"    --unsetenv VAR               Unset an environment variable\\n\"\n           \"    --lock-file DEST             Take a lock on DEST while sandbox is running\\n\"\n           \"    --sync-fd FD                 Keep this fd open while sandbox is running\\n\"\n           \"    --bind SRC DEST              Bind mount the host path SRC on DEST\\n\"\n           \"    --bind-try SRC DEST          Equal to --bind but ignores non-existent SRC\\n\"\n           \"    --dev-bind SRC DEST          Bind mount the host path SRC on DEST, allowing device access\\n\"\n           \"    --dev-bind-try SRC DEST      Equal to --dev-bind but ",
                      "markdown": "`\"    --unsetenv VAR               Unset an environment variable\\n\"\n           \"    --lock-file DEST             Take a lock on DEST while sandbox is running\\n\"\n           \"    --sync-fd FD                 Keep this fd open while sandbox is running\\n\"\n           \"    --bind SRC DEST              Bind mount the host path SRC on DEST\\n\"\n           \"    --bind-try SRC DEST          Equal to --bind but ignores non-existent SRC\\n\"\n           \"    --dev-bind SRC DEST          Bind mount the host path SRC on DEST, allowing device access\\n\"\n           \"    --dev-bind-try SRC DEST      Equal to --dev-bind but `"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bubblewrap.c"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 44,
                  "endLine": 306,
                  "endColumn": 53,
                  "snippet": {
                    "text": "rgs FD                    Parse NUL-separated args from FD\\n\"\n           \"    --argv0 VALUE                Set argv[0] to the value VALUE before running the program\\n\"\n           \"    --level-prefix               Prepend e.g. <3> to diagnostic messages\\n\"\n           \"    --unshare-all                Unshare every namespace we support by default\\n\"\n           \"    --share-net                  Retain the network namespace (can only combine with --unshare-all)\\n\"\n           \"    --unshare-user               Create new user namespace (may be automatically implied if not setuid)\\n\"\n           \"    --unshare",
                    "rendered": {
                      "text": "rgs FD                    Parse NUL-separated args from FD\\n\"\n           \"    --argv0 VALUE                Set argv[0] to the value VALUE before running the program\\n\"\n           \"    --level-prefix               Prepend e.g. <3> to diagnostic messages\\n\"\n           \"    --unshare-all                Unshare every namespace we support by default\\n\"\n           \"    --share-net                  Retain the network namespace (can only combine with --unshare-all)\\n\"\n           \"    --unshare-user               Create new user namespace (may be automatically implied if not setuid)\\n\"\n           \"    --unshare",
                      "markdown": "`rgs FD                    Parse NUL-separated args from FD\\n\"\n           \"    --argv0 VALUE                Set argv[0] to the value VALUE before running the program\\n\"\n           \"    --level-prefix               Prepend e.g. <3> to diagnostic messages\\n\"\n           \"    --unshare-all                Unshare every namespace we support by default\\n\"\n           \"    --share-net                  Retain the network namespace (can only combine with --unshare-all)\\n\"\n           \"    --unshare-user               Create new user namespace (may be automatically implied if not setuid)\\n\"\n           \"    --unshare`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/meson.build"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 17,
                  "endLine": 54,
                  "snippet": {
                    "text": "  if test_script.endswith('.py')\n    interpreter = python\n  else\n    interpreter = bash\n  endif\n\n  if meson.version().version_compare('>=0.50.0')\n    test(\n",
                    "rendered": {
                      "text": "  if test_script.endswith('.py')\n    interpreter = python\n  else\n    interpreter = bash\n  endif\n\n  if meson.version().version_compare('>=0.50.0')\n    test(\n",
                      "markdown": "`  if test_script.endswith('.py')\n    interpreter = python\n  else\n    interpreter = bash\n  endif\n\n  if meson.version().version_compare('>=0.50.0')\n    test(\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/meson.build"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 5,
                  "endLine": 69,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      test_script,\n      interpreter,\n      args : [files(test_script)],\n      env : test_env,\n    )\n  endif\nendforeach\n",
                    "rendered": {
                      "text": "      test_script,\n      interpreter,\n      args : [files(test_script)],\n      env : test_env,\n    )\n  endif\nendforeach\n",
                      "markdown": "`      test_script,\n      interpreter,\n      args : [files(test_script)],\n      env : test_env,\n    )\n  endif\nendforeach\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/meson.build"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 5,
                  "endLine": 61,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      test_script,\n      interpreter,\n      args : [files(test_script)],\n      env : test_env,\n      protocol : 'tap',\n    )\n  else\n",
                    "rendered": {
                      "text": "      test_script,\n      interpreter,\n      args : [files(test_script)],\n      env : test_env,\n      protocol : 'tap',\n    )\n  else\n",
                      "markdown": "`      test_script,\n      interpreter,\n      args : [files(test_script)],\n      env : test_env,\n      protocol : 'tap',\n    )\n  else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/meson.build"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 17,
                  "endLine": 54,
                  "snippet": {
                    "text": "  if test_script.endswith('.py')\n    interpreter = python\n  else\n    interpreter = bash\n  endif\n\n  if meson.version().version_compare('>=0.50.0')\n    test(\n",
                    "rendered": {
                      "text": "  if test_script.endswith('.py')\n    interpreter = python\n  else\n    interpreter = bash\n  endif\n\n  if meson.version().version_compare('>=0.50.0')\n    test(\n",
                      "markdown": "`  if test_script.endswith('.py')\n    interpreter = python\n  else\n    interpreter = bash\n  endif\n\n  if meson.version().version_compare('>=0.50.0')\n    test(\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/meson.build"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 5,
                  "endLine": 44,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    test(\n      name,\n      test_program,\n      env : test_env,\n    )\n  endif\nendforeach\n",
                    "rendered": {
                      "text": "    test(\n      name,\n      test_program,\n      env : test_env,\n    )\n  endif\nendforeach\n",
                      "markdown": "`    test(\n      name,\n      test_program,\n      env : test_env,\n    )\n  endif\nendforeach\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/meson.build"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 5,
                  "endLine": 37,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    test(\n      name,\n      test_program,\n      env : test_env,\n      protocol : 'tap',\n    )\n  else\n",
                    "rendered": {
                      "text": "    test(\n      name,\n      test_program,\n      env : test_env,\n      protocol : 'tap',\n    )\n  else\n",
                      "markdown": "`    test(\n      name,\n      test_program,\n      env : test_env,\n      protocol : 'tap',\n    )\n  else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-utils.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 45,
                  "endLine": 46,
                  "endColumn": 50,
                  "snippet": {
                    "text": "#define not_ok(fmt, ...) die (fmt, ## __VA_ARGS__)\n\n/* approximately GLib-compatible helper macros */\n#define g_test_message(fmt, ...) printf (\"# \" fmt \"\\n\", ## __VA_ARGS__)\n#define g_assert_cmpstr(left_expr, op, right_expr) \\\n  do { \\\n    const char *left = (left_expr); \\\n",
                    "rendered": {
                      "text": "#define not_ok(fmt, ...) die (fmt, ## __VA_ARGS__)\n\n/* approximately GLib-compatible helper macros */\n#define g_test_message(fmt, ...) printf (\"# \" fmt \"\\n\", ## __VA_ARGS__)\n#define g_assert_cmpstr(left_expr, op, right_expr) \\\n  do { \\\n    const char *left = (left_expr); \\\n",
                      "markdown": "`#define not_ok(fmt, ...) die (fmt, ## __VA_ARGS__)\n\n/* approximately GLib-compatible helper macros */\n#define g_test_message(fmt, ...) printf (\"# \" fmt \"\\n\", ## __VA_ARGS__)\n#define g_assert_cmpstr(left_expr, op, right_expr) \\\n  do { \\\n    const char *left = (left_expr); \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-specifying-userns.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-specifying-userns.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 89,
                  "endLine": 16,
                  "endColumn": 94,
                  "snippet": {
                    "text": "else\n    mkfifo donepipe\n\n    $RUN --info-fd 42 --unshare-user sh -c 'readlink /proc/self/ns/user > sandbox-userns; cat < donepipe' >/dev/null 42>info.json &\n    while ! test -f sandbox-userns; do sleep 1; done\n    SANDBOX1PID=$(extract_child_pid info.json)\n\n",
                    "rendered": {
                      "text": "else\n    mkfifo donepipe\n\n    $RUN --info-fd 42 --unshare-user sh -c 'readlink /proc/self/ns/user > sandbox-userns; cat < donepipe' >/dev/null 42>info.json &\n    while ! test -f sandbox-userns; do sleep 1; done\n    SANDBOX1PID=$(extract_child_pid info.json)\n\n",
                      "markdown": "`else\n    mkfifo donepipe\n\n    $RUN --info-fd 42 --unshare-user sh -c 'readlink /proc/self/ns/user > sandbox-userns; cat < donepipe' >/dev/null 42>info.json &\n    while ! test -f sandbox-userns; do sleep 1; done\n    SANDBOX1PID=$(extract_child_pid info.json)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-specifying-userns.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 14,
                  "endLine": 58,
                  "snippet": {
                    "text": "done\n\nif dpkg-vendor --derives-from Debian; then\n    apt-get -y update\n    apt-get -q -y install \\\n        build-essential \\\n        docbook-xml \\\n        docbook-xsl \\\n",
                    "rendered": {
                      "text": "done\n\nif dpkg-vendor --derives-from Debian; then\n    apt-get -y update\n    apt-get -q -y install \\\n        build-essential \\\n        docbook-xml \\\n        docbook-xsl \\\n",
                      "markdown": "`done\n\nif dpkg-vendor --derives-from Debian; then\n    apt-get -y update\n    apt-get -q -y install \\\n        build-essential \\\n        docbook-xml \\\n        docbook-xsl \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Copyright 2021 Simon McVittie\n# SPDX-License-Identifier: LGPL-2.0-or-later\n\nset -eux\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Copyright 2021 Simon McVittie\n# SPDX-License-Identifier: LGPL-2.0-or-later\n\nset -eux\n",
                      "markdown": "`#!/usr/bin/env bash\n# Copyright 2021 Simon McVittie\n# SPDX-License-Identifier: LGPL-2.0-or-later\n\nset -eux\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 7,
                  "endLine": 98,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        ${NULL+}\n\n    if [ -n \"${opt_clang}\" ]; then\n        yum -y install clang\n    fi\n\n    exit 0\n",
                    "rendered": {
                      "text": "        ${NULL+}\n\n    if [ -n \"${opt_clang}\" ]; then\n        yum -y install clang\n    fi\n\n    exit 0\n",
                      "markdown": "`        ${NULL+}\n\n    if [ -n \"${opt_clang}\" ]; then\n        yum -y install clang\n    fi\n\n    exit 0\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 7,
                  "endLine": 94,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        make \\\n        meson \\\n        redhat-rpm-config \\\n        rsync \\\n        ${NULL+}\n\n    if [ -n \"${opt_clang}\" ]; then\n",
                    "rendered": {
                      "text": "        make \\\n        meson \\\n        redhat-rpm-config \\\n        rsync \\\n        ${NULL+}\n\n    if [ -n \"${opt_clang}\" ]; then\n",
                      "markdown": "`        make \\\n        meson \\\n        redhat-rpm-config \\\n        rsync \\\n        ${NULL+}\n\n    if [ -n \"${opt_clang}\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 7,
                  "endLine": 84,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        /usr/bin/eu-readelf \\\n        docbook-style-xsl \\\n        gcc \\\n        git \\\n        libasan \\\n        libcap-devel \\\n        libtool \\\n",
                    "rendered": {
                      "text": "        /usr/bin/eu-readelf \\\n        docbook-style-xsl \\\n        gcc \\\n        git \\\n        libasan \\\n        libcap-devel \\\n        libtool \\\n",
                      "markdown": "`        /usr/bin/eu-readelf \\\n        docbook-style-xsl \\\n        gcc \\\n        git \\\n        libasan \\\n        libcap-devel \\\n        libtool \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "endLine": 79,
                  "endColumn": 8,
                  "snippet": {
                    "text": "fi\n\nif command -v yum; then\n    yum -y install \\\n        'pkgconfig(libselinux)' \\\n        /usr/bin/eu-readelf \\\n        docbook-style-xsl \\\n",
                    "rendered": {
                      "text": "fi\n\nif command -v yum; then\n    yum -y install \\\n        'pkgconfig(libselinux)' \\\n        /usr/bin/eu-readelf \\\n        docbook-style-xsl \\\n",
                      "markdown": "`fi\n\nif command -v yum; then\n    yum -y install \\\n        'pkgconfig(libselinux)' \\\n        /usr/bin/eu-readelf \\\n        docbook-style-xsl \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 7,
                  "endLine": 72,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        ${NULL+}\n\n    if [ -n \"${opt_clang}\" ]; then\n        apt-get -y install clang\n    fi\n\n    exit 0\n",
                    "rendered": {
                      "text": "        ${NULL+}\n\n    if [ -n \"${opt_clang}\" ]; then\n        apt-get -y install clang\n    fi\n\n    exit 0\n",
                      "markdown": "`        ${NULL+}\n\n    if [ -n \"${opt_clang}\" ]; then\n        apt-get -y install clang\n    fi\n\n    exit 0\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 3,
                  "endLine": 58,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nif dpkg-vendor --derives-from Debian; then\n    apt-get -y update\n    apt-get -q -y install \\\n        build-essential \\\n        docbook-xml \\\n        docbook-xsl \\\n",
                    "rendered": {
                      "text": "\nif dpkg-vendor --derives-from Debian; then\n    apt-get -y update\n    apt-get -q -y install \\\n        build-essential \\\n        docbook-xml \\\n        docbook-xsl \\\n",
                      "markdown": "`\nif dpkg-vendor --derives-from Debian; then\n    apt-get -y update\n    apt-get -q -y install \\\n        build-essential \\\n        docbook-xml \\\n        docbook-xsl \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 3,
                  "endLine": 57,
                  "endColumn": 12,
                  "snippet": {
                    "text": "done\n\nif dpkg-vendor --derives-from Debian; then\n    apt-get -y update\n    apt-get -q -y install \\\n        build-essential \\\n        docbook-xml \\\n",
                    "rendered": {
                      "text": "done\n\nif dpkg-vendor --derives-from Debian; then\n    apt-get -y update\n    apt-get -q -y install \\\n        build-essential \\\n        docbook-xml \\\n",
                      "markdown": "`done\n\nif dpkg-vendor --derives-from Debian; then\n    apt-get -y update\n    apt-get -q -y install \\\n        build-essential \\\n        docbook-xml \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    if [ \"${1-2}\" -ne 0 ]; then\n        exec >&2\n    fi\n    cat <<EOF\nUsage: see source code\nEOF\n    exit \"${1-2}\"\n",
                    "rendered": {
                      "text": "    if [ \"${1-2}\" -ne 0 ]; then\n        exec >&2\n    fi\n    cat <<EOF\nUsage: see source code\nEOF\n    exit \"${1-2}\"\n",
                      "markdown": "`    if [ \"${1-2}\" -ne 0 ]; then\n        exec >&2\n    fi\n    cat <<EOF\nUsage: see source code\nEOF\n    exit \"${1-2}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/ci/builddeps.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Copyright 2021 Simon McVittie\n# SPDX-License-Identifier: LGPL-2.0-or-later\n\nset -eux\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Copyright 2021 Simon McVittie\n# SPDX-License-Identifier: LGPL-2.0-or-later\n\nset -eux\n",
                      "markdown": "`#!/usr/bin/env bash\n# Copyright 2021 Simon McVittie\n# SPDX-License-Identifier: LGPL-2.0-or-later\n\nset -eux\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bind-mount.c"
                },
                "region": {
                  "startLine": 533,
                  "startColumn": 44,
                  "endLine": 533,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        break;\n\n      case BIND_MOUNT_ERROR_REMOUNT_SUBMOUNT:\n        string = xasprintf (\"Unable to apply mount flags: remount \\\"%s\\\"\",\n                            failing_path);\n        break;\n\n",
                    "rendered": {
                      "text": "        break;\n\n      case BIND_MOUNT_ERROR_REMOUNT_SUBMOUNT:\n        string = xasprintf (\"Unable to apply mount flags: remount \\\"%s\\\"\",\n                            failing_path);\n        break;\n\n",
                      "markdown": "`        break;\n\n      case BIND_MOUNT_ERROR_REMOUNT_SUBMOUNT:\n        string = xasprintf (\"Unable to apply mount flags: remount \\\"%s\\\"\",\n                            failing_path);\n        break;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bind-mount.c"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 53,
                  "endLine": 523,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        break;\n\n      case BIND_MOUNT_ERROR_FIND_DEST_MOUNT:\n        string = xasprintf (\"Unable to find \\\"%s\\\" in mount table\", failing_path);\n        want_errno = false;\n        break;\n\n",
                    "rendered": {
                      "text": "        break;\n\n      case BIND_MOUNT_ERROR_FIND_DEST_MOUNT:\n        string = xasprintf (\"Unable to find \\\"%s\\\" in mount table\", failing_path);\n        want_errno = false;\n        break;\n\n",
                      "markdown": "`        break;\n\n      case BIND_MOUNT_ERROR_FIND_DEST_MOUNT:\n        string = xasprintf (\"Unable to find \\\"%s\\\" in mount table\", failing_path);\n        want_errno = false;\n        break;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bind-mount.c"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 38,
                  "endLine": 523,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        break;\n\n      case BIND_MOUNT_ERROR_FIND_DEST_MOUNT:\n        string = xasprintf (\"Unable to find \\\"%s\\\" in mount table\", failing_path);\n        want_errno = false;\n        break;\n\n",
                    "rendered": {
                      "text": "        break;\n\n      case BIND_MOUNT_ERROR_FIND_DEST_MOUNT:\n        string = xasprintf (\"Unable to find \\\"%s\\\" in mount table\", failing_path);\n        want_errno = false;\n        break;\n\n",
                      "markdown": "`        break;\n\n      case BIND_MOUNT_ERROR_FIND_DEST_MOUNT:\n        string = xasprintf (\"Unable to find \\\"%s\\\" in mount table\", failing_path);\n        want_errno = false;\n        break;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bind-mount.c"
                },
                "region": {
                  "startLine": 507,
                  "startColumn": 36,
                  "endLine": 507,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  switch (res)\n    {\n      case BIND_MOUNT_ERROR_MOUNT:\n        string = xstrdup (\"Unable to mount source on destination\");\n        break;\n\n      case BIND_MOUNT_ERROR_REALPATH_DEST:\n",
                    "rendered": {
                      "text": "  switch (res)\n    {\n      case BIND_MOUNT_ERROR_MOUNT:\n        string = xstrdup (\"Unable to mount source on destination\");\n        break;\n\n      case BIND_MOUNT_ERROR_REALPATH_DEST:\n",
                      "markdown": "`  switch (res)\n    {\n      case BIND_MOUNT_ERROR_MOUNT:\n        string = xstrdup (\"Unable to mount source on destination\");\n        break;\n\n      case BIND_MOUNT_ERROR_REALPATH_DEST:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bind-mount.c"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 13,
                  "endLine": 472,
                  "endColumn": 20,
                  "snippet": {
                    "text": "          current_flags = mount_tab[i].options;\n          new_flags = current_flags | (devices ? 0 : MS_NODEV) | MS_NOSUID | (readonly ? MS_RDONLY : 0);\n          if (new_flags != current_flags &&\n              mount (\"none\", mount_tab[i].mountpoint,\n                     NULL, MS_SILENT | MS_BIND | MS_REMOUNT | new_flags, NULL) != 0)\n            {\n              /* If we can't read the mountpoint we can't remount it, but that should\n",
                    "rendered": {
                      "text": "          current_flags = mount_tab[i].options;\n          new_flags = current_flags | (devices ? 0 : MS_NODEV) | MS_NOSUID | (readonly ? MS_RDONLY : 0);\n          if (new_flags != current_flags &&\n              mount (\"none\", mount_tab[i].mountpoint,\n                     NULL, MS_SILENT | MS_BIND | MS_REMOUNT | new_flags, NULL) != 0)\n            {\n              /* If we can't read the mountpoint we can't remount it, but that should\n",
                      "markdown": "`          current_flags = mount_tab[i].options;\n          new_flags = current_flags | (devices ? 0 : MS_NODEV) | MS_NOSUID | (readonly ? MS_RDONLY : 0);\n          if (new_flags != current_flags &&\n              mount (\"none\", mount_tab[i].mountpoint,\n                     NULL, MS_SILENT | MS_BIND | MS_REMOUNT | new_flags, NULL) != 0)\n            {\n              /* If we can't read the mountpoint we can't remount it, but that should\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bind-mount.c"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 5,
                  "endLine": 452,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  current_flags = mount_tab[0].options;\n  new_flags = current_flags | (devices ? 0 : MS_NODEV) | MS_NOSUID | (readonly ? MS_RDONLY : 0);\n  if (new_flags != current_flags &&\n      mount (\"none\", resolved_dest,\n             NULL, MS_SILENT | MS_BIND | MS_REMOUNT | new_flags, NULL) != 0)\n    {\n      if (failing_path != NULL)\n",
                    "rendered": {
                      "text": "  current_flags = mount_tab[0].options;\n  new_flags = current_flags | (devices ? 0 : MS_NODEV) | MS_NOSUID | (readonly ? MS_RDONLY : 0);\n  if (new_flags != current_flags &&\n      mount (\"none\", resolved_dest,\n             NULL, MS_SILENT | MS_BIND | MS_REMOUNT | new_flags, NULL) != 0)\n    {\n      if (failing_path != NULL)\n",
                      "markdown": "`  current_flags = mount_tab[0].options;\n  new_flags = current_flags | (devices ? 0 : MS_NODEV) | MS_NOSUID | (readonly ? MS_RDONLY : 0);\n  if (new_flags != current_flags &&\n      mount (\"none\", resolved_dest,\n             NULL, MS_SILENT | MS_BIND | MS_REMOUNT | new_flags, NULL) != 0)\n    {\n      if (failing_path != NULL)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/README.md"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 97,
                  "endLine": 159,
                  "endColumn": 105,
                  "snippet": {
                    "text": "\nNetwork namespaces ([CLONE_NEWNET](https://linux.die.net/man/2/clone)): The sandbox will not see the network. Instead it will have its own network namespace with only a loopback device.\n\nUTS namespace ([CLONE_NEWUTS](https://linux.die.net/man/2/clone)): The sandbox will have its own hostname.\n\nSeccomp filters: You can pass in seccomp filters that limit which syscalls can be done in the sandbox. For more information, see [Seccomp](https://en.wikipedia.org/wiki/Seccomp).\n\n",
                    "rendered": {
                      "text": "\nNetwork namespaces ([CLONE_NEWNET](https://linux.die.net/man/2/clone)): The sandbox will not see the network. Instead it will have its own network namespace with only a loopback device.\n\nUTS namespace ([CLONE_NEWUTS](https://linux.die.net/man/2/clone)): The sandbox will have its own hostname.\n\nSeccomp filters: You can pass in seccomp filters that limit which syscalls can be done in the sandbox. For more information, see [Seccomp](https://en.wikipedia.org/wiki/Seccomp).\n\n",
                      "markdown": "`\nNetwork namespaces ([CLONE_NEWNET](https://linux.die.net/man/2/clone)): The sandbox will not see the network. Instead it will have its own network namespace with only a loopback device.\n\nUTS namespace ([CLONE_NEWUTS](https://linux.die.net/man/2/clone)): The sandbox will have its own hostname.\n\nSeccomp filters: You can pass in seccomp filters that limit which syscalls can be done in the sandbox. For more information, see [Seccomp](https://en.wikipedia.org/wiki/Seccomp).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/README.md"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 3,
                  "endLine": 127,
                  "snippet": {
                    "text": "    --dev /dev \\\n    --unshare-pid \\\n    --new-session \\\n    bash\n```\n\nThis is an incomplete example, but useful for purposes of\nillustration.  More often, rather than creating a container using the\n",
                    "rendered": {
                      "text": "    --dev /dev \\\n    --unshare-pid \\\n    --new-session \\\n    bash\n```\n\nThis is an incomplete example, but useful for purposes of\nillustration.  More often, rather than creating a container using the\n",
                      "markdown": "`    --dev /dev \\\n    --unshare-pid \\\n    --new-session \\\n    bash\n```\n\nThis is an incomplete example, but useful for purposes of\nillustration.  More often, rather than creating a container using the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/README.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 36,
                  "endLine": 31,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\nBubblewrap could be viewed as setuid implementation of a *subset* of\nuser namespaces.  Emphasis on subset - specifically relevant to the\nabove CVE, bubblewrap does not allow control over iptables.\n\nThe original bubblewrap code existed before user namespaces - it inherits code from\n[xdg-app helper](https://cgit.freedesktop.org/xdg-app/xdg-app/tree/common/xdg-app-helper.c?id=4c3bf179e2e4a2a298cd1db1d045adaf3f564532)\n",
                    "rendered": {
                      "text": "\nBubblewrap could be viewed as setuid implementation of a *subset* of\nuser namespaces.  Emphasis on subset - specifically relevant to the\nabove CVE, bubblewrap does not allow control over iptables.\n\nThe original bubblewrap code existed before user namespaces - it inherits code from\n[xdg-app helper](https://cgit.freedesktop.org/xdg-app/xdg-app/tree/common/xdg-app-helper.c?id=4c3bf179e2e4a2a298cd1db1d045adaf3f564532)\n",
                      "markdown": "`\nBubblewrap could be viewed as setuid implementation of a *subset* of\nuser namespaces.  Emphasis on subset - specifically relevant to the\nabove CVE, bubblewrap does not allow control over iptables.\n\nThe original bubblewrap code existed before user namespaces - it inherits code from\n[xdg-app helper](https://cgit.freedesktop.org/xdg-app/xdg-app/tree/common/xdg-app-helper.c?id=4c3bf179e2e4a2a298cd1db1d045adaf3f564532)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/README.md"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 11,
                  "endLine": 255,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n![](bubblewrap.jpg)\n\n(Bubblewrap cat by [dancing_stupidity](https://www.flickr.com/photos/27549668@N03/))\n",
                    "rendered": {
                      "text": "\n![](bubblewrap.jpg)\n\n(Bubblewrap cat by [dancing_stupidity](https://www.flickr.com/photos/27549668@N03/))\n",
                      "markdown": "`\n![](bubblewrap.jpg)\n\n(Bubblewrap cat by [dancing_stupidity](https://www.flickr.com/photos/27549668@N03/))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/README.md"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 31,
                  "endLine": 142,
                  "endColumn": 38,
                  "snippet": {
                    "text": "has restricted access to parts of the operating system or user data\nsuch as the home directory.\n\nbubblewrap always creates a new mount namespace, and the user can specify\nexactly what parts of the filesystem should be visible in the sandbox.\nAny such directories you specify mounted `nodev` by default, and can be made readonly.\n\n",
                    "rendered": {
                      "text": "has restricted access to parts of the operating system or user data\nsuch as the home directory.\n\nbubblewrap always creates a new mount namespace, and the user can specify\nexactly what parts of the filesystem should be visible in the sandbox.\nAny such directories you specify mounted `nodev` by default, and can be made readonly.\n\n",
                      "markdown": "`has restricted access to parts of the operating system or user data\nsuch as the home directory.\n\nbubblewrap always creates a new mount namespace, and the user can specify\nexactly what parts of the filesystem should be visible in the sandbox.\nAny such directories you specify mounted `nodev` by default, and can be made readonly.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/README.md"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 3,
                  "endLine": 127,
                  "snippet": {
                    "text": "    --dev /dev \\\n    --unshare-pid \\\n    --new-session \\\n    bash\n```\n\nThis is an incomplete example, but useful for purposes of\nillustration.  More often, rather than creating a container using the\n",
                    "rendered": {
                      "text": "    --dev /dev \\\n    --unshare-pid \\\n    --new-session \\\n    bash\n```\n\nThis is an incomplete example, but useful for purposes of\nillustration.  More often, rather than creating a container using the\n",
                      "markdown": "`    --dev /dev \\\n    --unshare-pid \\\n    --new-session \\\n    bash\n```\n\nThis is an incomplete example, but useful for purposes of\nillustration.  More often, rather than creating a container using the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/README.md"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 53,
                  "endLine": 108,
                  "snippet": {
                    "text": "Usage\n-----\n\nbubblewrap works by creating a new, completely empty, mount\nnamespace where the root is on a tmpfs that is invisible from the\nhost, and will be automatically cleaned up when the last process\nexits. You can then use commandline options to construct the root\nfilesystem and process environment and command to run in the\n",
                    "rendered": {
                      "text": "Usage\n-----\n\nbubblewrap works by creating a new, completely empty, mount\nnamespace where the root is on a tmpfs that is invisible from the\nhost, and will be automatically cleaned up when the last process\nexits. You can then use commandline options to construct the root\nfilesystem and process environment and command to run in the\n",
                      "markdown": "`Usage\n-----\n\nbubblewrap works by creating a new, completely empty, mount\nnamespace where the root is on a tmpfs that is invisible from the\nhost, and will be automatically cleaned up when the last process\nexits. You can then use commandline options to construct the root\nfilesystem and process environment and command to run in the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/README.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 28,
                  "endLine": 44,
                  "endColumn": 37,
                  "snippet": {
                    "text": "The maintainers of this tool believe that it does not, even when used\nin combination with typical software installed on that distribution,\nallow privilege escalation.  It may increase the ability of a logged\nin user to perform denial of service attacks, however.\n\nIn particular, bubblewrap uses `PR_SET_NO_NEW_PRIVS` to turn off\nsetuid binaries, which is the [traditional way](https://en.wikipedia.org/wiki/Chroot#Limitations) to get out of things\n",
                    "rendered": {
                      "text": "The maintainers of this tool believe that it does not, even when used\nin combination with typical software installed on that distribution,\nallow privilege escalation.  It may increase the ability of a logged\nin user to perform denial of service attacks, however.\n\nIn particular, bubblewrap uses `PR_SET_NO_NEW_PRIVS` to turn off\nsetuid binaries, which is the [traditional way](https://en.wikipedia.org/wiki/Chroot#Limitations) to get out of things\n",
                      "markdown": "`The maintainers of this tool believe that it does not, even when used\nin combination with typical software installed on that distribution,\nallow privilege escalation.  It may increase the ability of a logged\nin user to perform denial of service attacks, however.\n\nIn particular, bubblewrap uses `PR_SET_NO_NEW_PRIVS` to turn off\nsetuid binaries, which is the [traditional way](https://en.wikipedia.org/wiki/Chroot#Limitations) to get out of things\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-specifying-pidns.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-specifying-pidns.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 101,
                  "endLine": 15,
                  "endColumn": 106,
                  "snippet": {
                    "text": "    echo \"ok - # SKIP no setuid support for --unshare-user\"\nelse\n    mkfifo donepipe\n    $RUN --info-fd 42 --unshare-user --unshare-pid sh -c 'readlink /proc/self/ns/pid > sandbox-pidns; cat < donepipe' >/dev/null 42>info.json &\n    while ! test -f sandbox-pidns; do sleep 1; done\n    SANDBOX1PID=$(extract_child_pid info.json)\n\n",
                    "rendered": {
                      "text": "    echo \"ok - # SKIP no setuid support for --unshare-user\"\nelse\n    mkfifo donepipe\n    $RUN --info-fd 42 --unshare-user --unshare-pid sh -c 'readlink /proc/self/ns/pid > sandbox-pidns; cat < donepipe' >/dev/null 42>info.json &\n    while ! test -f sandbox-pidns; do sleep 1; done\n    SANDBOX1PID=$(extract_child_pid info.json)\n\n",
                      "markdown": "`    echo \"ok - # SKIP no setuid support for --unshare-user\"\nelse\n    mkfifo donepipe\n    $RUN --info-fd 42 --unshare-user --unshare-pid sh -c 'readlink /proc/self/ns/pid > sandbox-pidns; cat < donepipe' >/dev/null 42>info.json &\n    while ! test -f sandbox-pidns; do sleep 1; done\n    SANDBOX1PID=$(extract_child_pid info.json)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-specifying-pidns.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 3,
                  "endLine": 240,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    # We have to loop here, because bwrap doesn't wait for the lock if\n    # another process is holding it. If we're unlucky, lockf-n.py will\n    # be holding it.\n    bash -c \"while true; do $RUN ${die_with_parent_argv} --lock-file $(pwd)/lock sleep 1h; done\" &\n    childshellpid=$!\n\n    # Wait for lock to be taken (yes hacky)\n",
                    "rendered": {
                      "text": "    # We have to loop here, because bwrap doesn't wait for the lock if\n    # another process is holding it. If we're unlucky, lockf-n.py will\n    # be holding it.\n    bash -c \"while true; do $RUN ${die_with_parent_argv} --lock-file $(pwd)/lock sleep 1h; done\" &\n    childshellpid=$!\n\n    # Wait for lock to be taken (yes hacky)\n",
                      "markdown": "`    # We have to loop here, because bwrap doesn't wait for the lock if\n    # another process is holding it. If we're unlucky, lockf-n.py will\n    # be holding it.\n    bash -c \"while true; do $RUN ${die_with_parent_argv} --lock-file $(pwd)/lock sleep 1h; done\" &\n    childshellpid=$!\n\n    # Wait for lock to be taken (yes hacky)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 74,
                  "endLine": 112,
                  "endColumn": 80,
                  "snippet": {
                    "text": "assert_file_has_content_literal json-status.json '\"exit-code\": 42'\nok \"info and json-status fd\"\n\nDATA=$($RUN --proc /proc --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'stat -L -c \"%n %i\" /proc/self/ns/*' 42>info.json 43>json-status.json 2>err.txt)\n\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n",
                    "rendered": {
                      "text": "assert_file_has_content_literal json-status.json '\"exit-code\": 42'\nok \"info and json-status fd\"\n\nDATA=$($RUN --proc /proc --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'stat -L -c \"%n %i\" /proc/self/ns/*' 42>info.json 43>json-status.json 2>err.txt)\n\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n",
                      "markdown": "`assert_file_has_content_literal json-status.json '\"exit-code\": 42'\nok \"info and json-status fd\"\n\nDATA=$($RUN --proc /proc --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'stat -L -c \"%n %i\" /proc/self/ns/*' 42>info.json 43>json-status.json 2>err.txt)\n\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 57,
                  "endLine": 104,
                  "endColumn": 63,
                  "snippet": {
                    "text": "ok \"can run as pid 1\"\n\n# Test --info-fd and --json-status-fd\nif $RUN --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'exit 42' 42>info.json 43>json-status.json 2>err.txt; then\n    fatal \"should have been exit 42\"\nfi\nassert_file_has_content info.json '\"child-pid\": [0-9]'\n",
                    "rendered": {
                      "text": "ok \"can run as pid 1\"\n\n# Test --info-fd and --json-status-fd\nif $RUN --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'exit 42' 42>info.json 43>json-status.json 2>err.txt; then\n    fatal \"should have been exit 42\"\nfi\nassert_file_has_content info.json '\"child-pid\": [0-9]'\n",
                      "markdown": "`ok \"can run as pid 1\"\n\n# Test --info-fd and --json-status-fd\nif $RUN --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'exit 42' 42>info.json 43>json-status.json 2>err.txt; then\n    fatal \"should have been exit 42\"\nfi\nassert_file_has_content info.json '\"child-pid\": [0-9]'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 40,
                  "endLine": 99,
                  "endColumn": 46,
                  "snippet": {
                    "text": "ok \"all expected devices were created\"\n\n# Test --as-pid-1\n$RUN --unshare-pid --as-pid-1 --bind / / bash -c 'echo $$' > as_pid_1.txt\nassert_file_has_content as_pid_1.txt \"1\"\nok \"can run as pid 1\"\n\n",
                    "rendered": {
                      "text": "ok \"all expected devices were created\"\n\n# Test --as-pid-1\n$RUN --unshare-pid --as-pid-1 --bind / / bash -c 'echo $$' > as_pid_1.txt\nassert_file_has_content as_pid_1.txt \"1\"\nok \"can run as pid 1\"\n\n",
                      "markdown": "`ok \"all expected devices were created\"\n\n# Test --as-pid-1\n$RUN --unshare-pid --as-pid-1 --bind / / bash -c 'echo $$' > as_pid_1.txt\nassert_file_has_content as_pid_1.txt \"1\"\nok \"can run as pid 1\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 569,
                  "startColumn": 58,
                  "endLine": 569,
                  "endColumn": 63,
                  "snippet": {
                    "text": "ok \"argv0 manipulation\"\n\necho \"foobar\" > file-data\n$RUN --proc /proc --dev /dev --bind / / --bind-fd 100 /tmp cat /tmp/file-data 100< . > stdout\nassert_file_has_content stdout foobar\n\nok \"bind-fd\"\n",
                    "rendered": {
                      "text": "ok \"argv0 manipulation\"\n\necho \"foobar\" > file-data\n$RUN --proc /proc --dev /dev --bind / / --bind-fd 100 /tmp cat /tmp/file-data 100< . > stdout\nassert_file_has_content stdout foobar\n\nok \"bind-fd\"\n",
                      "markdown": "`ok \"argv0 manipulation\"\n\necho \"foobar\" > file-data\n$RUN --proc /proc --dev /dev --bind / / --bind-fd 100 /tmp cat /tmp/file-data 100< . > stdout\nassert_file_has_content stdout foobar\n\nok \"bind-fd\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 3,
                  "endLine": 442,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n$RUN \\\n    --perms 01777 --tmpfs \"$(pwd -P)\" \\\n    cat /proc/self/mountinfo >&2\n$RUN \\\n    --perms 01777 --tmpfs \"$(pwd -P)\" \\\n    stat -c '%a' \"$(pwd -P)\" > dir-permissions\n",
                    "rendered": {
                      "text": "\n$RUN \\\n    --perms 01777 --tmpfs \"$(pwd -P)\" \\\n    cat /proc/self/mountinfo >&2\n$RUN \\\n    --perms 01777 --tmpfs \"$(pwd -P)\" \\\n    stat -c '%a' \"$(pwd -P)\" > dir-permissions\n",
                      "markdown": "`\n$RUN \\\n    --perms 01777 --tmpfs \"$(pwd -P)\" \\\n    cat /proc/self/mountinfo >&2\n$RUN \\\n    --perms 01777 --tmpfs \"$(pwd -P)\" \\\n    stat -c '%a' \"$(pwd -P)\" > dir-permissions\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 47,
                  "endLine": 436,
                  "endColumn": 6,
                  "snippet": {
                    "text": "command stat -c '%a' parent-of-0604 > dir-permissions\nassert_file_has_content dir-permissions '^705$'\ncommand stat -c '%a' parent-of-0000 > dir-permissions\nassert_file_has_content dir-permissions '^700$'\nchmod -R 0700 parent*\nrm -fr parent*\nok \"Directories created as parents have expected permissions\"\n\n",
                    "rendered": {
                      "text": "command stat -c '%a' parent-of-0604 > dir-permissions\nassert_file_has_content dir-permissions '^705$'\ncommand stat -c '%a' parent-of-0000 > dir-permissions\nassert_file_has_content dir-permissions '^700$'\nchmod -R 0700 parent*\nrm -fr parent*\nok \"Directories created as parents have expected permissions\"\n\n",
                      "markdown": "`command stat -c '%a' parent-of-0604 > dir-permissions\nassert_file_has_content dir-permissions '^705$'\ncommand stat -c '%a' parent-of-0000 > dir-permissions\nassert_file_has_content dir-permissions '^700$'\nchmod -R 0700 parent*\nrm -fr parent*\nok \"Directories created as parents have expected permissions\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 29,
                  "endLine": 359,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nmkdir -p dir-already-existed\nchmod 0710 dir-already-existed\nmkdir -p dir-already-existed2\nchmod 0754 dir-already-existed2\nrm -fr new-dir-default-perms\nrm -fr new-dir-set-perms\n$RUN \\\n",
                    "rendered": {
                      "text": "\nmkdir -p dir-already-existed\nchmod 0710 dir-already-existed\nmkdir -p dir-already-existed2\nchmod 0754 dir-already-existed2\nrm -fr new-dir-default-perms\nrm -fr new-dir-set-perms\n$RUN \\\n",
                      "markdown": "`\nmkdir -p dir-already-existed\nchmod 0710 dir-already-existed\nmkdir -p dir-already-existed2\nchmod 0754 dir-already-existed2\nrm -fr new-dir-default-perms\nrm -fr new-dir-set-perms\n$RUN \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 28,
                  "endLine": 357,
                  "endColumn": 6,
                  "snippet": {
                    "text": "    ok_skip \"- /dev/log is not a socket, cannot test bubblewrap#409\"\nfi\n\nmkdir -p dir-already-existed\nchmod 0710 dir-already-existed\nmkdir -p dir-already-existed2\nchmod 0754 dir-already-existed2\nrm -fr new-dir-default-perms\n",
                    "rendered": {
                      "text": "    ok_skip \"- /dev/log is not a socket, cannot test bubblewrap#409\"\nfi\n\nmkdir -p dir-already-existed\nchmod 0710 dir-already-existed\nmkdir -p dir-already-existed2\nchmod 0754 dir-already-existed2\nrm -fr new-dir-default-perms\n",
                      "markdown": "`    ok_skip \"- /dev/log is not a socket, cannot test bubblewrap#409\"\nfi\n\nmkdir -p dir-already-existed\nchmod 0710 dir-already-existed\nmkdir -p dir-already-existed2\nchmod 0754 dir-already-existed2\nrm -fr new-dir-default-perms\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 36,
                  "endLine": 346,
                  "endColumn": 43,
                  "snippet": {
                    "text": "assert_file_has_content new-dir-permissions 755\ncommand stat -c '%a' new-file-mountpoint > new-file-permissions\nassert_file_has_content new-file-permissions 444\nok \"Files and directories created as mount points have expected permissions\"\n\n\nif [ -S /dev/log ]; then\n",
                    "rendered": {
                      "text": "assert_file_has_content new-dir-permissions 755\ncommand stat -c '%a' new-file-mountpoint > new-file-permissions\nassert_file_has_content new-file-permissions 444\nok \"Files and directories created as mount points have expected permissions\"\n\n\nif [ -S /dev/log ]; then\n",
                      "markdown": "`assert_file_has_content new-dir-permissions 755\ncommand stat -c '%a' new-file-mountpoint > new-file-permissions\nassert_file_has_content new-file-permissions 444\nok \"Files and directories created as mount points have expected permissions\"\n\n\nif [ -S /dev/log ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 10,
                  "endLine": 332,
                  "endColumn": 17,
                  "snippet": {
                    "text": "if $RUN --bind \"$(pwd)\" /tmp/here test -d /tmp/newroot; then\n    assert_not_reached \"/tmp/newroot should not be visible\"\nfi\nok \"we can mount another directory inside /tmp\"\n\ntouch some-file\nmkdir -p some-dir\n",
                    "rendered": {
                      "text": "if $RUN --bind \"$(pwd)\" /tmp/here test -d /tmp/newroot; then\n    assert_not_reached \"/tmp/newroot should not be visible\"\nfi\nok \"we can mount another directory inside /tmp\"\n\ntouch some-file\nmkdir -p some-dir\n",
                      "markdown": "`if $RUN --bind \"$(pwd)\" /tmp/here test -d /tmp/newroot; then\n    assert_not_reached \"/tmp/newroot should not be visible\"\nfi\nok \"we can mount another directory inside /tmp\"\n\ntouch some-file\nmkdir -p some-dir\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 30,
                  "endLine": 324,
                  "endColumn": 35,
                  "snippet": {
                    "text": "ok \"we can mount another directory onto /tmp\"\n\necho \"hello\" > input.$$\n$RUN --bind \"$(pwd)\" /tmp/here cat /tmp/here/input.$$ > stdout\nassert_file_has_content stdout hello\nif $RUN --bind \"$(pwd)\" /tmp/here test -d /tmp/oldroot; then\n    assert_not_reached \"/tmp/oldroot should not be visible\"\n",
                    "rendered": {
                      "text": "ok \"we can mount another directory onto /tmp\"\n\necho \"hello\" > input.$$\n$RUN --bind \"$(pwd)\" /tmp/here cat /tmp/here/input.$$ > stdout\nassert_file_has_content stdout hello\nif $RUN --bind \"$(pwd)\" /tmp/here test -d /tmp/oldroot; then\n    assert_not_reached \"/tmp/oldroot should not be visible\"\n",
                      "markdown": "`ok \"we can mount another directory onto /tmp\"\n\necho \"hello\" > input.$$\n$RUN --bind \"$(pwd)\" /tmp/here cat /tmp/here/input.$$ > stdout\nassert_file_has_content stdout hello\nif $RUN --bind \"$(pwd)\" /tmp/here test -d /tmp/oldroot; then\n    assert_not_reached \"/tmp/oldroot should not be visible\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 10,
                  "endLine": 321,
                  "endColumn": 17,
                  "snippet": {
                    "text": "if $BWRAP --bind / / --bind \"$(pwd)\" /tmp test -d /tmp/newroot; then\n    assert_not_reached \"/tmp/newroot should not be visible\"\nfi\nok \"we can mount another directory onto /tmp\"\n\necho \"hello\" > input.$$\n$RUN --bind \"$(pwd)\" /tmp/here cat /tmp/here/input.$$ > stdout\n",
                    "rendered": {
                      "text": "if $BWRAP --bind / / --bind \"$(pwd)\" /tmp test -d /tmp/newroot; then\n    assert_not_reached \"/tmp/newroot should not be visible\"\nfi\nok \"we can mount another directory onto /tmp\"\n\necho \"hello\" > input.$$\n$RUN --bind \"$(pwd)\" /tmp/here cat /tmp/here/input.$$ > stdout\n",
                      "markdown": "`if $BWRAP --bind / / --bind \"$(pwd)\" /tmp test -d /tmp/newroot; then\n    assert_not_reached \"/tmp/newroot should not be visible\"\nfi\nok \"we can mount another directory onto /tmp\"\n\necho \"hello\" > input.$$\n$RUN --bind \"$(pwd)\" /tmp/here cat /tmp/here/input.$$ > stdout\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 38,
                  "endLine": 313,
                  "endColumn": 43,
                  "snippet": {
                    "text": "fi\n\necho \"hello\" > input.$$\n$BWRAP --bind / / --bind \"$(pwd)\" /tmp cat /tmp/input.$$ > stdout\nassert_file_has_content stdout hello\nif $BWRAP --bind / / --bind \"$(pwd)\" /tmp test -d /tmp/oldroot; then\n    assert_not_reached \"/tmp/oldroot should not be visible\"\n",
                    "rendered": {
                      "text": "fi\n\necho \"hello\" > input.$$\n$BWRAP --bind / / --bind \"$(pwd)\" /tmp cat /tmp/input.$$ > stdout\nassert_file_has_content stdout hello\nif $BWRAP --bind / / --bind \"$(pwd)\" /tmp test -d /tmp/oldroot; then\n    assert_not_reached \"/tmp/oldroot should not be visible\"\n",
                      "markdown": "`fi\n\necho \"hello\" > input.$$\n$BWRAP --bind / / --bind \"$(pwd)\" /tmp cat /tmp/input.$$ > stdout\nassert_file_has_content stdout hello\nif $BWRAP --bind / / --bind \"$(pwd)\" /tmp test -d /tmp/oldroot; then\n    assert_not_reached \"/tmp/oldroot should not be visible\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 42,
                  "endLine": 293,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    assert_file_has_content stdout hello\n    ok \"bind-mount of /tmp exposes real /tmp\"\n    if [ -d /mnt ] && [ ! -L /mnt ]; then\n        $BWRAP --bind / / --bind /tmp /mnt cat \"/mnt/${tempfile#/tmp/}\" > stdout\n        assert_file_has_content stdout hello\n        ok \"bind-mount of /tmp onto /mnt exposes real /tmp\"\n    else\n",
                    "rendered": {
                      "text": "    assert_file_has_content stdout hello\n    ok \"bind-mount of /tmp exposes real /tmp\"\n    if [ -d /mnt ] && [ ! -L /mnt ]; then\n        $BWRAP --bind / / --bind /tmp /mnt cat \"/mnt/${tempfile#/tmp/}\" > stdout\n        assert_file_has_content stdout hello\n        ok \"bind-mount of /tmp onto /mnt exposes real /tmp\"\n    else\n",
                      "markdown": "`    assert_file_has_content stdout hello\n    ok \"bind-mount of /tmp exposes real /tmp\"\n    if [ -d /mnt ] && [ ! -L /mnt ]; then\n        $BWRAP --bind / / --bind /tmp /mnt cat \"/mnt/${tempfile#/tmp/}\" > stdout\n        assert_file_has_content stdout hello\n        ok \"bind-mount of /tmp onto /mnt exposes real /tmp\"\n    else\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 38,
                  "endLine": 289,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    $BWRAP --bind / / cat \"$tempfile\" > stdout\n    assert_file_has_content stdout hello\n    ok \"bind-mount of / exposes real /tmp\"\n    $BWRAP --bind / / --bind /tmp /tmp cat \"$tempfile\" > stdout\n    assert_file_has_content stdout hello\n    ok \"bind-mount of /tmp exposes real /tmp\"\n    if [ -d /mnt ] && [ ! -L /mnt ]; then\n",
                    "rendered": {
                      "text": "    $BWRAP --bind / / cat \"$tempfile\" > stdout\n    assert_file_has_content stdout hello\n    ok \"bind-mount of / exposes real /tmp\"\n    $BWRAP --bind / / --bind /tmp /tmp cat \"$tempfile\" > stdout\n    assert_file_has_content stdout hello\n    ok \"bind-mount of /tmp exposes real /tmp\"\n    if [ -d /mnt ] && [ ! -L /mnt ]; then\n",
                      "markdown": "`    $BWRAP --bind / / cat \"$tempfile\" > stdout\n    assert_file_has_content stdout hello\n    ok \"bind-mount of / exposes real /tmp\"\n    $BWRAP --bind / / --bind /tmp /tmp cat \"$tempfile\" > stdout\n    assert_file_has_content stdout hello\n    ok \"bind-mount of /tmp exposes real /tmp\"\n    if [ -d /mnt ] && [ ! -L /mnt ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 21,
                  "endLine": 286,
                  "endColumn": 26,
                  "snippet": {
                    "text": "if command -v mktemp > /dev/null; then\n    tempfile=\"$(mktemp /tmp/bwrap-test-XXXXXXXX)\"\n    echo \"hello\" > \"$tempfile\"\n    $BWRAP --bind / / cat \"$tempfile\" > stdout\n    assert_file_has_content stdout hello\n    ok \"bind-mount of / exposes real /tmp\"\n    $BWRAP --bind / / --bind /tmp /tmp cat \"$tempfile\" > stdout\n",
                    "rendered": {
                      "text": "if command -v mktemp > /dev/null; then\n    tempfile=\"$(mktemp /tmp/bwrap-test-XXXXXXXX)\"\n    echo \"hello\" > \"$tempfile\"\n    $BWRAP --bind / / cat \"$tempfile\" > stdout\n    assert_file_has_content stdout hello\n    ok \"bind-mount of / exposes real /tmp\"\n    $BWRAP --bind / / --bind /tmp /tmp cat \"$tempfile\" > stdout\n",
                      "markdown": "`if command -v mktemp > /dev/null; then\n    tempfile=\"$(mktemp /tmp/bwrap-test-XXXXXXXX)\"\n    echo \"hello\" > \"$tempfile\"\n    $BWRAP --bind / / cat \"$tempfile\" > stdout\n    assert_file_has_content stdout hello\n    ok \"bind-mount of / exposes real /tmp\"\n    $BWRAP --bind / / --bind /tmp /tmp cat \"$tempfile\" > stdout\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 56,
                  "endLine": 271,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nmkdir bin\necho \"#!/bin/sh\" > bin/--inadvisable-executable-name--\necho \"echo hello\" >> bin/--inadvisable-executable-name--\nchmod +x bin/--inadvisable-executable-name--\nPATH=\"${srcd}:$PATH\" $RUN -- sh -c \"echo hello\" > stdout\nassert_file_has_content stdout hello\nok \"we can run with --\"\n",
                    "rendered": {
                      "text": "\nmkdir bin\necho \"#!/bin/sh\" > bin/--inadvisable-executable-name--\necho \"echo hello\" >> bin/--inadvisable-executable-name--\nchmod +x bin/--inadvisable-executable-name--\nPATH=\"${srcd}:$PATH\" $RUN -- sh -c \"echo hello\" > stdout\nassert_file_has_content stdout hello\nok \"we can run with --\"\n",
                      "markdown": "`\nmkdir bin\necho \"#!/bin/sh\" > bin/--inadvisable-executable-name--\necho \"echo hello\" >> bin/--inadvisable-executable-name--\nchmod +x bin/--inadvisable-executable-name--\nPATH=\"${srcd}:$PATH\" $RUN -- sh -c \"echo hello\" > stdout\nassert_file_has_content stdout hello\nok \"we can run with --\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 3,
                  "endLine": 240,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    # We have to loop here, because bwrap doesn't wait for the lock if\n    # another process is holding it. If we're unlucky, lockf-n.py will\n    # be holding it.\n    bash -c \"while true; do $RUN ${die_with_parent_argv} --lock-file $(pwd)/lock sleep 1h; done\" &\n    childshellpid=$!\n\n    # Wait for lock to be taken (yes hacky)\n",
                    "rendered": {
                      "text": "    # We have to loop here, because bwrap doesn't wait for the lock if\n    # another process is holding it. If we're unlucky, lockf-n.py will\n    # be holding it.\n    bash -c \"while true; do $RUN ${die_with_parent_argv} --lock-file $(pwd)/lock sleep 1h; done\" &\n    childshellpid=$!\n\n    # Wait for lock to be taken (yes hacky)\n",
                      "markdown": "`    # We have to loop here, because bwrap doesn't wait for the lock if\n    # another process is holding it. If we're unlucky, lockf-n.py will\n    # be holding it.\n    bash -c \"while true; do $RUN ${die_with_parent_argv} --lock-file $(pwd)/lock sleep 1h; done\" &\n    childshellpid=$!\n\n    # Wait for lock to be taken (yes hacky)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 3,
                  "endLine": 233,
                  "endColumn": 6,
                  "snippet": {
                    "text": "except IOError as e:\n  sys.exit(1)\nsys.exit(0)\nEOF\nchmod a+x lockf-n.py\ntouch lock\n\nfor die_with_parent_argv in \"--die-with-parent\" \"--die-with-parent --unshare-pid\"; do\n",
                    "rendered": {
                      "text": "except IOError as e:\n  sys.exit(1)\nsys.exit(0)\nEOF\nchmod a+x lockf-n.py\ntouch lock\n\nfor die_with_parent_argv in \"--die-with-parent\" \"--die-with-parent --unshare-pid\"; do\n",
                      "markdown": "`except IOError as e:\n  sys.exit(1)\nsys.exit(0)\nEOF\nchmod a+x lockf-n.py\ntouch lock\n\nfor die_with_parent_argv in \"--die-with-parent\" \"--die-with-parent --unshare-pid\"; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 216,
                  "endLine": 217,
                  "endColumn": 4,
                  "snippet": {
                    "text": "fi\n\n# Test --die-with-parent\n\ncat >lockf-n.py <<EOF\n#!/usr/bin/env python3\nimport struct,fcntl,sys\npath = sys.argv[1]\n",
                    "rendered": {
                      "text": "fi\n\n# Test --die-with-parent\n\ncat >lockf-n.py <<EOF\n#!/usr/bin/env python3\nimport struct,fcntl,sys\npath = sys.argv[1]\n",
                      "markdown": "`fi\n\n# Test --die-with-parent\n\ncat >lockf-n.py <<EOF\n#!/usr/bin/env python3\nimport struct,fcntl,sys\npath = sys.argv[1]\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 6,
                  "endLine": 203,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    # But we should still have net_bind_service for example\n    $RUN $OPT --cap-drop CAP_KILL --cap-drop CAP_FOWNER --unshare-pid capsh --print >caps.test\n    # capsh's output format changed from v2.29 -> drops are now indicated with -eip\n    if grep 'Current: =.*+eip$' caps.test; then\n        assert_not_file_has_content caps.test '^Current: =.*cap_kill.*+eip$'\n        assert_not_file_has_content caps.test '^Current: =.*cap_fowner.*+eip$'\n        assert_file_has_content caps.test '^Current: =.*cap_net_bind_service.*+eip$'\n",
                    "rendered": {
                      "text": "    # But we should still have net_bind_service for example\n    $RUN $OPT --cap-drop CAP_KILL --cap-drop CAP_FOWNER --unshare-pid capsh --print >caps.test\n    # capsh's output format changed from v2.29 -> drops are now indicated with -eip\n    if grep 'Current: =.*+eip$' caps.test; then\n        assert_not_file_has_content caps.test '^Current: =.*cap_kill.*+eip$'\n        assert_not_file_has_content caps.test '^Current: =.*cap_fowner.*+eip$'\n        assert_file_has_content caps.test '^Current: =.*cap_net_bind_service.*+eip$'\n",
                      "markdown": "`    # But we should still have net_bind_service for example\n    $RUN $OPT --cap-drop CAP_KILL --cap-drop CAP_FOWNER --unshare-pid capsh --print >caps.test\n    # capsh's output format changed from v2.29 -> drops are now indicated with -eip\n    if grep 'Current: =.*+eip$' caps.test; then\n        assert_not_file_has_content caps.test '^Current: =.*cap_kill.*+eip$'\n        assert_not_file_has_content caps.test '^Current: =.*cap_fowner.*+eip$'\n        assert_file_has_content caps.test '^Current: =.*cap_net_bind_service.*+eip$'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 7,
                  "endLine": 194,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n    for OPT in \"\" \"--as-pid-1\"; do\n        $RUN $OPT --unshare-pid capsh --print >caps.test\n        diff -u caps.expected caps.test\n    done\n    # And test that we can drop all, as well as specific caps\n    $RUN $OPT --cap-drop ALL --unshare-pid capsh --print >caps.test\n",
                    "rendered": {
                      "text": "\n    for OPT in \"\" \"--as-pid-1\"; do\n        $RUN $OPT --unshare-pid capsh --print >caps.test\n        diff -u caps.expected caps.test\n    done\n    # And test that we can drop all, as well as specific caps\n    $RUN $OPT --cap-drop ALL --unshare-pid capsh --print >caps.test\n",
                      "markdown": "`\n    for OPT in \"\" \"--as-pid-1\"; do\n        $RUN $OPT --unshare-pid capsh --print >caps.test\n        diff -u caps.expected caps.test\n    done\n    # And test that we can drop all, as well as specific caps\n    $RUN $OPT --cap-drop ALL --unshare-pid capsh --print >caps.test\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 19,
                  "endLine": 190,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    done\n    ok \"we have no caps as uid != 0\"\nelse\n    capsh --print | sed -e 's/no-new-privs=0/no-new-privs=1/' > caps.expected\n\n    for OPT in \"\" \"--as-pid-1\"; do\n        $RUN $OPT --unshare-pid capsh --print >caps.test\n",
                    "rendered": {
                      "text": "    done\n    ok \"we have no caps as uid != 0\"\nelse\n    capsh --print | sed -e 's/no-new-privs=0/no-new-privs=1/' > caps.expected\n\n    for OPT in \"\" \"--as-pid-1\"; do\n        $RUN $OPT --unshare-pid capsh --print >caps.test\n",
                      "markdown": "`    done\n    ok \"we have no caps as uid != 0\"\nelse\n    capsh --print | sed -e 's/no-new-privs=0/no-new-privs=1/' > caps.expected\n\n    for OPT in \"\" \"--as-pid-1\"; do\n        $RUN $OPT --unshare-pid capsh --print >caps.test\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 7,
                  "endLine": 184,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    for OPT in \"\" \"--unshare-user-try --as-pid-1\" \"--unshare-user-try\" \"--as-pid-1\"; do\n        e=0\n        $RUN $OPT --unshare-pid getpcaps 1 >&2 2> caps.test || e=$?\n        sed -e 's/^/# /' < caps.test >&2\n        test \"$e\" = 0\n        assert_not_file_has_content caps.test ': =.*cap'\n    done\n",
                    "rendered": {
                      "text": "    for OPT in \"\" \"--unshare-user-try --as-pid-1\" \"--unshare-user-try\" \"--as-pid-1\"; do\n        e=0\n        $RUN $OPT --unshare-pid getpcaps 1 >&2 2> caps.test || e=$?\n        sed -e 's/^/# /' < caps.test >&2\n        test \"$e\" = 0\n        assert_not_file_has_content caps.test ': =.*cap'\n    done\n",
                      "markdown": "`    for OPT in \"\" \"--unshare-user-try --as-pid-1\" \"--unshare-user-try\" \"--as-pid-1\"; do\n        e=0\n        $RUN $OPT --unshare-pid getpcaps 1 >&2 2> caps.test || e=$?\n        sed -e 's/^/# /' < caps.test >&2\n        test \"$e\" = 0\n        assert_not_file_has_content caps.test ': =.*cap'\n    done\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 46,
                  "endLine": 176,
                  "endColumn": 52,
                  "snippet": {
                    "text": "if $RUN --unshare-pid --bind /source-enoent /dest true 2>err.txt; then\n    assert_not_reached \"bound nonexistent source\"\nfi\nassert_file_has_content err.txt \"^bwrap: Can't find source path.*source-enoent\"\nok \"error prefixing\"\n\nif ! ${is_uidzero}; then\n",
                    "rendered": {
                      "text": "if $RUN --unshare-pid --bind /source-enoent /dest true 2>err.txt; then\n    assert_not_reached \"bound nonexistent source\"\nfi\nassert_file_has_content err.txt \"^bwrap: Can't find source path.*source-enoent\"\nok \"error prefixing\"\n\nif ! ${is_uidzero}; then\n",
                      "markdown": "`if $RUN --unshare-pid --bind /source-enoent /dest true 2>err.txt; then\n    assert_not_reached \"bound nonexistent source\"\nfi\nassert_file_has_content err.txt \"^bwrap: Can't find source path.*source-enoent\"\nok \"error prefixing\"\n\nif ! ${is_uidzero}; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 11,
                  "endLine": 147,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    # $BWRAP May be inaccessible due to the user namespace so use /proc/self/exe\n    $BWRAP_RECURSE -- /proc/self/exe --unshare-all --bind / / --bind /proc /proc echo hello > recursive_proc.txt\n    assert_file_has_content recursive_proc.txt \"hello\"\n    ok \"can mount /proc recursively\"\n\n    $BWRAP_RECURSE -- /proc/self/exe --unshare-all ${BWRAP_RO_HOST_ARGS} findmnt > recursive-newroot.txt\n    assert_file_has_content recursive-newroot.txt \"/usr\"\n",
                    "rendered": {
                      "text": "    # $BWRAP May be inaccessible due to the user namespace so use /proc/self/exe\n    $BWRAP_RECURSE -- /proc/self/exe --unshare-all --bind / / --bind /proc /proc echo hello > recursive_proc.txt\n    assert_file_has_content recursive_proc.txt \"hello\"\n    ok \"can mount /proc recursively\"\n\n    $BWRAP_RECURSE -- /proc/self/exe --unshare-all ${BWRAP_RO_HOST_ARGS} findmnt > recursive-newroot.txt\n    assert_file_has_content recursive-newroot.txt \"/usr\"\n",
                      "markdown": "`    # $BWRAP May be inaccessible due to the user namespace so use /proc/self/exe\n    $BWRAP_RECURSE -- /proc/self/exe --unshare-all --bind / / --bind /proc /proc echo hello > recursive_proc.txt\n    assert_file_has_content recursive_proc.txt \"hello\"\n    ok \"can mount /proc recursively\"\n\n    $BWRAP_RECURSE -- /proc/self/exe --unshare-all ${BWRAP_RO_HOST_ARGS} findmnt > recursive-newroot.txt\n    assert_file_has_content recursive-newroot.txt \"/usr\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 5,
                  "endLine": 126,
                  "endColumn": 13,
                  "snippet": {
                    "text": "if ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n    assert_not_file_has_content json-status.json '\"exit-code\": [0-9]'\n    ok \"pre-exec failure doesn't include exit-code in json-status\"\nfi\n",
                    "rendered": {
                      "text": "if ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n    assert_not_file_has_content json-status.json '\"exit-code\": [0-9]'\n    ok \"pre-exec failure doesn't include exit-code in json-status\"\nfi\n",
                      "markdown": "`if ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n    assert_not_file_has_content json-status.json '\"exit-code\": [0-9]'\n    ok \"pre-exec failure doesn't include exit-code in json-status\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 15,
                  "endLine": 124,
                  "endColumn": 23,
                  "snippet": {
                    "text": "ok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n    assert_not_file_has_content json-status.json '\"exit-code\": [0-9]'\n",
                    "rendered": {
                      "text": "ok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n    assert_not_file_has_content json-status.json '\"exit-code\": [0-9]'\n",
                      "markdown": "`ok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n    assert_not_file_has_content json-status.json '\"exit-code\": [0-9]'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 71,
                  "endLine": 123,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n",
                    "rendered": {
                      "text": "\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n",
                      "markdown": "`\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 50,
                  "endLine": 123,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n",
                    "rendered": {
                      "text": "\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n",
                      "markdown": "`\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 38,
                  "endLine": 123,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n",
                    "rendered": {
                      "text": "\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n",
                      "markdown": "`\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 15,
                  "endLine": 123,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n",
                    "rendered": {
                      "text": "\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n",
                      "markdown": "`\nok \"namespace id info in info and json-status fd\"\n\nif ! command -v strace >/dev/null || ! strace -h | grep -v -e default | grep -e fault >/dev/null; then\n    ok_skip \"no strace fault injection\"\nelse\n    ! strace -o /dev/null -f -e trace=prctl -e fault=prctl:when=39 $RUN --die-with-parent --json-status-fd 42 true 42>json-status.json\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 52,
                  "endLine": 116,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n    want=$(echo \"$DATA\" | grep \"/proc/self/ns/$NS\" | awk '{print $2}')\n    assert_file_has_content info.json \"$want\"\n    assert_file_has_content json-status.json \"$want\"\ndone\n",
                    "rendered": {
                      "text": "\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n    want=$(echo \"$DATA\" | grep \"/proc/self/ns/$NS\" | awk '{print $2}')\n    assert_file_has_content info.json \"$want\"\n    assert_file_has_content json-status.json \"$want\"\ndone\n",
                      "markdown": "`\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n    want=$(echo \"$DATA\" | grep \"/proc/self/ns/$NS\" | awk '{print $2}')\n    assert_file_has_content info.json \"$want\"\n    assert_file_has_content json-status.json \"$want\"\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 25,
                  "endLine": 116,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n    want=$(echo \"$DATA\" | grep \"/proc/self/ns/$NS\" | awk '{print $2}')\n    assert_file_has_content info.json \"$want\"\n    assert_file_has_content json-status.json \"$want\"\ndone\n",
                    "rendered": {
                      "text": "\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n    want=$(echo \"$DATA\" | grep \"/proc/self/ns/$NS\" | awk '{print $2}')\n    assert_file_has_content info.json \"$want\"\n    assert_file_has_content json-status.json \"$want\"\ndone\n",
                      "markdown": "`\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n    want=$(echo \"$DATA\" | grep \"/proc/self/ns/$NS\" | awk '{print $2}')\n    assert_file_has_content info.json \"$want\"\n    assert_file_has_content json-status.json \"$want\"\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 74,
                  "endLine": 112,
                  "endColumn": 80,
                  "snippet": {
                    "text": "assert_file_has_content_literal json-status.json '\"exit-code\": 42'\nok \"info and json-status fd\"\n\nDATA=$($RUN --proc /proc --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'stat -L -c \"%n %i\" /proc/self/ns/*' 42>info.json 43>json-status.json 2>err.txt)\n\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n",
                    "rendered": {
                      "text": "assert_file_has_content_literal json-status.json '\"exit-code\": 42'\nok \"info and json-status fd\"\n\nDATA=$($RUN --proc /proc --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'stat -L -c \"%n %i\" /proc/self/ns/*' 42>info.json 43>json-status.json 2>err.txt)\n\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n",
                      "markdown": "`assert_file_has_content_literal json-status.json '\"exit-code\": 42'\nok \"info and json-status fd\"\n\nDATA=$($RUN --proc /proc --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'stat -L -c \"%n %i\" /proc/self/ns/*' 42>info.json 43>json-status.json 2>err.txt)\n\nfor NS in \"ipc\" \"mnt\" \"net\" \"pid\" \"uts\"; do\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 57,
                  "endLine": 104,
                  "endColumn": 63,
                  "snippet": {
                    "text": "ok \"can run as pid 1\"\n\n# Test --info-fd and --json-status-fd\nif $RUN --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'exit 42' 42>info.json 43>json-status.json 2>err.txt; then\n    fatal \"should have been exit 42\"\nfi\nassert_file_has_content info.json '\"child-pid\": [0-9]'\n",
                    "rendered": {
                      "text": "ok \"can run as pid 1\"\n\n# Test --info-fd and --json-status-fd\nif $RUN --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'exit 42' 42>info.json 43>json-status.json 2>err.txt; then\n    fatal \"should have been exit 42\"\nfi\nassert_file_has_content info.json '\"child-pid\": [0-9]'\n",
                      "markdown": "`ok \"can run as pid 1\"\n\n# Test --info-fd and --json-status-fd\nif $RUN --unshare-all --info-fd 42 --json-status-fd 43 -- bash -c 'exit 42' 42>info.json 43>json-status.json 2>err.txt; then\n    fatal \"should have been exit 42\"\nfi\nassert_file_has_content info.json '\"child-pid\": [0-9]'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 40,
                  "endLine": 99,
                  "endColumn": 46,
                  "snippet": {
                    "text": "ok \"all expected devices were created\"\n\n# Test --as-pid-1\n$RUN --unshare-pid --as-pid-1 --bind / / bash -c 'echo $$' > as_pid_1.txt\nassert_file_has_content as_pid_1.txt \"1\"\nok \"can run as pid 1\"\n\n",
                    "rendered": {
                      "text": "ok \"all expected devices were created\"\n\n# Test --as-pid-1\n$RUN --unshare-pid --as-pid-1 --bind / / bash -c 'echo $$' > as_pid_1.txt\nassert_file_has_content as_pid_1.txt \"1\"\nok \"can run as pid 1\"\n\n",
                      "markdown": "`ok \"all expected devices were created\"\n\n# Test --as-pid-1\n$RUN --unshare-pid --as-pid-1 --bind / / bash -c 'echo $$' > as_pid_1.txt\nassert_file_has_content as_pid_1.txt \"1\"\nok \"can run as pid 1\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 86,
                  "endLine": 66,
                  "endColumn": 91,
                  "snippet": {
                    "text": "    # Unreadable dir\n    if [ \"x$UNREADABLE\" != \"x\" ]; then\n        echo -n \"expect EPERM: \" >&2\n        if $RUN $ALT --unshare-net --proc /proc --dev /dev --bind $UNREADABLE /tmp/foo cat /tmp/foo; then\n            assert_not_reached Could read $UNREADABLE\n        fi\n        ok \"cannot read $UNREADABLE with $ALT\"\n",
                    "rendered": {
                      "text": "    # Unreadable dir\n    if [ \"x$UNREADABLE\" != \"x\" ]; then\n        echo -n \"expect EPERM: \" >&2\n        if $RUN $ALT --unshare-net --proc /proc --dev /dev --bind $UNREADABLE /tmp/foo cat /tmp/foo; then\n            assert_not_reached Could read $UNREADABLE\n        fi\n        ok \"cannot read $UNREADABLE with $ALT\"\n",
                      "markdown": "`    # Unreadable dir\n    if [ \"x$UNREADABLE\" != \"x\" ]; then\n        echo -n \"expect EPERM: \" >&2\n        if $RUN $ALT --unshare-net --proc /proc --dev /dev --bind $UNREADABLE /tmp/foo cat /tmp/foo; then\n            assert_not_reached Could read $UNREADABLE\n        fi\n        ok \"cannot read $UNREADABLE with $ALT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 77,
                  "endLine": 58,
                  "endColumn": 82,
                  "snippet": {
                    "text": "    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /etc/shadow; then\n        assert_not_reached Could read /etc/shadow\n    fi\n\n",
                    "rendered": {
                      "text": "    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /etc/shadow; then\n        assert_not_reached Could read /etc/shadow\n    fi\n\n",
                      "markdown": "`    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /etc/shadow; then\n        assert_not_reached Could read /etc/shadow\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 8,
                  "endLine": 57,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        assert_not_reached Could read /etc/shadow via /tmp/foo bind-mount\n    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /etc/shadow; then\n        assert_not_reached Could read /etc/shadow\n    fi\n",
                    "rendered": {
                      "text": "        assert_not_reached Could read /etc/shadow via /tmp/foo bind-mount\n    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /etc/shadow; then\n        assert_not_reached Could read /etc/shadow\n    fi\n",
                      "markdown": "`        assert_not_reached Could read /etc/shadow via /tmp/foo bind-mount\n    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /etc/shadow; then\n        assert_not_reached Could read /etc/shadow\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 77,
                  "endLine": 53,
                  "endColumn": 82,
                  "snippet": {
                    "text": "    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /tmp/foo; then\n        assert_not_reached Could read /etc/shadow via /tmp/foo bind-mount\n    fi\n\n",
                    "rendered": {
                      "text": "    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /tmp/foo; then\n        assert_not_reached Could read /etc/shadow via /tmp/foo bind-mount\n    fi\n\n",
                      "markdown": "`    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /tmp/foo; then\n        assert_not_reached Could read /etc/shadow via /tmp/foo bind-mount\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 8,
                  "endLine": 52,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        CAP=\"\"\n    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /tmp/foo; then\n        assert_not_reached Could read /etc/shadow via /tmp/foo bind-mount\n    fi\n",
                    "rendered": {
                      "text": "        CAP=\"\"\n    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /tmp/foo; then\n        assert_not_reached Could read /etc/shadow via /tmp/foo bind-mount\n    fi\n",
                      "markdown": "`        CAP=\"\"\n    fi\n\n    if ! cat /etc/shadow >/dev/null &&\n        $RUN $CAP $ALT --unshare-net --proc /proc --bind /etc/shadow /tmp/foo cat /tmp/foo; then\n        assert_not_reached Could read /etc/shadow via /tmp/foo bind-mount\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 11,
                  "endLine": 41,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    ok \"can mount /proc with $ALT\"\n    # No network\n    $RUN $ALT --unshare-net --proc /proc --dev /dev true\n    ok \"can unshare network, create new /dev with $ALT\"\n    # Unreadable file\n    echo -n \"expect EPERM: \" >&2\n\n",
                    "rendered": {
                      "text": "    ok \"can mount /proc with $ALT\"\n    # No network\n    $RUN $ALT --unshare-net --proc /proc --dev /dev true\n    ok \"can unshare network, create new /dev with $ALT\"\n    # Unreadable file\n    echo -n \"expect EPERM: \" >&2\n\n",
                      "markdown": "`    ok \"can mount /proc with $ALT\"\n    # No network\n    $RUN $ALT --unshare-net --proc /proc --dev /dev true\n    ok \"can unshare network, create new /dev with $ALT\"\n    # Unreadable file\n    echo -n \"expect EPERM: \" >&2\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11,
                  "endLine": 38,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    fi\n    # no --dev => no devpts => no map_root workaround\n    $RUN $ALT --proc /proc true\n    ok \"can mount /proc with $ALT\"\n    # No network\n    $RUN $ALT --unshare-net --proc /proc --dev /dev true\n    ok \"can unshare network, create new /dev with $ALT\"\n",
                    "rendered": {
                      "text": "    fi\n    # no --dev => no devpts => no map_root workaround\n    $RUN $ALT --proc /proc true\n    ok \"can mount /proc with $ALT\"\n    # No network\n    $RUN $ALT --unshare-net --proc /proc --dev /dev true\n    ok \"can unshare network, create new /dev with $ALT\"\n",
                      "markdown": "`    fi\n    # no --dev => no devpts => no map_root workaround\n    $RUN $ALT --proc /proc true\n    ok \"can mount /proc with $ALT\"\n    # No network\n    $RUN $ALT --unshare-net --proc /proc --dev /dev true\n    ok \"can unshare network, create new /dev with $ALT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/test-run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -xeuo pipefail\n\nsrcd=$(cd $(dirname \"$0\") && pwd)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest.sh"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 40,
                  "endLine": 110,
                  "endColumn": 44,
                  "snippet": {
                    "text": "RUN=\"${BWRAP} --bind / / --tmpfs /tmp\"\n\nif [ -z \"${BWRAP_MUST_WORK-}\" ] && ! $RUN true; then\n    skip Seems like bwrap is not working at all. Maybe setuid is not working\nfi\n\nextract_child_pid() {\n",
                    "rendered": {
                      "text": "RUN=\"${BWRAP} --bind / / --tmpfs /tmp\"\n\nif [ -z \"${BWRAP_MUST_WORK-}\" ] && ! $RUN true; then\n    skip Seems like bwrap is not working at all. Maybe setuid is not working\nfi\n\nextract_child_pid() {\n",
                      "markdown": "`RUN=\"${BWRAP} --bind / / --tmpfs /tmp\"\n\nif [ -z \"${BWRAP_MUST_WORK-}\" ] && ! $RUN true; then\n    skip Seems like bwrap is not working at all. Maybe setuid is not working\nfi\n\nextract_child_pid() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest.sh"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 25,
                  "endLine": 114,
                  "endColumn": 30,
                  "snippet": {
                    "text": "fi\n\nextract_child_pid() {\n    grep child-pid \"$1\" | sed \"s/^.*: \\([0-9]*\\).*/\\1/\"\n}\n",
                    "rendered": {
                      "text": "fi\n\nextract_child_pid() {\n    grep child-pid \"$1\" | sed \"s/^.*: \\([0-9]*\\).*/\\1/\"\n}\n",
                      "markdown": "`fi\n\nextract_child_pid() {\n    grep child-pid \"$1\" | sed \"s/^.*: \\([0-9]*\\).*/\\1/\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest.sh"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 3,
                  "endLine": 114,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\nextract_child_pid() {\n    grep child-pid \"$1\" | sed \"s/^.*: \\([0-9]*\\).*/\\1/\"\n}\n",
                    "rendered": {
                      "text": "fi\n\nextract_child_pid() {\n    grep child-pid \"$1\" | sed \"s/^.*: \\([0-9]*\\).*/\\1/\"\n}\n",
                      "markdown": "`fi\n\nextract_child_pid() {\n    grep child-pid \"$1\" | sed \"s/^.*: \\([0-9]*\\).*/\\1/\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest.sh"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 74,
                  "endLine": 61,
                  "endColumn": 79,
                  "snippet": {
                    "text": "fi\n\nFUSE_DIR=\nfor mp in $(grep \" fuse[. ]\" /proc/self/mounts | grep \"user_id=$(id -u)\" | awk '{print $2}'); do\n    if test -d \"$mp\"; then\n        echo \"# Using $mp as test fuse mount\"\n        FUSE_DIR=\"$mp\"\n",
                    "rendered": {
                      "text": "fi\n\nFUSE_DIR=\nfor mp in $(grep \" fuse[. ]\" /proc/self/mounts | grep \"user_id=$(id -u)\" | awk '{print $2}'); do\n    if test -d \"$mp\"; then\n        echo \"# Using $mp as test fuse mount\"\n        FUSE_DIR=\"$mp\"\n",
                      "markdown": "`fi\n\nFUSE_DIR=\nfor mp in $(grep \" fuse[. ]\" /proc/self/mounts | grep \"user_id=$(id -u)\" | awk '{print $2}'); do\n    if test -d \"$mp\"; then\n        echo \"# Using $mp as test fuse mount\"\n        FUSE_DIR=\"$mp\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest.sh"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 48,
                  "endLine": 61,
                  "endColumn": 54,
                  "snippet": {
                    "text": "fi\n\nFUSE_DIR=\nfor mp in $(grep \" fuse[. ]\" /proc/self/mounts | grep \"user_id=$(id -u)\" | awk '{print $2}'); do\n    if test -d \"$mp\"; then\n        echo \"# Using $mp as test fuse mount\"\n        FUSE_DIR=\"$mp\"\n",
                    "rendered": {
                      "text": "fi\n\nFUSE_DIR=\nfor mp in $(grep \" fuse[. ]\" /proc/self/mounts | grep \"user_id=$(id -u)\" | awk '{print $2}'); do\n    if test -d \"$mp\"; then\n        echo \"# Using $mp as test fuse mount\"\n        FUSE_DIR=\"$mp\"\n",
                      "markdown": "`fi\n\nFUSE_DIR=\nfor mp in $(grep \" fuse[. ]\" /proc/self/mounts | grep \"user_id=$(id -u)\" | awk '{print $2}'); do\n    if test -d \"$mp\"; then\n        echo \"# Using $mp as test fuse mount\"\n        FUSE_DIR=\"$mp\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/tests/libtest.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 26,
                  "endLine": 3,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# shellcheck shell=bash\n\n# Source library for shell script tests.\n# Add non-bubblewrap-specific code to libtest-core.sh instead.\n#\n# Copyright (C) 2017 Colin Walters <walters@verbum.org>\n",
                    "rendered": {
                      "text": "# shellcheck shell=bash\n\n# Source library for shell script tests.\n# Add non-bubblewrap-specific code to libtest-core.sh instead.\n#\n# Copyright (C) 2017 Colin Walters <walters@verbum.org>\n",
                      "markdown": "`# shellcheck shell=bash\n\n# Source library for shell script tests.\n# Add non-bubblewrap-specific code to libtest-core.sh instead.\n#\n# Copyright (C) 2017 Colin Walters <walters@verbum.org>\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.github/workflows/check.yml"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 37,
                  "endLine": 66,
                  "endColumn": 43,
                  "snippet": {
                    "text": "        ninja -C tests/use-as-subproject/_build -v\n        meson test -C tests/use-as-subproject/_build\n        DESTDIR=\"$(pwd)/DESTDIR-as-subproject\" meson install -C tests/use-as-subproject/_build\n        ( cd DESTDIR-as-subproject && find -ls )\n        test -x DESTDIR-as-subproject/usr/local/libexec/not-flatpak-bwrap\n        test ! -e DESTDIR-as-subproject/usr/local/bin/bwrap\n        test ! -e DESTDIR-as-subproject/usr/local/libexec/bwrap\n",
                    "rendered": {
                      "text": "        ninja -C tests/use-as-subproject/_build -v\n        meson test -C tests/use-as-subproject/_build\n        DESTDIR=\"$(pwd)/DESTDIR-as-subproject\" meson install -C tests/use-as-subproject/_build\n        ( cd DESTDIR-as-subproject && find -ls )\n        test -x DESTDIR-as-subproject/usr/local/libexec/not-flatpak-bwrap\n        test ! -e DESTDIR-as-subproject/usr/local/bin/bwrap\n        test ! -e DESTDIR-as-subproject/usr/local/libexec/bwrap\n",
                      "markdown": "`        ninja -C tests/use-as-subproject/_build -v\n        meson test -C tests/use-as-subproject/_build\n        DESTDIR=\"$(pwd)/DESTDIR-as-subproject\" meson install -C tests/use-as-subproject/_build\n        ( cd DESTDIR-as-subproject && find -ls )\n        test -x DESTDIR-as-subproject/usr/local/libexec/not-flatpak-bwrap\n        test ! -e DESTDIR-as-subproject/usr/local/bin/bwrap\n        test ! -e DESTDIR-as-subproject/usr/local/libexec/bwrap\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.github/workflows/check.yml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 7,
                  "endLine": 61,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      run: |\n        mkdir tests/use-as-subproject/subprojects\n        tar -C tests/use-as-subproject/subprojects -xf _build/meson-dist/bubblewrap-*.tar.xz\n        mv tests/use-as-subproject/subprojects/bubblewrap-* tests/use-as-subproject/subprojects/bubblewrap\n        ( cd tests/use-as-subproject && meson _build )\n        ninja -C tests/use-as-subproject/_build -v\n        meson test -C tests/use-as-subproject/_build\n",
                    "rendered": {
                      "text": "      run: |\n        mkdir tests/use-as-subproject/subprojects\n        tar -C tests/use-as-subproject/subprojects -xf _build/meson-dist/bubblewrap-*.tar.xz\n        mv tests/use-as-subproject/subprojects/bubblewrap-* tests/use-as-subproject/subprojects/bubblewrap\n        ( cd tests/use-as-subproject && meson _build )\n        ninja -C tests/use-as-subproject/_build -v\n        meson test -C tests/use-as-subproject/_build\n",
                      "markdown": "`      run: |\n        mkdir tests/use-as-subproject/subprojects\n        tar -C tests/use-as-subproject/subprojects -xf _build/meson-dist/bubblewrap-*.tar.xz\n        mv tests/use-as-subproject/subprojects/bubblewrap-* tests/use-as-subproject/subprojects/bubblewrap\n        ( cd tests/use-as-subproject && meson _build )\n        ninja -C tests/use-as-subproject/_build -v\n        meson test -C tests/use-as-subproject/_build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.github/workflows/check.yml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 7,
                  "endLine": 60,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    - name: use as subproject\n      run: |\n        mkdir tests/use-as-subproject/subprojects\n        tar -C tests/use-as-subproject/subprojects -xf _build/meson-dist/bubblewrap-*.tar.xz\n        mv tests/use-as-subproject/subprojects/bubblewrap-* tests/use-as-subproject/subprojects/bubblewrap\n        ( cd tests/use-as-subproject && meson _build )\n        ninja -C tests/use-as-subproject/_build -v\n",
                    "rendered": {
                      "text": "    - name: use as subproject\n      run: |\n        mkdir tests/use-as-subproject/subprojects\n        tar -C tests/use-as-subproject/subprojects -xf _build/meson-dist/bubblewrap-*.tar.xz\n        mv tests/use-as-subproject/subprojects/bubblewrap-* tests/use-as-subproject/subprojects/bubblewrap\n        ( cd tests/use-as-subproject && meson _build )\n        ninja -C tests/use-as-subproject/_build -v\n",
                      "markdown": "`    - name: use as subproject\n      run: |\n        mkdir tests/use-as-subproject/subprojects\n        tar -C tests/use-as-subproject/subprojects -xf _build/meson-dist/bubblewrap-*.tar.xz\n        mv tests/use-as-subproject/subprojects/bubblewrap-* tests/use-as-subproject/subprojects/bubblewrap\n        ( cd tests/use-as-subproject && meson _build )\n        ninja -C tests/use-as-subproject/_build -v\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.github/workflows/check.yml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 10,
                  "endLine": 56,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        BWRAP_MUST_WORK=1 meson dist -C _build\n    - name: Collect dist test logs on failure\n      if: failure()\n      run: mv _build/meson-private/dist-build/meson-logs/testlog.txt test-logs/disttestlog.txt || true\n    - name: use as subproject\n      run: |\n        mkdir tests/use-as-subproject/subprojects\n",
                    "rendered": {
                      "text": "        BWRAP_MUST_WORK=1 meson dist -C _build\n    - name: Collect dist test logs on failure\n      if: failure()\n      run: mv _build/meson-private/dist-build/meson-logs/testlog.txt test-logs/disttestlog.txt || true\n    - name: use as subproject\n      run: |\n        mkdir tests/use-as-subproject/subprojects\n",
                      "markdown": "`        BWRAP_MUST_WORK=1 meson dist -C _build\n    - name: Collect dist test logs on failure\n      if: failure()\n      run: mv _build/meson-private/dist-build/meson-logs/testlog.txt test-logs/disttestlog.txt || true\n    - name: use as subproject\n      run: |\n        mkdir tests/use-as-subproject/subprojects\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.github/workflows/check.yml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 23,
                  "endLine": 50,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    - name: install\n      run: |\n        DESTDIR=\"$(pwd)/DESTDIR\" meson install -C _build\n        ( cd DESTDIR && find -ls )\n    - name: dist\n      run: |\n        BWRAP_MUST_WORK=1 meson dist -C _build\n",
                    "rendered": {
                      "text": "    - name: install\n      run: |\n        DESTDIR=\"$(pwd)/DESTDIR\" meson install -C _build\n        ( cd DESTDIR && find -ls )\n    - name: dist\n      run: |\n        BWRAP_MUST_WORK=1 meson dist -C _build\n",
                      "markdown": "`    - name: install\n      run: |\n        DESTDIR=\"$(pwd)/DESTDIR\" meson install -C _build\n        ( cd DESTDIR && find -ls )\n    - name: dist\n      run: |\n        BWRAP_MUST_WORK=1 meson dist -C _build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/.github/workflows/check.yml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 10,
                  "endLine": 46,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        ASAN_OPTIONS: detect_leaks=0\n    - name: Collect overall test logs on failure\n      if: failure()\n      run: mv _build/meson-logs/testlog.txt test-logs/ || true\n    - name: install\n      run: |\n        DESTDIR=\"$(pwd)/DESTDIR\" meson install -C _build\n",
                    "rendered": {
                      "text": "        ASAN_OPTIONS: detect_leaks=0\n    - name: Collect overall test logs on failure\n      if: failure()\n      run: mv _build/meson-logs/testlog.txt test-logs/ || true\n    - name: install\n      run: |\n        DESTDIR=\"$(pwd)/DESTDIR\" meson install -C _build\n",
                      "markdown": "`        ASAN_OPTIONS: detect_leaks=0\n    - name: Collect overall test logs on failure\n      if: failure()\n      run: mv _build/meson-logs/testlog.txt test-logs/ || true\n    - name: install\n      run: |\n        DESTDIR=\"$(pwd)/DESTDIR\" meson install -C _build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/demos/bubblewrap-shell.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Use bubblewrap to run /bin/sh reusing the host OS binaries (/usr), but with\n# separate /tmp, /home, /var, /run, and /etc. For /etc we just inherit the\n# host's resolv.conf, and set up \"stub\" passwd/group files.  Not sharing\n# /home for example is intentional.  If you wanted to, you could design\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Use bubblewrap to run /bin/sh reusing the host OS binaries (/usr), but with\n# separate /tmp, /home, /var, /run, and /etc. For /etc we just inherit the\n# host's resolv.conf, and set up \"stub\" passwd/group files.  Not sharing\n# /home for example is intentional.  If you wanted to, you could design\n",
                      "markdown": "`#!/usr/bin/env bash\n# Use bubblewrap to run /bin/sh reusing the host OS binaries (/usr), but with\n# separate /tmp, /home, /var, /run, and /etc. For /etc we just inherit the\n# host's resolv.conf, and set up \"stub\" passwd/group files.  Not sharing\n# /home for example is intentional.  If you wanted to, you could design\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/demos/bubblewrap-shell.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Use bubblewrap to run /bin/sh reusing the host OS binaries (/usr), but with\n# separate /tmp, /home, /var, /run, and /etc. For /etc we just inherit the\n# host's resolv.conf, and set up \"stub\" passwd/group files.  Not sharing\n# /home for example is intentional.  If you wanted to, you could design\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Use bubblewrap to run /bin/sh reusing the host OS binaries (/usr), but with\n# separate /tmp, /home, /var, /run, and /etc. For /etc we just inherit the\n# host's resolv.conf, and set up \"stub\" passwd/group files.  Not sharing\n# /home for example is intentional.  If you wanted to, you could design\n",
                      "markdown": "`#!/usr/bin/env bash\n# Use bubblewrap to run /bin/sh reusing the host OS binaries (/usr), but with\n# separate /tmp, /home, /var, /run, and /etc. For /etc we just inherit the\n# host's resolv.conf, and set up \"stub\" passwd/group files.  Not sharing\n# /home for example is intentional.  If you wanted to, you could design\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 59,
                  "endLine": 449,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 30,
                  "endLine": 360,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 57,
                  "endLine": 286,
                  "snippet": {
                    "text": "    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                    "rendered": {
                      "text": "    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                      "markdown": "`    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 21,
                  "endLine": 190,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 58,
                  "endLine": 159,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                    "rendered": {
                      "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                      "markdown": "`    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 11,
                  "endLine": 146,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                    "rendered": {
                      "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                      "markdown": "`Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 52,
                  "endLine": 126,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                    "rendered": {
                      "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                      "markdown": "`  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 24,
                  "endLine": 60,
                  "endColumn": 28,
                  "snippet": {
                    "text": "software will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\n",
                    "rendered": {
                      "text": "software will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\n",
                      "markdown": "`software will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 12,
                  "endLine": 405,
                  "endColumn": 18,
                  "snippet": {
                    "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                    "rendered": {
                      "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                      "markdown": "`license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 51,
                  "endLine": 393,
                  "endColumn": 57,
                  "snippet": {
                    "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                      "markdown": "`written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 10,
                  "endLine": 345,
                  "endColumn": 16,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 12,
                  "endLine": 326,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                    "rendered": {
                      "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                      "markdown": "`\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 32,
                  "endLine": 211,
                  "endColumn": 38,
                  "snippet": {
                    "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                    "rendered": {
                      "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                      "markdown": "`that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 12,
                  "endLine": 56,
                  "endColumn": 18,
                  "snippet": {
                    "text": "the original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\n",
                    "rendered": {
                      "text": "the original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\n",
                      "markdown": "`the original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/COPYING"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/release-checklist.md"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 34,
                  "endLine": 8,
                  "endColumn": 42,
                  "snippet": {
                    "text": "* Update version number in `configure.ac` **and** `meson.build`\n* Commit the changes\n* `meson dist -C ${builddir}`\n* Do any final smoke-testing, e.g. update a package, install and test it\n* `git evtag sign v$VERSION`\n    * Include the release notes in the tag message\n* `git push --atomic origin main v$VERSION`\n",
                    "rendered": {
                      "text": "* Update version number in `configure.ac` **and** `meson.build`\n* Commit the changes\n* `meson dist -C ${builddir}`\n* Do any final smoke-testing, e.g. update a package, install and test it\n* `git evtag sign v$VERSION`\n    * Include the release notes in the tag message\n* `git push --atomic origin main v$VERSION`\n",
                      "markdown": "`* Update version number in `configure.ac` **and** `meson.build`\n* Commit the changes\n* `meson dist -C ${builddir}`\n* Do any final smoke-testing, e.g. update a package, install and test it\n* `git evtag sign v$VERSION`\n    * Include the release notes in the tag message\n* `git push --atomic origin main v$VERSION`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/release-checklist.md"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endLine": 5,
                  "endColumn": 9,
                  "snippet": {
                    "text": "============================\n\n* Collect release notes\n* Update version number in `configure.ac` **and** `meson.build`\n* Commit the changes\n* `meson dist -C ${builddir}`\n* Do any final smoke-testing, e.g. update a package, install and test it\n",
                    "rendered": {
                      "text": "============================\n\n* Collect release notes\n* Update version number in `configure.ac` **and** `meson.build`\n* Commit the changes\n* `meson dist -C ${builddir}`\n* Do any final smoke-testing, e.g. update a package, install and test it\n",
                      "markdown": "`============================\n\n* Collect release notes\n* Update version number in `configure.ac` **and** `meson.build`\n* Commit the changes\n* `meson dist -C ${builddir}`\n* Do any final smoke-testing, e.g. update a package, install and test it\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/uncrustify.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 75,
                  "endLine": 2,
                  "endColumn": 81,
                  "snippet": {
                    "text": "#!/bin/sh\nuncrustify -c uncrustify.cfg --no-backup `git ls-tree --name-only -r HEAD | grep \\\\\\.[ch]$`\n",
                    "rendered": {
                      "text": "#!/bin/sh\nuncrustify -c uncrustify.cfg --no-backup `git ls-tree --name-only -r HEAD | grep \\\\\\.[ch]$`\n",
                      "markdown": "`#!/bin/sh\nuncrustify -c uncrustify.cfg --no-backup `git ls-tree --name-only -r HEAD | grep \\\\\\.[ch]$`\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/uncrustify.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 68,
                  "endLine": 2,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#!/bin/sh\nuncrustify -c uncrustify.cfg --no-backup `git ls-tree --name-only -r HEAD | grep \\\\\\.[ch]$`\n",
                    "rendered": {
                      "text": "#!/bin/sh\nuncrustify -c uncrustify.cfg --no-backup `git ls-tree --name-only -r HEAD | grep \\\\\\.[ch]$`\n",
                      "markdown": "`#!/bin/sh\nuncrustify -c uncrustify.cfg --no-backup `git ls-tree --name-only -r HEAD | grep \\\\\\.[ch]$`\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 35,
                  "endLine": 212,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--hostname <arg choice=\"plain\">HOSTNAME</arg></option></term>\n      <listitem><para>Use a custom hostname in the sandbox (requires <option>--unshare-uts</option>)</para></listitem>\n    </varlistentry>\n  </variablelist>\n  <para>Options about environment setup:</para>\n",
                    "rendered": {
                      "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--hostname <arg choice=\"plain\">HOSTNAME</arg></option></term>\n      <listitem><para>Use a custom hostname in the sandbox (requires <option>--unshare-uts</option>)</para></listitem>\n    </varlistentry>\n  </variablelist>\n  <para>Options about environment setup:</para>\n",
                      "markdown": "`    </varlistentry>\n    <varlistentry>\n      <term><option>--hostname <arg choice=\"plain\">HOSTNAME</arg></option></term>\n      <listitem><para>Use a custom hostname in the sandbox (requires <option>--unshare-uts</option>)</para></listitem>\n    </varlistentry>\n  </variablelist>\n  <para>Options about environment setup:</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 22,
                  "endLine": 211,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      <listitem><para>Use a custom group id in the sandbox (requires <option>--unshare-user</option>)</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--hostname <arg choice=\"plain\">HOSTNAME</arg></option></term>\n      <listitem><para>Use a custom hostname in the sandbox (requires <option>--unshare-uts</option>)</para></listitem>\n    </varlistentry>\n  </variablelist>\n",
                    "rendered": {
                      "text": "      <listitem><para>Use a custom group id in the sandbox (requires <option>--unshare-user</option>)</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--hostname <arg choice=\"plain\">HOSTNAME</arg></option></term>\n      <listitem><para>Use a custom hostname in the sandbox (requires <option>--unshare-uts</option>)</para></listitem>\n    </varlistentry>\n  </variablelist>\n",
                      "markdown": "`      <listitem><para>Use a custom group id in the sandbox (requires <option>--unshare-user</option>)</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--hostname <arg choice=\"plain\">HOSTNAME</arg></option></term>\n      <listitem><para>Use a custom hostname in the sandbox (requires <option>--unshare-uts</option>)</para></listitem>\n    </varlistentry>\n  </variablelist>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 388,
                  "startColumn": 30,
                  "endLine": 388,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    <varlistentry>\n      <term><option>--symlink <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem>\n        <para>Create a symlink at <arg choice=\"plain\">DEST</arg> with target\n          <arg choice=\"plain\">SRC</arg>.</para>\n        <para>Since version 0.9.0, it is not considered to be an error if\n          <arg choice=\"plain\">DEST</arg> already exists as a symbolic link and its\n",
                    "rendered": {
                      "text": "    <varlistentry>\n      <term><option>--symlink <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem>\n        <para>Create a symlink at <arg choice=\"plain\">DEST</arg> with target\n          <arg choice=\"plain\">SRC</arg>.</para>\n        <para>Since version 0.9.0, it is not considered to be an error if\n          <arg choice=\"plain\">DEST</arg> already exists as a symbolic link and its\n",
                      "markdown": "`    <varlistentry>\n      <term><option>--symlink <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem>\n        <para>Create a symlink at <arg choice=\"plain\">DEST</arg> with target\n          <arg choice=\"plain\">SRC</arg>.</para>\n        <para>Since version 0.9.0, it is not considered to be an error if\n          <arg choice=\"plain\">DEST</arg> already exists as a symbolic link and its\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 32,
                  "endLine": 345,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    <varlistentry>\n      <term><option>--dir <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem>\n        <para>Create a directory at <arg choice=\"plain\">DEST</arg>.\n          If the directory already exists, its permissions are unmodified,\n          ignoring <option>--perms</option> (use <option>--chmod</option>\n          if the permissions of an existing directory need to be changed).\n",
                    "rendered": {
                      "text": "    <varlistentry>\n      <term><option>--dir <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem>\n        <para>Create a directory at <arg choice=\"plain\">DEST</arg>.\n          If the directory already exists, its permissions are unmodified,\n          ignoring <option>--perms</option> (use <option>--chmod</option>\n          if the permissions of an existing directory need to be changed).\n",
                      "markdown": "`    <varlistentry>\n      <term><option>--dir <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem>\n        <para>Create a directory at <arg choice=\"plain\">DEST</arg>.\n          If the directory already exists, its permissions are unmodified,\n          ignoring <option>--perms</option> (use <option>--chmod</option>\n          if the permissions of an existing directory need to be changed).\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 7,
                  "endLine": 283,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      <listitem><para>This option does nothing on its own, and must be followed\n        by <literal>--tmpfs</literal>. It sets the size in bytes for the next tmpfs.\n        For example, <literal>--size 10485760 --tmpfs /tmp</literal> will create a tmpfs\n        at <filename>/tmp</filename> of size 10MiB. Subsequent operations are not\n        affected: for example,\n        <literal>--size 10485760 --tmpfs /a --tmpfs /b</literal> will mount\n        <filename>/a</filename> with size 10MiB, then return to the default size for\n",
                    "rendered": {
                      "text": "      <listitem><para>This option does nothing on its own, and must be followed\n        by <literal>--tmpfs</literal>. It sets the size in bytes for the next tmpfs.\n        For example, <literal>--size 10485760 --tmpfs /tmp</literal> will create a tmpfs\n        at <filename>/tmp</filename> of size 10MiB. Subsequent operations are not\n        affected: for example,\n        <literal>--size 10485760 --tmpfs /a --tmpfs /b</literal> will mount\n        <filename>/a</filename> with size 10MiB, then return to the default size for\n",
                      "markdown": "`      <listitem><para>This option does nothing on its own, and must be followed\n        by <literal>--tmpfs</literal>. It sets the size in bytes for the next tmpfs.\n        For example, <literal>--size 10485760 --tmpfs /tmp</literal> will create a tmpfs\n        at <filename>/tmp</filename> of size 10MiB. Subsequent operations are not\n        affected: for example,\n        <literal>--size 10485760 --tmpfs /a --tmpfs /b</literal> will mount\n        <filename>/a</filename> with size 10MiB, then return to the default size for\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 154,
                  "endLine": 318,
                  "endColumn": 161,
                  "snippet": {
                    "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--remount-ro <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Remount the path <arg choice=\"plain\">DEST</arg> as readonly.  It works only on the specified mount point, without changing any other mount point under the specified path</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--proc <arg choice=\"plain\">DEST</arg></option></term>\n",
                    "rendered": {
                      "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--remount-ro <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Remount the path <arg choice=\"plain\">DEST</arg> as readonly.  It works only on the specified mount point, without changing any other mount point under the specified path</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--proc <arg choice=\"plain\">DEST</arg></option></term>\n",
                      "markdown": "`    </varlistentry>\n    <varlistentry>\n      <term><option>--remount-ro <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Remount the path <arg choice=\"plain\">DEST</arg> as readonly.  It works only on the specified mount point, without changing any other mount point under the specified path</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--proc <arg choice=\"plain\">DEST</arg></option></term>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 114,
                  "endLine": 318,
                  "endColumn": 121,
                  "snippet": {
                    "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--remount-ro <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Remount the path <arg choice=\"plain\">DEST</arg> as readonly.  It works only on the specified mount point, without changing any other mount point under the specified path</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--proc <arg choice=\"plain\">DEST</arg></option></term>\n",
                    "rendered": {
                      "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--remount-ro <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Remount the path <arg choice=\"plain\">DEST</arg> as readonly.  It works only on the specified mount point, without changing any other mount point under the specified path</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--proc <arg choice=\"plain\">DEST</arg></option></term>\n",
                      "markdown": "`    </varlistentry>\n    <varlistentry>\n      <term><option>--remount-ro <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Remount the path <arg choice=\"plain\">DEST</arg> as readonly.  It works only on the specified mount point, without changing any other mount point under the specified path</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--proc <arg choice=\"plain\">DEST</arg></option></term>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 26,
                  "endLine": 310,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--ro-bind <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Bind mount the host path <arg choice=\"plain\">SRC</arg> readonly on <arg choice=\"plain\">DEST</arg></para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--ro-bind-try <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n",
                    "rendered": {
                      "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--ro-bind <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Bind mount the host path <arg choice=\"plain\">SRC</arg> readonly on <arg choice=\"plain\">DEST</arg></para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--ro-bind-try <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n",
                      "markdown": "`    </varlistentry>\n    <varlistentry>\n      <term><option>--ro-bind <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Bind mount the host path <arg choice=\"plain\">SRC</arg> readonly on <arg choice=\"plain\">DEST</arg></para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--ro-bind-try <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 26,
                  "endLine": 302,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--dev-bind <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Bind mount the host path <arg choice=\"plain\">SRC</arg> on <arg choice=\"plain\">DEST</arg>, allowing device access</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--dev-bind-try <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n",
                    "rendered": {
                      "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--dev-bind <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Bind mount the host path <arg choice=\"plain\">SRC</arg> on <arg choice=\"plain\">DEST</arg>, allowing device access</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--dev-bind-try <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n",
                      "markdown": "`    </varlistentry>\n    <varlistentry>\n      <term><option>--dev-bind <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Bind mount the host path <arg choice=\"plain\">SRC</arg> on <arg choice=\"plain\">DEST</arg>, allowing device access</para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--dev-bind-try <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 26,
                  "endLine": 294,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--bind <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Bind mount the host path <arg choice=\"plain\">SRC</arg> on <arg choice=\"plain\">DEST</arg></para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--bind-try <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n",
                    "rendered": {
                      "text": "    </varlistentry>\n    <varlistentry>\n      <term><option>--bind <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Bind mount the host path <arg choice=\"plain\">SRC</arg> on <arg choice=\"plain\">DEST</arg></para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--bind-try <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n",
                      "markdown": "`    </varlistentry>\n    <varlistentry>\n      <term><option>--bind <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n      <listitem><para>Bind mount the host path <arg choice=\"plain\">SRC</arg> on <arg choice=\"plain\">DEST</arg></para></listitem>\n    </varlistentry>\n    <varlistentry>\n      <term><option>--bind-try <arg choice=\"plain\">SRC</arg> <arg choice=\"plain\">DEST</arg></option></term>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 69,
                  "endLine": 286,
                  "snippet": {
                    "text": "        For example, <literal>--size 10485760 --tmpfs /tmp</literal> will create a tmpfs\n        at <filename>/tmp</filename> of size 10MiB. Subsequent operations are not\n        affected: for example,\n        <literal>--size 10485760 --tmpfs /a --tmpfs /b</literal> will mount\n        <filename>/a</filename> with size 10MiB, then return to the default size for\n        <filename>/b</filename>.\n        Note that <option>--perms</option> and <option>--size</option> can be\n        combined: <literal>--size 10485760 --perms 0700 --tmpfs /s</literal> will apply\n",
                    "rendered": {
                      "text": "        For example, <literal>--size 10485760 --tmpfs /tmp</literal> will create a tmpfs\n        at <filename>/tmp</filename> of size 10MiB. Subsequent operations are not\n        affected: for example,\n        <literal>--size 10485760 --tmpfs /a --tmpfs /b</literal> will mount\n        <filename>/a</filename> with size 10MiB, then return to the default size for\n        <filename>/b</filename>.\n        Note that <option>--perms</option> and <option>--size</option> can be\n        combined: <literal>--size 10485760 --perms 0700 --tmpfs /s</literal> will apply\n",
                      "markdown": "`        For example, <literal>--size 10485760 --tmpfs /tmp</literal> will create a tmpfs\n        at <filename>/tmp</filename> of size 10MiB. Subsequent operations are not\n        affected: for example,\n        <literal>--size 10485760 --tmpfs /a --tmpfs /b</literal> will mount\n        <filename>/a</filename> with size 10MiB, then return to the default size for\n        <filename>/b</filename>.\n        Note that <option>--perms</option> and <option>--size</option> can be\n        combined: <literal>--size 10485760 --perms 0700 --tmpfs /s</literal> will apply\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 66,
                  "endLine": 272,
                  "snippet": {
                    "text": "        by one of the options that it affects. It sets the permissions\n        for the next operation to <arg choice=\"plain\">OCTAL</arg>.\n        Subsequent operations are not affected: for example,\n        <literal>--perms 0700 --tmpfs /a --tmpfs /b</literal> will mount\n        <filename>/a</filename> with permissions 0700, then return to\n        the default permissions for <filename>/b</filename>.\n        Note that <option>--perms</option> and <option>--size</option> can be\n        combined: <literal>--perms 0700 --size 10485760 --tmpfs /s</literal> will apply\n",
                    "rendered": {
                      "text": "        by one of the options that it affects. It sets the permissions\n        for the next operation to <arg choice=\"plain\">OCTAL</arg>.\n        Subsequent operations are not affected: for example,\n        <literal>--perms 0700 --tmpfs /a --tmpfs /b</literal> will mount\n        <filename>/a</filename> with permissions 0700, then return to\n        the default permissions for <filename>/b</filename>.\n        Note that <option>--perms</option> and <option>--size</option> can be\n        combined: <literal>--perms 0700 --size 10485760 --tmpfs /s</literal> will apply\n",
                      "markdown": "`        by one of the options that it affects. It sets the permissions\n        for the next operation to <arg choice=\"plain\">OCTAL</arg>.\n        Subsequent operations are not affected: for example,\n        <literal>--perms 0700 --tmpfs /a --tmpfs /b</literal> will mount\n        <filename>/a</filename> with permissions 0700, then return to\n        the default permissions for <filename>/b</filename>.\n        Note that <option>--perms</option> and <option>--size</option> can be\n        combined: <literal>--perms 0700 --size 10485760 --tmpfs /s</literal> will apply\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 60,
                  "endLine": 260,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    (rwxr-xr-x). However, if a <option>--perms</option> option is in effect, and\n    it sets the permissions for group or other to zero, then newly-created\n    parent directories will also have their corresponding permission set to zero.\n    <option>--size</option> modifies the size of the created mount when preceding a\n    <option>--tmpfs</option> action; <option>--perms</option> and <option>--size</option>\n    can be combined.\n  </para>\n",
                    "rendered": {
                      "text": "    (rwxr-xr-x). However, if a <option>--perms</option> option is in effect, and\n    it sets the permissions for group or other to zero, then newly-created\n    parent directories will also have their corresponding permission set to zero.\n    <option>--size</option> modifies the size of the created mount when preceding a\n    <option>--tmpfs</option> action; <option>--perms</option> and <option>--size</option>\n    can be combined.\n  </para>\n",
                      "markdown": "`    (rwxr-xr-x). However, if a <option>--perms</option> option is in effect, and\n    it sets the permissions for group or other to zero, then newly-created\n    parent directories will also have their corresponding permission set to zero.\n    <option>--size</option> modifies the size of the created mount when preceding a\n    <option>--tmpfs</option> action; <option>--perms</option> and <option>--size</option>\n    can be combined.\n  </para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/bwrap.xml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 52,
                  "endLine": 57,
                  "endColumn": 59,
                  "snippet": {
                    "text": "  the namespace.\n</para>\n<para>\n  By default, <command>bwrap</command> creates a new mount namespace for the sandbox.\n  Optionally it also sets up new user, ipc, pid, network and uts namespaces (but note the\n  user namespace is required if bwrap is not installed setuid root).\n  The application in the sandbox can be made to run with a different UID and GID.\n",
                    "rendered": {
                      "text": "  the namespace.\n</para>\n<para>\n  By default, <command>bwrap</command> creates a new mount namespace for the sandbox.\n  Optionally it also sets up new user, ipc, pid, network and uts namespaces (but note the\n  user namespace is required if bwrap is not installed setuid root).\n  The application in the sandbox can be made to run with a different UID and GID.\n",
                      "markdown": "`  the namespace.\n</para>\n<para>\n  By default, <command>bwrap</command> creates a new mount namespace for the sandbox.\n  Optionally it also sets up new user, ipc, pid, network and uts namespaces (but note the\n  user namespace is required if bwrap is not installed setuid root).\n  The application in the sandbox can be made to run with a different UID and GID.\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/meson.build"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 60,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    '-Werror=format-nonliteral',\n  ], language : 'c')\nendif\n\nbash = find_program('bash', required : false)\n\nif get_option('python') == ''\n  python = find_program('python3')\n",
                    "rendered": {
                      "text": "    '-Werror=format-nonliteral',\n  ], language : 'c')\nendif\n\nbash = find_program('bash', required : false)\n\nif get_option('python') == ''\n  python = find_program('python3')\n",
                      "markdown": "`    '-Werror=format-nonliteral',\n  ], language : 'c')\nendif\n\nbash = find_program('bash', required : false)\n\nif get_option('python') == ''\n  python = find_program('python3')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bubblewrap.zip/meson.build"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 60,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    '-Werror=format-nonliteral',\n  ], language : 'c')\nendif\n\nbash = find_program('bash', required : false)\n\nif get_option('python') == ''\n  python = find_program('python3')\n",
                    "rendered": {
                      "text": "    '-Werror=format-nonliteral',\n  ], language : 'c')\nendif\n\nbash = find_program('bash', required : false)\n\nif get_option('python') == ''\n  python = find_program('python3')\n",
                      "markdown": "`    '-Werror=format-nonliteral',\n  ], language : 'c')\nendif\n\nbash = find_program('bash', required : false)\n\nif get_option('python') == ''\n  python = find_program('python3')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}