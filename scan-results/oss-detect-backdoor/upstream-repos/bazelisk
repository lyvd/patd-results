{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/versions/versions.go"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n// Parse extracts and returns structured information about the given Bazel version label.\nfunc Parse(fork, version string) (*Info, error) {\n\tvi := &Info{Fork: fork, Value: version, IsFork: isFork(fork)}\n\n\tif m := releasePattern.FindStringSubmatch(version); m != nil {\n\t\tvi.IsRelease = true\n",
                    "rendered": {
                      "text": "\n// Parse extracts and returns structured information about the given Bazel version label.\nfunc Parse(fork, version string) (*Info, error) {\n\tvi := &Info{Fork: fork, Value: version, IsFork: isFork(fork)}\n\n\tif m := releasePattern.FindStringSubmatch(version); m != nil {\n\t\tvi.IsRelease = true\n",
                      "markdown": "`\n// Parse extracts and returns structured information about the given Bazel version label.\nfunc Parse(fork, version string) (*Info, error) {\n\tvi := &Info{Fork: fork, Value: version, IsFork: isFork(fork)}\n\n\tif m := releasePattern.FindStringSubmatch(version); m != nil {\n\t\tvi.IsRelease = true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.github/dependabot.yml"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 23,
                  "endLine": 2,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# To get started with Dependabot version updates, you'll need to specify which\n# package ecosystems to update and where the package manifests are located.\n# Please see the documentation for all configuration options:\n# https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates\n\n",
                    "rendered": {
                      "text": "# To get started with Dependabot version updates, you'll need to specify which\n# package ecosystems to update and where the package manifests are located.\n# Please see the documentation for all configuration options:\n# https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates\n\n",
                      "markdown": "`# To get started with Dependabot version updates, you'll need to specify which\n# package ecosystems to update and where the package manifests are located.\n# Please see the documentation for all configuration options:\n# https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/progress/progress.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 23,
                  "endLine": 30,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t}\n\n\t// Check the config variable.\n\tshowProgress := config.Get(\"BAZELISK_SHOW_PROGRESS\")\n\tif len(showProgress) == 0 {\n\t\t// Default to showing progress\n\t\treturn true\n",
                    "rendered": {
                      "text": "\t}\n\n\t// Check the config variable.\n\tshowProgress := config.Get(\"BAZELISK_SHOW_PROGRESS\")\n\tif len(showProgress) == 0 {\n\t\t// Default to showing progress\n\t\treturn true\n",
                      "markdown": "`\t}\n\n\t// Check the config variable.\n\tshowProgress := config.Get(\"BAZELISK_SHOW_PROGRESS\")\n\tif len(showProgress) == 0 {\n\t\t// Default to showing progress\n\t\treturn true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/platforms/platforms.go"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 24,
                  "endLine": 91,
                  "endColumn": 29,
                  "snippet": {
                    "text": "func DetermineBazelFilename(version string, includeSuffix bool, config config.Config) (string, error) {\n\tflavor := \"bazel\"\n\n\tbazeliskNojdk := config.Get(\"BAZELISK_NOJDK\")\n\n\tif len(bazeliskNojdk) != 0 && bazeliskNojdk != \"0\" {\n\t\tflavor = \"bazel_nojdk\"\n",
                    "rendered": {
                      "text": "func DetermineBazelFilename(version string, includeSuffix bool, config config.Config) (string, error) {\n\tflavor := \"bazel\"\n\n\tbazeliskNojdk := config.Get(\"BAZELISK_NOJDK\")\n\n\tif len(bazeliskNojdk) != 0 && bazeliskNojdk != \"0\" {\n\t\tflavor = \"bazel_nojdk\"\n",
                      "markdown": "`func DetermineBazelFilename(version string, includeSuffix bool, config config.Config) (string, error) {\n\tflavor := \"bazel\"\n\n\tbazeliskNojdk := config.Get(\"BAZELISK_NOJDK\")\n\n\tif len(bazeliskNojdk) != 0 && bazeliskNojdk != \"0\" {\n\t\tflavor = \"bazel_nojdk\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/BUILD"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 3,
                  "endLine": 121,
                  "endColumn": 8,
                  "snippet": {
                    "text": "        \":bazelisk-darwin-arm64\",\n    ],\n    outs = [\"bazelisk-darwin_universal\"],\n    cmd = \"lipo -create -output \\\"$@\\\" $(SRCS)\",\n    output_to_bindir = 1,\n    target_compatible_with = [\n        \"@platforms//os:macos\",\n",
                    "rendered": {
                      "text": "        \":bazelisk-darwin-arm64\",\n    ],\n    outs = [\"bazelisk-darwin_universal\"],\n    cmd = \"lipo -create -output \\\"$@\\\" $(SRCS)\",\n    output_to_bindir = 1,\n    target_compatible_with = [\n        \"@platforms//os:macos\",\n",
                      "markdown": "`        \":bazelisk-darwin-arm64\",\n    ],\n    outs = [\"bazelisk-darwin_universal\"],\n    cmd = \"lipo -create -output \\\"$@\\\" $(SRCS)\",\n    output_to_bindir = 1,\n    target_compatible_with = [\n        \"@platforms//os:macos\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 24,
                  "endLine": 264,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tcase 'e':\n\t\t\t\tb.WriteString(platforms.DetermineExecutableFilenameSuffix())\n\t\t\tcase 'h':\n\t\t\t\tb.WriteString(config.Get(\"BAZELISK_VERIFY_SHA256\"))\n\t\t\tcase 'm':\n\t\t\t\tb.WriteString(machineName)\n\t\t\tcase 'o':\n",
                    "rendered": {
                      "text": "\t\t\tcase 'e':\n\t\t\t\tb.WriteString(platforms.DetermineExecutableFilenameSuffix())\n\t\t\tcase 'h':\n\t\t\t\tb.WriteString(config.Get(\"BAZELISK_VERIFY_SHA256\"))\n\t\t\tcase 'm':\n\t\t\t\tb.WriteString(machineName)\n\t\t\tcase 'o':\n",
                      "markdown": "`\t\t\tcase 'e':\n\t\t\t\tb.WriteString(platforms.DetermineExecutableFilenameSuffix())\n\t\t\tcase 'h':\n\t\t\t\tb.WriteString(config.Get(\"BAZELISK_VERIFY_SHA256\"))\n\t\t\tcase 'm':\n\t\t\t\tb.WriteString(machineName)\n\t\t\tcase 'o':\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 69,
                  "endLine": 320,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\t}\n\n\tif commits == nil {\n\t\trepos.Commits = &noCommitRepo{err: errors.New(\"Bazel versions built at commits are not supported\")}\n\t} else {\n\t\trepos.Commits = commits\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif commits == nil {\n\t\trepos.Commits = &noCommitRepo{err: errors.New(\"Bazel versions built at commits are not supported\")}\n\t} else {\n\t\trepos.Commits = commits\n\t}\n",
                      "markdown": "`\t}\n\n\tif commits == nil {\n\t\trepos.Commits = &noCommitRepo{err: errors.New(\"Bazel versions built at commits are not supported\")}\n\t} else {\n\t\trepos.Commits = commits\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 51,
                  "endLine": 76,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t// GetLastGreenCommit returns the most recent commit at which a Bazel binary is successfully built.\n\tGetLastGreenCommit(bazeliskHome string) (string, error)\n\n\t// DownloadAtCommit downloads a Bazel binary built at the given commit into the specified location and returns the absolute path.\n\tDownloadAtCommit(commit, destDir, destFile string, config config.Config) (string, error)\n}\n\n",
                    "rendered": {
                      "text": "\t// GetLastGreenCommit returns the most recent commit at which a Bazel binary is successfully built.\n\tGetLastGreenCommit(bazeliskHome string) (string, error)\n\n\t// DownloadAtCommit downloads a Bazel binary built at the given commit into the specified location and returns the absolute path.\n\tDownloadAtCommit(commit, destDir, destFile string, config config.Config) (string, error)\n}\n\n",
                      "markdown": "`\t// GetLastGreenCommit returns the most recent commit at which a Bazel binary is successfully built.\n\tGetLastGreenCommit(bazeliskHome string) (string, error)\n\n\t// DownloadAtCommit downloads a Bazel binary built at the given commit into the specified location and returns the absolute path.\n\tDownloadAtCommit(commit, destDir, destFile string, config config.Config) (string, error)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 53,
                  "endLine": 73,
                  "endColumn": 57,
                  "snippet": {
                    "text": "// CommitRepo represents a repository that stores Bazel binaries built at specific commits.\n// It can also return the hashes of the most recent commits that passed Bazel CI pipelines successfully.\ntype CommitRepo interface {\n\t// GetLastGreenCommit returns the most recent commit at which a Bazel binary is successfully built.\n\tGetLastGreenCommit(bazeliskHome string) (string, error)\n\n\t// DownloadAtCommit downloads a Bazel binary built at the given commit into the specified location and returns the absolute path.\n",
                    "rendered": {
                      "text": "// CommitRepo represents a repository that stores Bazel binaries built at specific commits.\n// It can also return the hashes of the most recent commits that passed Bazel CI pipelines successfully.\ntype CommitRepo interface {\n\t// GetLastGreenCommit returns the most recent commit at which a Bazel binary is successfully built.\n\tGetLastGreenCommit(bazeliskHome string) (string, error)\n\n\t// DownloadAtCommit downloads a Bazel binary built at the given commit into the specified location and returns the absolute path.\n",
                      "markdown": "`// CommitRepo represents a repository that stores Bazel binaries built at specific commits.\n// It can also return the hashes of the most recent commits that passed Bazel CI pipelines successfully.\ntype CommitRepo interface {\n\t// GetLastGreenCommit returns the most recent commit at which a Bazel binary is successfully built.\n\tGetLastGreenCommit(bazeliskHome string) (string, error)\n\n\t// DownloadAtCommit downloads a Bazel binary built at the given commit into the specified location and returns the absolute path.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 70,
                  "endLine": 70,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\tDownloadVersion(fork, version, destDir, destFile string, config config.Config) (string, error)\n}\n\n// CommitRepo represents a repository that stores Bazel binaries built at specific commits.\n// It can also return the hashes of the most recent commits that passed Bazel CI pipelines successfully.\ntype CommitRepo interface {\n\t// GetLastGreenCommit returns the most recent commit at which a Bazel binary is successfully built.\n",
                    "rendered": {
                      "text": "\tDownloadVersion(fork, version, destDir, destFile string, config config.Config) (string, error)\n}\n\n// CommitRepo represents a repository that stores Bazel binaries built at specific commits.\n// It can also return the hashes of the most recent commits that passed Bazel CI pipelines successfully.\ntype CommitRepo interface {\n\t// GetLastGreenCommit returns the most recent commit at which a Bazel binary is successfully built.\n",
                      "markdown": "`\tDownloadVersion(fork, version, destDir, destFile string, config config.Config) (string, error)\n}\n\n// CommitRepo represents a repository that stores Bazel binaries built at specific commits.\n// It can also return the hashes of the most recent commits that passed Bazel CI pipelines successfully.\ntype CommitRepo interface {\n\t// GetLastGreenCommit returns the most recent commit at which a Bazel binary is successfully built.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 84,
                  "endLine": 202,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\ntype listVersionsFunc func(bazeliskHome string) ([]string, error)\n\nfunc resolvePotentiallyRelativeVersion(bazeliskHome string, lister listVersionsFunc, vi *versions.Info) (string, error) {\n\tif !vi.IsRelative {\n\t\treturn vi.Value, nil\n\t}\n",
                    "rendered": {
                      "text": "\ntype listVersionsFunc func(bazeliskHome string) ([]string, error)\n\nfunc resolvePotentiallyRelativeVersion(bazeliskHome string, lister listVersionsFunc, vi *versions.Info) (string, error) {\n\tif !vi.IsRelative {\n\t\treturn vi.Value, nil\n\t}\n",
                      "markdown": "`\ntype listVersionsFunc func(bazeliskHome string) ([]string, error)\n\nfunc resolvePotentiallyRelativeVersion(bazeliskHome string, lister listVersionsFunc, vi *versions.Info) (string, error) {\n\tif !vi.IsRelative {\n\t\treturn vi.Value, nil\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 58,
                  "endLine": 186,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveRolling(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tlister := func(bazeliskHome string) ([]string, error) {\n\t\treturn r.Rolling.GetRollingVersions(bazeliskHome)\n\t}\n",
                    "rendered": {
                      "text": "\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveRolling(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tlister := func(bazeliskHome string) ([]string, error) {\n\t\treturn r.Rolling.GetRollingVersions(bazeliskHome)\n\t}\n",
                      "markdown": "`\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveRolling(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tlister := func(bazeliskHome string) ([]string, error) {\n\t\treturn r.Rolling.GetRollingVersions(bazeliskHome)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 57,
                  "endLine": 171,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveCommit(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tversion := vi.Value\n\tif vi.IsRelative {\n\t\tvar err error\n",
                    "rendered": {
                      "text": "\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveCommit(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tversion := vi.Value\n\tif vi.IsRelative {\n\t\tvar err error\n",
                      "markdown": "`\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveCommit(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tversion := vi.Value\n\tif vi.IsRelative {\n\t\tvar err error\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 60,
                  "endLine": 160,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveCandidate(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tversion, err := resolvePotentiallyRelativeVersion(bazeliskHome, r.Candidates.GetCandidateVersions, vi)\n\tif err != nil {\n\t\treturn \"\", nil, err\n",
                    "rendered": {
                      "text": "\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveCandidate(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tversion, err := resolvePotentiallyRelativeVersion(bazeliskHome, r.Candidates.GetCandidateVersions, vi)\n\tif err != nil {\n\t\treturn \"\", nil, err\n",
                      "markdown": "`\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveCandidate(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tversion, err := resolvePotentiallyRelativeVersion(bazeliskHome, r.Candidates.GetCandidateVersions, vi)\n\tif err != nil {\n\t\treturn \"\", nil, err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 58,
                  "endLine": 138,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveRelease(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tlister := func(bazeliskHome string) ([]string, error) {\n\t\tvar filter ReleaseFilter\n\t\tif vi.TrackRestriction > 0 {\n",
                    "rendered": {
                      "text": "\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveRelease(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tlister := func(bazeliskHome string) ([]string, error) {\n\t\tvar filter ReleaseFilter\n\t\tif vi.TrackRestriction > 0 {\n",
                      "markdown": "`\treturn version, downloader, nil\n}\n\nfunc (r *Repositories) resolveRelease(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tlister := func(bazeliskHome string) ([]string, error) {\n\t\tvar filter ReleaseFilter\n\t\tif vi.TrackRestriction > 0 {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/repositories.go"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 55,
                  "endLine": 121,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\treturn \"\", nil, fmt.Errorf(\"Unsupported version identifier '%s'\", version)\n}\n\nfunc (r *Repositories) resolveFork(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tif vi.IsRelative && (vi.IsCandidate || vi.IsCommit) {\n\t\treturn \"\", nil, errors.New(\"forks do not support last_rc and last_green\")\n\t}\n",
                    "rendered": {
                      "text": "\treturn \"\", nil, fmt.Errorf(\"Unsupported version identifier '%s'\", version)\n}\n\nfunc (r *Repositories) resolveFork(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tif vi.IsRelative && (vi.IsCandidate || vi.IsCommit) {\n\t\treturn \"\", nil, errors.New(\"forks do not support last_rc and last_green\")\n\t}\n",
                      "markdown": "`\treturn \"\", nil, fmt.Errorf(\"Unsupported version identifier '%s'\", version)\n}\n\nfunc (r *Repositories) resolveFork(bazeliskHome string, vi *versions.Info, config config.Config) (string, DownloadFunc, error) {\n\tif vi.IsRelative && (vi.IsCandidate || vi.IsCommit) {\n\t\treturn \"\", nil, errors.New(\"forks do not support last_rc and last_green\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 781,
                  "startColumn": 22,
                  "endLine": 781,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\treturn nil, err\n\t}\n\n\tgithubToken := config.Get(\"BAZELISK_GITHUB_TOKEN\")\n\tif len(githubToken) != 0 {\n\t\treq.Header.Set(\"Authorization\", fmt.Sprintf(\"token %s\", githubToken))\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn nil, err\n\t}\n\n\tgithubToken := config.Get(\"BAZELISK_GITHUB_TOKEN\")\n\tif len(githubToken) != 0 {\n\t\treq.Header.Set(\"Authorization\", fmt.Sprintf(\"token %s\", githubToken))\n\t}\n",
                      "markdown": "`\t\treturn nil, err\n\t}\n\n\tgithubToken := config.Get(\"BAZELISK_GITHUB_TOKEN\")\n\tif len(githubToken) != 0 {\n\t\treq.Header.Set(\"Authorization\", fmt.Sprintf(\"token %s\", githubToken))\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 24,
                  "endLine": 740,
                  "endColumn": 29,
                  "snippet": {
                    "text": "}\n\nfunc cleanIfNeeded(bazelPath string, startupOptions []string, config config.Config) {\n\tbazeliskClean := config.Get(\"BAZELISK_CLEAN\")\n\tif len(bazeliskClean) == 0 {\n\t\treturn\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc cleanIfNeeded(bazelPath string, startupOptions []string, config config.Config) {\n\tbazeliskClean := config.Get(\"BAZELISK_CLEAN\")\n\tif len(bazeliskClean) == 0 {\n\t\treturn\n\t}\n",
                      "markdown": "`}\n\nfunc cleanIfNeeded(bazelPath string, startupOptions []string, config config.Config) {\n\tbazeliskClean := config.Get(\"BAZELISK_CLEAN\")\n\tif len(bazeliskClean) == 0 {\n\t\treturn\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 24,
                  "endLine": 721,
                  "endColumn": 29,
                  "snippet": {
                    "text": "}\n\nfunc shutdownIfNeeded(bazelPath string, startupOptions []string, config config.Config) {\n\tbazeliskClean := config.Get(\"BAZELISK_SHUTDOWN\")\n\tif len(bazeliskClean) == 0 {\n\t\treturn\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc shutdownIfNeeded(bazelPath string, startupOptions []string, config config.Config) {\n\tbazeliskClean := config.Get(\"BAZELISK_SHUTDOWN\")\n\tif len(bazeliskClean) == 0 {\n\t\treturn\n\t}\n",
                      "markdown": "`}\n\nfunc shutdownIfNeeded(bazelPath string, startupOptions []string, config config.Config) {\n\tbazeliskClean := config.Get(\"BAZELISK_SHUTDOWN\")\n\tif len(bazeliskClean) == 0 {\n\t\treturn\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 646,
                  "startColumn": 34,
                  "endLine": 646,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n// getIncompatibleFlags returns all incompatible flags for the current Bazel command in alphabetical order.\nfunc getIncompatibleFlags(bazelPath, cmd string, config config.Config) ([]string, error) {\n\tvar incompatibleFlagsStr = config.Get(\"BAZELISK_INCOMPATIBLE_FLAGS\")\n\tif len(incompatibleFlagsStr) > 0 {\n\t\treturn strings.Split(incompatibleFlagsStr, \",\"), nil\n\t}\n",
                    "rendered": {
                      "text": "\n// getIncompatibleFlags returns all incompatible flags for the current Bazel command in alphabetical order.\nfunc getIncompatibleFlags(bazelPath, cmd string, config config.Config) ([]string, error) {\n\tvar incompatibleFlagsStr = config.Get(\"BAZELISK_INCOMPATIBLE_FLAGS\")\n\tif len(incompatibleFlagsStr) > 0 {\n\t\treturn strings.Split(incompatibleFlagsStr, \",\"), nil\n\t}\n",
                      "markdown": "`\n// getIncompatibleFlags returns all incompatible flags for the current Bazel command in alphabetical order.\nfunc getIncompatibleFlags(bazelPath, cmd string, config config.Config) ([]string, error) {\n\tvar incompatibleFlagsStr = config.Get(\"BAZELISK_INCOMPATIBLE_FLAGS\")\n\tif len(incompatibleFlagsStr) > 0 {\n\t\treturn strings.Split(incompatibleFlagsStr, \",\"), nil\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 22,
                  "endLine": 536,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\treturn bazel\n\t}\n\n\twrapperPath := config.Get(\"BAZELISK_WRAPPER_DIRECTORY\")\n\tif wrapperPath == \"\" {\n\t\twrapperPath = filepath.Join(defaultWrapperDirectory, defaultWrapperName)\n\t} else {\n",
                    "rendered": {
                      "text": "\t\treturn bazel\n\t}\n\n\twrapperPath := config.Get(\"BAZELISK_WRAPPER_DIRECTORY\")\n\tif wrapperPath == \"\" {\n\t\twrapperPath = filepath.Join(defaultWrapperDirectory, defaultWrapperName)\n\t} else {\n",
                      "markdown": "`\t\treturn bazel\n\t}\n\n\twrapperPath := config.Get(\"BAZELISK_WRAPPER_DIRECTORY\")\n\tif wrapperPath == \"\" {\n\t\twrapperPath = filepath.Join(defaultWrapperDirectory, defaultWrapperName)\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 10,
                  "endLine": 532,
                  "endColumn": 15,
                  "snippet": {
                    "text": "}\n\nfunc maybeDelegateToWrapperFromDir(bazel string, wd string, config config.Config) string {\n\tif config.Get(skipWrapperEnv) != \"\" {\n\t\treturn bazel\n\t}\n\n",
                    "rendered": {
                      "text": "}\n\nfunc maybeDelegateToWrapperFromDir(bazel string, wd string, config config.Config) string {\n\tif config.Get(skipWrapperEnv) != \"\" {\n\t\treturn bazel\n\t}\n\n",
                      "markdown": "`}\n\nfunc maybeDelegateToWrapperFromDir(bazel string, wd string, config config.Config) string {\n\tif config.Get(skipWrapperEnv) != \"\" {\n\t\treturn bazel\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 441,
                  "startColumn": 20,
                  "endLine": 441,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tvar tmpDestPath string\n\tvar err error\n\tbaseURL := config.Get(BaseURLEnv)\n\tformatURL := config.Get(FormatURLEnv)\n\tif baseURL != \"\" && formatURL != \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot set %s and %s at once\", BaseURLEnv, FormatURLEnv)\n\t} else if formatURL != \"\" {\n",
                    "rendered": {
                      "text": "\tvar tmpDestPath string\n\tvar err error\n\tbaseURL := config.Get(BaseURLEnv)\n\tformatURL := config.Get(FormatURLEnv)\n\tif baseURL != \"\" && formatURL != \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot set %s and %s at once\", BaseURLEnv, FormatURLEnv)\n\t} else if formatURL != \"\" {\n",
                      "markdown": "`\tvar tmpDestPath string\n\tvar err error\n\tbaseURL := config.Get(BaseURLEnv)\n\tformatURL := config.Get(FormatURLEnv)\n\tif baseURL != \"\" && formatURL != \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot set %s and %s at once\", BaseURLEnv, FormatURLEnv)\n\t} else if formatURL != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 18,
                  "endLine": 440,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n\tvar tmpDestPath string\n\tvar err error\n\tbaseURL := config.Get(BaseURLEnv)\n\tformatURL := config.Get(FormatURLEnv)\n\tif baseURL != \"\" && formatURL != \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot set %s and %s at once\", BaseURLEnv, FormatURLEnv)\n",
                    "rendered": {
                      "text": "\n\tvar tmpDestPath string\n\tvar err error\n\tbaseURL := config.Get(BaseURLEnv)\n\tformatURL := config.Get(FormatURLEnv)\n\tif baseURL != \"\" && formatURL != \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot set %s and %s at once\", BaseURLEnv, FormatURLEnv)\n",
                      "markdown": "`\n\tvar tmpDestPath string\n\tvar err error\n\tbaseURL := config.Get(BaseURLEnv)\n\tformatURL := config.Get(FormatURLEnv)\n\tif baseURL != \"\" && formatURL != \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot set %s and %s at once\", BaseURLEnv, FormatURLEnv)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 41,
                  "endLine": 392,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\treturn \"\", fmt.Errorf(\"failed to download bazel: %w\", err)\n\t}\n\n\texpectedSha256 := strings.ToLower(config.Get(\"BAZELISK_VERIFY_SHA256\"))\n\tif len(expectedSha256) > 0 {\n\t\tif expectedSha256 != downloadedDigest {\n\t\t\treturn \"\", fmt.Errorf(\"%s has sha256=%s but need sha256=%s\", pathToBazelInCAS, downloadedDigest, expectedSha256)\n",
                    "rendered": {
                      "text": "\t\treturn \"\", fmt.Errorf(\"failed to download bazel: %w\", err)\n\t}\n\n\texpectedSha256 := strings.ToLower(config.Get(\"BAZELISK_VERIFY_SHA256\"))\n\tif len(expectedSha256) > 0 {\n\t\tif expectedSha256 != downloadedDigest {\n\t\t\treturn \"\", fmt.Errorf(\"%s has sha256=%s but need sha256=%s\", pathToBazelInCAS, downloadedDigest, expectedSha256)\n",
                      "markdown": "`\t\treturn \"\", fmt.Errorf(\"failed to download bazel: %w\", err)\n\t}\n\n\texpectedSha256 := strings.ToLower(config.Get(\"BAZELISK_VERIFY_SHA256\"))\n\tif len(expectedSha256) > 0 {\n\t\tif expectedSha256 != downloadedDigest {\n\t\t\treturn \"\", fmt.Errorf(\"%s has sha256=%s but need sha256=%s\", pathToBazelInCAS, downloadedDigest, expectedSha256)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 35,
                  "endLine": 352,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\treturn \"\", fmt.Errorf(\"could not resolve the version '%s' to an actual version number: %v\", bazelVersion, err)\n\t}\n\n\tbazelForkOrURL := dirForURL(config.Get(BaseURLEnv))\n\tif len(bazelForkOrURL) == 0 {\n\t\tbazelForkOrURL = bazelFork\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn \"\", fmt.Errorf(\"could not resolve the version '%s' to an actual version number: %v\", bazelVersion, err)\n\t}\n\n\tbazelForkOrURL := dirForURL(config.Get(BaseURLEnv))\n\tif len(bazelForkOrURL) == 0 {\n\t\tbazelForkOrURL = bazelFork\n\t}\n",
                      "markdown": "`\t\treturn \"\", fmt.Errorf(\"could not resolve the version '%s' to an actual version number: %v\", bazelVersion, err)\n\t}\n\n\tbazelForkOrURL := dirForURL(config.Get(BaseURLEnv))\n\tif len(bazelForkOrURL) == 0 {\n\t\tbazelForkOrURL = bazelFork\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 32,
                  "endLine": 304,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\tfallbackVersionFormat := config.Get(\"USE_BAZEL_FALLBACK_VERSION\")\n\tfallbackVersionMode, fallbackVersion, hasFallbackVersionMode := strings.Cut(fallbackVersionFormat, \":\")\n\tif !hasFallbackVersionMode {\n\t\tfallbackVersionMode, fallbackVersion, hasFallbackVersionMode = \"silent\", fallbackVersionMode, true\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\tfallbackVersionFormat := config.Get(\"USE_BAZEL_FALLBACK_VERSION\")\n\tfallbackVersionMode, fallbackVersion, hasFallbackVersionMode := strings.Cut(fallbackVersionFormat, \":\")\n\tif !hasFallbackVersionMode {\n\t\tfallbackVersionMode, fallbackVersion, hasFallbackVersionMode = \"silent\", fallbackVersionMode, true\n",
                      "markdown": "`\t\t}\n\t}\n\n\tfallbackVersionFormat := config.Get(\"USE_BAZEL_FALLBACK_VERSION\")\n\tfallbackVersionMode, fallbackVersion, hasFallbackVersionMode := strings.Cut(fallbackVersionFormat, \":\")\n\tif !hasFallbackVersionMode {\n\t\tfallbackVersionMode, fallbackVersion, hasFallbackVersionMode = \"silent\", fallbackVersionMode, true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 23,
                  "endLine": 271,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_FALLBACK_VERSION\" is set to a fallback version format.\n\t// - fallback version format \"silent:latest\"\n\tbazelVersion := config.Get(\"USE_BAZEL_VERSION\")\n\tif len(bazelVersion) != 0 {\n\t\treturn bazelVersion, nil\n\t}\n",
                    "rendered": {
                      "text": "\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_FALLBACK_VERSION\" is set to a fallback version format.\n\t// - fallback version format \"silent:latest\"\n\tbazelVersion := config.Get(\"USE_BAZEL_VERSION\")\n\tif len(bazelVersion) != 0 {\n\t\treturn bazelVersion, nil\n\t}\n",
                      "markdown": "`\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_FALLBACK_VERSION\" is set to a fallback version format.\n\t// - fallback version format \"silent:latest\"\n\tbazelVersion := config.Get(\"USE_BAZEL_VERSION\")\n\tif len(bazelVersion) != 0 {\n\t\treturn bazelVersion, nil\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 16,
                  "endLine": 247,
                  "endColumn": 21,
                  "snippet": {
                    "text": "}\n\nfunc getUserAgent(config config.Config) string {\n\tagent := config.Get(\"BAZELISK_USER_AGENT\")\n\tif len(agent) > 0 {\n\t\treturn agent\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc getUserAgent(config config.Config) string {\n\tagent := config.Get(\"BAZELISK_USER_AGENT\")\n\tif len(agent) > 0 {\n\t\treturn agent\n\t}\n",
                      "markdown": "`}\n\nfunc getUserAgent(config config.Config) string {\n\tagent := config.Get(\"BAZELISK_USER_AGENT\")\n\tif len(agent) > 0 {\n\t\treturn agent\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 23,
                  "endLine": 220,
                  "endColumn": 28,
                  "snippet": {
                    "text": "func getBazeliskHome(config config.Config) (string, error) {\n\tbazeliskHome := config.Get(\"BAZELISK_HOME_\" + strings.ToUpper(runtime.GOOS))\n\tif len(bazeliskHome) == 0 {\n\t\tbazeliskHome = config.Get(\"BAZELISK_HOME\")\n\t}\n\n\tif len(bazeliskHome) == 0 {\n",
                    "rendered": {
                      "text": "func getBazeliskHome(config config.Config) (string, error) {\n\tbazeliskHome := config.Get(\"BAZELISK_HOME_\" + strings.ToUpper(runtime.GOOS))\n\tif len(bazeliskHome) == 0 {\n\t\tbazeliskHome = config.Get(\"BAZELISK_HOME\")\n\t}\n\n\tif len(bazeliskHome) == 0 {\n",
                      "markdown": "`func getBazeliskHome(config config.Config) (string, error) {\n\tbazeliskHome := config.Get(\"BAZELISK_HOME_\" + strings.ToUpper(runtime.GOOS))\n\tif len(bazeliskHome) == 0 {\n\t\tbazeliskHome = config.Get(\"BAZELISK_HOME\")\n\t}\n\n\tif len(bazeliskHome) == 0 {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 23,
                  "endLine": 218,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n// getBazeliskHome returns the path to the Bazelisk home directory.\nfunc getBazeliskHome(config config.Config) (string, error) {\n\tbazeliskHome := config.Get(\"BAZELISK_HOME_\" + strings.ToUpper(runtime.GOOS))\n\tif len(bazeliskHome) == 0 {\n\t\tbazeliskHome = config.Get(\"BAZELISK_HOME\")\n\t}\n",
                    "rendered": {
                      "text": "\n// getBazeliskHome returns the path to the Bazelisk home directory.\nfunc getBazeliskHome(config config.Config) (string, error) {\n\tbazeliskHome := config.Get(\"BAZELISK_HOME_\" + strings.ToUpper(runtime.GOOS))\n\tif len(bazeliskHome) == 0 {\n\t\tbazeliskHome = config.Get(\"BAZELISK_HOME\")\n\t}\n",
                      "markdown": "`\n// getBazeliskHome returns the path to the Bazelisk home directory.\nfunc getBazeliskHome(config config.Config) (string, error) {\n\tbazeliskHome := config.Get(\"BAZELISK_HOME_\" + strings.ToUpper(runtime.GOOS))\n\tif len(bazeliskHome) == 0 {\n\t\tbazeliskHome = config.Get(\"BAZELISK_HOME\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 902,
                  "startColumn": 29,
                  "endLine": 902,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\t\tright = mid\n\t\t\t}\n\t\t} else {\n\t\t\tfmt.Printf(\"\\n\\n--- Failed at %s\\n\\n\", midCommit)\n\t\t\tif oldCommitIs == \"good\" {\n\t\t\t\tright = mid\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\tright = mid\n\t\t\t}\n\t\t} else {\n\t\t\tfmt.Printf(\"\\n\\n--- Failed at %s\\n\\n\", midCommit)\n\t\t\tif oldCommitIs == \"good\" {\n\t\t\t\tright = mid\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t\tright = mid\n\t\t\t}\n\t\t} else {\n\t\t\tfmt.Printf(\"\\n\\n--- Failed at %s\\n\\n\", midCommit)\n\t\t\tif oldCommitIs == \"good\" {\n\t\t\t\tright = mid\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 895,
                  "startColumn": 32,
                  "endLine": 895,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\tlog.Fatalf(\"could not run Bazel: %v\", err)\n\t\t}\n\t\tif bazelExitCode == 0 {\n\t\t\tfmt.Printf(\"\\n\\n--- Succeeded at %s\\n\\n\", midCommit)\n\t\t\tif oldCommitIs == \"good\" {\n\t\t\t\tleft = mid + 1\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\tlog.Fatalf(\"could not run Bazel: %v\", err)\n\t\t}\n\t\tif bazelExitCode == 0 {\n\t\t\tfmt.Printf(\"\\n\\n--- Succeeded at %s\\n\\n\", midCommit)\n\t\t\tif oldCommitIs == \"good\" {\n\t\t\t\tleft = mid + 1\n\t\t\t} else {\n",
                      "markdown": "`\t\t\tlog.Fatalf(\"could not run Bazel: %v\", err)\n\t\t}\n\t\tif bazelExitCode == 0 {\n\t\t\tfmt.Printf(\"\\n\\n--- Succeeded at %s\\n\\n\", midCommit)\n\t\t\tif oldCommitIs == \"good\" {\n\t\t\t\tleft = mid + 1\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 889,
                  "startColumn": 46,
                  "endLine": 889,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tfor left < right {\n\t\tmid := (left + right) / 2\n\t\tmidCommit := commitList[mid]\n\t\tfmt.Printf(\"\\n\\n--- Testing with Bazel built at %s, %d commits remaining...\\n\\n\", midCommit, right-left)\n\t\tbazelExitCode, err := testWithBazelAtCommit(midCommit, args, bazeliskHome, repos, config)\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"could not run Bazel: %v\", err)\n",
                    "rendered": {
                      "text": "\tfor left < right {\n\t\tmid := (left + right) / 2\n\t\tmidCommit := commitList[mid]\n\t\tfmt.Printf(\"\\n\\n--- Testing with Bazel built at %s, %d commits remaining...\\n\\n\", midCommit, right-left)\n\t\tbazelExitCode, err := testWithBazelAtCommit(midCommit, args, bazeliskHome, repos, config)\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"could not run Bazel: %v\", err)\n",
                      "markdown": "`\tfor left < right {\n\t\tmid := (left + right) / 2\n\t\tmidCommit := commitList[mid]\n\t\tfmt.Printf(\"\\n\\n--- Testing with Bazel built at %s, %d commits remaining...\\n\\n\", midCommit, right-left)\n\t\tbazelExitCode, err := testWithBazelAtCommit(midCommit, args, bazeliskHome, repos, config)\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"could not run Bazel: %v\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 645,
                  "startColumn": 36,
                  "endLine": 645,
                  "endColumn": 41,
                  "snippet": {
                    "text": "}\n\n// getIncompatibleFlags returns all incompatible flags for the current Bazel command in alphabetical order.\nfunc getIncompatibleFlags(bazelPath, cmd string, config config.Config) ([]string, error) {\n\tvar incompatibleFlagsStr = config.Get(\"BAZELISK_INCOMPATIBLE_FLAGS\")\n\tif len(incompatibleFlagsStr) > 0 {\n\t\treturn strings.Split(incompatibleFlagsStr, \",\"), nil\n",
                    "rendered": {
                      "text": "}\n\n// getIncompatibleFlags returns all incompatible flags for the current Bazel command in alphabetical order.\nfunc getIncompatibleFlags(bazelPath, cmd string, config config.Config) ([]string, error) {\n\tvar incompatibleFlagsStr = config.Get(\"BAZELISK_INCOMPATIBLE_FLAGS\")\n\tif len(incompatibleFlagsStr) > 0 {\n\t\treturn strings.Split(incompatibleFlagsStr, \",\"), nil\n",
                      "markdown": "`}\n\n// getIncompatibleFlags returns all incompatible flags for the current Bazel command in alphabetical order.\nfunc getIncompatibleFlags(bazelPath, cmd string, config config.Config) ([]string, error) {\n\tvar incompatibleFlagsStr = config.Get(\"BAZELISK_INCOMPATIBLE_FLAGS\")\n\tif len(incompatibleFlagsStr) > 0 {\n\t\treturn strings.Split(incompatibleFlagsStr, \",\"), nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 616,
                  "endLine": 616,
                  "endColumn": 5,
                  "snippet": {
                    "text": "}\n\nfunc runBazel(bazel string, args []string, out io.Writer, config config.Config) (int, error) {\n\tcmd := makeBazelCmd(bazel, args, out, config)\n\terr := cmd.Start()\n\tif err != nil {\n\t\treturn 1, fmt.Errorf(\"could not start Bazel: %v\", err)\n",
                    "rendered": {
                      "text": "}\n\nfunc runBazel(bazel string, args []string, out io.Writer, config config.Config) (int, error) {\n\tcmd := makeBazelCmd(bazel, args, out, config)\n\terr := cmd.Start()\n\tif err != nil {\n\t\treturn 1, fmt.Errorf(\"could not start Bazel: %v\", err)\n",
                      "markdown": "`}\n\nfunc runBazel(bazel string, args []string, out io.Writer, config config.Config) (int, error) {\n\tcmd := makeBazelCmd(bazel, args, out, config)\n\terr := cmd.Start()\n\tif err != nil {\n\t\treturn 1, fmt.Errorf(\"could not start Bazel: %v\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 7,
                  "endLine": 613,
                  "snippet": {
                    "text": "\t\tcmd.Stdout = out\n\t}\n\tcmd.Stderr = os.Stderr\n\treturn cmd\n}\n\nfunc runBazel(bazel string, args []string, out io.Writer, config config.Config) (int, error) {\n\tcmd := makeBazelCmd(bazel, args, out, config)\n",
                    "rendered": {
                      "text": "\t\tcmd.Stdout = out\n\t}\n\tcmd.Stderr = os.Stderr\n\treturn cmd\n}\n\nfunc runBazel(bazel string, args []string, out io.Writer, config config.Config) (int, error) {\n\tcmd := makeBazelCmd(bazel, args, out, config)\n",
                      "markdown": "`\t\tcmd.Stdout = out\n\t}\n\tcmd.Stderr = os.Stderr\n\treturn cmd\n}\n\nfunc runBazel(bazel string, args []string, out io.Writer, config config.Config) (int, error) {\n\tcmd := makeBazelCmd(bazel, args, out, config)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 595,
                  "endLine": 595,
                  "endColumn": 5,
                  "snippet": {
                    "text": "func makeBazelCmd(bazel string, args []string, out io.Writer, config config.Config) *exec.Cmd {\n\texecPath := maybeDelegateToWrapper(bazel, config)\n\n\tcmd := exec.Command(execPath, args...)\n\tcmd.Env = append(os.Environ(), skipWrapperEnv+\"=true\")\n\tif execPath != bazel {\n\t\tcmd.Env = append(cmd.Env, fmt.Sprintf(\"%s=%s\", bazelReal, bazel))\n",
                    "rendered": {
                      "text": "func makeBazelCmd(bazel string, args []string, out io.Writer, config config.Config) *exec.Cmd {\n\texecPath := maybeDelegateToWrapper(bazel, config)\n\n\tcmd := exec.Command(execPath, args...)\n\tcmd.Env = append(os.Environ(), skipWrapperEnv+\"=true\")\n\tif execPath != bazel {\n\t\tcmd.Env = append(cmd.Env, fmt.Sprintf(\"%s=%s\", bazelReal, bazel))\n",
                      "markdown": "`func makeBazelCmd(bazel string, args []string, out io.Writer, config config.Config) *exec.Cmd {\n\texecPath := maybeDelegateToWrapper(bazel, config)\n\n\tcmd := exec.Command(execPath, args...)\n\tcmd.Env = append(os.Environ(), skipWrapperEnv+\"=true\")\n\tif execPath != bazel {\n\t\tcmd.Env = append(cmd.Env, fmt.Sprintf(\"%s=%s\", bazelReal, bazel))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 443,
                  "startColumn": 49,
                  "endLine": 443,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\tbaseURL := config.Get(BaseURLEnv)\n\tformatURL := config.Get(FormatURLEnv)\n\tif baseURL != \"\" && formatURL != \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot set %s and %s at once\", BaseURLEnv, FormatURLEnv)\n\t} else if formatURL != \"\" {\n\t\ttmpDestPath, err = repos.DownloadFromFormatURL(config, formatURL, version, temporaryDownloadDir, tmpDestFile)\n\t} else if baseURL != \"\" {\n",
                    "rendered": {
                      "text": "\tbaseURL := config.Get(BaseURLEnv)\n\tformatURL := config.Get(FormatURLEnv)\n\tif baseURL != \"\" && formatURL != \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot set %s and %s at once\", BaseURLEnv, FormatURLEnv)\n\t} else if formatURL != \"\" {\n\t\ttmpDestPath, err = repos.DownloadFromFormatURL(config, formatURL, version, temporaryDownloadDir, tmpDestFile)\n\t} else if baseURL != \"\" {\n",
                      "markdown": "`\tbaseURL := config.Get(BaseURLEnv)\n\tformatURL := config.Get(FormatURLEnv)\n\tif baseURL != \"\" && formatURL != \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot set %s and %s at once\", BaseURLEnv, FormatURLEnv)\n\t} else if formatURL != \"\" {\n\t\ttmpDestPath, err = repos.DownloadFromFormatURL(config, formatURL, version, temporaryDownloadDir, tmpDestFile)\n\t} else if baseURL != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 35,
                  "endLine": 237,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n\t\tbazeliskHome, err = homedir.Expand(bazeliskHome)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t\t}\n\n\t\tbazeliskHome = os.ExpandEnv(bazeliskHome)\n",
                    "rendered": {
                      "text": "\n\t\tbazeliskHome, err = homedir.Expand(bazeliskHome)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t\t}\n\n\t\tbazeliskHome = os.ExpandEnv(bazeliskHome)\n",
                      "markdown": "`\n\t\tbazeliskHome, err = homedir.Expand(bazeliskHome)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t\t}\n\n\t\tbazeliskHome = os.ExpandEnv(bazeliskHome)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 1,
                  "endLine": 142,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t// --print_env must be the first argument.\n\tif len(args) > 0 && args[0] == \"--print_env\" {\n\t\t// print environment variables for sub-processes\n\t\tcmd := makeBazelCmd(bazelPath, args, nil, config)\n\t\tfor _, val := range cmd.Env {\n\t\t\tfmt.Println(val)\n\t\t}\n",
                    "rendered": {
                      "text": "\t// --print_env must be the first argument.\n\tif len(args) > 0 && args[0] == \"--print_env\" {\n\t\t// print environment variables for sub-processes\n\t\tcmd := makeBazelCmd(bazelPath, args, nil, config)\n\t\tfor _, val := range cmd.Env {\n\t\t\tfmt.Println(val)\n\t\t}\n",
                      "markdown": "`\t// --print_env must be the first argument.\n\tif len(args) > 0 && args[0] == \"--print_env\" {\n\t\t// print environment variables for sub-processes\n\t\tcmd := makeBazelCmd(bazelPath, args, nil, config)\n\t\tfor _, val := range cmd.Env {\n\t\t\tfmt.Println(val)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 34,
                  "endLine": 115,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n\tbazelPath, err := homedir.Expand(bazelVersionString)\n\tif err != nil {\n\t\treturn -1, fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t}\n\n\t// If the Bazel version is an absolute path to a Bazel binary in the filesystem, we can\n",
                    "rendered": {
                      "text": "\n\tbazelPath, err := homedir.Expand(bazelVersionString)\n\tif err != nil {\n\t\treturn -1, fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t}\n\n\t// If the Bazel version is an absolute path to a Bazel binary in the filesystem, we can\n",
                      "markdown": "`\n\tbazelPath, err := homedir.Expand(bazelVersionString)\n\tif err != nil {\n\t\treturn -1, fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t}\n\n\t// If the Bazel version is an absolute path to a Bazel binary in the filesystem, we can\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 5,
                  "endLine": 267,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t// - the file workspace_root/tools/bazel exists -> that version. (TODO)\n\t// - workspace_root/.bazelversion exists -> read contents, that version.\n\t// - workspace_root/WORKSPACE contains a version -> that version. (TODO)\n\t// - env var \"USE_BAZEL_FALLBACK_VERSION\" is set to a fallback version format.\n\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_FALLBACK_VERSION\" is set to a fallback version format.\n\t// - fallback version format \"silent:latest\"\n",
                    "rendered": {
                      "text": "\t// - the file workspace_root/tools/bazel exists -> that version. (TODO)\n\t// - workspace_root/.bazelversion exists -> read contents, that version.\n\t// - workspace_root/WORKSPACE contains a version -> that version. (TODO)\n\t// - env var \"USE_BAZEL_FALLBACK_VERSION\" is set to a fallback version format.\n\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_FALLBACK_VERSION\" is set to a fallback version format.\n\t// - fallback version format \"silent:latest\"\n",
                      "markdown": "`\t// - the file workspace_root/tools/bazel exists -> that version. (TODO)\n\t// - workspace_root/.bazelversion exists -> read contents, that version.\n\t// - workspace_root/WORKSPACE contains a version -> that version. (TODO)\n\t// - env var \"USE_BAZEL_FALLBACK_VERSION\" is set to a fallback version format.\n\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_FALLBACK_VERSION\" is set to a fallback version format.\n\t// - fallback version format \"silent:latest\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 5,
                  "endLine": 262,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t//   var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n\t//   nightly. (TODO)\n\t// - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n\t//   rc. (TODO)\n\t// - the file workspace_root/tools/bazel exists -> that version. (TODO)\n\t// - workspace_root/.bazelversion exists -> read contents, that version.\n",
                    "rendered": {
                      "text": "\t//   var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n\t//   nightly. (TODO)\n\t// - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n\t//   rc. (TODO)\n\t// - the file workspace_root/tools/bazel exists -> that version. (TODO)\n\t// - workspace_root/.bazelversion exists -> read contents, that version.\n",
                      "markdown": "`\t//   var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n\t//   nightly. (TODO)\n\t// - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n\t//   rc. (TODO)\n\t// - the file workspace_root/tools/bazel exists -> that version. (TODO)\n\t// - workspace_root/.bazelversion exists -> read contents, that version.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 5,
                  "endLine": 260,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t// - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n\t//   nightly. (TODO)\n\t// - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n\t//   rc. (TODO)\n",
                    "rendered": {
                      "text": "\t// - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n\t//   nightly. (TODO)\n\t// - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n\t//   rc. (TODO)\n",
                      "markdown": "`\t// - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n\t//   nightly. (TODO)\n\t// - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n\t//   rc. (TODO)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 5,
                  "endLine": 257,
                  "endColumn": 10,
                  "snippet": {
                    "text": "// GetBazelVersion returns the Bazel version that should be used.\nfunc GetBazelVersion(config config.Config) (string, error) {\n\t// Check in this order:\n\t// - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n",
                    "rendered": {
                      "text": "// GetBazelVersion returns the Bazel version that should be used.\nfunc GetBazelVersion(config config.Config) (string, error) {\n\t// Check in this order:\n\t// - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n",
                      "markdown": "`// GetBazelVersion returns the Bazel version that should be used.\nfunc GetBazelVersion(config config.Config) (string, error) {\n\t// Check in this order:\n\t// - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - workspace_root/.bazeliskrc exists -> read contents, in contents:\n\t//   var \"USE_BAZEL_VERSION\" is set to a specific version.\n\t// - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 35,
                  "endLine": 237,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n\t\tbazeliskHome, err = homedir.Expand(bazeliskHome)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t\t}\n\n\t\tbazeliskHome = os.ExpandEnv(bazeliskHome)\n",
                    "rendered": {
                      "text": "\n\t\tbazeliskHome, err = homedir.Expand(bazeliskHome)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t\t}\n\n\t\tbazeliskHome = os.ExpandEnv(bazeliskHome)\n",
                      "markdown": "`\n\t\tbazeliskHome, err = homedir.Expand(bazeliskHome)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t\t}\n\n\t\tbazeliskHome = os.ExpandEnv(bazeliskHome)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 33,
                  "endLine": 213,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\treturn a, nil\n\t\t}\n\t}\n\treturn \"\", fmt.Errorf(\"could not find a valid Bazel command in %q. Please run `bazel help` if you need help on how to use Bazel\", strings.Join(args, \" \"))\n}\n\n// getBazeliskHome returns the path to the Bazelisk home directory.\n",
                    "rendered": {
                      "text": "\t\t\treturn a, nil\n\t\t}\n\t}\n\treturn \"\", fmt.Errorf(\"could not find a valid Bazel command in %q. Please run `bazel help` if you need help on how to use Bazel\", strings.Join(args, \" \"))\n}\n\n// getBazeliskHome returns the path to the Bazelisk home directory.\n",
                      "markdown": "`\t\t\treturn a, nil\n\t\t}\n\t}\n\treturn \"\", fmt.Errorf(\"could not find a valid Bazel command in %q. Please run `bazel help` if you need help on how to use Bazel\", strings.Join(args, \" \"))\n}\n\n// getBazeliskHome returns the path to the Bazelisk home directory.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 34,
                  "endLine": 115,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n\tbazelPath, err := homedir.Expand(bazelVersionString)\n\tif err != nil {\n\t\treturn -1, fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t}\n\n\t// If the Bazel version is an absolute path to a Bazel binary in the filesystem, we can\n",
                    "rendered": {
                      "text": "\n\tbazelPath, err := homedir.Expand(bazelVersionString)\n\tif err != nil {\n\t\treturn -1, fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t}\n\n\t// If the Bazel version is an absolute path to a Bazel binary in the filesystem, we can\n",
                      "markdown": "`\n\tbazelPath, err := homedir.Expand(bazelVersionString)\n\tif err != nil {\n\t\treturn -1, fmt.Errorf(\"could not expand home directory in path: %v\", err)\n\t}\n\n\t// If the Bazel version is an absolute path to a Bazel binary in the filesystem, we can\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 46,
                  "endLine": 51,
                  "endColumn": 51,
                  "snippet": {
                    "text": "// Bazel with.\ntype ArgsFunc func(resolvedBazelVersion string) []string\n\n// MakeDefaultConfig returns a config based on env and .bazeliskrc files.\nfunc MakeDefaultConfig() config.Config {\n\tconfigs := []config.Config{config.FromEnv()}\n\n",
                    "rendered": {
                      "text": "// Bazel with.\ntype ArgsFunc func(resolvedBazelVersion string) []string\n\n// MakeDefaultConfig returns a config based on env and .bazeliskrc files.\nfunc MakeDefaultConfig() config.Config {\n\tconfigs := []config.Config{config.FromEnv()}\n\n",
                      "markdown": "`// Bazel with.\ntype ArgsFunc func(resolvedBazelVersion string) []string\n\n// MakeDefaultConfig returns a config based on env and .bazeliskrc files.\nfunc MakeDefaultConfig() config.Config {\n\tconfigs := []config.Config{config.FromEnv()}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core_test.go"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 33,
                  "endLine": 145,
                  "endColumn": 80,
                  "snippet": {
                    "text": "}\n\nfunc TestMaybeDelegateToPowershellOverBatchWrapper(t *testing.T) {\n\ttmpDir, err := os.MkdirTemp(\"\", \"TestMaybeDelegateToPowershellOverBatchWrapper\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc TestMaybeDelegateToPowershellOverBatchWrapper(t *testing.T) {\n\ttmpDir, err := os.MkdirTemp(\"\", \"TestMaybeDelegateToPowershellOverBatchWrapper\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n",
                      "markdown": "`}\n\nfunc TestMaybeDelegateToPowershellOverBatchWrapper(t *testing.T) {\n\ttmpDir, err := os.MkdirTemp(\"\", \"TestMaybeDelegateToPowershellOverBatchWrapper\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/core/core_test.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 33,
                  "endLine": 40,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\t\treturn\n\t}\n\n\ttmpDir, err := os.MkdirTemp(\"\", \"TestMaybeDelegateToNoNonExecutableWrapper\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn\n\t}\n\n\ttmpDir, err := os.MkdirTemp(\"\", \"TestMaybeDelegateToNoNonExecutableWrapper\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n",
                      "markdown": "`\t\treturn\n\t}\n\n\ttmpDir, err := os.MkdirTemp(\"\", \"TestMaybeDelegateToNoNonExecutableWrapper\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/repositories/gcs.go"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 37,
                  "endLine": 262,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n// DownloadAtCommit downloads a Bazel binary built at the given commit into the specified location and returns the absolute path.\nfunc (gcs *GCSRepo) DownloadAtCommit(commit, destDir, destFile string, config config.Config) (string, error) {\n\tlog.Printf(\"Using unreleased version at commit %s\", commit)\n\tplatform, err := platforms.GetPlatform()\n\tif err != nil {\n\t\treturn \"\", err\n",
                    "rendered": {
                      "text": "\n// DownloadAtCommit downloads a Bazel binary built at the given commit into the specified location and returns the absolute path.\nfunc (gcs *GCSRepo) DownloadAtCommit(commit, destDir, destFile string, config config.Config) (string, error) {\n\tlog.Printf(\"Using unreleased version at commit %s\", commit)\n\tplatform, err := platforms.GetPlatform()\n\tif err != nil {\n\t\treturn \"\", err\n",
                      "markdown": "`\n// DownloadAtCommit downloads a Bazel binary built at the given commit into the specified location and returns the absolute path.\nfunc (gcs *GCSRepo) DownloadAtCommit(commit, destDir, destFile string, config config.Config) (string, error) {\n\tlog.Printf(\"Using unreleased version at commit %s\", commit)\n\tplatform, err := platforms.GetPlatform()\n\tif err != nil {\n\t\treturn \"\", err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/repositories/gcs.go"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 60,
                  "endLine": 91,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif err != nil {\n\t\t\treturn nil, false, fmt.Errorf(\"could not list GCS objects at %s: %v\", url, err)\n\t\t}\n\n\t\tvar response GcsListResponse\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif err != nil {\n\t\t\treturn nil, false, fmt.Errorf(\"could not list GCS objects at %s: %v\", url, err)\n\t\t}\n\n\t\tvar response GcsListResponse\n",
                      "markdown": "`\t\t}\n\n\t\tif err != nil {\n\t\t\treturn nil, false, fmt.Errorf(\"could not list GCS objects at %s: %v\", url, err)\n\t\t}\n\n\t\tvar response GcsListResponse\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/repositories/gcs.go"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 42,
                  "endLine": 197,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t}\n\n\tif len(history) == 0 {\n\t\treturn []string{}, errors.New(\"could not find any Bazel versions\")\n\t}\n\n\t// Find most recent directory that contains any release candidates.\n",
                    "rendered": {
                      "text": "\t}\n\n\tif len(history) == 0 {\n\t\treturn []string{}, errors.New(\"could not find any Bazel versions\")\n\t}\n\n\t// Find most recent directory that contains any release candidates.\n",
                      "markdown": "`\t}\n\n\tif len(history) == 0 {\n\t\treturn []string{}, errors.New(\"could not find any Bazel versions\")\n\t}\n\n\t// Find most recent directory that contains any release candidates.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/config/config.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 20,
                  "endLine": 113,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nfunc (c *layered) Get(name string) string {\n\tfor _, config := range c.configs {\n\t\tif value := config.Get(name); value != \"\" {\n\t\t\treturn value\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\nfunc (c *layered) Get(name string) string {\n\tfor _, config := range c.configs {\n\t\tif value := config.Get(name); value != \"\" {\n\t\t\treturn value\n\t\t}\n\t}\n",
                      "markdown": "`\nfunc (c *layered) Get(name string) string {\n\tfor _, config := range c.configs {\n\t\tif value := config.Get(name); value != \"\" {\n\t\t\treturn value\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/config/config.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13,
                  "endLine": 26,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\ntype fromEnv struct{}\n\nfunc (c *fromEnv) Get(name string) string {\n\treturn os.Getenv(name)\n}\n\n",
                    "rendered": {
                      "text": "\ntype fromEnv struct{}\n\nfunc (c *fromEnv) Get(name string) string {\n\treturn os.Getenv(name)\n}\n\n",
                      "markdown": "`\ntype fromEnv struct{}\n\nfunc (c *fromEnv) Get(name string) string {\n\treturn os.Getenv(name)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/config/config.go"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7,
                  "endLine": 19,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tGet(name string) string\n}\n\n// FromEnv returns a Config which gets config values from environment variables.\nfunc FromEnv() Config {\n\treturn &fromEnv{}\n}\n",
                    "rendered": {
                      "text": "\tGet(name string) string\n}\n\n// FromEnv returns a Config which gets config values from environment variables.\nfunc FromEnv() Config {\n\treturn &fromEnv{}\n}\n",
                      "markdown": "`\tGet(name string) string\n}\n\n// FromEnv returns a Config which gets config values from environment variables.\nfunc FromEnv() Config {\n\treturn &fromEnv{}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/httputil.go"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 80,
                  "endLine": 177,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\n\tlog.Printf(\"Using basic authentication credentials for host %s from %s\", host, file)\n\n\ttoken := b64.StdEncoding.EncodeToString([]byte(fmt.Sprintf(\"%s:%s\", m.Login, m.Password)))\n\treturn fmt.Sprintf(\"Basic %s\", token), nil\n}\n\n",
                    "rendered": {
                      "text": "\n\tlog.Printf(\"Using basic authentication credentials for host %s from %s\", host, file)\n\n\ttoken := b64.StdEncoding.EncodeToString([]byte(fmt.Sprintf(\"%s:%s\", m.Login, m.Password)))\n\treturn fmt.Sprintf(\"Basic %s\", token), nil\n}\n\n",
                      "markdown": "`\n\tlog.Printf(\"Using basic authentication credentials for host %s from %s\", host, file)\n\n\ttoken := b64.StdEncoding.EncodeToString([]byte(fmt.Sprintf(\"%s:%s\", m.Login, m.Password)))\n\treturn fmt.Sprintf(\"Basic %s\", token), nil\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/httputil.go"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 54,
                  "endLine": 153,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\treturn time.Until(t), nil\n}\n\n// tryFindNetrcFileCreds returns base64-encoded login:password found in ~/.netrc file for a given `host`\nfunc tryFindNetrcFileCreds(host string) (string, error) {\n\tdir, err := homedir.Dir()\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\treturn time.Until(t), nil\n}\n\n// tryFindNetrcFileCreds returns base64-encoded login:password found in ~/.netrc file for a given `host`\nfunc tryFindNetrcFileCreds(host string) (string, error) {\n\tdir, err := homedir.Dir()\n\tif err != nil {\n",
                      "markdown": "`\treturn time.Until(t), nil\n}\n\n// tryFindNetrcFileCreds returns base64-encoded login:password found in ~/.netrc file for a given `host`\nfunc tryFindNetrcFileCreds(host string) (string, error) {\n\tdir, err := homedir.Dir()\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/httputil.go"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 15,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "package httputil\n\nimport (\n\tb64 \"encoding/base64\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n",
                    "rendered": {
                      "text": "package httputil\n\nimport (\n\tb64 \"encoding/base64\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n",
                      "markdown": "`package httputil\n\nimport (\n\tb64 \"encoding/base64\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/httputil.go"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 42,
                  "endLine": 170,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tm := n.FindMachine(host)\n\tif m == nil {\n\t\t// if host is not found, we should proceed without providing any Authorization header,\n\t\t// because remote host may not have auth at all.\n\t\tlog.Printf(\"Skipping basic authentication for %s because no credentials found in %s\", host, file)\n\t\treturn \"\", fmt.Errorf(\"could not find creds for %s in netrc %s\", host, file)\n\t}\n",
                    "rendered": {
                      "text": "\tm := n.FindMachine(host)\n\tif m == nil {\n\t\t// if host is not found, we should proceed without providing any Authorization header,\n\t\t// because remote host may not have auth at all.\n\t\tlog.Printf(\"Skipping basic authentication for %s because no credentials found in %s\", host, file)\n\t\treturn \"\", fmt.Errorf(\"could not find creds for %s in netrc %s\", host, file)\n\t}\n",
                      "markdown": "`\tm := n.FindMachine(host)\n\tif m == nil {\n\t\t// if host is not found, we should proceed without providing any Authorization header,\n\t\t// because remote host may not have auth at all.\n\t\tlog.Printf(\"Skipping basic authentication for %s because no credentials found in %s\", host, file)\n\t\treturn \"\", fmt.Errorf(\"could not find creds for %s in netrc %s\", host, file)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/httputil.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 60,
                  "endLine": 74,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n\tbody, err := io.ReadAll(res.Body)\n\tif err != nil {\n\t\treturn nil, res.Header, fmt.Errorf(\"failed to read content at %s: %v\", url, err)\n\t}\n\treturn body, res.Header, nil\n}\n",
                    "rendered": {
                      "text": "\n\tbody, err := io.ReadAll(res.Body)\n\tif err != nil {\n\t\treturn nil, res.Header, fmt.Errorf(\"failed to read content at %s: %v\", url, err)\n\t}\n\treturn body, res.Header, nil\n}\n",
                      "markdown": "`\n\tbody, err := io.ReadAll(res.Body)\n\tif err != nil {\n\t\treturn nil, res.Header, fmt.Errorf(\"failed to read content at %s: %v\", url, err)\n\t}\n\treturn body, res.Header, nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/httputil.go"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 35,
                  "endLine": 237,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n\t\terr = os.Chmod(tmpfile.Name(), 0755)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"could not chmod file %s: %v\", tmpfile.Name(), err)\n\t\t}\n\n\t\ttmpfile.Close()\n",
                    "rendered": {
                      "text": "\n\t\terr = os.Chmod(tmpfile.Name(), 0755)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"could not chmod file %s: %v\", tmpfile.Name(), err)\n\t\t}\n\n\t\ttmpfile.Close()\n",
                      "markdown": "`\n\t\terr = os.Chmod(tmpfile.Name(), 0755)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"could not chmod file %s: %v\", tmpfile.Name(), err)\n\t\t}\n\n\t\ttmpfile.Close()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/httputil.go"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 34,
                  "endLine": 172,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\t// if host is not found, we should proceed without providing any Authorization header,\n\t\t// because remote host may not have auth at all.\n\t\tlog.Printf(\"Skipping basic authentication for %s because no credentials found in %s\", host, file)\n\t\treturn \"\", fmt.Errorf(\"could not find creds for %s in netrc %s\", host, file)\n\t}\n\n\tlog.Printf(\"Using basic authentication credentials for host %s from %s\", host, file)\n",
                    "rendered": {
                      "text": "\t\t// if host is not found, we should proceed without providing any Authorization header,\n\t\t// because remote host may not have auth at all.\n\t\tlog.Printf(\"Skipping basic authentication for %s because no credentials found in %s\", host, file)\n\t\treturn \"\", fmt.Errorf(\"could not find creds for %s in netrc %s\", host, file)\n\t}\n\n\tlog.Printf(\"Using basic authentication credentials for host %s from %s\", host, file)\n",
                      "markdown": "`\t\t// if host is not found, we should proceed without providing any Authorization header,\n\t\t// because remote host may not have auth at all.\n\t\tlog.Printf(\"Skipping basic authentication for %s because no credentials found in %s\", host, file)\n\t\treturn \"\", fmt.Errorf(\"could not find creds for %s in netrc %s\", host, file)\n\t}\n\n\tlog.Printf(\"Using basic authentication credentials for host %s from %s\", host, file)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/httputil.go"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 73,
                  "endLine": 59,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n// ReadRemoteFile returns the contents of the given file, using the supplied Authorization header value, if set. It also returns the HTTP headers.\n// If the request fails with a transient error it will retry the request for at most MaxRetries times.\n// It obeys HTTP headers such as \"Retry-After\" when calculating the start time of the next attempt.\n// If no such header is present, it uses an exponential backoff strategy.\nfunc ReadRemoteFile(url string, auth string) ([]byte, http.Header, error) {\n\tres, err := get(url, auth)\n",
                    "rendered": {
                      "text": "\n// ReadRemoteFile returns the contents of the given file, using the supplied Authorization header value, if set. It also returns the HTTP headers.\n// If the request fails with a transient error it will retry the request for at most MaxRetries times.\n// It obeys HTTP headers such as \"Retry-After\" when calculating the start time of the next attempt.\n// If no such header is present, it uses an exponential backoff strategy.\nfunc ReadRemoteFile(url string, auth string) ([]byte, http.Header, error) {\n\tres, err := get(url, auth)\n",
                      "markdown": "`\n// ReadRemoteFile returns the contents of the given file, using the supplied Authorization header value, if set. It also returns the HTTP headers.\n// If the request fails with a transient error it will retry the request for at most MaxRetries times.\n// It obeys HTTP headers such as \"Retry-After\" when calculating the start time of the next attempt.\n// If no such header is present, it uses an exponential backoff strategy.\nfunc ReadRemoteFile(url string, auth string) ([]byte, http.Header, error) {\n\tres, err := get(url, auth)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/httputil/httputil_test.go"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 34,
                  "endLine": 207,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tlower := (1<<uint(retries))*time.Second - time.Second\n\tupper := lower + time.Duration(retries*500)*time.Millisecond\n\tif total < lower-delta || upper+delta < total {\n\t\tt.Fatalf(\"Expected a total sleep time between %s and %s (%d retries, exponential backoff with fuzzing), but waited %s instead\", lower, upper, retries, total)\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\tlower := (1<<uint(retries))*time.Second - time.Second\n\tupper := lower + time.Duration(retries*500)*time.Millisecond\n\tif total < lower-delta || upper+delta < total {\n\t\tt.Fatalf(\"Expected a total sleep time between %s and %s (%d retries, exponential backoff with fuzzing), but waited %s instead\", lower, upper, retries, total)\n\t}\n}\n\n",
                      "markdown": "`\tlower := (1<<uint(retries))*time.Second - time.Second\n\tupper := lower + time.Duration(retries*500)*time.Millisecond\n\tif total < lower-delta || upper+delta < total {\n\t\tt.Fatalf(\"Expected a total sleep time between %s and %s (%d retries, exponential backoff with fuzzing), but waited %s instead\", lower, upper, retries, total)\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 38,
                  "endLine": 8,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 35,
                  "endLine": 67,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\"bin/bazelisk-$(uname -s | tr [:upper:] [:lower:])-amd64\" version | grep \"Bazelisk version\"\necho\n\n# Non-googlers: you should run this script with NPM_REGISTRY=https://registry.npmjs.org\nreadonly REGISTRY=${NPM_REGISTRY:-https://wombat-dressing-room.appspot.com}\necho \"== NPM releases ==\"\necho \"After testing, publish to NPM via these commands:\"\n",
                    "rendered": {
                      "text": "\"bin/bazelisk-$(uname -s | tr [:upper:] [:lower:])-amd64\" version | grep \"Bazelisk version\"\necho\n\n# Non-googlers: you should run this script with NPM_REGISTRY=https://registry.npmjs.org\nreadonly REGISTRY=${NPM_REGISTRY:-https://wombat-dressing-room.appspot.com}\necho \"== NPM releases ==\"\necho \"After testing, publish to NPM via these commands:\"\n",
                      "markdown": "`\"bin/bazelisk-$(uname -s | tr [:upper:] [:lower:])-amd64\" version | grep \"Bazelisk version\"\necho\n\n# Non-googlers: you should run this script with NPM_REGISTRY=https://registry.npmjs.org\nreadonly REGISTRY=${NPM_REGISTRY:-https://wombat-dressing-room.appspot.com}\necho \"== NPM releases ==\"\necho \"After testing, publish to NPM via these commands:\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 67,
                  "endLine": 64,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\necho \"== Bazelisk version output ==\"\necho \"Before releasing, make sure that this is the correct version string:\"\n\"bin/bazelisk-$(uname -s | tr [:upper:] [:lower:])-amd64\" version | grep \"Bazelisk version\"\necho\n\n# Non-googlers: you should run this script with NPM_REGISTRY=https://registry.npmjs.org\n",
                    "rendered": {
                      "text": "\necho \"== Bazelisk version output ==\"\necho \"Before releasing, make sure that this is the correct version string:\"\n\"bin/bazelisk-$(uname -s | tr [:upper:] [:lower:])-amd64\" version | grep \"Bazelisk version\"\necho\n\n# Non-googlers: you should run this script with NPM_REGISTRY=https://registry.npmjs.org\n",
                      "markdown": "`\necho \"== Bazelisk version output ==\"\necho \"Before releasing, make sure that this is the correct version string:\"\n\"bin/bazelisk-$(uname -s | tr [:upper:] [:lower:])-amd64\" version | grep \"Bazelisk version\"\necho\n\n# Non-googlers: you should run this script with NPM_REGISTRY=https://registry.npmjs.org\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 69,
                  "endLine": 44,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\nrm -f bazelisk\n\n### Build release artifacts using `go build`.\n",
                    "rendered": {
                      "text": "cp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\nrm -f bazelisk\n\n### Build release artifacts using `go build`.\n",
                      "markdown": "`cp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\nrm -f bazelisk\n\n### Build release artifacts using `go build`.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 81,
                  "endLine": 43,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\nrm -f bazelisk\n\n",
                    "rendered": {
                      "text": "cp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\nrm -f bazelisk\n\n",
                      "markdown": "`cp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\nrm -f bazelisk\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 81,
                  "endLine": 42,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\nrm -f bazelisk\n",
                    "rendered": {
                      "text": "cp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\nrm -f bazelisk\n",
                      "markdown": "`cp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\nrm -f bazelisk\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 69,
                  "endLine": 41,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\n",
                    "rendered": {
                      "text": "cp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\n",
                      "markdown": "`cp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\ncp bazel-out/*-opt*/bin/deb/bazelisk-arm64.deb bin/bazelisk-arm64.deb\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 69,
                  "endLine": 40,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\n",
                    "rendered": {
                      "text": "cp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\n",
                      "markdown": "`cp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\ncp bazel-out/*-opt*/bin/deb/bazelisk-amd64.deb bin/bazelisk-amd64.deb\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 69,
                  "endLine": 39,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\n",
                    "rendered": {
                      "text": "\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\n",
                      "markdown": "`\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\ncp bazel-out/*-opt*/bin/bazelisk-windows_arm64.exe bin/bazelisk-windows-arm64.exe\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 71,
                  "endLine": 38,
                  "endColumn": 3,
                  "snippet": {
                    "text": "echo\n\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\n",
                    "rendered": {
                      "text": "echo\n\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\n",
                      "markdown": "`echo\n\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\ncp bazel-out/*-opt*/bin/bazelisk-windows_amd64.exe bin/bazelisk-windows-amd64.exe\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 71,
                  "endLine": 37,
                  "endColumn": 3,
                  "snippet": {
                    "text": "    //deb:bazelisk-arm64_deb\necho\n\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\n",
                    "rendered": {
                      "text": "    //deb:bazelisk-arm64_deb\necho\n\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\n",
                      "markdown": "`    //deb:bazelisk-arm64_deb\necho\n\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\ncp bazel-out/*-opt*/bin/bazelisk-linux_arm64 bin/bazelisk-linux-arm64\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/build.sh"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 36,
                  "endColumn": 3,
                  "snippet": {
                    "text": "    //deb:bazelisk-amd64_deb \\\n    //deb:bazelisk-arm64_deb\necho\n\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\n",
                    "rendered": {
                      "text": "    //deb:bazelisk-amd64_deb \\\n    //deb:bazelisk-arm64_deb\necho\n\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\n",
                      "markdown": "`    //deb:bazelisk-amd64_deb \\\n    //deb:bazelisk-arm64_deb\necho\n\ncp bazel-out/*-opt*/bin/bazelisk-darwin_amd64 bin/bazelisk-darwin-amd64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_arm64 bin/bazelisk-darwin-arm64\ncp bazel-out/*-opt*/bin/bazelisk-darwin_universal bin/bazelisk-darwin\ncp bazel-out/*-opt*/bin/bazelisk-linux_amd64 bin/bazelisk-linux-amd64\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 47,
                  "endLine": 29,
                  "endColumn": 52,
                  "snippet": {
                    "text": "func main() {\n\tgcs := &repositories.GCSRepo{}\n\tconfig := core.MakeDefaultConfig()\n\tgitHub := repositories.CreateGitHubRepo(config.Get(\"BAZELISK_GITHUB_TOKEN\"))\n\t// Fetch LTS releases, release candidates, rolling releases and Bazel-at-commits from GCS, forks from GitHub.\n\trepos := core.CreateRepositories(gcs, gcs, gitHub, gcs, gcs, true)\n\n",
                    "rendered": {
                      "text": "func main() {\n\tgcs := &repositories.GCSRepo{}\n\tconfig := core.MakeDefaultConfig()\n\tgitHub := repositories.CreateGitHubRepo(config.Get(\"BAZELISK_GITHUB_TOKEN\"))\n\t// Fetch LTS releases, release candidates, rolling releases and Bazel-at-commits from GCS, forks from GitHub.\n\trepos := core.CreateRepositories(gcs, gcs, gitHub, gcs, gcs, true)\n\n",
                      "markdown": "`func main() {\n\tgcs := &repositories.GCSRepo{}\n\tconfig := core.MakeDefaultConfig()\n\tgitHub := repositories.CreateGitHubRepo(config.Get(\"BAZELISK_GITHUB_TOKEN\"))\n\t// Fetch LTS releases, release candidates, rolling releases and Bazel-at-commits from GCS, forks from GitHub.\n\trepos := core.CreateRepositories(gcs, gcs, gitHub, gcs, gcs, true)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.go"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 39,
                  "endLine": 6,
                  "snippet": {
                    "text": "//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 33,
                  "endLine": 380,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n                raise Exception(\"neither $XDG_CACHE_HOME nor $HOME are defined\")\n            base_dir = os.path.join(base_dir, \".cache\")\n",
                    "rendered": {
                      "text": "    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n                raise Exception(\"neither $XDG_CACHE_HOME nor $HOME are defined\")\n            base_dir = os.path.join(base_dir, \".cache\")\n",
                      "markdown": "`    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n                raise Exception(\"neither $XDG_CACHE_HOME nor $HOME are defined\")\n            base_dir = os.path.join(base_dir, \".cache\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 29,
                  "endLine": 378,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n",
                    "rendered": {
                      "text": "            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n",
                      "markdown": "`            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 29,
                  "endLine": 373,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n        base_dir = os.environ.get(\"HOME\")\n        if base_dir is None:\n            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n",
                    "rendered": {
                      "text": "        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n        base_dir = os.environ.get(\"HOME\")\n        if base_dir is None:\n            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n",
                      "markdown": "`        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n        base_dir = os.environ.get(\"HOME\")\n        if base_dir is None:\n            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 29,
                  "endLine": 369,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    base_dir = None\n\n    if operating_system == \"windows\":\n        base_dir = os.environ.get(\"LocalAppData\")\n        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n",
                    "rendered": {
                      "text": "    base_dir = None\n\n    if operating_system == \"windows\":\n        base_dir = os.environ.get(\"LocalAppData\")\n        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n",
                      "markdown": "`    base_dir = None\n\n    if operating_system == \"windows\":\n        base_dir = os.environ.get(\"LocalAppData\")\n        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 30,
                  "endLine": 360,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n\ndef get_bazelisk_directory():\n    bazelisk_home = os.environ.get(\"BAZELISK_HOME\")\n    if bazelisk_home is not None:\n        return bazelisk_home\n\n",
                    "rendered": {
                      "text": "\n\ndef get_bazelisk_directory():\n    bazelisk_home = os.environ.get(\"BAZELISK_HOME\")\n    if bazelisk_home is not None:\n        return bazelisk_home\n\n",
                      "markdown": "`\n\ndef get_bazelisk_directory():\n    bazelisk_home = os.environ.get(\"BAZELISK_HOME\")\n    if bazelisk_home is not None:\n        return bazelisk_home\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 39,
                  "endLine": 349,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        parts = urlparse(url)\n        creds = None\n        try:\n            creds = netrc.netrc().hosts.get(parts.netloc)\n        except Exception:\n            pass\n        if creds is not None:\n",
                    "rendered": {
                      "text": "        parts = urlparse(url)\n        creds = None\n        try:\n            creds = netrc.netrc().hosts.get(parts.netloc)\n        except Exception:\n            pass\n        if creds is not None:\n",
                      "markdown": "`        parts = urlparse(url)\n        creds = None\n        try:\n            creds = netrc.netrc().hosts.get(parts.netloc)\n        except Exception:\n            pass\n        if creds is not None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 17,
                  "endLine": 229,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n    filename_suffix = determine_executable_filename_suffix()\n    bazel_flavor = \"bazel\"\n    if os.environ.get(\"BAZELISK_NOJDK\", \"0\") != \"0\":\n        bazel_flavor = \"bazel_nojdk\"\n    return \"{}-{}-{}-{}{}\".format(bazel_flavor, version, operating_system, machine, filename_suffix)\n\n",
                    "rendered": {
                      "text": "\n    filename_suffix = determine_executable_filename_suffix()\n    bazel_flavor = \"bazel\"\n    if os.environ.get(\"BAZELISK_NOJDK\", \"0\") != \"0\":\n        bazel_flavor = \"bazel_nojdk\"\n    return \"{}-{}-{}-{}{}\".format(bazel_flavor, version, operating_system, machine, filename_suffix)\n\n",
                      "markdown": "`\n    filename_suffix = determine_executable_filename_suffix()\n    bazel_flavor = \"bazel\"\n    if os.environ.get(\"BAZELISK_NOJDK\", \"0\") != \"0\":\n        bazel_flavor = \"bazel_nojdk\"\n    return \"{}-{}-{}-{}{}\".format(bazel_flavor, version, operating_system, machine, filename_suffix)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 26,
                  "endLine": 380,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n                raise Exception(\"neither $XDG_CACHE_HOME nor $HOME are defined\")\n            base_dir = os.path.join(base_dir, \".cache\")\n",
                    "rendered": {
                      "text": "    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n                raise Exception(\"neither $XDG_CACHE_HOME nor $HOME are defined\")\n            base_dir = os.path.join(base_dir, \".cache\")\n",
                      "markdown": "`    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n                raise Exception(\"neither $XDG_CACHE_HOME nor $HOME are defined\")\n            base_dir = os.path.join(base_dir, \".cache\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 22,
                  "endLine": 378,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n",
                    "rendered": {
                      "text": "            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n",
                      "markdown": "`            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n    elif operating_system == \"linux\":\n        base_dir = os.environ.get(\"XDG_CACHE_HOME\")\n        if base_dir is None:\n            base_dir = os.environ.get(\"HOME\")\n            if base_dir is None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 22,
                  "endLine": 373,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n        base_dir = os.environ.get(\"HOME\")\n        if base_dir is None:\n            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n",
                    "rendered": {
                      "text": "        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n        base_dir = os.environ.get(\"HOME\")\n        if base_dir is None:\n            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n",
                      "markdown": "`        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n        base_dir = os.environ.get(\"HOME\")\n        if base_dir is None:\n            raise Exception(\"$HOME is not defined\")\n        base_dir = os.path.join(base_dir, \"Library/Caches\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 22,
                  "endLine": 369,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    base_dir = None\n\n    if operating_system == \"windows\":\n        base_dir = os.environ.get(\"LocalAppData\")\n        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n",
                    "rendered": {
                      "text": "    base_dir = None\n\n    if operating_system == \"windows\":\n        base_dir = os.environ.get(\"LocalAppData\")\n        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n",
                      "markdown": "`    base_dir = None\n\n    if operating_system == \"windows\":\n        base_dir = os.environ.get(\"LocalAppData\")\n        if base_dir is None:\n            raise Exception(\"%LocalAppData% is not defined\")\n    elif operating_system == \"darwin\":\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 23,
                  "endLine": 360,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\ndef get_bazelisk_directory():\n    bazelisk_home = os.environ.get(\"BAZELISK_HOME\")\n    if bazelisk_home is not None:\n        return bazelisk_home\n\n",
                    "rendered": {
                      "text": "\n\ndef get_bazelisk_directory():\n    bazelisk_home = os.environ.get(\"BAZELISK_HOME\")\n    if bazelisk_home is not None:\n        return bazelisk_home\n\n",
                      "markdown": "`\n\ndef get_bazelisk_directory():\n    bazelisk_home = os.environ.get(\"BAZELISK_HOME\")\n    if bazelisk_home is not None:\n        return bazelisk_home\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 10,
                  "endLine": 229,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n    filename_suffix = determine_executable_filename_suffix()\n    bazel_flavor = \"bazel\"\n    if os.environ.get(\"BAZELISK_NOJDK\", \"0\") != \"0\":\n        bazel_flavor = \"bazel_nojdk\"\n    return \"{}-{}-{}-{}{}\".format(bazel_flavor, version, operating_system, machine, filename_suffix)\n\n",
                    "rendered": {
                      "text": "\n    filename_suffix = determine_executable_filename_suffix()\n    bazel_flavor = \"bazel\"\n    if os.environ.get(\"BAZELISK_NOJDK\", \"0\") != \"0\":\n        bazel_flavor = \"bazel_nojdk\"\n    return \"{}-{}-{}-{}{}\".format(bazel_flavor, version, operating_system, machine, filename_suffix)\n\n",
                      "markdown": "`\n    filename_suffix = determine_executable_filename_suffix()\n    bazel_flavor = \"bazel\"\n    if os.environ.get(\"BAZELISK_NOJDK\", \"0\") != \"0\":\n        bazel_flavor = \"bazel_nojdk\"\n    return \"{}-{}-{}-{}{}\".format(bazel_flavor, version, operating_system, machine, filename_suffix)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 19,
                  "endLine": 353,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        except Exception:\n            pass\n        if creds is not None:\n            auth = base64.b64encode((\"%s:%s\" % (creds[0], creds[2])).encode(\"ascii\"))\n            request.add_header(\"Authorization\", \"Basic %s\" % auth.decode(\"utf-8\"))\n    with closing(urlopen(request)) as response, open(destination_path, \"wb\") as file:\n        shutil.copyfileobj(response, file)\n",
                    "rendered": {
                      "text": "        except Exception:\n            pass\n        if creds is not None:\n            auth = base64.b64encode((\"%s:%s\" % (creds[0], creds[2])).encode(\"ascii\"))\n            request.add_header(\"Authorization\", \"Basic %s\" % auth.decode(\"utf-8\"))\n    with closing(urlopen(request)) as response, open(destination_path, \"wb\") as file:\n        shutil.copyfileobj(response, file)\n",
                      "markdown": "`        except Exception:\n            pass\n        if creds is not None:\n            auth = base64.b64encode((\"%s:%s\" % (creds[0], creds[2])).encode(\"ascii\"))\n            request.add_header(\"Authorization\", \"Basic %s\" % auth.decode(\"utf-8\"))\n    with closing(urlopen(request)) as response, open(destination_path, \"wb\") as file:\n        shutil.copyfileobj(response, file)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7,
                  "endLine": 18,
                  "endColumn": 13,
                  "snippet": {
                    "text": "limitations under the License.\n\"\"\"\n\nimport base64\nfrom contextlib import closing\nimport hashlib\nimport json\n",
                    "rendered": {
                      "text": "limitations under the License.\n\"\"\"\n\nimport base64\nfrom contextlib import closing\nimport hashlib\nimport json\n",
                      "markdown": "`limitations under the License.\n\"\"\"\n\nimport base64\nfrom contextlib import closing\nimport hashlib\nimport json\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 7,
                  "endLine": 484,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    argv = argv[1:]\n\n    if argv and argv[0] == \"--print_env\":\n        cmd = make_bazel_cmd(bazel_path, argv)\n        env = cmd[\"env\"]\n        for key in env:\n            print(\"{}={}\".format(key, env[key]))\n",
                    "rendered": {
                      "text": "    argv = argv[1:]\n\n    if argv and argv[0] == \"--print_env\":\n        cmd = make_bazel_cmd(bazel_path, argv)\n        env = cmd[\"env\"]\n        for key in env:\n            print(\"{}={}\".format(key, env[key]))\n",
                      "markdown": "`    argv = argv[1:]\n\n    if argv and argv[0] == \"--print_env\":\n        cmd = make_bazel_cmd(bazel_path, argv)\n        env = cmd[\"env\"]\n        for key in env:\n            print(\"{}={}\".format(key, env[key]))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 3,
                  "endLine": 448,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\ndef execute_bazel(bazel_path, argv):\n    cmd = make_bazel_cmd(bazel_path, argv)\n\n    # We cannot use close_fds on Windows, so disable it there.\n    p = subprocess.Popen([cmd[\"exec\"]] + cmd[\"args\"], close_fds=os.name != \"nt\", env=cmd[\"env\"])\n",
                    "rendered": {
                      "text": "\n\ndef execute_bazel(bazel_path, argv):\n    cmd = make_bazel_cmd(bazel_path, argv)\n\n    # We cannot use close_fds on Windows, so disable it there.\n    p = subprocess.Popen([cmd[\"exec\"]] + cmd[\"args\"], close_fds=os.name != \"nt\", env=cmd[\"env\"])\n",
                      "markdown": "`\n\ndef execute_bazel(bazel_path, argv):\n    cmd = make_bazel_cmd(bazel_path, argv)\n\n    # We cannot use close_fds on Windows, so disable it there.\n    p = subprocess.Popen([cmd[\"exec\"]] + cmd[\"args\"], close_fds=os.name != \"nt\", env=cmd[\"env\"])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 50,
                  "endLine": 270,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\ndef determine_url(version, is_commit, bazel_filename):\n    if is_commit:\n        sys.stderr.write(\"Using unreleased version at commit {}\\n\".format(version))\n        # No need to validate the platform thanks to determine_bazel_filename().\n        return BAZEL_GCS_PATH_PATTERN.format(\n            platform=SUPPORTED_PLATFORMS[platform.system().lower()], commit=version\n",
                    "rendered": {
                      "text": "\ndef determine_url(version, is_commit, bazel_filename):\n    if is_commit:\n        sys.stderr.write(\"Using unreleased version at commit {}\\n\".format(version))\n        # No need to validate the platform thanks to determine_bazel_filename().\n        return BAZEL_GCS_PATH_PATTERN.format(\n            platform=SUPPORTED_PLATFORMS[platform.system().lower()], commit=version\n",
                      "markdown": "`\ndef determine_url(version, is_commit, bazel_filename):\n    if is_commit:\n        sys.stderr.write(\"Using unreleased version at commit {}\\n\".format(version))\n        # No need to validate the platform thanks to determine_bazel_filename().\n        return BAZEL_GCS_PATH_PATTERN.format(\n            platform=SUPPORTED_PLATFORMS[platform.system().lower()], commit=version\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 36,
                  "endLine": 8,
                  "snippet": {
                    "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 7,
                  "endLine": 485,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n    if argv and argv[0] == \"--print_env\":\n        cmd = make_bazel_cmd(bazel_path, argv)\n        env = cmd[\"env\"]\n        for key in env:\n            print(\"{}={}\".format(key, env[key]))\n        return 0\n",
                    "rendered": {
                      "text": "\n    if argv and argv[0] == \"--print_env\":\n        cmd = make_bazel_cmd(bazel_path, argv)\n        env = cmd[\"env\"]\n        for key in env:\n            print(\"{}={}\".format(key, env[key]))\n        return 0\n",
                      "markdown": "`\n    if argv and argv[0] == \"--print_env\":\n        cmd = make_bazel_cmd(bazel_path, argv)\n        env = cmd[\"env\"]\n        for key in env:\n            print(\"{}={}\".format(key, env[key]))\n        return 0\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 3,
                  "endLine": 431,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\ndef make_bazel_cmd(bazel_path, argv):\n    env = os.environ.copy()\n\n    wrapper = delegate_tools_bazel(bazel_path)\n    if wrapper:\n",
                    "rendered": {
                      "text": "\n\ndef make_bazel_cmd(bazel_path, argv):\n    env = os.environ.copy()\n\n    wrapper = delegate_tools_bazel(bazel_path)\n    if wrapper:\n",
                      "markdown": "`\n\ndef make_bazel_cmd(bazel_path, argv):\n    env = os.environ.copy()\n\n    wrapper = delegate_tools_bazel(bazel_path)\n    if wrapper:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 7,
                  "endLine": 71,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    # - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n    # - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n    #   nightly. (TODO)\n    # - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n    #   rc. (TODO)\n    # - the file workspace_root/tools/bazel exists -> that version. (TODO)\n    # - workspace_root/.bazelversion exists -> read contents, that version.\n",
                    "rendered": {
                      "text": "    # - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n    # - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n    #   nightly. (TODO)\n    # - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n    #   rc. (TODO)\n    # - the file workspace_root/tools/bazel exists -> that version. (TODO)\n    # - workspace_root/.bazelversion exists -> read contents, that version.\n",
                      "markdown": "`    # - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n    # - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n    #   nightly. (TODO)\n    # - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n    #   rc. (TODO)\n    # - the file workspace_root/tools/bazel exists -> that version. (TODO)\n    # - workspace_root/.bazelversion exists -> read contents, that version.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 7,
                  "endLine": 69,
                  "endColumn": 12,
                  "snippet": {
                    "text": "def decide_which_bazel_version_to_use():\n    # Check in this order:\n    # - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n    # - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n    #   nightly. (TODO)\n    # - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n    #   rc. (TODO)\n",
                    "rendered": {
                      "text": "def decide_which_bazel_version_to_use():\n    # Check in this order:\n    # - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n    # - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n    #   nightly. (TODO)\n    # - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n    #   rc. (TODO)\n",
                      "markdown": "`def decide_which_bazel_version_to_use():\n    # Check in this order:\n    # - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n    # - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n    #   nightly. (TODO)\n    # - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n    #   rc. (TODO)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 7,
                  "endLine": 68,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\ndef decide_which_bazel_version_to_use():\n    # Check in this order:\n    # - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n    # - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n    #   nightly. (TODO)\n    # - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n",
                    "rendered": {
                      "text": "\ndef decide_which_bazel_version_to_use():\n    # Check in this order:\n    # - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n    # - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n    #   nightly. (TODO)\n    # - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n",
                      "markdown": "`\ndef decide_which_bazel_version_to_use():\n    # Check in this order:\n    # - env var \"USE_BAZEL_VERSION\" is set to a specific version.\n    # - env var \"USE_NIGHTLY_BAZEL\" or \"USE_BAZEL_NIGHTLY\" is set -> latest\n    #   nightly. (TODO)\n    # - env var \"USE_CANARY_BAZEL\" or \"USE_BAZEL_CANARY\" is set -> latest\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6,
                  "endLine": 32,
                  "snippet": {
                    "text": "import subprocess\nimport sys\nimport tempfile\nimport time\n\ntry:\n    from urllib.parse import urlparse\n    from urllib.request import urlopen, Request\n",
                    "rendered": {
                      "text": "import subprocess\nimport sys\nimport tempfile\nimport time\n\ntry:\n    from urllib.parse import urlparse\n    from urllib.request import urlopen, Request\n",
                      "markdown": "`import subprocess\nimport sys\nimport tempfile\nimport time\n\ntry:\n    from urllib.parse import urlparse\n    from urllib.request import urlopen, Request\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 6,
                  "endLine": 19,
                  "snippet": {
                    "text": "limitations under the License.\n\"\"\"\n\nimport base64\nfrom contextlib import closing\nimport hashlib\nimport json\nimport netrc\n",
                    "rendered": {
                      "text": "limitations under the License.\n\"\"\"\n\nimport base64\nfrom contextlib import closing\nimport hashlib\nimport json\nimport netrc\n",
                      "markdown": "`limitations under the License.\n\"\"\"\n\nimport base64\nfrom contextlib import closing\nimport hashlib\nimport json\nimport netrc\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/test.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 16,
                  "endLine": 8,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nrm -rf \"$HOME/Library/Caches/bazelisk\"\n\narch=$(uname -m)\nenv -u USE_BAZEL_VERSION ./bin/bazelisk-darwin-\"$arch\" version\nUSE_BAZEL_VERSION=\"latest\" ./bin/bazelisk-darwin-\"$arch\" version\nUSE_BAZEL_VERSION=\"0.28.0\" ./bin/bazelisk-darwin-amd64 version\nUSE_BAZEL_VERSION=\"last_green\" ./bin/bazelisk-darwin-\"$arch\" version\n",
                    "rendered": {
                      "text": "\nrm -rf \"$HOME/Library/Caches/bazelisk\"\n\narch=$(uname -m)\nenv -u USE_BAZEL_VERSION ./bin/bazelisk-darwin-\"$arch\" version\nUSE_BAZEL_VERSION=\"latest\" ./bin/bazelisk-darwin-\"$arch\" version\nUSE_BAZEL_VERSION=\"0.28.0\" ./bin/bazelisk-darwin-amd64 version\nUSE_BAZEL_VERSION=\"last_green\" ./bin/bazelisk-darwin-\"$arch\" version\n",
                      "markdown": "`\nrm -rf \"$HOME/Library/Caches/bazelisk\"\n\narch=$(uname -m)\nenv -u USE_BAZEL_VERSION ./bin/bazelisk-darwin-\"$arch\" version\nUSE_BAZEL_VERSION=\"latest\" ./bin/bazelisk-darwin-\"$arch\" version\nUSE_BAZEL_VERSION=\"0.28.0\" ./bin/bazelisk-darwin-amd64 version\nUSE_BAZEL_VERSION=\"last_green\" ./bin/bazelisk-darwin-\"$arch\" version\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 20,
                  "endLine": 44,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    console.error(`FATAL: Your platform/architecture combination ${\n      os.platform()} - ${os.arch()} is not yet supported.\n    You may need to compile Bazelisk yourself, or use the Python version.\n    See instructions at https://github.com/bazelbuild/bazelisk/blob/master/README.md.`);\n    return Promise.resolve(1);\n  }\n\n",
                    "rendered": {
                      "text": "    console.error(`FATAL: Your platform/architecture combination ${\n      os.platform()} - ${os.arch()} is not yet supported.\n    You may need to compile Bazelisk yourself, or use the Python version.\n    See instructions at https://github.com/bazelbuild/bazelisk/blob/master/README.md.`);\n    return Promise.resolve(1);\n  }\n\n",
                      "markdown": "`    console.error(`FATAL: Your platform/architecture combination ${\n      os.platform()} - ${os.arch()} is not yet supported.\n    You may need to compile Bazelisk yourself, or use the Python version.\n    See instructions at https://github.com/bazelbuild/bazelisk/blob/master/README.md.`);\n    return Promise.resolve(1);\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk.js"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env node\n// Copyright 2020 The Bazel Authors. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "#!/usr/bin/env node\n// Copyright 2020 The Bazel Authors. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n",
                      "markdown": "`#!/usr/bin/env node\n// Copyright 2020 The Bazel Authors. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/stamp.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 43,
                  "endLine": 7,
                  "endColumn": 49,
                  "snippet": {
                    "text": "# summary given by `git describe` is used as a fallback (it contains the most\n# recent tag name, the number of commits since, and the short git hash).\n\nCURRENT_TAG=$(git tag -l --points-at HEAD | head -n1)\nCURRENT_COMMIT=$(git describe --tags HEAD)\n\necho \"STABLE_VERSION ${CURRENT_TAG:-$CURRENT_COMMIT}\"\n",
                    "rendered": {
                      "text": "# summary given by `git describe` is used as a fallback (it contains the most\n# recent tag name, the number of commits since, and the short git hash).\n\nCURRENT_TAG=$(git tag -l --points-at HEAD | head -n1)\nCURRENT_COMMIT=$(git describe --tags HEAD)\n\necho \"STABLE_VERSION ${CURRENT_TAG:-$CURRENT_COMMIT}\"\n",
                      "markdown": "`# summary given by `git describe` is used as a fallback (it contains the most\n# recent tag name, the number of commits since, and the short git hash).\n\nCURRENT_TAG=$(git tag -l --points-at HEAD | head -n1)\nCURRENT_COMMIT=$(git describe --tags HEAD)\n\necho \"STABLE_VERSION ${CURRENT_TAG:-$CURRENT_COMMIT}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/stamp.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 36,
                  "endLine": 7,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# summary given by `git describe` is used as a fallback (it contains the most\n# recent tag name, the number of commits since, and the short git hash).\n\nCURRENT_TAG=$(git tag -l --points-at HEAD | head -n1)\nCURRENT_COMMIT=$(git describe --tags HEAD)\n\necho \"STABLE_VERSION ${CURRENT_TAG:-$CURRENT_COMMIT}\"\n",
                    "rendered": {
                      "text": "# summary given by `git describe` is used as a fallback (it contains the most\n# recent tag name, the number of commits since, and the short git hash).\n\nCURRENT_TAG=$(git tag -l --points-at HEAD | head -n1)\nCURRENT_COMMIT=$(git describe --tags HEAD)\n\necho \"STABLE_VERSION ${CURRENT_TAG:-$CURRENT_COMMIT}\"\n",
                      "markdown": "`# summary given by `git describe` is used as a fallback (it contains the most\n# recent tag name, the number of commits since, and the short git hash).\n\nCURRENT_TAG=$(git tag -l --points-at HEAD | head -n1)\nCURRENT_COMMIT=$(git describe --tags HEAD)\n\necho \"STABLE_VERSION ${CURRENT_TAG:-$CURRENT_COMMIT}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/stamp.sh"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 61,
                  "endLine": 5,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n# Use the first tag that points to the current HEAD. If no tag is found, the\n# summary given by `git describe` is used as a fallback (it contains the most\n# recent tag name, the number of commits since, and the short git hash).\n\nCURRENT_TAG=$(git tag -l --points-at HEAD | head -n1)\nCURRENT_COMMIT=$(git describe --tags HEAD)\n",
                    "rendered": {
                      "text": "\n# Use the first tag that points to the current HEAD. If no tag is found, the\n# summary given by `git describe` is used as a fallback (it contains the most\n# recent tag name, the number of commits since, and the short git hash).\n\nCURRENT_TAG=$(git tag -l --points-at HEAD | head -n1)\nCURRENT_COMMIT=$(git describe --tags HEAD)\n",
                      "markdown": "`\n# Use the first tag that points to the current HEAD. If no tag is found, the\n# summary given by `git describe` is used as a fallback (it contains the most\n# recent tag name, the number of commits since, and the short git hash).\n\nCURRENT_TAG=$(git tag -l --points-at HEAD | head -n1)\nCURRENT_COMMIT=$(git describe --tags HEAD)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 20,
                  "endLine": 11,
                  "endColumn": 26,
                  "snippet": {
                    "text": "Contributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n",
                    "rendered": {
                      "text": "Contributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n",
                      "markdown": "`Contributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 5958,
                  "startColumn": 826,
                  "endLine": 5958,
                  "endColumn": 856,
                  "snippet": {
                    "text": "ild/bazel/issues/20365))\\r\\n* Added new APIs to watch arbitrary files or directory trees `repository_ctx.watch`, `repository_ctx.watch_tree`. ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, instead of upfront using `repository_rule.environ`. ([#20944](https://github.com/bazelbuild/bazel/pull/20944))\\r\\n* The flag `--experimental_worker_for_repo_fetching` now defaults to `auto`, which uses virtual threads from JDK 21 if it's available. This eliminates restarts duri",
                    "rendered": {
                      "text": "ild/bazel/issues/20365))\\r\\n* Added new APIs to watch arbitrary files or directory trees `repository_ctx.watch`, `repository_ctx.watch_tree`. ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, instead of upfront using `repository_rule.environ`. ([#20944](https://github.com/bazelbuild/bazel/pull/20944))\\r\\n* The flag `--experimental_worker_for_repo_fetching` now defaults to `auto`, which uses virtual threads from JDK 21 if it's available. This eliminates restarts duri",
                      "markdown": "`ild/bazel/issues/20365))\\r\\n* Added new APIs to watch arbitrary files or directory trees `repository_ctx.watch`, `repository_ctx.watch_tree`. ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, instead of upfront using `repository_rule.environ`. ([#20944](https://github.com/bazelbuild/bazel/pull/20944))\\r\\n* The flag `--experimental_worker_for_repo_fetching` now defaults to `auto`, which uses virtual threads from JDK 21 if it's available. This eliminates restarts duri`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 1635,
                  "endLine": 3968,
                  "endColumn": 1665,
                  "snippet": {
                    "text": " New method repository_ctx.watch_tree() allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether a path points to a directory.\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, instead of upfront using `repository_rule.environ`. ([#20944](https://github.com/bazelbuild/bazel/pull/20944))\\r\\n* The flag `--experimental_worker_for_repo_fetching` now defaults to `auto`, which uses virtual threads from JDK 21 if it's available. This eliminates restarts duri",
                    "rendered": {
                      "text": " New method repository_ctx.watch_tree() allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether a path points to a directory.\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, instead of upfront using `repository_rule.environ`. ([#20944](https://github.com/bazelbuild/bazel/pull/20944))\\r\\n* The flag `--experimental_worker_for_repo_fetching` now defaults to `auto`, which uses virtual threads from JDK 21 if it's available. This eliminates restarts duri",
                      "markdown": "` New method repository_ctx.watch_tree() allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether a path points to a directory.\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, instead of upfront using `repository_rule.environ`. ([#20944](https://github.com/bazelbuild/bazel/pull/20944))\\r\\n* The flag `--experimental_worker_for_repo_fetching` now defaults to `auto`, which uses virtual threads from JDK 21 if it's available. This eliminates restarts duri`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 1807,
                  "endLine": 1978,
                  "endColumn": 1837,
                  "snippet": {
                    "text": "ew method `repository_ctx.watch_tree()` allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether a path points to a directory.\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, instead of upfront using `repository_rule.environ`. ([#20944](https://github.com/bazelbuild/bazel/pull/20944))\\r\\n* The flag `--experimental_worker_for_repo_fetching` now defaults to `auto`, which uses virtual threads from JDK 21 if it's available. This eliminates restarts duri",
                    "rendered": {
                      "text": "ew method `repository_ctx.watch_tree()` allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether a path points to a directory.\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, instead of upfront using `repository_rule.environ`. ([#20944](https://github.com/bazelbuild/bazel/pull/20944))\\r\\n* The flag `--experimental_worker_for_repo_fetching` now defaults to `auto`, which uses virtual threads from JDK 21 if it's available. This eliminates restarts duri",
                      "markdown": "`ew method `repository_ctx.watch_tree()` allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether a path points to a directory.\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, instead of upfront using `repository_rule.environ`. ([#20944](https://github.com/bazelbuild/bazel/pull/20944))\\r\\n* The flag `--experimental_worker_for_repo_fetching` now defaults to `auto`, which uses virtual threads from JDK 21 if it's available. This eliminates restarts duri`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 34550,
                  "startColumn": 604,
                  "endLine": 34550,
                  "endColumn": 608,
                  "snippet": {
                    "text": "n test_target exit code issue (#[18512](https://github.com/bazelbuild/bazel/pull/18512))\\r\\n* Use extension rather than local names in ModuleExtensionMetadata ([#18535](https://github.com/bazelbuild/bazel/pull/18535))\\r\\n\\r\\n## Acknowledgements\\r\\nThis release contains contributions from many people at Google, as well as Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of",
                    "rendered": {
                      "text": "n test_target exit code issue (#[18512](https://github.com/bazelbuild/bazel/pull/18512))\\r\\n* Use extension rather than local names in ModuleExtensionMetadata ([#18535](https://github.com/bazelbuild/bazel/pull/18535))\\r\\n\\r\\n## Acknowledgements\\r\\nThis release contains contributions from many people at Google, as well as Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of",
                      "markdown": "`n test_target exit code issue (#[18512](https://github.com/bazelbuild/bazel/pull/18512))\\r\\n* Use extension rather than local names in ModuleExtensionMetadata ([#18535](https://github.com/bazelbuild/bazel/pull/18535))\\r\\n\\r\\n## Acknowledgements\\r\\nThis release contains contributions from many people at Google, as well as Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 32560,
                  "startColumn": 9761,
                  "endLine": 32560,
                  "endColumn": 9765,
                  "snippet": {
                    "text": "TATUS_FILE` has been touched ([#18418](https://github.com/bazelbuild/bazel/pull/18418))\\r\\n* test-setup.sh: Attempt to raise the original signal once more ([#18932](https://github.com/bazelbuild/bazel/pull/18932))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as amishra-u, Andreas Herrmann, Andy Hamon, andyrinne12, Benjamin Lee, Benjamin Peterson, Brentley Jones, Chirag Ramani, Christopher Rydell, Daniel Wagner-Hall, Ed Schouten, Fabian Brandstetter, Fabian Meumertzheim, Greg, Ivan Golub, Jon Landis, Kai Zhang, Keith Smiley, lripoche, Ras",
                    "rendered": {
                      "text": "TATUS_FILE` has been touched ([#18418](https://github.com/bazelbuild/bazel/pull/18418))\\r\\n* test-setup.sh: Attempt to raise the original signal once more ([#18932](https://github.com/bazelbuild/bazel/pull/18932))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as amishra-u, Andreas Herrmann, Andy Hamon, andyrinne12, Benjamin Lee, Benjamin Peterson, Brentley Jones, Chirag Ramani, Christopher Rydell, Daniel Wagner-Hall, Ed Schouten, Fabian Brandstetter, Fabian Meumertzheim, Greg, Ivan Golub, Jon Landis, Kai Zhang, Keith Smiley, lripoche, Ras",
                      "markdown": "`TATUS_FILE` has been touched ([#18418](https://github.com/bazelbuild/bazel/pull/18418))\\r\\n* test-setup.sh: Attempt to raise the original signal once more ([#18932](https://github.com/bazelbuild/bazel/pull/18932))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as amishra-u, Andreas Herrmann, Andy Hamon, andyrinne12, Benjamin Lee, Benjamin Peterson, Brentley Jones, Chirag Ramani, Christopher Rydell, Daniel Wagner-Hall, Ed Schouten, Fabian Brandstetter, Fabian Meumertzheim, Greg, Ivan Golub, Jon Landis, Kai Zhang, Keith Smiley, lripoche, Ras`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 32560,
                  "startColumn": 8089,
                  "endLine": 32560,
                  "endColumn": 8097,
                  "snippet": {
                    "text": "azel/pull/18440))\\r\\n* Add `ActionExecutionMetadata` as a parameter to `ActionInputPrefetcher#prefetchFiles`. ([#18656](https://github.com/bazelbuild/bazel/pull/18656))\\r\\n* Use failure_rate instead of failure count for circuit breaker  ([#18559](https://github.com/bazelbuild/bazel/pull/18559))\\r\\n* Update ignored_error logic for circuit_breaker ([#18662](https://github.com/bazelbuild/bazel/pull/18662))\\r\\n* Don't rewind the build if invocation id stays the same ([#18670](https://github.com/bazelbuild/bazel/pull/18670))\\r\\n* Fix potential memory leak in UI when BwoB. ([#18659](https://github.com/bazel",
                    "rendered": {
                      "text": "azel/pull/18440))\\r\\n* Add `ActionExecutionMetadata` as a parameter to `ActionInputPrefetcher#prefetchFiles`. ([#18656](https://github.com/bazelbuild/bazel/pull/18656))\\r\\n* Use failure_rate instead of failure count for circuit breaker  ([#18559](https://github.com/bazelbuild/bazel/pull/18559))\\r\\n* Update ignored_error logic for circuit_breaker ([#18662](https://github.com/bazelbuild/bazel/pull/18662))\\r\\n* Don't rewind the build if invocation id stays the same ([#18670](https://github.com/bazelbuild/bazel/pull/18670))\\r\\n* Fix potential memory leak in UI when BwoB. ([#18659](https://github.com/bazel",
                      "markdown": "`azel/pull/18440))\\r\\n* Add `ActionExecutionMetadata` as a parameter to `ActionInputPrefetcher#prefetchFiles`. ([#18656](https://github.com/bazelbuild/bazel/pull/18656))\\r\\n* Use failure_rate instead of failure count for circuit breaker  ([#18559](https://github.com/bazelbuild/bazel/pull/18559))\\r\\n* Update ignored_error logic for circuit_breaker ([#18662](https://github.com/bazelbuild/bazel/pull/18662))\\r\\n* Don't rewind the build if invocation id stays the same ([#18670](https://github.com/bazelbuild/bazel/pull/18670))\\r\\n* Fix potential memory leak in UI when BwoB. ([#18659](https://github.com/bazel`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 32560,
                  "startColumn": 5728,
                  "endLine": 32560,
                  "endColumn": 5736,
                  "snippet": {
                    "text": "8415))\\r\\n* Teach ijar about dynamic constants ([#18729](https://github.com/bazelbuild/bazel/pull/18729))\\r\\n* Update to latest turbine version ([#18803](https://github.com/bazelbuild/bazel/pull/18803))\\r\\n* Update Error Prone to 2.20.0 ([#18885](https://github.com/bazelbuild/bazel/pull/18885))\\r\\n* Update java_tools to v12.5 ([#18868](https://github.com/bazelbuild/bazel/pull/18868))\\r\\n* Disable UseCorrectAssertInTests by default ([#18948](https://github.com/bazelbuild/bazel/pull/18948))\\r\\n\\r\\n## Local Execution\\r\\n* Use local_termination_grace_seconds when testing LinuxSandbox availability ([#18568",
                    "rendered": {
                      "text": "8415))\\r\\n* Teach ijar about dynamic constants ([#18729](https://github.com/bazelbuild/bazel/pull/18729))\\r\\n* Update to latest turbine version ([#18803](https://github.com/bazelbuild/bazel/pull/18803))\\r\\n* Update Error Prone to 2.20.0 ([#18885](https://github.com/bazelbuild/bazel/pull/18885))\\r\\n* Update java_tools to v12.5 ([#18868](https://github.com/bazelbuild/bazel/pull/18868))\\r\\n* Disable UseCorrectAssertInTests by default ([#18948](https://github.com/bazelbuild/bazel/pull/18948))\\r\\n\\r\\n## Local Execution\\r\\n* Use local_termination_grace_seconds when testing LinuxSandbox availability ([#18568",
                      "markdown": "`8415))\\r\\n* Teach ijar about dynamic constants ([#18729](https://github.com/bazelbuild/bazel/pull/18729))\\r\\n* Update to latest turbine version ([#18803](https://github.com/bazelbuild/bazel/pull/18803))\\r\\n* Update Error Prone to 2.20.0 ([#18885](https://github.com/bazelbuild/bazel/pull/18885))\\r\\n* Update java_tools to v12.5 ([#18868](https://github.com/bazelbuild/bazel/pull/18868))\\r\\n* Disable UseCorrectAssertInTests by default ([#18948](https://github.com/bazelbuild/bazel/pull/18948))\\r\\n\\r\\n## Local Execution\\r\\n* Use local_termination_grace_seconds when testing LinuxSandbox availability ([#18568`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 32560,
                  "startColumn": 5635,
                  "endLine": 32560,
                  "endColumn": 5643,
                  "snippet": {
                    "text": "untimes created by local_java_repository ([#18415](https://github.com/bazelbuild/bazel/pull/18415))\\r\\n* Teach ijar about dynamic constants ([#18729](https://github.com/bazelbuild/bazel/pull/18729))\\r\\n* Update to latest turbine version ([#18803](https://github.com/bazelbuild/bazel/pull/18803))\\r\\n* Update Error Prone to 2.20.0 ([#18885](https://github.com/bazelbuild/bazel/pull/18885))\\r\\n* Update java_tools to v12.5 ([#18868](https://github.com/bazelbuild/bazel/pull/18868))\\r\\n* Disable UseCorrectAssertInTests by default ([#18948](https://github.com/bazelbuild/bazel/pull/18948))\\r\\n\\r\\n## Local Execu",
                    "rendered": {
                      "text": "untimes created by local_java_repository ([#18415](https://github.com/bazelbuild/bazel/pull/18415))\\r\\n* Teach ijar about dynamic constants ([#18729](https://github.com/bazelbuild/bazel/pull/18729))\\r\\n* Update to latest turbine version ([#18803](https://github.com/bazelbuild/bazel/pull/18803))\\r\\n* Update Error Prone to 2.20.0 ([#18885](https://github.com/bazelbuild/bazel/pull/18885))\\r\\n* Update java_tools to v12.5 ([#18868](https://github.com/bazelbuild/bazel/pull/18868))\\r\\n* Disable UseCorrectAssertInTests by default ([#18948](https://github.com/bazelbuild/bazel/pull/18948))\\r\\n\\r\\n## Local Execu",
                      "markdown": "`untimes created by local_java_repository ([#18415](https://github.com/bazelbuild/bazel/pull/18415))\\r\\n* Teach ijar about dynamic constants ([#18729](https://github.com/bazelbuild/bazel/pull/18729))\\r\\n* Update to latest turbine version ([#18803](https://github.com/bazelbuild/bazel/pull/18803))\\r\\n* Update Error Prone to 2.20.0 ([#18885](https://github.com/bazelbuild/bazel/pull/18885))\\r\\n* Update java_tools to v12.5 ([#18868](https://github.com/bazelbuild/bazel/pull/18868))\\r\\n* Disable UseCorrectAssertInTests by default ([#18948](https://github.com/bazelbuild/bazel/pull/18948))\\r\\n\\r\\n## Local Execu`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 32560,
                  "startColumn": 5538,
                  "endLine": 32560,
                  "endColumn": 5546,
                  "snippet": {
                    "text": "8923](https://github.com/bazelbuild/bazel/pull/18923))\\r\\n\\r\\n## Java\\r\\n* Pass version to java_runtimes created by local_java_repository ([#18415](https://github.com/bazelbuild/bazel/pull/18415))\\r\\n* Teach ijar about dynamic constants ([#18729](https://github.com/bazelbuild/bazel/pull/18729))\\r\\n* Update to latest turbine version ([#18803](https://github.com/bazelbuild/bazel/pull/18803))\\r\\n* Update Error Prone to 2.20.0 ([#18885](https://github.com/bazelbuild/bazel/pull/18885))\\r\\n* Update java_tools to v12.5 ([#18868](https://github.com/bazelbuild/bazel/pull/18868))\\r\\n* Disable UseCorrectAssertIn",
                    "rendered": {
                      "text": "8923](https://github.com/bazelbuild/bazel/pull/18923))\\r\\n\\r\\n## Java\\r\\n* Pass version to java_runtimes created by local_java_repository ([#18415](https://github.com/bazelbuild/bazel/pull/18415))\\r\\n* Teach ijar about dynamic constants ([#18729](https://github.com/bazelbuild/bazel/pull/18729))\\r\\n* Update to latest turbine version ([#18803](https://github.com/bazelbuild/bazel/pull/18803))\\r\\n* Update Error Prone to 2.20.0 ([#18885](https://github.com/bazelbuild/bazel/pull/18885))\\r\\n* Update java_tools to v12.5 ([#18868](https://github.com/bazelbuild/bazel/pull/18868))\\r\\n* Disable UseCorrectAssertIn",
                      "markdown": "`8923](https://github.com/bazelbuild/bazel/pull/18923))\\r\\n\\r\\n## Java\\r\\n* Pass version to java_runtimes created by local_java_repository ([#18415](https://github.com/bazelbuild/bazel/pull/18415))\\r\\n* Teach ijar about dynamic constants ([#18729](https://github.com/bazelbuild/bazel/pull/18729))\\r\\n* Update to latest turbine version ([#18803](https://github.com/bazelbuild/bazel/pull/18803))\\r\\n* Update Error Prone to 2.20.0 ([#18885](https://github.com/bazelbuild/bazel/pull/18885))\\r\\n* Update java_tools to v12.5 ([#18868](https://github.com/bazelbuild/bazel/pull/18868))\\r\\n* Disable UseCorrectAssertIn`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 30582,
                  "startColumn": 1038,
                  "endLine": 30582,
                  "endColumn": 1042,
                  "snippet": {
                    "text": "ild/bazel/pull/19052))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/issues/19086))\\r\\n* Update java_tools to v12.6 ([#19091](https://github.com/bazelbuild/bazel/issues/19091))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Brentley Jones and Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of Open",
                    "rendered": {
                      "text": "ild/bazel/pull/19052))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/issues/19086))\\r\\n* Update java_tools to v12.6 ([#19091](https://github.com/bazelbuild/bazel/issues/19091))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Brentley Jones and Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of Open",
                      "markdown": "`ild/bazel/pull/19052))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/issues/19086))\\r\\n* Update java_tools to v12.6 ([#19091](https://github.com/bazelbuild/bazel/issues/19091))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Brentley Jones and Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of Open`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 30582,
                  "startColumn": 863,
                  "endLine": 30582,
                  "endColumn": 871,
                  "snippet": {
                    "text": "19050](https://github.com/bazelbuild/bazel/pull/19050))\\r\\n* Fix a bug where frozen targets list was mutated while expanding env attribute ([#19052](https://github.com/bazelbuild/bazel/pull/19052))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/issues/19086))\\r\\n* Update java_tools to v12.6 ([#19091](https://github.com/bazelbuild/bazel/issues/19091))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Brentley Jones and Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the ",
                    "rendered": {
                      "text": "19050](https://github.com/bazelbuild/bazel/pull/19050))\\r\\n* Fix a bug where frozen targets list was mutated while expanding env attribute ([#19052](https://github.com/bazelbuild/bazel/pull/19052))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/issues/19086))\\r\\n* Update java_tools to v12.6 ([#19091](https://github.com/bazelbuild/bazel/issues/19091))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Brentley Jones and Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the ",
                      "markdown": "`19050](https://github.com/bazelbuild/bazel/pull/19050))\\r\\n* Fix a bug where frozen targets list was mutated while expanding env attribute ([#19052](https://github.com/bazelbuild/bazel/pull/19052))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/issues/19086))\\r\\n* Update java_tools to v12.6 ([#19091](https://github.com/bazelbuild/bazel/issues/19091))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Brentley Jones and Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the `"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 28592,
                  "startColumn": 984,
                  "endLine": 28592,
                  "endColumn": 988,
                  "snippet": {
                    "text": "(https://github.com/bazelbuild/bazel/pull/19175))\\r\\n* Module extensions are now re-evaluated if any labels they depend on change, similar to repo rules. ([#19175](https://github.com/bazelbuild/bazel/pull/19175))\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of",
                    "rendered": {
                      "text": "(https://github.com/bazelbuild/bazel/pull/19175))\\r\\n* Module extensions are now re-evaluated if any labels they depend on change, similar to repo rules. ([#19175](https://github.com/bazelbuild/bazel/pull/19175))\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of",
                      "markdown": "`(https://github.com/bazelbuild/bazel/pull/19175))\\r\\n* Module extensions are now re-evaluated if any labels they depend on change, similar to repo rules. ([#19175](https://github.com/bazelbuild/bazel/pull/19175))\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Fabian Meumertzheim.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 26602,
                  "startColumn": 11876,
                  "endLine": 26602,
                  "endColumn": 11880,
                  "snippet": {
                    "text": "ncompatible_merge_fixed_and_default_shell_env` ([#19319](https://github.com/bazelbuild/bazel/pull/19319))\\r\\n* Include name in `repr` of exported `rule`s ([#19229](https://github.com/bazelbuild/bazel/pull/19229))\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Andreas Herrmann, Brentley Jones, Chirag Ramani, Ed Schouten, Fabian Meumertzheim, George Gensure, Julio Merino, Keith Smiley, Matt Mackay, NelsonLi0701, Nicholas Junge, Orion Hodson, Roman Salvador, Ted Kaplan, Thi Doan, and Tyler Williams.\\r\\n\\r\\n_Notice_: Bazel installers conta",
                    "rendered": {
                      "text": "ncompatible_merge_fixed_and_default_shell_env` ([#19319](https://github.com/bazelbuild/bazel/pull/19319))\\r\\n* Include name in `repr` of exported `rule`s ([#19229](https://github.com/bazelbuild/bazel/pull/19229))\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Andreas Herrmann, Brentley Jones, Chirag Ramani, Ed Schouten, Fabian Meumertzheim, George Gensure, Julio Merino, Keith Smiley, Matt Mackay, NelsonLi0701, Nicholas Junge, Orion Hodson, Roman Salvador, Ted Kaplan, Thi Doan, and Tyler Williams.\\r\\n\\r\\n_Notice_: Bazel installers conta",
                      "markdown": "`ncompatible_merge_fixed_and_default_shell_env` ([#19319](https://github.com/bazelbuild/bazel/pull/19319))\\r\\n* Include name in `repr` of exported `rule`s ([#19229](https://github.com/bazelbuild/bazel/pull/19229))\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Andreas Herrmann, Brentley Jones, Chirag Ramani, Ed Schouten, Fabian Meumertzheim, George Gensure, Julio Merino, Keith Smiley, Matt Mackay, NelsonLi0701, Nicholas Junge, Orion Hodson, Roman Salvador, Ted Kaplan, Thi Doan, and Tyler Williams.\\r\\n\\r\\n_Notice_: Bazel installers conta`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 26602,
                  "startColumn": 8789,
                  "endLine": 26602,
                  "endColumn": 8797,
                  "snippet": {
                    "text": "to volatile workspace status file [(#19499](https://github.com/bazelbuild/bazel/pull/19499))\\r\\n* Update java_tools to v12.7 ([#19522](https://github.com/bazelbuild/bazel/pull/19522))\\r\\n* Use `Label` in `@bazel_tools//tools/jdk` macros ([#19675](https://github.com/bazelbuild/bazel/pull/19675))\\r\\n* Update rules_java to 5.5.1 ([#19701](https://github.com/bazelbuild/bazel/pull/19701))\\r\\n* Fix Java compilation for jdk21 ([#19735](https://github.com/bazelbuild/bazel/pull/19735))\\r\\n* Handle synthetic method parameters entries that don't have names ([#19758](https://github.com/bazelbuild/bazel/pull/19758",
                    "rendered": {
                      "text": "to volatile workspace status file [(#19499](https://github.com/bazelbuild/bazel/pull/19499))\\r\\n* Update java_tools to v12.7 ([#19522](https://github.com/bazelbuild/bazel/pull/19522))\\r\\n* Use `Label` in `@bazel_tools//tools/jdk` macros ([#19675](https://github.com/bazelbuild/bazel/pull/19675))\\r\\n* Update rules_java to 5.5.1 ([#19701](https://github.com/bazelbuild/bazel/pull/19701))\\r\\n* Fix Java compilation for jdk21 ([#19735](https://github.com/bazelbuild/bazel/pull/19735))\\r\\n* Handle synthetic method parameters entries that don't have names ([#19758](https://github.com/bazelbuild/bazel/pull/19758",
                      "markdown": "`to volatile workspace status file [(#19499](https://github.com/bazelbuild/bazel/pull/19499))\\r\\n* Update java_tools to v12.7 ([#19522](https://github.com/bazelbuild/bazel/pull/19522))\\r\\n* Use `Label` in `@bazel_tools//tools/jdk` macros ([#19675](https://github.com/bazelbuild/bazel/pull/19675))\\r\\n* Update rules_java to 5.5.1 ([#19701](https://github.com/bazelbuild/bazel/pull/19701))\\r\\n* Fix Java compilation for jdk21 ([#19735](https://github.com/bazelbuild/bazel/pull/19735))\\r\\n* Handle synthetic method parameters entries that don't have names ([#19758](https://github.com/bazelbuild/bazel/pull/19758`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 26602,
                  "startColumn": 8586,
                  "endLine": 26602,
                  "endColumn": 8594,
                  "snippet": {
                    "text": "github.com/bazelbuild/bazel/pull/19827))\\r\\n\\r\\n## Java\\r\\n* Add toolchain type for Java bootstrap runtime ([#19220](https://github.com/bazelbuild/bazel/pull/19220))\\r\\n* Add formatted timestamp entries to volatile workspace status file [(#19499](https://github.com/bazelbuild/bazel/pull/19499))\\r\\n* Update java_tools to v12.7 ([#19522](https://github.com/bazelbuild/bazel/pull/19522))\\r\\n* Use `Label` in `@bazel_tools//tools/jdk` macros ([#19675](https://github.com/bazelbuild/bazel/pull/19675))\\r\\n* Update rules_java to 5.5.1 ([#19701](https://github.com/bazelbuild/bazel/pull/19701))\\r\\n* Fix Java comp",
                    "rendered": {
                      "text": "github.com/bazelbuild/bazel/pull/19827))\\r\\n\\r\\n## Java\\r\\n* Add toolchain type for Java bootstrap runtime ([#19220](https://github.com/bazelbuild/bazel/pull/19220))\\r\\n* Add formatted timestamp entries to volatile workspace status file [(#19499](https://github.com/bazelbuild/bazel/pull/19499))\\r\\n* Update java_tools to v12.7 ([#19522](https://github.com/bazelbuild/bazel/pull/19522))\\r\\n* Use `Label` in `@bazel_tools//tools/jdk` macros ([#19675](https://github.com/bazelbuild/bazel/pull/19675))\\r\\n* Update rules_java to 5.5.1 ([#19701](https://github.com/bazelbuild/bazel/pull/19701))\\r\\n* Fix Java comp",
                      "markdown": "`github.com/bazelbuild/bazel/pull/19827))\\r\\n\\r\\n## Java\\r\\n* Add toolchain type for Java bootstrap runtime ([#19220](https://github.com/bazelbuild/bazel/pull/19220))\\r\\n* Add formatted timestamp entries to volatile workspace status file [(#19499](https://github.com/bazelbuild/bazel/pull/19499))\\r\\n* Update java_tools to v12.7 ([#19522](https://github.com/bazelbuild/bazel/pull/19522))\\r\\n* Use `Label` in `@bazel_tools//tools/jdk` macros ([#19675](https://github.com/bazelbuild/bazel/pull/19675))\\r\\n* Update rules_java to 5.5.1 ([#19701](https://github.com/bazelbuild/bazel/pull/19701))\\r\\n* Fix Java comp`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 26602,
                  "startColumn": 7003,
                  "endLine": 26602,
                  "endColumn": 7007,
                  "snippet": {
                    "text": "543](https://github.com/bazelbuild/bazel/pull/19543))\\r\\n* Show fetch progress for the `mod` command ([#19542](https://github.com/bazelbuild/bazel/pull/19542))\\r\\n* Explain the use of `str(Label(...))` in the docs ([#19554](https://github.com/bazelbuild/bazel/pull/19554))\\r\\n* Inject builtin modules at the end of the MODULE.bazel file ([#19573](https://github.com/bazelbuild/bazel/pull/19573))\\r\\n* Use case-insensitive comparison for Windows paths in `runfiles.bash`  ([#19626](https://github.com/bazelbuild/bazel/pull/19626))\\r\\n* Show test labels in summaries in display form ([#19625](https://githu",
                    "rendered": {
                      "text": "543](https://github.com/bazelbuild/bazel/pull/19543))\\r\\n* Show fetch progress for the `mod` command ([#19542](https://github.com/bazelbuild/bazel/pull/19542))\\r\\n* Explain the use of `str(Label(...))` in the docs ([#19554](https://github.com/bazelbuild/bazel/pull/19554))\\r\\n* Inject builtin modules at the end of the MODULE.bazel file ([#19573](https://github.com/bazelbuild/bazel/pull/19573))\\r\\n* Use case-insensitive comparison for Windows paths in `runfiles.bash`  ([#19626](https://github.com/bazelbuild/bazel/pull/19626))\\r\\n* Show test labels in summaries in display form ([#19625](https://githu",
                      "markdown": "`543](https://github.com/bazelbuild/bazel/pull/19543))\\r\\n* Show fetch progress for the `mod` command ([#19542](https://github.com/bazelbuild/bazel/pull/19542))\\r\\n* Explain the use of `str(Label(...))` in the docs ([#19554](https://github.com/bazelbuild/bazel/pull/19554))\\r\\n* Inject builtin modules at the end of the MODULE.bazel file ([#19573](https://github.com/bazelbuild/bazel/pull/19573))\\r\\n* Use case-insensitive comparison for Windows paths in `runfiles.bash`  ([#19626](https://github.com/bazelbuild/bazel/pull/19626))\\r\\n* Show test labels in summaries in display form ([#19625](https://githu`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 26602,
                  "startColumn": 2776,
                  "endLine": 26602,
                  "endColumn": 2784,
                  "snippet": {
                    "text": "g from macOS libtool invocation ([#19454](https://github.com/bazelbuild/bazel/pull/19454))\\r\\n* Only use `/showIncludes` if supported ([#19521](https://github.com/bazelbuild/bazel/pull/19521))\\r\\n* Advertise CcInfo from cc_proto_library ([#19534](https://github.com/bazelbuild/bazel/pull/19534))\\r\\n* Update unknown Xcode version error message and provide an environment variable to force re-evaluation ([#19540](https://github.com/bazelbuild/bazel/pull/19540))\\r\\n* cc_library: propagate data dependencies via implementation_deps. ([#19590](https://github.com/bazelbuild/bazel/pull/19590))\\r\\n* Error on pot",
                    "rendered": {
                      "text": "g from macOS libtool invocation ([#19454](https://github.com/bazelbuild/bazel/pull/19454))\\r\\n* Only use `/showIncludes` if supported ([#19521](https://github.com/bazelbuild/bazel/pull/19521))\\r\\n* Advertise CcInfo from cc_proto_library ([#19534](https://github.com/bazelbuild/bazel/pull/19534))\\r\\n* Update unknown Xcode version error message and provide an environment variable to force re-evaluation ([#19540](https://github.com/bazelbuild/bazel/pull/19540))\\r\\n* cc_library: propagate data dependencies via implementation_deps. ([#19590](https://github.com/bazelbuild/bazel/pull/19590))\\r\\n* Error on pot",
                      "markdown": "`g from macOS libtool invocation ([#19454](https://github.com/bazelbuild/bazel/pull/19454))\\r\\n* Only use `/showIncludes` if supported ([#19521](https://github.com/bazelbuild/bazel/pull/19521))\\r\\n* Advertise CcInfo from cc_proto_library ([#19534](https://github.com/bazelbuild/bazel/pull/19534))\\r\\n* Update unknown Xcode version error message and provide an environment variable to force re-evaluation ([#19540](https://github.com/bazelbuild/bazel/pull/19540))\\r\\n* cc_library: propagate data dependencies via implementation_deps. ([#19590](https://github.com/bazelbuild/bazel/pull/19590))\\r\\n* Error on pot`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 26602,
                  "startColumn": 484,
                  "endLine": 26602,
                  "endColumn": 490,
                  "snippet": {
                    "text": "\\r\\n\\r\\n**Baseline:**  0f231ac8acabcd8aa309da041c98ab90a1552418\\r\\n\\r\\nBazel 6.4.0 is a minor LTS release. It is fully backward compatible with Bazel 6.0 and contains selected changes by the Bazel community and Google engineers.\\r\\n\\r\\n## General\\r\\n* Add support for more workspace boundary files to bash completion ([#19281](https://github.com/bazelbuild/bazel/pull/19281)) \\r\\n* Ignore Starlark options on commands with `allowResidue = False` ([#19417](https://github.com/bazelbuild/bazel/pull/19417))\\r\\n* Print Passed and Failed methods in detailed test summary ([#19505](https://github.com/bazelbuild",
                    "rendered": {
                      "text": "\\r\\n\\r\\n**Baseline:**  0f231ac8acabcd8aa309da041c98ab90a1552418\\r\\n\\r\\nBazel 6.4.0 is a minor LTS release. It is fully backward compatible with Bazel 6.0 and contains selected changes by the Bazel community and Google engineers.\\r\\n\\r\\n## General\\r\\n* Add support for more workspace boundary files to bash completion ([#19281](https://github.com/bazelbuild/bazel/pull/19281)) \\r\\n* Ignore Starlark options on commands with `allowResidue = False` ([#19417](https://github.com/bazelbuild/bazel/pull/19417))\\r\\n* Print Passed and Failed methods in detailed test summary ([#19505](https://github.com/bazelbuild",
                      "markdown": "`\\r\\n\\r\\n**Baseline:**  0f231ac8acabcd8aa309da041c98ab90a1552418\\r\\n\\r\\nBazel 6.4.0 is a minor LTS release. It is fully backward compatible with Bazel 6.0 and contains selected changes by the Bazel community and Google engineers.\\r\\n\\r\\n## General\\r\\n* Add support for more workspace boundary files to bash completion ([#19281](https://github.com/bazelbuild/bazel/pull/19281)) \\r\\n* Ignore Starlark options on commands with `allowResidue = False` ([#19417](https://github.com/bazelbuild/bazel/pull/19417))\\r\\n* Print Passed and Failed methods in detailed test summary ([#19505](https://github.com/bazelbuild`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 24612,
                  "startColumn": 27098,
                  "endLine": 24612,
                  "endColumn": 27102,
                  "snippet": {
                    "text": "ngs\\r\\n  * --tvos_simulator_version\\r\\n  * --tvos_simulator_device\\r\\n  * --use_single_jar_apk_builder\\r\\n  * --use_workers_with_dexbuilder\\r\\n  * --watchos_simulator_version\\r\\n  * --watchos_simulator_device\\r\\n\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Adam Lavin, Adrian Imboden, Alan Falloon, Alessandro Patti, Alex Eagle, Alexander Grund, AlexTereshenkov, Amanda L Martin, Amet Umerov, Andreas Herrmann, Andy Hamon, andyrinne12, Ankit Agarwal, Ankush Goyal, Anshuman Mishra, Anthony Ter-Saakov, Antoine Musso, Artem Zinnatullin, ar",
                    "rendered": {
                      "text": "ngs\\r\\n  * --tvos_simulator_version\\r\\n  * --tvos_simulator_device\\r\\n  * --use_single_jar_apk_builder\\r\\n  * --use_workers_with_dexbuilder\\r\\n  * --watchos_simulator_version\\r\\n  * --watchos_simulator_device\\r\\n\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Adam Lavin, Adrian Imboden, Alan Falloon, Alessandro Patti, Alex Eagle, Alexander Grund, AlexTereshenkov, Amanda L Martin, Amet Umerov, Andreas Herrmann, Andy Hamon, andyrinne12, Ankit Agarwal, Ankush Goyal, Anshuman Mishra, Anthony Ter-Saakov, Antoine Musso, Artem Zinnatullin, ar",
                      "markdown": "`ngs\\r\\n  * --tvos_simulator_version\\r\\n  * --tvos_simulator_device\\r\\n  * --use_single_jar_apk_builder\\r\\n  * --use_workers_with_dexbuilder\\r\\n  * --watchos_simulator_version\\r\\n  * --watchos_simulator_device\\r\\n\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Adam Lavin, Adrian Imboden, Alan Falloon, Alessandro Patti, Alex Eagle, Alexander Grund, AlexTereshenkov, Amanda L Martin, Amet Umerov, Andreas Herrmann, Andy Hamon, andyrinne12, Ankit Agarwal, Ankush Goyal, Anshuman Mishra, Anthony Ter-Saakov, Antoine Musso, Artem Zinnatullin, ar`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 24612,
                  "startColumn": 18541,
                  "endLine": 24612,
                  "endColumn": 18545,
                  "snippet": {
                    "text": "ass, PathFragment proto. This breaks up the ActionGraphContainer into multiple ones which will prevent large protos from crashing Bazel.\\r\\n* (BEP) TargetConfigured events will be marked aborted instead of published when there is an analysis error. This is motivated by a low level Blaze change aimed at improving scalability.\\r\\n* The new `--consistent_labels` option on `query`, `cquery`, and `aquery` can be used to force consistent label formatting across all output modes that is also compatible with `str(Label(...))` in Starlark.\\r\\n\\r\\n\\r\\n## Python\\r\\n\\r\\n\\r\\n\\r\\n* **[Incompatible]** --experime",
                    "rendered": {
                      "text": "ass, PathFragment proto. This breaks up the ActionGraphContainer into multiple ones which will prevent large protos from crashing Bazel.\\r\\n* (BEP) TargetConfigured events will be marked aborted instead of published when there is an analysis error. This is motivated by a low level Blaze change aimed at improving scalability.\\r\\n* The new `--consistent_labels` option on `query`, `cquery`, and `aquery` can be used to force consistent label formatting across all output modes that is also compatible with `str(Label(...))` in Starlark.\\r\\n\\r\\n\\r\\n## Python\\r\\n\\r\\n\\r\\n\\r\\n* **[Incompatible]** --experime",
                      "markdown": "`ass, PathFragment proto. This breaks up the ActionGraphContainer into multiple ones which will prevent large protos from crashing Bazel.\\r\\n* (BEP) TargetConfigured events will be marked aborted instead of published when there is an analysis error. This is motivated by a low level Blaze change aimed at improving scalability.\\r\\n* The new `--consistent_labels` option on `query`, `cquery`, and `aquery` can be used to force consistent label formatting across all output modes that is also compatible with `str(Label(...))` in Starlark.\\r\\n\\r\\n\\r\\n## Python\\r\\n\\r\\n\\r\\n\\r\\n* **[Incompatible]** --experime`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 24612,
                  "startColumn": 10945,
                  "endLine": 24612,
                  "endColumn": 10953,
                  "snippet": {
                    "text": "d/reference/be/common-definitions#common-attributes)) are no longer replayed on subsequent invocations unless the target in question is re-analyzed. Warnings are purely informational, so this change has no bearing on the correctness of the build. Downstream tests that break due to this change should update their expectations.\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n\\r\\n* **[Incompatible]** All labels in Bazel error messages, log output, Build Event Protocol, etc. are now prefixed with double-at (`@@`) instead of single-at (`@`) where applicable, to properly denote that they contain canonical re",
                    "rendered": {
                      "text": "d/reference/be/common-definitions#common-attributes)) are no longer replayed on subsequent invocations unless the target in question is re-analyzed. Warnings are purely informational, so this change has no bearing on the correctness of the build. Downstream tests that break due to this change should update their expectations.\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n\\r\\n* **[Incompatible]** All labels in Bazel error messages, log output, Build Event Protocol, etc. are now prefixed with double-at (`@@`) instead of single-at (`@`) where applicable, to properly denote that they contain canonical re",
                      "markdown": "`d/reference/be/common-definitions#common-attributes)) are no longer replayed on subsequent invocations unless the target in question is re-analyzed. Warnings are purely informational, so this change has no bearing on the correctness of the build. Downstream tests that break due to this change should update their expectations.\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n\\r\\n* **[Incompatible]** All labels in Bazel error messages, log output, Build Event Protocol, etc. are now prefixed with double-at (`@@`) instead of single-at (`@`) where applicable, to properly denote that they contain canonical re`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 24612,
                  "startColumn": 3024,
                  "endLine": 24612,
                  "endColumn": 3028,
                  "snippet": {
                    "text": "hub.com/bazelbuild/bazel/issues/8195)\\r\\n* --[incompatible_disable_starlark_host_transitions](https://github.com/bazelbuild/bazel/issues/17032)\\r\\n* --[incompatible_config_setting_private_default_visibility](https://github.com/bazelbuild/bazel/issues/12933)\\r\\n\\r\\nAlready flipped and will be removed at head:\\r\\n* --incompatible_no_attr_license\\r\\n* --[incompatible_disable_objc_library_transition](https://github.com/bazelbuild/bazel/issues/19688) \\r\\n* --[incompatible_fail_on_unknown_attributes](https://github.com/bazelbuild/bazel/issues/19403)\\r\\n* --incompatible_enable_cc_toolchain_resolution\\r\\n",
                    "rendered": {
                      "text": "hub.com/bazelbuild/bazel/issues/8195)\\r\\n* --[incompatible_disable_starlark_host_transitions](https://github.com/bazelbuild/bazel/issues/17032)\\r\\n* --[incompatible_config_setting_private_default_visibility](https://github.com/bazelbuild/bazel/issues/12933)\\r\\n\\r\\nAlready flipped and will be removed at head:\\r\\n* --incompatible_no_attr_license\\r\\n* --[incompatible_disable_objc_library_transition](https://github.com/bazelbuild/bazel/issues/19688) \\r\\n* --[incompatible_fail_on_unknown_attributes](https://github.com/bazelbuild/bazel/issues/19403)\\r\\n* --incompatible_enable_cc_toolchain_resolution\\r\\n",
                      "markdown": "`hub.com/bazelbuild/bazel/issues/8195)\\r\\n* --[incompatible_disable_starlark_host_transitions](https://github.com/bazelbuild/bazel/issues/17032)\\r\\n* --[incompatible_config_setting_private_default_visibility](https://github.com/bazelbuild/bazel/issues/12933)\\r\\n\\r\\nAlready flipped and will be removed at head:\\r\\n* --incompatible_no_attr_license\\r\\n* --[incompatible_disable_objc_library_transition](https://github.com/bazelbuild/bazel/issues/19688) \\r\\n* --[incompatible_fail_on_unknown_attributes](https://github.com/bazelbuild/bazel/issues/19403)\\r\\n* --incompatible_enable_cc_toolchain_resolution\\r\\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 24612,
                  "startColumn": 1038,
                  "endLine": 24612,
                  "endColumn": 1047,
                  "snippet": {
                    "text": "ecuting actions while it is still analyzing other top-level targets (Project Skymeld).\\r\\n  * This reduces end-to-end wall time for multi-target builds by up to 15%.\\r\\n* Platform-based toolchain resolution is now enabled for Android and C++. \\r\\n  * Android rules now use platforms and toolchains to control the target devices.. Android projects will need to stop passing the legacy flag `--fat_apk_cpu`, and instead use `--android_platforms` using platforms defined with the `@platforms//os:android` constraint. The https://github.com/bazelbuild/rules_android repository defines four standard Android platfo",
                    "rendered": {
                      "text": "ecuting actions while it is still analyzing other top-level targets (Project Skymeld).\\r\\n  * This reduces end-to-end wall time for multi-target builds by up to 15%.\\r\\n* Platform-based toolchain resolution is now enabled for Android and C++. \\r\\n  * Android rules now use platforms and toolchains to control the target devices.. Android projects will need to stop passing the legacy flag `--fat_apk_cpu`, and instead use `--android_platforms` using platforms defined with the `@platforms//os:android` constraint. The https://github.com/bazelbuild/rules_android repository defines four standard Android platfo",
                      "markdown": "`ecuting actions while it is still analyzing other top-level targets (Project Skymeld).\\r\\n  * This reduces end-to-end wall time for multi-target builds by up to 15%.\\r\\n* Platform-based toolchain resolution is now enabled for Android and C++. \\r\\n  * Android rules now use platforms and toolchains to control the target devices.. Android projects will need to stop passing the legacy flag `--fat_apk_cpu`, and instead use `--android_platforms` using platforms defined with the `@platforms//os:android` constraint. The https://github.com/bazelbuild/rules_android repository defines four standard Android platfo`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 20656,
                  "startColumn": 1095,
                  "endLine": 20656,
                  "endColumn": 1099,
                  "snippet": {
                    "text": "lip `--incompatible_visibility_private_attributes_at_definition` ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#20472](https://github.com/bazelbuild/bazel/pull/20472))\\r\\n\\r\\n\\r\\n## Remote Execution\\r\\n\\r\\n\\r\\n\\r\\n* Remote",
                    "rendered": {
                      "text": "lip `--incompatible_visibility_private_attributes_at_definition` ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#20472](https://github.com/bazelbuild/bazel/pull/20472))\\r\\n\\r\\n\\r\\n## Remote Execution\\r\\n\\r\\n\\r\\n\\r\\n* Remote",
                      "markdown": "`lip `--incompatible_visibility_private_attributes_at_definition` ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#20472](https://github.com/bazelbuild/bazel/pull/20472))\\r\\n\\r\\n\\r\\n## Remote Execution\\r\\n\\r\\n\\r\\n\\r\\n* Remote`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 16280,
                  "startColumn": 1220,
                  "endLine": 16280,
                  "endColumn": 1224,
                  "snippet": {
                    "text": "\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#20472](https://github.com/bazelbuild/bazel/pull/20472))\\r\\n\\r\\n\\r\\n## Remote Execution\\r\\n\\r\\n\\r\\n\\r\\n* Remote",
                    "rendered": {
                      "text": "\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#20472](https://github.com/bazelbuild/bazel/pull/20472))\\r\\n\\r\\n\\r\\n## Remote Execution\\r\\n\\r\\n\\r\\n\\r\\n* Remote",
                      "markdown": "`\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#20472](https://github.com/bazelbuild/bazel/pull/20472))\\r\\n\\r\\n\\r\\n## Remote Execution\\r\\n\\r\\n\\r\\n\\r\\n* Remote`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 14098,
                  "startColumn": 2484,
                  "endLine": 14098,
                  "endColumn": 2488,
                  "snippet": {
                    "text": "20749](https://github.com/bazelbuild/bazel/pull/20749))\\r\\n\\r\\n## Remote Execution\\r\\n* Force output checking for incremental run commands without the bytes. ([#20881](https://github.com/bazelbuild/bazel/pull/20881))\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from many people at Google, as well as David Ostrovsky, Fabian Meumertzheim, Siddhartha Bagaria, Tianyu Geng.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel co",
                    "rendered": {
                      "text": "20749](https://github.com/bazelbuild/bazel/pull/20749))\\r\\n\\r\\n## Remote Execution\\r\\n* Force output checking for incremental run commands without the bytes. ([#20881](https://github.com/bazelbuild/bazel/pull/20881))\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from many people at Google, as well as David Ostrovsky, Fabian Meumertzheim, Siddhartha Bagaria, Tianyu Geng.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel co",
                      "markdown": "`20749](https://github.com/bazelbuild/bazel/pull/20749))\\r\\n\\r\\n## Remote Execution\\r\\n* Force output checking for incremental run commands without the bytes. ([#20881](https://github.com/bazelbuild/bazel/pull/20881))\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from many people at Google, as well as David Ostrovsky, Fabian Meumertzheim, Siddhartha Bagaria, Tianyu Geng.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel co`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 12120,
                  "startColumn": 2771,
                  "endLine": 12120,
                  "endColumn": 2775,
                  "snippet": {
                    "text": "ated in favor of the new `Label.repo_name`.\\r\\n    * `Label.relative()` is deprecated in favor of the new `Label.same_package_label()` alongside the existing \\r\\n    * `native.package_relative_label()` and `Label()`.\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from many people at Google, as well as Brentley Jones, Fabian Meumertzheim, Jordan Mele, Rahul Butani, and Son Luong Ngoc.\\r\\n\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome ver",
                    "rendered": {
                      "text": "ated in favor of the new `Label.repo_name`.\\r\\n    * `Label.relative()` is deprecated in favor of the new `Label.same_package_label()` alongside the existing \\r\\n    * `native.package_relative_label()` and `Label()`.\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from many people at Google, as well as Brentley Jones, Fabian Meumertzheim, Jordan Mele, Rahul Butani, and Son Luong Ngoc.\\r\\n\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome ver",
                      "markdown": "`ated in favor of the new `Label.repo_name`.\\r\\n    * `Label.relative()` is deprecated in favor of the new `Label.same_package_label()` alongside the existing \\r\\n    * `native.package_relative_label()` and `Label()`.\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from many people at Google, as well as Brentley Jones, Fabian Meumertzheim, Jordan Mele, Rahul Butani, and Son Luong Ngoc.\\r\\n\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome ver`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 12120,
                  "startColumn": 1394,
                  "endLine": 12120,
                  "endColumn": 1398,
                  "snippet": {
                    "text": "ll/20520))\\r\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n## External Dependencies\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n## Java\\r\\n* Don't pass --add-opens= to javac ([#20472](https://github.com/bazelbuild/bazel/pull/20472))\\r\\n\\r\\n## Remote Execution\\r\\n* RemoteSpawnRunner: record inbetween phas",
                    "rendered": {
                      "text": "ll/20520))\\r\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n## External Dependencies\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n## Java\\r\\n* Don't pass --add-opens= to javac ([#20472](https://github.com/bazelbuild/bazel/pull/20472))\\r\\n\\r\\n## Remote Execution\\r\\n* RemoteSpawnRunner: record inbetween phas",
                      "markdown": "`ll/20520))\\r\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n## External Dependencies\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n## Java\\r\\n* Don't pass --add-opens= to javac ([#20472](https://github.com/bazelbuild/bazel/pull/20472))\\r\\n\\r\\n## Remote Execution\\r\\n* RemoteSpawnRunner: record inbetween phas`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 10130,
                  "startColumn": 431,
                  "endLine": 10130,
                  "endColumn": 435,
                  "snippet": {
                    "text": "[this page](https://bazel.build/release/rolling).\\r\\n\\r\\n## External Deps\\r\\n* Disregard WORKSPACE while verifying lockfile repo mapping entries in extension eval ([#21003](https://github.com/bazelbuild/bazel/pull/21003))\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from people at Google.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of the bundled OpenJDK and other o",
                    "rendered": {
                      "text": "[this page](https://bazel.build/release/rolling).\\r\\n\\r\\n## External Deps\\r\\n* Disregard WORKSPACE while verifying lockfile repo mapping entries in extension eval ([#21003](https://github.com/bazelbuild/bazel/pull/21003))\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from people at Google.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of the bundled OpenJDK and other o",
                      "markdown": "`[this page](https://bazel.build/release/rolling).\\r\\n\\r\\n## External Deps\\r\\n* Disregard WORKSPACE while verifying lockfile repo mapping entries in extension eval ([#21003](https://github.com/bazelbuild/bazel/pull/21003))\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from people at Google.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of the bundled OpenJDK and other o`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 7936,
                  "startColumn": 695,
                  "endLine": 7936,
                  "endColumn": 699,
                  "snippet": {
                    "text": "nges by the Bazel community and Google engineers.\\r\\n\\r\\n## External Deps\\r\\n* Disregard WORKSPACE while verifying lockfile repo mapping entries in extension eval ([#21003](https://github.com/bazelbuild/bazel/pull/21003))\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from people at Google.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of the bundled OpenJDK and other o",
                    "rendered": {
                      "text": "nges by the Bazel community and Google engineers.\\r\\n\\r\\n## External Deps\\r\\n* Disregard WORKSPACE while verifying lockfile repo mapping entries in extension eval ([#21003](https://github.com/bazelbuild/bazel/pull/21003))\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from people at Google.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of the bundled OpenJDK and other o",
                      "markdown": "`nges by the Bazel community and Google engineers.\\r\\n\\r\\n## External Deps\\r\\n* Disregard WORKSPACE while verifying lockfile repo mapping entries in extension eval ([#21003](https://github.com/bazelbuild/bazel/pull/21003))\\r\\n\\r\\n## Acknowledgements:\\r\\nThis release contains contributions from people at Google.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers should always be redistributed along with the source code.\\r\\n\\r\\nSome versions of Bazel contain a bundled version of OpenJDK. The license of the bundled OpenJDK and other o`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 5958,
                  "startColumn": 5055,
                  "endLine": 5958,
                  "endColumn": 5059,
                  "snippet": {
                    "text": "expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\nRefer to the [full list of commits](https://github.com/bazelbuild/bazel/compare/7.0.2...7.1.0rc1) for more details.\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Christian Scott, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Yan",
                    "rendered": {
                      "text": "expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\nRefer to the [full list of commits](https://github.com/bazelbuild/bazel/compare/7.0.2...7.1.0rc1) for more details.\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Christian Scott, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Yan",
                      "markdown": "`expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\nRefer to the [full list of commits](https://github.com/bazelbuild/bazel/compare/7.0.2...7.1.0rc1) for more details.\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Christian Scott, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Yan`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 5958,
                  "startColumn": 4517,
                  "endLine": 5958,
                  "endColumn": 4521,
                  "snippet": {
                    "text": " hundreds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* Minimum rules_python version increased from 0.4.0 to 0.22.1\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/baz",
                    "rendered": {
                      "text": " hundreds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* Minimum rules_python version increased from 0.4.0 to 0.22.1\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/baz",
                      "markdown": "` hundreds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* Minimum rules_python version increased from 0.4.0 to 0.22.1\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/baz`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 5958,
                  "startColumn": 2519,
                  "endLine": 5958,
                  "endColumn": 2523,
                  "snippet": {
                    "text": "ild/bazel/pull/21567), [#13847](https://github.com/bazelbuild/bazel/issues/13847)).\\r\\n* The scheme for generating canonical repository names has changed to improve cacheability of actions across dependency version updates. Note that canonical names are not considered to be public API and can change at any time. See https://bazel.build/external/module#repository_names_and_strict_deps for advice on how to avoid hardcoding canonical repository names. ([#21316](https://github.com/bazelbuild/bazel/pull/21316))\\r\\n* Various methods and fields related to labels and repos are deprecated in favor of new o",
                    "rendered": {
                      "text": "ild/bazel/pull/21567), [#13847](https://github.com/bazelbuild/bazel/issues/13847)).\\r\\n* The scheme for generating canonical repository names has changed to improve cacheability of actions across dependency version updates. Note that canonical names are not considered to be public API and can change at any time. See https://bazel.build/external/module#repository_names_and_strict_deps for advice on how to avoid hardcoding canonical repository names. ([#21316](https://github.com/bazelbuild/bazel/pull/21316))\\r\\n* Various methods and fields related to labels and repos are deprecated in favor of new o",
                      "markdown": "`ild/bazel/pull/21567), [#13847](https://github.com/bazelbuild/bazel/issues/13847)).\\r\\n* The scheme for generating canonical repository names has changed to improve cacheability of actions across dependency version updates. Note that canonical names are not considered to be public API and can change at any time. See https://bazel.build/external/module#repository_names_and_strict_deps for advice on how to avoid hardcoding canonical repository names. ([#21316](https://github.com/bazelbuild/bazel/pull/21316))\\r\\n* Various methods and fields related to labels and repos are deprecated in favor of new o`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 5958,
                  "startColumn": 1948,
                  "endLine": 5958,
                  "endColumn": 1954,
                  "snippet": {
                    "text": "ers to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json` ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                    "rendered": {
                      "text": "ers to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json` ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                      "markdown": "`ers to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json` ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 5769,
                  "endLine": 3968,
                  "endColumn": 5773,
                  "snippet": {
                    "text": "sion increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Su",
                    "rendered": {
                      "text": "sion increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Su",
                      "markdown": "`sion increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Su`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 5327,
                  "endLine": 3968,
                  "endColumn": 5331,
                  "snippet": {
                    "text": " hundreds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429]",
                    "rendered": {
                      "text": " hundreds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429]",
                      "markdown": "` hundreds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429]`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 3329,
                  "endLine": 3968,
                  "endColumn": 3333,
                  "snippet": {
                    "text": "ild/bazel/pull/21567), [#13847](https://github.com/bazelbuild/bazel/issues/13847)).\\r\\n* The scheme for generating canonical repository names has changed to improve cacheability of actions across dependency version updates. Note that canonical names are not considered to be public API and can change at any time. See https://bazel.build/external/module#repository_names_and_strict_deps for advice on how to avoid hardcoding canonical repository names. ([#21316](https://github.com/bazelbuild/bazel/pull/21316))\\r\\n* Various methods and fields related to labels and repos are deprecated in favor of new o",
                    "rendered": {
                      "text": "ild/bazel/pull/21567), [#13847](https://github.com/bazelbuild/bazel/issues/13847)).\\r\\n* The scheme for generating canonical repository names has changed to improve cacheability of actions across dependency version updates. Note that canonical names are not considered to be public API and can change at any time. See https://bazel.build/external/module#repository_names_and_strict_deps for advice on how to avoid hardcoding canonical repository names. ([#21316](https://github.com/bazelbuild/bazel/pull/21316))\\r\\n* Various methods and fields related to labels and repos are deprecated in favor of new o",
                      "markdown": "`ild/bazel/pull/21567), [#13847](https://github.com/bazelbuild/bazel/issues/13847)).\\r\\n* The scheme for generating canonical repository names has changed to improve cacheability of actions across dependency version updates. Note that canonical names are not considered to be public API and can change at any time. See https://bazel.build/external/module#repository_names_and_strict_deps for advice on how to avoid hardcoding canonical repository names. ([#21316](https://github.com/bazelbuild/bazel/pull/21316))\\r\\n* Various methods and fields related to labels and repos are deprecated in favor of new o`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 2758,
                  "endLine": 3968,
                  "endColumn": 2764,
                  "snippet": {
                    "text": "rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                    "rendered": {
                      "text": "rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                      "markdown": "`rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 5941,
                  "endLine": 1978,
                  "endColumn": 5945,
                  "snippet": {
                    "text": "sion increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Su",
                    "rendered": {
                      "text": "sion increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Su",
                      "markdown": "`sion increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Su`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 5499,
                  "endLine": 1978,
                  "endColumn": 5503,
                  "snippet": {
                    "text": " hundreds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429]",
                    "rendered": {
                      "text": " hundreds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429]",
                      "markdown": "` hundreds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429]`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 3501,
                  "endLine": 1978,
                  "endColumn": 3505,
                  "snippet": {
                    "text": "ild/bazel/pull/21567), [#13847](https://github.com/bazelbuild/bazel/issues/13847)).\\r\\n* The scheme for generating canonical repository names has changed to improve cacheability of actions across dependency version updates. Note that canonical names are not considered to be public API and can change at any time. See https://bazel.build/external/module#repository_names_and_strict_deps for advice on how to avoid hardcoding canonical repository names. ([#21316](https://github.com/bazelbuild/bazel/pull/21316))\\r\\n* Various methods and fields related to labels and repos are deprecated in favor of new o",
                    "rendered": {
                      "text": "ild/bazel/pull/21567), [#13847](https://github.com/bazelbuild/bazel/issues/13847)).\\r\\n* The scheme for generating canonical repository names has changed to improve cacheability of actions across dependency version updates. Note that canonical names are not considered to be public API and can change at any time. See https://bazel.build/external/module#repository_names_and_strict_deps for advice on how to avoid hardcoding canonical repository names. ([#21316](https://github.com/bazelbuild/bazel/pull/21316))\\r\\n* Various methods and fields related to labels and repos are deprecated in favor of new o",
                      "markdown": "`ild/bazel/pull/21567), [#13847](https://github.com/bazelbuild/bazel/issues/13847)).\\r\\n* The scheme for generating canonical repository names has changed to improve cacheability of actions across dependency version updates. Note that canonical names are not considered to be public API and can change at any time. See https://bazel.build/external/module#repository_names_and_strict_deps for advice on how to avoid hardcoding canonical repository names. ([#21316](https://github.com/bazelbuild/bazel/pull/21316))\\r\\n* Various methods and fields related to labels and repos are deprecated in favor of new o`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 2930,
                  "endLine": 1978,
                  "endColumn": 2936,
                  "snippet": {
                    "text": "rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                    "rendered": {
                      "text": "rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                      "markdown": "`rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 32560,
                  "startColumn": 9941,
                  "endLine": 32560,
                  "endColumn": 9945,
                  "snippet": {
                    "text": "com/bazelbuild/bazel/pull/18932))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as amishra-u, Andreas Herrmann, Andy Hamon, andyrinne12, Benjamin Lee, Benjamin Peterson, Brentley Jones, Chirag Ramani, Christopher Rydell, Daniel Wagner-Hall, Ed Schouten, Fabian Brandstetter, Fabian Meumertzheim, Greg, Ivan Golub, Jon Landis, Kai Zhang, Keith Smiley, lripoche, Rasrack, Son Luong Ngoc, Takeo Sawada, Vertexwahn, Yannic.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers shoul",
                    "rendered": {
                      "text": "com/bazelbuild/bazel/pull/18932))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as amishra-u, Andreas Herrmann, Andy Hamon, andyrinne12, Benjamin Lee, Benjamin Peterson, Brentley Jones, Chirag Ramani, Christopher Rydell, Daniel Wagner-Hall, Ed Schouten, Fabian Brandstetter, Fabian Meumertzheim, Greg, Ivan Golub, Jon Landis, Kai Zhang, Keith Smiley, lripoche, Rasrack, Son Luong Ngoc, Takeo Sawada, Vertexwahn, Yannic.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers shoul",
                      "markdown": "`com/bazelbuild/bazel/pull/18932))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as amishra-u, Andreas Herrmann, Andy Hamon, andyrinne12, Benjamin Lee, Benjamin Peterson, Brentley Jones, Chirag Ramani, Christopher Rydell, Daniel Wagner-Hall, Ed Schouten, Fabian Brandstetter, Fabian Meumertzheim, Greg, Ivan Golub, Jon Landis, Kai Zhang, Keith Smiley, lripoche, Rasrack, Son Luong Ngoc, Takeo Sawada, Vertexwahn, Yannic.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those installers shoul`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 32560,
                  "startColumn": 9215,
                  "endLine": 32560,
                  "endColumn": 9223,
                  "snippet": {
                    "text": "* Download directory output for test actions ([#18846](https://github.com/bazelbuild/bazel/pull/18846))\\r\\n\\r\\n## Starlark / Build Language\\r\\n* Perform builtins injection for WORKSPACE-loaded bzl files. ([#18819](https://github.com/bazelbuild/bazel/pull/18819))\\r\\n\\r\\n## Testing\\r\\n* Fix test setup script to convey test exit code correctly ([#18514](https://github.com/bazelbuild/bazel/pull/18514))\\r\\n* Set `GTEST_SHARD_STATUS_FILE` in test setup ([#18482](https://github.com/bazelbuild/bazel/pull/18482))\\r\\n* Actually check if `TEST_SHARD_STATUS_FILE` has been touched ([#18418](https://github.com/baze",
                    "rendered": {
                      "text": "* Download directory output for test actions ([#18846](https://github.com/bazelbuild/bazel/pull/18846))\\r\\n\\r\\n## Starlark / Build Language\\r\\n* Perform builtins injection for WORKSPACE-loaded bzl files. ([#18819](https://github.com/bazelbuild/bazel/pull/18819))\\r\\n\\r\\n## Testing\\r\\n* Fix test setup script to convey test exit code correctly ([#18514](https://github.com/bazelbuild/bazel/pull/18514))\\r\\n* Set `GTEST_SHARD_STATUS_FILE` in test setup ([#18482](https://github.com/bazelbuild/bazel/pull/18482))\\r\\n* Actually check if `TEST_SHARD_STATUS_FILE` has been touched ([#18418](https://github.com/baze",
                      "markdown": "`* Download directory output for test actions ([#18846](https://github.com/bazelbuild/bazel/pull/18846))\\r\\n\\r\\n## Starlark / Build Language\\r\\n* Perform builtins injection for WORKSPACE-loaded bzl files. ([#18819](https://github.com/bazelbuild/bazel/pull/18819))\\r\\n\\r\\n## Testing\\r\\n* Fix test setup script to convey test exit code correctly ([#18514](https://github.com/bazelbuild/bazel/pull/18514))\\r\\n* Set `GTEST_SHARD_STATUS_FILE` in test setup ([#18482](https://github.com/bazelbuild/bazel/pull/18482))\\r\\n* Actually check if `TEST_SHARD_STATUS_FILE` has been touched ([#18418](https://github.com/baze`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 32560,
                  "startColumn": 7141,
                  "endLine": 32560,
                  "endColumn": 7150,
                  "snippet": {
                    "text": "r\\n* Support remote symlink outputs when building without the bytes. ([#18476](https://github.com/bazelbuild/bazel/pull/18476))\\r\\n* Enrich local BEP upload errors with file path and digest possible. ([#18481](https://github.com/bazelbuild/bazel/pull/18481))\\r\\n* Extend the credential helper default timeout to 10s. ([#18527](https://github.com/bazelbuild/bazel/pull/18527))\\r\\n* Ignore all errors when writing to stdin of a credential helper.([#18540](https://github.com/bazelbuild/bazel/pull/18540))\\r\\n* Implement failure circuit breaker ([#18541](https://github.com/bazelbuild/bazel/pull/18541))\\r\\n* Add",
                    "rendered": {
                      "text": "r\\n* Support remote symlink outputs when building without the bytes. ([#18476](https://github.com/bazelbuild/bazel/pull/18476))\\r\\n* Enrich local BEP upload errors with file path and digest possible. ([#18481](https://github.com/bazelbuild/bazel/pull/18481))\\r\\n* Extend the credential helper default timeout to 10s. ([#18527](https://github.com/bazelbuild/bazel/pull/18527))\\r\\n* Ignore all errors when writing to stdin of a credential helper.([#18540](https://github.com/bazelbuild/bazel/pull/18540))\\r\\n* Implement failure circuit breaker ([#18541](https://github.com/bazelbuild/bazel/pull/18541))\\r\\n* Add",
                      "markdown": "`r\\n* Support remote symlink outputs when building without the bytes. ([#18476](https://github.com/bazelbuild/bazel/pull/18476))\\r\\n* Enrich local BEP upload errors with file path and digest possible. ([#18481](https://github.com/bazelbuild/bazel/pull/18481))\\r\\n* Extend the credential helper default timeout to 10s. ([#18527](https://github.com/bazelbuild/bazel/pull/18527))\\r\\n* Ignore all errors when writing to stdin of a credential helper.([#18540](https://github.com/bazelbuild/bazel/pull/18540))\\r\\n* Implement failure circuit breaker ([#18541](https://github.com/bazelbuild/bazel/pull/18541))\\r\\n* Add`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 32560,
                  "startColumn": 2386,
                  "endLine": 32560,
                  "endColumn": 2392,
                  "snippet": {
                    "text": "# Build Event Protocol\\r\\n* Add ActionCacheStatistics to BEP ([#18914](https://github.com/bazelbuild/bazel/pull/18914))\\r\\n\\r\\n## C++ / Objective-C\\r\\n* Make cpp file extensions case sensitive again ([#18552](https://github.com/bazelbuild/bazel/pull/18552))\\r\\n* Add changes to cc_shared_library from head to 6.3 ([#18606](https://github.com/bazelbuild/bazel/pull/18606))\\r\\n* Make grep_includes optional inside cc_common.register_linkstamp_compile_action ([#18823](https://github.com/bazelbuild/bazel/pull/18823))\\r\\n* Add implementation deps support for Objective-C ([#18372](https://github.com/bazelbuil",
                    "rendered": {
                      "text": "# Build Event Protocol\\r\\n* Add ActionCacheStatistics to BEP ([#18914](https://github.com/bazelbuild/bazel/pull/18914))\\r\\n\\r\\n## C++ / Objective-C\\r\\n* Make cpp file extensions case sensitive again ([#18552](https://github.com/bazelbuild/bazel/pull/18552))\\r\\n* Add changes to cc_shared_library from head to 6.3 ([#18606](https://github.com/bazelbuild/bazel/pull/18606))\\r\\n* Make grep_includes optional inside cc_common.register_linkstamp_compile_action ([#18823](https://github.com/bazelbuild/bazel/pull/18823))\\r\\n* Add implementation deps support for Objective-C ([#18372](https://github.com/bazelbuil",
                      "markdown": "`# Build Event Protocol\\r\\n* Add ActionCacheStatistics to BEP ([#18914](https://github.com/bazelbuild/bazel/pull/18914))\\r\\n\\r\\n## C++ / Objective-C\\r\\n* Make cpp file extensions case sensitive again ([#18552](https://github.com/bazelbuild/bazel/pull/18552))\\r\\n* Add changes to cc_shared_library from head to 6.3 ([#18606](https://github.com/bazelbuild/bazel/pull/18606))\\r\\n* Make grep_includes optional inside cc_common.register_linkstamp_compile_action ([#18823](https://github.com/bazelbuild/bazel/pull/18823))\\r\\n* Add implementation deps support for Objective-C ([#18372](https://github.com/bazelbuil`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 30582,
                  "startColumn": 687,
                  "endLine": 30582,
                  "endColumn": 692,
                  "snippet": {
                    "text": "es/19105) and [#19068](https://github.com/bazelbuild/bazel/issues/19068)). Will be re-enabled in the next minor release.\\r\\n* Mark isolated extension usages as experimental ([#19050](https://github.com/bazelbuild/bazel/pull/19050))\\r\\n* Fix a bug where frozen targets list was mutated while expanding env attribute ([#19052](https://github.com/bazelbuild/bazel/pull/19052))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/issues/19086))\\r\\n* Update java_tools to v12.6 ([#19091](https://github.com/bazelbuild/bazel/issues/19091))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis r",
                    "rendered": {
                      "text": "es/19105) and [#19068](https://github.com/bazelbuild/bazel/issues/19068)). Will be re-enabled in the next minor release.\\r\\n* Mark isolated extension usages as experimental ([#19050](https://github.com/bazelbuild/bazel/pull/19050))\\r\\n* Fix a bug where frozen targets list was mutated while expanding env attribute ([#19052](https://github.com/bazelbuild/bazel/pull/19052))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/issues/19086))\\r\\n* Update java_tools to v12.6 ([#19091](https://github.com/bazelbuild/bazel/issues/19091))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis r",
                      "markdown": "`es/19105) and [#19068](https://github.com/bazelbuild/bazel/issues/19068)). Will be re-enabled in the next minor release.\\r\\n* Mark isolated extension usages as experimental ([#19050](https://github.com/bazelbuild/bazel/pull/19050))\\r\\n* Fix a bug where frozen targets list was mutated while expanding env attribute ([#19052](https://github.com/bazelbuild/bazel/pull/19052))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/issues/19086))\\r\\n* Update java_tools to v12.6 ([#19091](https://github.com/bazelbuild/bazel/issues/19091))\\r\\n\\r\\n## Acknowledgements\\r\\n\\r\\nThis r`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 28592,
                  "startColumn": 478,
                  "endLine": 28592,
                  "endColumn": 485,
                  "snippet": {
                    "text": "e with Bazel 6.0 and contains selected changes by the Bazel community and Google engineers.\\r\\n\\r\\n* Ensure that extension unique names followed by `~` are prefix-free ([#19167](https://github.com/bazelbuild/bazel/pull/19167))\\r\\n* Module extensions can now specify a list of environment variables to watch through the [environ](https://bazel.build/rules/lib/globals/bzl#module_extension.environ) parameter.\\r\\n* The module lockfile can now deal with missing fields due to Bazel version upgrades. ([#19175](https://github.com/bazelbuild/bazel/pull/19175))\\r\\n* Module extensions are now re-evaluated if any ",
                    "rendered": {
                      "text": "e with Bazel 6.0 and contains selected changes by the Bazel community and Google engineers.\\r\\n\\r\\n* Ensure that extension unique names followed by `~` are prefix-free ([#19167](https://github.com/bazelbuild/bazel/pull/19167))\\r\\n* Module extensions can now specify a list of environment variables to watch through the [environ](https://bazel.build/rules/lib/globals/bzl#module_extension.environ) parameter.\\r\\n* The module lockfile can now deal with missing fields due to Bazel version upgrades. ([#19175](https://github.com/bazelbuild/bazel/pull/19175))\\r\\n* Module extensions are now re-evaluated if any ",
                      "markdown": "`e with Bazel 6.0 and contains selected changes by the Bazel community and Google engineers.\\r\\n\\r\\n* Ensure that extension unique names followed by `~` are prefix-free ([#19167](https://github.com/bazelbuild/bazel/pull/19167))\\r\\n* Module extensions can now specify a list of environment variables to watch through the [environ](https://bazel.build/rules/lib/globals/bzl#module_extension.environ) parameter.\\r\\n* The module lockfile can now deal with missing fields due to Bazel version upgrades. ([#19175](https://github.com/bazelbuild/bazel/pull/19175))\\r\\n* Module extensions are now re-evaluated if any `"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 26602,
                  "startColumn": 11947,
                  "endLine": 26602,
                  "endColumn": 11951,
                  "snippet": {
                    "text": ".com/bazelbuild/bazel/pull/19319))\\r\\n* Include name in `repr` of exported `rule`s ([#19229](https://github.com/bazelbuild/bazel/pull/19229))\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Andreas Herrmann, Brentley Jones, Chirag Ramani, Ed Schouten, Fabian Meumertzheim, George Gensure, Julio Merino, Keith Smiley, Matt Mackay, NelsonLi0701, Nicholas Junge, Orion Hodson, Roman Salvador, Ted Kaplan, Thi Doan, and Tyler Williams.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those in",
                    "rendered": {
                      "text": ".com/bazelbuild/bazel/pull/19319))\\r\\n* Include name in `repr` of exported `rule`s ([#19229](https://github.com/bazelbuild/bazel/pull/19229))\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Andreas Herrmann, Brentley Jones, Chirag Ramani, Ed Schouten, Fabian Meumertzheim, George Gensure, Julio Merino, Keith Smiley, Matt Mackay, NelsonLi0701, Nicholas Junge, Orion Hodson, Roman Salvador, Ted Kaplan, Thi Doan, and Tyler Williams.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those in",
                      "markdown": "`.com/bazelbuild/bazel/pull/19319))\\r\\n* Include name in `repr` of exported `rule`s ([#19229](https://github.com/bazelbuild/bazel/pull/19229))\\r\\n\\r\\n## Acknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Andreas Herrmann, Brentley Jones, Chirag Ramani, Ed Schouten, Fabian Meumertzheim, George Gensure, Julio Merino, Keith Smiley, Matt Mackay, NelsonLi0701, Nicholas Junge, Orion Hodson, Roman Salvador, Ted Kaplan, Thi Doan, and Tyler Williams.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exception. Those in`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 26602,
                  "startColumn": 1519,
                  "endLine": 26602,
                  "endColumn": 1524,
                  "snippet": {
                    "text": "/bazelbuild/bazel/pull/19606))\\r\\n\\r\\n## Android\\r\\n* Add a Starlark flag that allows disabling proguard. This will be useful for testing later. ([#19179](https://github.com/bazelbuild/bazel/pull/19179))\\r\\n\\r\\n## C++ / Objective-C\\r\\n* Fix a bug where frozen targets list was mutated while expanding env attribute ([#19053](https://github.com/bazelbuild/bazel/pull/19053))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/pull/19086)) ([#19088](https://github.com/bazelbuild/bazel/pull/19088))\\r\\n* Enable cc toolchain resolution when cross compiling to windows arm64. (",
                    "rendered": {
                      "text": "/bazelbuild/bazel/pull/19606))\\r\\n\\r\\n## Android\\r\\n* Add a Starlark flag that allows disabling proguard. This will be useful for testing later. ([#19179](https://github.com/bazelbuild/bazel/pull/19179))\\r\\n\\r\\n## C++ / Objective-C\\r\\n* Fix a bug where frozen targets list was mutated while expanding env attribute ([#19053](https://github.com/bazelbuild/bazel/pull/19053))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/pull/19086)) ([#19088](https://github.com/bazelbuild/bazel/pull/19088))\\r\\n* Enable cc toolchain resolution when cross compiling to windows arm64. (",
                      "markdown": "`/bazelbuild/bazel/pull/19606))\\r\\n\\r\\n## Android\\r\\n* Add a Starlark flag that allows disabling proguard. This will be useful for testing later. ([#19179](https://github.com/bazelbuild/bazel/pull/19179))\\r\\n\\r\\n## C++ / Objective-C\\r\\n* Fix a bug where frozen targets list was mutated while expanding env attribute ([#19053](https://github.com/bazelbuild/bazel/pull/19053))\\r\\n* Advertise CcInfo from cc_import ([#19086](https://github.com/bazelbuild/bazel/pull/19086)) ([#19088](https://github.com/bazelbuild/bazel/pull/19088))\\r\\n* Enable cc toolchain resolution when cross compiling to windows arm64. (`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 26602,
                  "startColumn": 484,
                  "endLine": 26602,
                  "endColumn": 490,
                  "snippet": {
                    "text": "\\r\\n\\r\\n**Baseline:**  0f231ac8acabcd8aa309da041c98ab90a1552418\\r\\n\\r\\nBazel 6.4.0 is a minor LTS release. It is fully backward compatible with Bazel 6.0 and contains selected changes by the Bazel community and Google engineers.\\r\\n\\r\\n## General\\r\\n* Add support for more workspace boundary files to bash completion ([#19281](https://github.com/bazelbuild/bazel/pull/19281)) \\r\\n* Ignore Starlark options on commands with `allowResidue = False` ([#19417](https://github.com/bazelbuild/bazel/pull/19417))\\r\\n* Print Passed and Failed methods in detailed test summary ([#19505](https://github.com/bazelbuild",
                    "rendered": {
                      "text": "\\r\\n\\r\\n**Baseline:**  0f231ac8acabcd8aa309da041c98ab90a1552418\\r\\n\\r\\nBazel 6.4.0 is a minor LTS release. It is fully backward compatible with Bazel 6.0 and contains selected changes by the Bazel community and Google engineers.\\r\\n\\r\\n## General\\r\\n* Add support for more workspace boundary files to bash completion ([#19281](https://github.com/bazelbuild/bazel/pull/19281)) \\r\\n* Ignore Starlark options on commands with `allowResidue = False` ([#19417](https://github.com/bazelbuild/bazel/pull/19417))\\r\\n* Print Passed and Failed methods in detailed test summary ([#19505](https://github.com/bazelbuild",
                      "markdown": "`\\r\\n\\r\\n**Baseline:**  0f231ac8acabcd8aa309da041c98ab90a1552418\\r\\n\\r\\nBazel 6.4.0 is a minor LTS release. It is fully backward compatible with Bazel 6.0 and contains selected changes by the Bazel community and Google engineers.\\r\\n\\r\\n## General\\r\\n* Add support for more workspace boundary files to bash completion ([#19281](https://github.com/bazelbuild/bazel/pull/19281)) \\r\\n* Ignore Starlark options on commands with `allowResidue = False` ([#19417](https://github.com/bazelbuild/bazel/pull/19417))\\r\\n* Print Passed and Failed methods in detailed test summary ([#19505](https://github.com/bazelbuild`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 24612,
                  "startColumn": 28669,
                  "endLine": 24612,
                  "endColumn": 28674,
                  "snippet": {
                    "text": "lmer, Mauricio G, Mauricio Galindo, Maxim Matyunin, Maxwell Elliott, mohamadk, Nathan (Blaise) Bruer, nathyong, NelsonLi0701, nglevin, Nicholas Junge, Nick Biryulin, Nick Korostelev, Oliver Lee, Orion Hodson, Oscar Garzon, Patrice Duroux, Patrick Balestra, Peter Lobsinger, Philipp Schrader, Rasrack, Red Daly, redwrasse, Robin Tweedie, robincaloudis, Roger Hu, Romain Chossart, Roman Salvador, Sagar Pathare, Saleem Abdulrasool, Sam Shadwell, Sara Adams, Sascha Moecker, Scott Minor, Severin Strobl, Shaygan Hooshyari, Siddhesh Bhupendra Kuakde, Simon Mavi Stewart, something_vague, Son Luong Ngoc, Steve",
                    "rendered": {
                      "text": "lmer, Mauricio G, Mauricio Galindo, Maxim Matyunin, Maxwell Elliott, mohamadk, Nathan (Blaise) Bruer, nathyong, NelsonLi0701, nglevin, Nicholas Junge, Nick Biryulin, Nick Korostelev, Oliver Lee, Orion Hodson, Oscar Garzon, Patrice Duroux, Patrick Balestra, Peter Lobsinger, Philipp Schrader, Rasrack, Red Daly, redwrasse, Robin Tweedie, robincaloudis, Roger Hu, Romain Chossart, Roman Salvador, Sagar Pathare, Saleem Abdulrasool, Sam Shadwell, Sara Adams, Sascha Moecker, Scott Minor, Severin Strobl, Shaygan Hooshyari, Siddhesh Bhupendra Kuakde, Simon Mavi Stewart, something_vague, Son Luong Ngoc, Steve",
                      "markdown": "`lmer, Mauricio G, Mauricio Galindo, Maxim Matyunin, Maxwell Elliott, mohamadk, Nathan (Blaise) Bruer, nathyong, NelsonLi0701, nglevin, Nicholas Junge, Nick Biryulin, Nick Korostelev, Oliver Lee, Orion Hodson, Oscar Garzon, Patrice Duroux, Patrick Balestra, Peter Lobsinger, Philipp Schrader, Rasrack, Red Daly, redwrasse, Robin Tweedie, robincaloudis, Roger Hu, Romain Chossart, Roman Salvador, Sagar Pathare, Saleem Abdulrasool, Sam Shadwell, Sara Adams, Sascha Moecker, Scott Minor, Severin Strobl, Shaygan Hooshyari, Siddhesh Bhupendra Kuakde, Simon Mavi Stewart, something_vague, Son Luong Ngoc, Steve`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 24612,
                  "startColumn": 27742,
                  "endLine": 24612,
                  "endColumn": 27746,
                  "snippet": {
                    "text": "njamin Lee, Benjamin Peterson, Benjamin Sigonneau, Boleyn Su, Brentley Jones, Cameron Martin, Chirag Ramani, Chris Sauer, Christopher Peterson Sauer, Christopher Rydell, Christopher Sauer, Conall O’Brien, Daniel Grunwald, Daniel KT, Daniel Wagner-Hall, David Ostrovsky, dhmemi, Dimi Shahbaz, eareilg, Ed Schouten, Emil Kattainen, Ezekiel Warren, Fabian Meumertzheim, Fahrzin Hemmati, Gaspare Vitta, George Gensure, Greg Magolan, Grzegorz Lukasik, Guillaume Maudoux, Gunnar Wagenknecht, Halil Sener, Hao Yuan, Ilan Keshet, Ivan Golub, Jack Dai, James Ma, Jason Mobarak, Jasper, Jay Conrod, Jeff Hodges, Je",
                    "rendered": {
                      "text": "njamin Lee, Benjamin Peterson, Benjamin Sigonneau, Boleyn Su, Brentley Jones, Cameron Martin, Chirag Ramani, Chris Sauer, Christopher Peterson Sauer, Christopher Rydell, Christopher Sauer, Conall O’Brien, Daniel Grunwald, Daniel KT, Daniel Wagner-Hall, David Ostrovsky, dhmemi, Dimi Shahbaz, eareilg, Ed Schouten, Emil Kattainen, Ezekiel Warren, Fabian Meumertzheim, Fahrzin Hemmati, Gaspare Vitta, George Gensure, Greg Magolan, Grzegorz Lukasik, Guillaume Maudoux, Gunnar Wagenknecht, Halil Sener, Hao Yuan, Ilan Keshet, Ivan Golub, Jack Dai, James Ma, Jason Mobarak, Jasper, Jay Conrod, Jeff Hodges, Je",
                      "markdown": "`njamin Lee, Benjamin Peterson, Benjamin Sigonneau, Boleyn Su, Brentley Jones, Cameron Martin, Chirag Ramani, Chris Sauer, Christopher Peterson Sauer, Christopher Rydell, Christopher Sauer, Conall O’Brien, Daniel Grunwald, Daniel KT, Daniel Wagner-Hall, David Ostrovsky, dhmemi, Dimi Shahbaz, eareilg, Ed Schouten, Emil Kattainen, Ezekiel Warren, Fabian Meumertzheim, Fahrzin Hemmati, Gaspare Vitta, George Gensure, Greg Magolan, Grzegorz Lukasik, Guillaume Maudoux, Gunnar Wagenknecht, Halil Sener, Hao Yuan, Ilan Keshet, Ivan Golub, Jack Dai, James Ma, Jason Mobarak, Jasper, Jay Conrod, Jeff Hodges, Je`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 24612,
                  "startColumn": 860,
                  "endLine": 24612,
                  "endColumn": 866,
                  "snippet": {
                    "text": "lan to remove the legacy WORKSPACE based dependency system. See the [Bzlmod migration guide](http://bazel.build/external/migration) for more information.\\r\\n* Bazel now starts executing actions while it is still analyzing other top-level targets (Project Skymeld).\\r\\n  * This reduces end-to-end wall time for multi-target builds by up to 15%.\\r\\n* Platform-based toolchain resolution is now enabled for Android and C++. \\r\\n  * Android rules now use platforms and toolchains to control the target devices.. Android projects will need to stop passing the legacy flag `--fat_apk_cpu`, and instead use `--and",
                    "rendered": {
                      "text": "lan to remove the legacy WORKSPACE based dependency system. See the [Bzlmod migration guide](http://bazel.build/external/migration) for more information.\\r\\n* Bazel now starts executing actions while it is still analyzing other top-level targets (Project Skymeld).\\r\\n  * This reduces end-to-end wall time for multi-target builds by up to 15%.\\r\\n* Platform-based toolchain resolution is now enabled for Android and C++. \\r\\n  * Android rules now use platforms and toolchains to control the target devices.. Android projects will need to stop passing the legacy flag `--fat_apk_cpu`, and instead use `--and",
                      "markdown": "`lan to remove the legacy WORKSPACE based dependency system. See the [Bzlmod migration guide](http://bazel.build/external/migration) for more information.\\r\\n* Bazel now starts executing actions while it is still analyzing other top-level targets (Project Skymeld).\\r\\n  * This reduces end-to-end wall time for multi-target builds by up to 15%.\\r\\n* Platform-based toolchain resolution is now enabled for Android and C++. \\r\\n  * Android rules now use platforms and toolchains to control the target devices.. Android projects will need to stop passing the legacy flag `--fat_apk_cpu`, and instead use `--and`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 22634,
                  "startColumn": 406,
                  "endLine": 22634,
                  "endColumn": 413,
                  "snippet": {
                    "text": "//github.com/bazelbuild/bazel/pull/20750))\\r\\n* Fix bootstrapped Bazel binary ([#20612](https://github.com/bazelbuild/bazel/pull/20612))\\r\\n* Attempt to make main repo mapping inverse more efficient ([#20625](https://github.com/bazelbuild/bazel/pull/20625))\\r\\n\\r\\n\\r\\n## Local Execution\\r\\n\\r\\n\\r\\n* Mount user-specified bind mounts before Bazel's own magic. ([#20609](https://github.com/bazelbuild/bazel/pull/20609))\\r\\n* Print interactive sandboxed shell command with `--sandbox_debug` ([#20734](https://github.com/bazelbuild/bazel/pull/20734))\\r\\n* Fix two issues with --incompatible_sandbox_hermetic_tm",
                    "rendered": {
                      "text": "//github.com/bazelbuild/bazel/pull/20750))\\r\\n* Fix bootstrapped Bazel binary ([#20612](https://github.com/bazelbuild/bazel/pull/20612))\\r\\n* Attempt to make main repo mapping inverse more efficient ([#20625](https://github.com/bazelbuild/bazel/pull/20625))\\r\\n\\r\\n\\r\\n## Local Execution\\r\\n\\r\\n\\r\\n* Mount user-specified bind mounts before Bazel's own magic. ([#20609](https://github.com/bazelbuild/bazel/pull/20609))\\r\\n* Print interactive sandboxed shell command with `--sandbox_debug` ([#20734](https://github.com/bazelbuild/bazel/pull/20734))\\r\\n* Fix two issues with --incompatible_sandbox_hermetic_tm",
                      "markdown": "`//github.com/bazelbuild/bazel/pull/20750))\\r\\n* Fix bootstrapped Bazel binary ([#20612](https://github.com/bazelbuild/bazel/pull/20612))\\r\\n* Attempt to make main repo mapping inverse more efficient ([#20625](https://github.com/bazelbuild/bazel/pull/20625))\\r\\n\\r\\n\\r\\n## Local Execution\\r\\n\\r\\n\\r\\n* Mount user-specified bind mounts before Bazel's own magic. ([#20609](https://github.com/bazelbuild/bazel/pull/20609))\\r\\n* Print interactive sandboxed shell command with `--sandbox_debug` ([#20734](https://github.com/bazelbuild/bazel/pull/20734))\\r\\n* Fix two issues with --incompatible_sandbox_hermetic_tm`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 20656,
                  "startColumn": 985,
                  "endLine": 20656,
                  "endColumn": 990,
                  "snippet": {
                    "text": "in ([#20847](https://github.com/bazelbuild/bazel/pull/20847))\\r\\n\\r\\n\\r\\n## Configurability\\r\\n\\r\\n\\r\\n\\r\\n* Flip `--incompatible_visibility_private_attributes_at_definition` ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#2",
                    "rendered": {
                      "text": "in ([#20847](https://github.com/bazelbuild/bazel/pull/20847))\\r\\n\\r\\n\\r\\n## Configurability\\r\\n\\r\\n\\r\\n\\r\\n* Flip `--incompatible_visibility_private_attributes_at_definition` ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#2",
                      "markdown": "`in ([#20847](https://github.com/bazelbuild/bazel/pull/20847))\\r\\n\\r\\n\\r\\n## Configurability\\r\\n\\r\\n\\r\\n\\r\\n* Flip `--incompatible_visibility_private_attributes_at_definition` ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#2`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 18462,
                  "startColumn": 1482,
                  "endLine": 18462,
                  "endColumn": 1489,
                  "snippet": {
                    "text": "uild/bazel/pull/20602))\\r\\n* `java_binary` wrapper should forward `restricted_to` ([#20611](https://github.com/bazelbuild/bazel/pull/20611))\\r\\n* Fix singlejar resource mapping for external repositories ([#20904](https://github.com/bazelbuild/bazel/pull/20904))\\r\\n\\r\\n\\r\\n## Local Execution\\r\\n\\r\\n* Mount user-specified bind mounts before Bazel's own magic. ([#20609](https://github.com/bazelbuild/bazel/pull/20609))\\r\\n* Print interactive sandboxed shell command with `--sandbox_debug` ([#20734](https://github.com/bazelbuild/bazel/pull/20734))\\r\\n* Fix two issues with --incompatible_sandbox_hermetic_tm",
                    "rendered": {
                      "text": "uild/bazel/pull/20602))\\r\\n* `java_binary` wrapper should forward `restricted_to` ([#20611](https://github.com/bazelbuild/bazel/pull/20611))\\r\\n* Fix singlejar resource mapping for external repositories ([#20904](https://github.com/bazelbuild/bazel/pull/20904))\\r\\n\\r\\n\\r\\n## Local Execution\\r\\n\\r\\n* Mount user-specified bind mounts before Bazel's own magic. ([#20609](https://github.com/bazelbuild/bazel/pull/20609))\\r\\n* Print interactive sandboxed shell command with `--sandbox_debug` ([#20734](https://github.com/bazelbuild/bazel/pull/20734))\\r\\n* Fix two issues with --incompatible_sandbox_hermetic_tm",
                      "markdown": "`uild/bazel/pull/20602))\\r\\n* `java_binary` wrapper should forward `restricted_to` ([#20611](https://github.com/bazelbuild/bazel/pull/20611))\\r\\n* Fix singlejar resource mapping for external repositories ([#20904](https://github.com/bazelbuild/bazel/pull/20904))\\r\\n\\r\\n\\r\\n## Local Execution\\r\\n\\r\\n* Mount user-specified bind mounts before Bazel's own magic. ([#20609](https://github.com/bazelbuild/bazel/pull/20609))\\r\\n* Print interactive sandboxed shell command with `--sandbox_debug` ([#20734](https://github.com/bazelbuild/bazel/pull/20734))\\r\\n* Fix two issues with --incompatible_sandbox_hermetic_tm`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 16280,
                  "startColumn": 1110,
                  "endLine": 16280,
                  "endColumn": 1115,
                  "snippet": {
                    "text": "ible_visibility_private_attributes_at_definition` ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#2",
                    "rendered": {
                      "text": "ible_visibility_private_attributes_at_definition` ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#2",
                      "markdown": "`ible_visibility_private_attributes_at_definition` ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n\\r\\n## External Dependencies\\r\\n\\r\\n\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n\\r\\n## Java\\r\\n\\r\\n\\r\\n\\r\\n* Don't pass `--add-opens=` to javac ([#2`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 14098,
                  "startColumn": 1686,
                  "endLine": 14098,
                  "endColumn": 1693,
                  "snippet": {
                    "text": "m/bazelbuild/bazel/pull/20602))\\r\\n* `java_binary` wrapper should forward `restricted_to` ([#20611](https://github.com/bazelbuild/bazel/pull/20611))\\r\\n* Fix singlejar resource mapping for external repositories ([#20904](https://github.com/bazelbuild/bazel/pull/20904))\\r\\n\\r\\n## Local Execution\\r\\n* Mount user-specified bind mounts before Bazel's own magic. ([#20609](https://github.com/bazelbuild/bazel/pull/20609))\\r\\n* Print interactive sandboxed shell command with `--sandbox_debug` ([#20734](https://github.com/bazelbuild/bazel/pull/20734))\\r\\n* Fix two issues with --incompatible_sandbox_hermetic_tm",
                    "rendered": {
                      "text": "m/bazelbuild/bazel/pull/20602))\\r\\n* `java_binary` wrapper should forward `restricted_to` ([#20611](https://github.com/bazelbuild/bazel/pull/20611))\\r\\n* Fix singlejar resource mapping for external repositories ([#20904](https://github.com/bazelbuild/bazel/pull/20904))\\r\\n\\r\\n## Local Execution\\r\\n* Mount user-specified bind mounts before Bazel's own magic. ([#20609](https://github.com/bazelbuild/bazel/pull/20609))\\r\\n* Print interactive sandboxed shell command with `--sandbox_debug` ([#20734](https://github.com/bazelbuild/bazel/pull/20734))\\r\\n* Fix two issues with --incompatible_sandbox_hermetic_tm",
                      "markdown": "`m/bazelbuild/bazel/pull/20602))\\r\\n* `java_binary` wrapper should forward `restricted_to` ([#20611](https://github.com/bazelbuild/bazel/pull/20611))\\r\\n* Fix singlejar resource mapping for external repositories ([#20904](https://github.com/bazelbuild/bazel/pull/20904))\\r\\n\\r\\n## Local Execution\\r\\n* Mount user-specified bind mounts before Bazel's own magic. ([#20609](https://github.com/bazelbuild/bazel/pull/20609))\\r\\n* Print interactive sandboxed shell command with `--sandbox_debug` ([#20734](https://github.com/bazelbuild/bazel/pull/20734))\\r\\n* Fix two issues with --incompatible_sandbox_hermetic_tm`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 12120,
                  "startColumn": 1284,
                  "endLine": 12120,
                  "endColumn": 1289,
                  "snippet": {
                    "text": "ip --incompatible_visibility_private_attributes_at_definition ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n## External Dependencies\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n## Java\\r\\n* Don't pass --add-opens= to javac ([#20472](https://gith",
                    "rendered": {
                      "text": "ip --incompatible_visibility_private_attributes_at_definition ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n## External Dependencies\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n## Java\\r\\n* Don't pass --add-opens= to javac ([#20472](https://gith",
                      "markdown": "`ip --incompatible_visibility_private_attributes_at_definition ([#20520](https://github.com/bazelbuild/bazel/pull/20520))\\r\\n* Implemented --incompatible_enable_proto_toolchain_resolution ([#20925](https://github.com/bazelbuild/bazel/pull/20925))\\r\\n\\r\\n## External Dependencies\\r\\n* Fix extraction of tar archives containing sparse files. ([#20531](https://github.com/bazelbuild/bazel/pull/20531))\\r\\n* Restart at most once when prepopulating repository rule environment ([#20667](https://github.com/bazelbuild/bazel/pull/20667))\\r\\n\\r\\n## Java\\r\\n* Don't pass --add-opens= to javac ([#20472](https://gith`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 5958,
                  "startColumn": 5166,
                  "endLine": 5958,
                  "endColumn": 5170,
                  "snippet": {
                    "text": "e [full list of commits](https://github.com/bazelbuild/bazel/compare/7.0.2...7.1.0rc1) for more details.\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Christian Scott, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Yannic Bonenberger.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exc",
                    "rendered": {
                      "text": "e [full list of commits](https://github.com/bazelbuild/bazel/compare/7.0.2...7.1.0rc1) for more details.\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Christian Scott, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Yannic Bonenberger.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exc",
                      "markdown": "`e [full list of commits](https://github.com/bazelbuild/bazel/compare/7.0.2...7.1.0rc1) for more details.\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Christian Scott, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Yannic Bonenberger.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 with Classpath exc`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 5958,
                  "startColumn": 4524,
                  "endLine": 5958,
                  "endColumn": 4529,
                  "snippet": {
                    "text": "ds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* Minimum rules_python version increased from 0.4.0 to 0.22.1\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/",
                    "rendered": {
                      "text": "ds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* Minimum rules_python version increased from 0.4.0 to 0.22.1\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/",
                      "markdown": "`ds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* Minimum rules_python version increased from 0.4.0 to 0.22.1\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https://github.com/bazelbuild/`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 5958,
                  "startColumn": 1948,
                  "endLine": 5958,
                  "endColumn": 1954,
                  "snippet": {
                    "text": "ers to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json` ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                    "rendered": {
                      "text": "ers to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json` ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                      "markdown": "`ers to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json` ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 5958,
                  "startColumn": 573,
                  "endLine": 5958,
                  "endColumn": 580,
                  "snippet": {
                    "text": "6\\r\\n\\r\\n## External Deps\\r\\n* Added a flag `--enable_workspace` (defaults to `True`) that allows the user to completely disable WORKSPACE logic when turned off. We plan to change the default to `False` with Bazel 8. ([#20365](https://github.com/bazelbuild/bazel/issues/20365))\\r\\n* Added new APIs to watch arbitrary files or directory trees `repository_ctx.watch`, `repository_ctx.watch_tree`. ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, in",
                    "rendered": {
                      "text": "6\\r\\n\\r\\n## External Deps\\r\\n* Added a flag `--enable_workspace` (defaults to `True`) that allows the user to completely disable WORKSPACE logic when turned off. We plan to change the default to `False` with Bazel 8. ([#20365](https://github.com/bazelbuild/bazel/issues/20365))\\r\\n* Added new APIs to watch arbitrary files or directory trees `repository_ctx.watch`, `repository_ctx.watch_tree`. ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, in",
                      "markdown": "`6\\r\\n\\r\\n## External Deps\\r\\n* Added a flag `--enable_workspace` (defaults to `True`) that allows the user to completely disable WORKSPACE logic when turned off. We plan to change the default to `False` with Bazel 8. ([#20365](https://github.com/bazelbuild/bazel/issues/20365))\\r\\n* Added new APIs to watch arbitrary files or directory trees `repository_ctx.watch`, `repository_ctx.watch_tree`. ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n* Added a new method `repository_ctx.getenv`, which allows Starlark repository rules to declare environment variable dependencies during the fetch, in`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 5912,
                  "endLine": 3968,
                  "endColumn": 5916,
                  "snippet": {
                    "text": " Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Viktor Kustov, Yannic Bonenberger.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 wit",
                    "rendered": {
                      "text": " Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Viktor Kustov, Yannic Bonenberger.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 wit",
                      "markdown": "` Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Viktor Kustov, Yannic Bonenberger.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 wit`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 5334,
                  "endLine": 3968,
                  "endColumn": 5339,
                  "snippet": {
                    "text": "ds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https:/",
                    "rendered": {
                      "text": "ds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https:/",
                      "markdown": "`ds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https:/`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 2758,
                  "endLine": 3968,
                  "endColumn": 2764,
                  "snippet": {
                    "text": "rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                    "rendered": {
                      "text": "rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                      "markdown": "`rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 1203,
                  "endLine": 3968,
                  "endColumn": 1210,
                  "snippet": {
                    "text": "d/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and module_ctx.watch() allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as repository_ctx.read() and repository_ctx.template() gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * path.readdir() now watches for changes under the directory by default.\\r\\n    * New method repository_ctx.watch_tree() allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether a pa",
                    "rendered": {
                      "text": "d/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and module_ctx.watch() allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as repository_ctx.read() and repository_ctx.template() gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * path.readdir() now watches for changes under the directory by default.\\r\\n    * New method repository_ctx.watch_tree() allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether a pa",
                      "markdown": "`d/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and module_ctx.watch() allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as repository_ctx.read() and repository_ctx.template() gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * path.readdir() now watches for changes under the directory by default.\\r\\n    * New method repository_ctx.watch_tree() allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether a pa`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 1170,
                  "endLine": 3968,
                  "endColumn": 1177,
                  "snippet": {
                    "text": "435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and module_ctx.watch() allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as repository_ctx.read() and repository_ctx.template() gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * path.readdir() now watches for changes under the directory by default.\\r\\n    * New method repository_ctx.watch_tree() allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added p",
                    "rendered": {
                      "text": "435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and module_ctx.watch() allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as repository_ctx.read() and repository_ctx.template() gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * path.readdir() now watches for changes under the directory by default.\\r\\n    * New method repository_ctx.watch_tree() allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added p",
                      "markdown": "`435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and module_ctx.watch() allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as repository_ctx.read() and repository_ctx.template() gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * path.readdir() now watches for changes under the directory by default.\\r\\n    * New method repository_ctx.watch_tree() allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added p`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 3968,
                  "startColumn": 822,
                  "endLine": 3968,
                  "endColumn": 829,
                  "snippet": {
                    "text": "Added a flag `--enable_workspace` (defaults to `True`) that allows the user to completely disable WORKSPACE logic when turned off. We plan to change the default to `False` with Bazel 8. ([#20365](https://github.com/bazelbuild/bazel/issues/20365))\\r\\n* Added new repo rule and module extension APIs to watch arbitrary files or directory trees: ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and module_ctx.watch() allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as repository_ctx.read()",
                    "rendered": {
                      "text": "Added a flag `--enable_workspace` (defaults to `True`) that allows the user to completely disable WORKSPACE logic when turned off. We plan to change the default to `False` with Bazel 8. ([#20365](https://github.com/bazelbuild/bazel/issues/20365))\\r\\n* Added new repo rule and module extension APIs to watch arbitrary files or directory trees: ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and module_ctx.watch() allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as repository_ctx.read()",
                      "markdown": "`Added a flag `--enable_workspace` (defaults to `True`) that allows the user to completely disable WORKSPACE logic when turned off. We plan to change the default to `False` with Bazel 8. ([#20365](https://github.com/bazelbuild/bazel/issues/20365))\\r\\n* Added new repo rule and module extension APIs to watch arbitrary files or directory trees: ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and module_ctx.watch() allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as repository_ctx.read()`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 6084,
                  "endLine": 1978,
                  "endColumn": 6088,
                  "snippet": {
                    "text": " Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Viktor Kustov, Yannic Bonenberger.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 wit",
                    "rendered": {
                      "text": " Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Viktor Kustov, Yannic Bonenberger.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 wit",
                      "markdown": "` Helpers. ([#21429](https://github.com/bazelbuild/bazel/pull/21429))\\r\\n\\r\\n\\r\\nAcknowledgements:\\r\\n\\r\\nThis release contains contributions from many people at Google, as well as Alessandro Patti, Artem V. Navrotskiy, Brentley Jones, Cameron Martin, Christian Scott, Cristin Donoso, David Ostrovsky, Ed Schouten, Fabian Meumertzheim, Gunnar Wagenknecht, Jordan Mele, Keith Smiley, Nikhil Kalige, Patrick Balestra, Rahul Butani, Ryan Beasley, Son Luong Ngoc, Sushain Cherivirala, thesayyn, Viktor Kustov, Yannic Bonenberger.\\r\\n\\r\\n_Notice_: Bazel installers contain binaries licensed under the GPLv2 wit`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 5506,
                  "endLine": 1978,
                  "endColumn": 5511,
                  "snippet": {
                    "text": "ds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https:/",
                    "rendered": {
                      "text": "ds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https:/",
                      "markdown": "`ds of thousands).\\r\\n* Made sandboxing and sandboxed workers faster. This is achieved by deleting files asynchronously, reusing runfiles, reducing copying and not stashing unnecessary tmp directories.\\r\\n\\r\\n## Python\\r\\n* Fixed --incompatible_python_disallow_native_rules to work with targets at the top level (e.g. \\\"//:foo\\\") ([#17773](https://github.com/bazelbuild/bazel/issues/17773#issuecomment-1852313089))\\r\\n* rules_python version increased from 0.4.0 to 0.22.1 in bazel_tools builtin module.\\r\\n\\r\\n## Remote Execution\\r\\n* Bazel now respects `expires` from Credential Helpers. ([#21429](https:/`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 2930,
                  "endLine": 1978,
                  "endColumn": 2936,
                  "snippet": {
                    "text": "rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                    "rendered": {
                      "text": "rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt",
                      "markdown": "`rs to resolve labels with `--enable_bzlmod`. ([#21023](https://github.com/bazelbuild/bazel/pull/21023))\\r\\n* Added `init_submodules` attribute to `git_override`. Registries now support the `git_repository` type in `source.json`. ([#21036](https://github.com/bazelbuild/bazel/pull/21036))\\r\\n* Bazel's Bash completion can now complete external repository labels when using `--enable_bzlmod`. ([#21149](https://github.com/bazelbuild/bazel/pull/21149))\\r\\n* Fixed `bazel fetch` by replacing query with cquery as underlying implementation ([#21567](https://github.com/bazelbuild/bazel/pull/21567), [#13847](htt`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 1371,
                  "endLine": 1978,
                  "endColumn": 1378,
                  "snippet": {
                    "text": "l/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and `module_ctx.watch()` allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as `repository_ctx.read()` and `repository_ctx.template()` gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * `path.readdir()` now watches for changes under the directory by default.\\r\\n    * New method `repository_ctx.watch_tree()` allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether ",
                    "rendered": {
                      "text": "l/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and `module_ctx.watch()` allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as `repository_ctx.read()` and `repository_ctx.template()` gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * `path.readdir()` now watches for changes under the directory by default.\\r\\n    * New method `repository_ctx.watch_tree()` allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether ",
                      "markdown": "`l/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and `module_ctx.watch()` allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as `repository_ctx.read()` and `repository_ctx.template()` gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * `path.readdir()` now watches for changes under the directory by default.\\r\\n    * New method `repository_ctx.watch_tree()` allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Added path.is_dir to detect whether `"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 1338,
                  "endLine": 1978,
                  "endColumn": 1345,
                  "snippet": {
                    "text": "ttps://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and `module_ctx.watch()` allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as `repository_ctx.read()` and `repository_ctx.template()` gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * `path.readdir()` now watches for changes under the directory by default.\\r\\n    * New method `repository_ctx.watch_tree()` allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Add",
                    "rendered": {
                      "text": "ttps://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and `module_ctx.watch()` allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as `repository_ctx.read()` and `repository_ctx.template()` gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * `path.readdir()` now watches for changes under the directory by default.\\r\\n    * New method `repository_ctx.watch_tree()` allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Add",
                      "markdown": "`ttps://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and `module_ctx.watch()` allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as `repository_ctx.read()` and `repository_ctx.template()` gain a new watch parameter to allow them to watch for changes to the path in question.\\r\\n    * `path.readdir()` now watches for changes under the directory by default.\\r\\n    * New method `repository_ctx.watch_tree()` allows changes to anything transitively under a directory tree to trigger a repo refetch.\\r\\n* Add`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/releases_for_tests.json"
                },
                "region": {
                  "startLine": 1978,
                  "startColumn": 984,
                  "endLine": 1978,
                  "endColumn": 991,
                  "snippet": {
                    "text": "Added a flag `--enable_workspace` (defaults to `True`) that allows the user to completely disable WORKSPACE logic when turned off. We plan to change the default to `False` with Bazel 8. ([#20365](https://github.com/bazelbuild/bazel/issues/20365))\\r\\n* Added new repo rule and module extension APIs to watch arbitrary files or directory trees: ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and `module_ctx.watch()` allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as `repository_ctx.rea",
                    "rendered": {
                      "text": "Added a flag `--enable_workspace` (defaults to `True`) that allows the user to completely disable WORKSPACE logic when turned off. We plan to change the default to `False` with Bazel 8. ([#20365](https://github.com/bazelbuild/bazel/issues/20365))\\r\\n* Added new repo rule and module extension APIs to watch arbitrary files or directory trees: ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and `module_ctx.watch()` allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as `repository_ctx.rea",
                      "markdown": "`Added a flag `--enable_workspace` (defaults to `True`) that allows the user to completely disable WORKSPACE logic when turned off. We plan to change the default to `False` with Bazel 8. ([#20365](https://github.com/bazelbuild/bazel/issues/20365))\\r\\n* Added new repo rule and module extension APIs to watch arbitrary files or directory trees: ([#21435](https://github.com/bazelbuild/bazel/pull/21435))\\r\\n    * New methods `repository_ctx.watch()` and `module_ctx.watch()` allow changes to a path to trigger a refetch/re-evaluation of the repo/extension.\\r\\n    * Several methods such as `repository_ctx.rea`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/sample-issues-migration.json"
                },
                "region": {
                  "startLine": 772,
                  "startColumn": 452,
                  "endLine": 772,
                  "endColumn": 457,
                  "snippet": {
                    "text": "ue:** https://github.com/bazelbuild/bazel/issues/9965\\r\\n\\r\\n### Description\\r\\n\\r\\n5 years ago we refactored some random code and a code that skipped validation of top level header inclusions appeared. Nobody remembers why, so we're deleting that. Since some Bazel users can depend on not validating top level headers, we created this incompatible flag.\\r\\n\\r\\n### Migration\\r\\n\\r\\nDeclare top-level headers as srcs/hdrs/deps of the cc_libraries using them, just like it's done for any other header in any other package.\",\n      \"score\": 1.0\n    }\n  ]\n}\n",
                    "rendered": {
                      "text": "ue:** https://github.com/bazelbuild/bazel/issues/9965\\r\\n\\r\\n### Description\\r\\n\\r\\n5 years ago we refactored some random code and a code that skipped validation of top level header inclusions appeared. Nobody remembers why, so we're deleting that. Since some Bazel users can depend on not validating top level headers, we created this incompatible flag.\\r\\n\\r\\n### Migration\\r\\n\\r\\nDeclare top-level headers as srcs/hdrs/deps of the cc_libraries using them, just like it's done for any other header in any other package.\",\n      \"score\": 1.0\n    }\n  ]\n}\n",
                      "markdown": "`ue:** https://github.com/bazelbuild/bazel/issues/9965\\r\\n\\r\\n### Description\\r\\n\\r\\n5 years ago we refactored some random code and a code that skipped validation of top level header inclusions appeared. Nobody remembers why, so we're deleting that. Since some Bazel users can depend on not validating top level headers, we created this incompatible flag.\\r\\n\\r\\n### Migration\\r\\n\\r\\nDeclare top-level headers as srcs/hdrs/deps of the cc_libraries using them, just like it's done for any other header in any other package.\",\n      \"score\": 1.0\n    }\n  ]\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/sample-issues-migration.json"
                },
                "region": {
                  "startLine": 772,
                  "startColumn": 316,
                  "endLine": 772,
                  "endColumn": 321,
                  "snippet": {
                    "text": "*Flag:** `incompatible_validate_top_level_header_inclusions`\\r\\n**Available since:** 1.2.0\\r\\n**Will be flipped:** 2.0\\r\\n**Tracking issue:** https://github.com/bazelbuild/bazel/issues/9965\\r\\n\\r\\n### Description\\r\\n\\r\\n5 years ago we refactored some random code and a code that skipped validation of top level header inclusions appeared. Nobody remembers why, so we're deleting that. Since some Bazel users can depend on not validating top level headers, we created this incompatible flag.\\r\\n\\r\\n### Migration\\r\\n\\r\\nDeclare top-level headers as srcs/hdrs/deps of the cc_libraries using them, just like ",
                    "rendered": {
                      "text": "*Flag:** `incompatible_validate_top_level_header_inclusions`\\r\\n**Available since:** 1.2.0\\r\\n**Will be flipped:** 2.0\\r\\n**Tracking issue:** https://github.com/bazelbuild/bazel/issues/9965\\r\\n\\r\\n### Description\\r\\n\\r\\n5 years ago we refactored some random code and a code that skipped validation of top level header inclusions appeared. Nobody remembers why, so we're deleting that. Since some Bazel users can depend on not validating top level headers, we created this incompatible flag.\\r\\n\\r\\n### Migration\\r\\n\\r\\nDeclare top-level headers as srcs/hdrs/deps of the cc_libraries using them, just like ",
                      "markdown": "`*Flag:** `incompatible_validate_top_level_header_inclusions`\\r\\n**Available since:** 1.2.0\\r\\n**Will be flipped:** 2.0\\r\\n**Tracking issue:** https://github.com/bazelbuild/bazel/issues/9965\\r\\n\\r\\n### Description\\r\\n\\r\\n5 years ago we refactored some random code and a code that skipped validation of top level header inclusions appeared. Nobody remembers why, so we're deleting that. Since some Bazel users can depend on not validating top level headers, we created this incompatible flag.\\r\\n\\r\\n### Migration\\r\\n\\r\\nDeclare top-level headers as srcs/hdrs/deps of the cc_libraries using them, just like `"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/sample-issues-migration.json"
                },
                "region": {
                  "startLine": 683,
                  "startColumn": 95,
                  "endLine": 683,
                  "endColumn": 100,
                  "snippet": {
                    "text": "      \"id\": 507857906,\n      \"node_id\": \"MDU6SXNzdWU1MDc4NTc5MDY=\",\n      \"number\": 10047,\n      \"title\": \"incompatible_validate_top_level_header_inclusions: also validate headers in the top level directory\",\n      \"user\": {\n        \"login\": \"hlopko\",\n        \"id\": 814566,\n",
                    "rendered": {
                      "text": "      \"id\": 507857906,\n      \"node_id\": \"MDU6SXNzdWU1MDc4NTc5MDY=\",\n      \"number\": 10047,\n      \"title\": \"incompatible_validate_top_level_header_inclusions: also validate headers in the top level directory\",\n      \"user\": {\n        \"login\": \"hlopko\",\n        \"id\": 814566,\n",
                      "markdown": "`      \"id\": 507857906,\n      \"node_id\": \"MDU6SXNzdWU1MDc4NTc5MDY=\",\n      \"number\": 10047,\n      \"title\": \"incompatible_validate_top_level_header_inclusions: also validate headers in the top level directory\",\n      \"user\": {\n        \"login\": \"hlopko\",\n        \"id\": 814566,\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 34,
                  "endLine": 248,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n### Where does Bazelisk store the downloaded versions of Bazel?\nIt creates a directory called \"bazelisk\" inside your [user cache directory](https://golang.org/pkg/os/#UserCacheDir) and will store them there.\nFeel free to delete this directory at any time, as it can be regenerated automatically when required.\n",
                    "rendered": {
                      "text": "\n### Where does Bazelisk store the downloaded versions of Bazel?\nIt creates a directory called \"bazelisk\" inside your [user cache directory](https://golang.org/pkg/os/#UserCacheDir) and will store them there.\nFeel free to delete this directory at any time, as it can be regenerated automatically when required.\n",
                      "markdown": "`\n### Where does Bazelisk store the downloaded versions of Bazel?\nIt creates a directory called \"bazelisk\" inside your [user cache directory](https://golang.org/pkg/os/#UserCacheDir) and will store them there.\nFeel free to delete this directory at any time, as it can be regenerated automatically when required.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 131,
                  "endLine": 242,
                  "endColumn": 135,
                  "snippet": {
                    "text": "## Ideas for the future\n\n- Add support for checked-in Bazel binaries.\n- When the version label is set to a commit hash, first download a matching binary version of Bazel, then build Bazel automatically at that commit and use the resulting binary.\n\n## FAQ\n\n",
                    "rendered": {
                      "text": "## Ideas for the future\n\n- Add support for checked-in Bazel binaries.\n- When the version label is set to a commit hash, first download a matching binary version of Bazel, then build Bazel automatically at that commit and use the resulting binary.\n\n## FAQ\n\n",
                      "markdown": "`## Ideas for the future\n\n- Add support for checked-in Bazel binaries.\n- When the version label is set to a commit hash, first download a matching binary version of Bazel, then build Bazel automatically at that commit and use the resulting binary.\n\n## FAQ\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 7,
                  "endLine": 178,
                  "endColumn": 16,
                  "snippet": {
                    "text": "This can be useful, if you have a wrapper script that e.g. ensures that environment variables are set to known good values.\nThis behavior can be disabled by setting the environment variable `BAZELISK_SKIP_WRAPPER` to any value (except the empty string) before launching Bazelisk.\n\nYou can control the user agent that Bazelisk sends in all HTTP requests by setting `BAZELISK_USER_AGENT` to the desired value.\n\n# .bazeliskrc configuration file\n\n",
                    "rendered": {
                      "text": "This can be useful, if you have a wrapper script that e.g. ensures that environment variables are set to known good values.\nThis behavior can be disabled by setting the environment variable `BAZELISK_SKIP_WRAPPER` to any value (except the empty string) before launching Bazelisk.\n\nYou can control the user agent that Bazelisk sends in all HTTP requests by setting `BAZELISK_USER_AGENT` to the desired value.\n\n# .bazeliskrc configuration file\n\n",
                      "markdown": "`This can be useful, if you have a wrapper script that e.g. ensures that environment variables are set to known good values.\nThis behavior can be disabled by setting the environment variable `BAZELISK_SKIP_WRAPPER` to any value (except the empty string) before launching Bazelisk.\n\nYou can control the user agent that Bazelisk sends in all HTTP requests by setting `BAZELISK_USER_AGENT` to the desired value.\n\n# .bazeliskrc configuration file\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 48,
                  "endLine": 159,
                  "endColumn": 52,
                  "snippet": {
                    "text": "bazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\nNote that, Bazelisk uses prebuilt Bazel binaries at commits on the main and release branches, therefore you cannot bisect your local commits.\n\n### Useful environment variables for --migrate and --bisect\n\n",
                    "rendered": {
                      "text": "bazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\nNote that, Bazelisk uses prebuilt Bazel binaries at commits on the main and release branches, therefore you cannot bisect your local commits.\n\n### Useful environment variables for --migrate and --bisect\n\n",
                      "markdown": "`bazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\nNote that, Bazelisk uses prebuilt Bazel binaries at commits on the main and release branches, therefore you cannot bisect your local commits.\n\n### Useful environment variables for --migrate and --bisect\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 32,
                  "endLine": 155,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# Bisect between two commits on the main branch (or branches with `release-` prefix) of the Bazel GitHub repository.\nbazelisk --bisect=<good commit hash>..<bad commit hash> test //foo:bar_test\n\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that *fixes* the build.\nbazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\n",
                    "rendered": {
                      "text": "# Bisect between two commits on the main branch (or branches with `release-` prefix) of the Bazel GitHub repository.\nbazelisk --bisect=<good commit hash>..<bad commit hash> test //foo:bar_test\n\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that *fixes* the build.\nbazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\n",
                      "markdown": "`# Bisect between two commits on the main branch (or branches with `release-` prefix) of the Bazel GitHub repository.\nbazelisk --bisect=<good commit hash>..<bad commit hash> test //foo:bar_test\n\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that *fixes* the build.\nbazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 32,
                  "endLine": 146,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\n",
                    "rendered": {
                      "text": "\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\n",
                      "markdown": "`\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 127,
                  "endLine": 135,
                  "endColumn": 131,
                  "snippet": {
                    "text": "### --migrate\n\n`--migrate` will run Bazel multiple times to help you identify compatibility issues.\nIf the code fails with `--strict`, the flag `--migrate` will run Bazel with each one of the flag separately, and print a report at the end.\nThis will show you which flags can safely enabled, and which flags require a migration.\n\n\n",
                    "rendered": {
                      "text": "### --migrate\n\n`--migrate` will run Bazel multiple times to help you identify compatibility issues.\nIf the code fails with `--strict`, the flag `--migrate` will run Bazel with each one of the flag separately, and print a report at the end.\nThis will show you which flags can safely enabled, and which flags require a migration.\n\n\n",
                      "markdown": "`### --migrate\n\n`--migrate` will run Bazel multiple times to help you identify compatibility issues.\nIf the code fails with `--strict`, the flag `--migrate` will run Bazel with each one of the flag separately, and print a report at the end.\nThis will show you which flags can safely enabled, and which flags require a migration.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 13,
                  "endLine": 117,
                  "endColumn": 21,
                  "snippet": {
                    "text": "Note that if users directly downloaded a Bazel binary and put it in their PATH, rather than running\nan installer, then `tools/bazel` and `.bazelversion` are not checked. You could call the\n[versions.check](https://github.com/bazelbuild/bazel-skylib/blob/1.1.1/docs/versions_doc.md#versionscheck) starlark module from the beginning of your WORKSPACE to\nrequire users update their bazel.\n\n[shell wrapper script]: https://github.com/bazelbuild/bazel/blob/master/scripts/packages/bazel.sh\n## Other features\n",
                    "rendered": {
                      "text": "Note that if users directly downloaded a Bazel binary and put it in their PATH, rather than running\nan installer, then `tools/bazel` and `.bazelversion` are not checked. You could call the\n[versions.check](https://github.com/bazelbuild/bazel-skylib/blob/1.1.1/docs/versions_doc.md#versionscheck) starlark module from the beginning of your WORKSPACE to\nrequire users update their bazel.\n\n[shell wrapper script]: https://github.com/bazelbuild/bazel/blob/master/scripts/packages/bazel.sh\n## Other features\n",
                      "markdown": "`Note that if users directly downloaded a Bazel binary and put it in their PATH, rather than running\nan installer, then `tools/bazel` and `.bazelversion` are not checked. You could call the\n[versions.check](https://github.com/bazelbuild/bazel-skylib/blob/1.1.1/docs/versions_doc.md#versionscheck) starlark module from the beginning of your WORKSPACE to\nrequire users update their bazel.\n\n[shell wrapper script]: https://github.com/bazelbuild/bazel/blob/master/scripts/packages/bazel.sh\n## Other features\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 83,
                  "endLine": 77,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\n## Where does Bazelisk get Bazel from?\n\nBy default Bazelisk retrieves Bazel releases, release candidates and binaries built at green commits from Google Cloud Storage. The downloaded artifacts are validated against the SHA256 value recorded in `BAZELISK_VERIFY_SHA256` if this variable is set in the configuration file.\n\nAs mentioned in the previous section, the `<FORK>/<VERSION>` version format allows you to use your own Bazel fork hosted on GitHub:\n\n",
                    "rendered": {
                      "text": "\n## Where does Bazelisk get Bazel from?\n\nBy default Bazelisk retrieves Bazel releases, release candidates and binaries built at green commits from Google Cloud Storage. The downloaded artifacts are validated against the SHA256 value recorded in `BAZELISK_VERIFY_SHA256` if this variable is set in the configuration file.\n\nAs mentioned in the previous section, the `<FORK>/<VERSION>` version format allows you to use your own Bazel fork hosted on GitHub:\n\n",
                      "markdown": "`\n## Where does Bazelisk get Bazel from?\n\nBy default Bazelisk retrieves Bazel releases, release candidates and binaries built at green commits from Google Cloud Storage. The downloaded artifacts are validated against the SHA256 value recorded in `BAZELISK_VERIFY_SHA256` if this variable is set in the configuration file.\n\nAs mentioned in the previous section, the `<FORK>/<VERSION>` version format allows you to use your own Bazel fork hosted on GitHub:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 56,
                  "endLine": 67,
                  "endColumn": 60,
                  "snippet": {
                    "text": "zel binaries are only available for commits that passed [Bazel CI](https://buildkite.com/bazel/bazel-bazel).\n\nAdditionally, a few special version names are supported for our official releases only (these formats do not work when using a fork):\n- `last_green` refers to the Bazel binary that was built at the most recent commit that passed [Bazel CI](https://buildkite.com/bazel/bazel-bazel).\n  Ideally this binary should be very close to Bazel-at-head.\n- `last_rc` points to the most recent release candidate.\n  If there is no active release candidate, Bazelisk uses the latest Bazel release instead.\n- `",
                    "rendered": {
                      "text": "zel binaries are only available for commits that passed [Bazel CI](https://buildkite.com/bazel/bazel-bazel).\n\nAdditionally, a few special version names are supported for our official releases only (these formats do not work when using a fork):\n- `last_green` refers to the Bazel binary that was built at the most recent commit that passed [Bazel CI](https://buildkite.com/bazel/bazel-bazel).\n  Ideally this binary should be very close to Bazel-at-head.\n- `last_rc` points to the most recent release candidate.\n  If there is no active release candidate, Bazelisk uses the latest Bazel release instead.\n- `",
                      "markdown": "`zel binaries are only available for commits that passed [Bazel CI](https://buildkite.com/bazel/bazel-bazel).\n\nAdditionally, a few special version names are supported for our official releases only (these formats do not work when using a fork):\n- `last_green` refers to the Bazel binary that was built at the most recent commit that passed [Bazel CI](https://buildkite.com/bazel/bazel-bazel).\n  Ideally this binary should be very close to Bazel-at-head.\n- `last_rc` points to the most recent release candidate.\n  If there is no active release candidate, Bazelisk uses the latest Bazel release instead.\n- ``"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 22,
                  "endLine": 234,
                  "endColumn": 27,
                  "snippet": {
                    "text": "To add it to your PATH:\n\n```shell\nexport PATH=$PATH:$(go env GOPATH)/bin\n```\n\nFor more information, you may read about the [`GOPATH` environment variable](https://github.com/golang/go/wiki/SettingGOPATH).\n",
                    "rendered": {
                      "text": "To add it to your PATH:\n\n```shell\nexport PATH=$PATH:$(go env GOPATH)/bin\n```\n\nFor more information, you may read about the [`GOPATH` environment variable](https://github.com/golang/go/wiki/SettingGOPATH).\n",
                      "markdown": "`To add it to your PATH:\n\n```shell\nexport PATH=$PATH:$(go env GOPATH)/bin\n```\n\nFor more information, you may read about the [`GOPATH` environment variable](https://github.com/golang/go/wiki/SettingGOPATH).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 41,
                  "endLine": 175,
                  "endColumn": 49,
                  "snippet": {
                    "text": "results.\n\n## tools/bazel\n\nIf `tools/bazel` exists in your workspace root and is executable, Bazelisk will run this file, instead of the Bazel version it downloaded.\nIt will set the environment variable `BAZEL_REAL` to the path of the downloaded Bazel binary.\nThis can be useful, if you have a wrapper script that e.g. ensures that environment variables are set to known good values.\nThis behavior can be disabled by setting the environment variable `BAZELISK_SKIP_WRAPPER` to any value (except the empty string) before launching Bazelisk.\n\nYou can control the user agent that Bazelisk sends in all HTTP reque",
                    "rendered": {
                      "text": "results.\n\n## tools/bazel\n\nIf `tools/bazel` exists in your workspace root and is executable, Bazelisk will run this file, instead of the Bazel version it downloaded.\nIt will set the environment variable `BAZEL_REAL` to the path of the downloaded Bazel binary.\nThis can be useful, if you have a wrapper script that e.g. ensures that environment variables are set to known good values.\nThis behavior can be disabled by setting the environment variable `BAZELISK_SKIP_WRAPPER` to any value (except the empty string) before launching Bazelisk.\n\nYou can control the user agent that Bazelisk sends in all HTTP reque",
                      "markdown": "`results.\n\n## tools/bazel\n\nIf `tools/bazel` exists in your workspace root and is executable, Bazelisk will run this file, instead of the Bazel version it downloaded.\nIt will set the environment variable `BAZEL_REAL` to the path of the downloaded Bazel binary.\nThis can be useful, if you have a wrapper script that e.g. ensures that environment variables are set to known good values.\nThis behavior can be disabled by setting the environment variable `BAZELISK_SKIP_WRAPPER` to any value (except the empty string) before launching Bazelisk.\n\nYou can control the user agent that Bazelisk sends in all HTTP reque`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 43,
                  "endLine": 155,
                  "endColumn": 49,
                  "snippet": {
                    "text": "# Bisect between two commits on the main branch (or branches with `release-` prefix) of the Bazel GitHub repository.\nbazelisk --bisect=<good commit hash>..<bad commit hash> test //foo:bar_test\n\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that *fixes* the build.\nbazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\n",
                    "rendered": {
                      "text": "# Bisect between two commits on the main branch (or branches with `release-` prefix) of the Bazel GitHub repository.\nbazelisk --bisect=<good commit hash>..<bad commit hash> test //foo:bar_test\n\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that *fixes* the build.\nbazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\n",
                      "markdown": "`# Bisect between two commits on the main branch (or branches with `release-` prefix) of the Bazel GitHub repository.\nbazelisk --bisect=<good commit hash>..<bad commit hash> test //foo:bar_test\n\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that *fixes* the build.\nbazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 35,
                  "endLine": 155,
                  "endColumn": 41,
                  "snippet": {
                    "text": "# Bisect between two commits on the main branch (or branches with `release-` prefix) of the Bazel GitHub repository.\nbazelisk --bisect=<good commit hash>..<bad commit hash> test //foo:bar_test\n\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that *fixes* the build.\nbazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\n",
                    "rendered": {
                      "text": "# Bisect between two commits on the main branch (or branches with `release-` prefix) of the Bazel GitHub repository.\nbazelisk --bisect=<good commit hash>..<bad commit hash> test //foo:bar_test\n\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that *fixes* the build.\nbazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\n",
                      "markdown": "`# Bisect between two commits on the main branch (or branches with `release-` prefix) of the Bazel GitHub repository.\nbazelisk --bisect=<good commit hash>..<bad commit hash> test //foo:bar_test\n\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that *fixes* the build.\nbazelisk --bisect=~6.0.0..HEAD test //foo:bar_test\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 43,
                  "endLine": 146,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\n",
                    "rendered": {
                      "text": "\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\n",
                      "markdown": "`\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 35,
                  "endLine": 146,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\n",
                    "rendered": {
                      "text": "\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\n",
                      "markdown": "`\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 143,
                  "endLine": 142,
                  "endColumn": 149,
                  "snippet": {
                    "text": "st/commits/commits#compare-two-commits) to get the list of commits to bisect. When GOOD is not an ancestor of BAD, GOOD is reset to their merge base commit.\nThe meaning of GOOD and BAD can be reversed by prefixing the range with `~`, e.g. `--bisect=~6.0.0..HEAD` will find the first version 6.0.0 and HEAD that *fixes* the build.\n\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\nbazelisk --bisect=6.1.0..release-6.2.0rc2 tes",
                    "rendered": {
                      "text": "st/commits/commits#compare-two-commits) to get the list of commits to bisect. When GOOD is not an ancestor of BAD, GOOD is reset to their merge base commit.\nThe meaning of GOOD and BAD can be reversed by prefixing the range with `~`, e.g. `--bisect=~6.0.0..HEAD` will find the first version 6.0.0 and HEAD that *fixes* the build.\n\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\nbazelisk --bisect=6.1.0..release-6.2.0rc2 tes",
                      "markdown": "`st/commits/commits#compare-two-commits) to get the list of commits to bisect. When GOOD is not an ancestor of BAD, GOOD is reset to their merge base commit.\nThe meaning of GOOD and BAD can be reversed by prefixing the range with `~`, e.g. `--bisect=~6.0.0..HEAD` will find the first version 6.0.0 and HEAD that *fixes* the build.\n\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\nbazelisk --bisect=6.1.0..release-6.2.0rc2 tes`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 110,
                  "endLine": 142,
                  "endColumn": 116,
                  "snippet": {
                    "text": "PI](https://docs.github.com/en/rest/commits/commits#compare-two-commits) to get the list of commits to bisect. When GOOD is not an ancestor of BAD, GOOD is reset to their merge base commit.\nThe meaning of GOOD and BAD can be reversed by prefixing the range with `~`, e.g. `--bisect=~6.0.0..HEAD` will find the first version 6.0.0 and HEAD that *fixes* the build.\n\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\nbazelisk --b",
                    "rendered": {
                      "text": "PI](https://docs.github.com/en/rest/commits/commits#compare-two-commits) to get the list of commits to bisect. When GOOD is not an ancestor of BAD, GOOD is reset to their merge base commit.\nThe meaning of GOOD and BAD can be reversed by prefixing the range with `~`, e.g. `--bisect=~6.0.0..HEAD` will find the first version 6.0.0 and HEAD that *fixes* the build.\n\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\nbazelisk --b",
                      "markdown": "`PI](https://docs.github.com/en/rest/commits/commits#compare-two-commits) to get the list of commits to bisect. When GOOD is not an ancestor of BAD, GOOD is reset to their merge base commit.\nThe meaning of GOOD and BAD can be reversed by prefixing the range with `~`, e.g. `--bisect=~6.0.0..HEAD` will find the first version 6.0.0 and HEAD that *fixes* the build.\n\nExamples:\n```shell\n# Bisect between 6.0.0 and Bazel at HEAD to find the first commit that breaks the build.\nbazelisk --bisect=6.0.0..HEAD test //foo:bar_test\n\n# Bisect between 6.1.0 and the second release candidate of Bazel 6.2.0\nbazelisk --b`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 54,
                  "endLine": 141,
                  "endColumn": 60,
                  "snippet": {
                    "text": ".\nIf the code fails with `--strict`, the flag `--migrate` will run Bazel with each one of the flag separately, and print a report at the end.\nThis will show you which flags can safely enabled, and which flags require a migration.\n\n\n### --bisect\n\n`--bisect` flag allows you to bisect Bazel versions to find which version introduced a build failure. You can specify the range of versions to bisect with `--bisect=<GOOD>..<BAD>`, where GOOD is the last known working Bazel version and BAD is the first known non-working Bazel version. Bazelisk uses [GitHub's compare API](https://docs.github.com/en/rest/commi",
                    "rendered": {
                      "text": ".\nIf the code fails with `--strict`, the flag `--migrate` will run Bazel with each one of the flag separately, and print a report at the end.\nThis will show you which flags can safely enabled, and which flags require a migration.\n\n\n### --bisect\n\n`--bisect` flag allows you to bisect Bazel versions to find which version introduced a build failure. You can specify the range of versions to bisect with `--bisect=<GOOD>..<BAD>`, where GOOD is the last known working Bazel version and BAD is the first known non-working Bazel version. Bazelisk uses [GitHub's compare API](https://docs.github.com/en/rest/commi",
                      "markdown": "`.\nIf the code fails with `--strict`, the flag `--migrate` will run Bazel with each one of the flag separately, and print a report at the end.\nThis will show you which flags can safely enabled, and which flags require a migration.\n\n\n### --bisect\n\n`--bisect` flag allows you to bisect Bazel versions to find which version introduced a build failure. You can specify the range of versions to bisect with `--bisect=<GOOD>..<BAD>`, where GOOD is the last known working Bazel version and BAD is the first known non-working Bazel version. Bazelisk uses [GitHub's compare API](https://docs.github.com/en/rest/commi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 7,
                  "endLine": 109,
                  "endColumn": 13,
                  "snippet": {
                    "text": "k rather than Bazel\n\nBazel installers typically provide Bazel's [shell wrapper script] as the `bazel` on the PATH.\n\nWhen installed this way, Bazel checks the `.bazelversion` file itself, but the failure when it mismatches with the actual version of Bazel can be quite confusing to developers.\nYou may find yourself having to explain the difference between Bazel and Bazelisk (especially when you upgrade the pinned version).\nTo avoid this, you can add a check in your `tools/bazel` wrapper.\nSince Bazelisk is careful to avoid calling itself in a loop, it always calls the wrapper with the environment varia",
                    "rendered": {
                      "text": "k rather than Bazel\n\nBazel installers typically provide Bazel's [shell wrapper script] as the `bazel` on the PATH.\n\nWhen installed this way, Bazel checks the `.bazelversion` file itself, but the failure when it mismatches with the actual version of Bazel can be quite confusing to developers.\nYou may find yourself having to explain the difference between Bazel and Bazelisk (especially when you upgrade the pinned version).\nTo avoid this, you can add a check in your `tools/bazel` wrapper.\nSince Bazelisk is careful to avoid calling itself in a loop, it always calls the wrapper with the environment varia",
                      "markdown": "`k rather than Bazel\n\nBazel installers typically provide Bazel's [shell wrapper script] as the `bazel` on the PATH.\n\nWhen installed this way, Bazel checks the `.bazelversion` file itself, but the failure when it mismatches with the actual version of Bazel can be quite confusing to developers.\nYou may find yourself having to explain the difference between Bazel and Bazelisk (especially when you upgrade the pinned version).\nTo avoid this, you can add a check in your `tools/bazel` wrapper.\nSince Bazelisk is careful to avoid calling itself in a loop, it always calls the wrapper with the environment varia`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/README.md"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 15,
                  "endLine": 64,
                  "endColumn": 20,
                  "snippet": {
                    "text": " `0.17.2` means that exact version of Bazel.\n  It can also be a release candidate version like `0.20.0rc3`, or a rolling release version like `5.0.0-pre.20210317.1`.\n- A floating version identifier like `4.x` that returns the latest release from the LTS series started by Bazel 4.0.0.\n- The hash of a Git commit. Please note that Bazel binaries are only available for commits that passed [Bazel CI](https://buildkite.com/bazel/bazel-bazel).\n\nAdditionally, a few special version names are supported for our official releases only (these formats do not work when using a fork):\n- `last_green` refers to the ",
                    "rendered": {
                      "text": " `0.17.2` means that exact version of Bazel.\n  It can also be a release candidate version like `0.20.0rc3`, or a rolling release version like `5.0.0-pre.20210317.1`.\n- A floating version identifier like `4.x` that returns the latest release from the LTS series started by Bazel 4.0.0.\n- The hash of a Git commit. Please note that Bazel binaries are only available for commits that passed [Bazel CI](https://buildkite.com/bazel/bazel-bazel).\n\nAdditionally, a few special version names are supported for our official releases only (these formats do not work when using a fork):\n- `last_green` refers to the ",
                      "markdown": "` `0.17.2` means that exact version of Bazel.\n  It can also be a release candidate version like `0.20.0rc3`, or a rolling release version like `5.0.0-pre.20210317.1`.\n- A floating version identifier like `4.x` that returns the latest release from the LTS series started by Bazel 4.0.0.\n- The hash of a Git commit. Please note that Bazel binaries are only available for commits that passed [Bazel CI](https://buildkite.com/bazel/bazel-bazel).\n\nAdditionally, a few special version names are supported for our official releases only (these formats do not work when using a fork):\n- `last_green` refers to the `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 22,
                  "endLine": 424,
                  "endColumn": 88,
                  "snippet": {
                    "text": "      expected_sha256=\"D93508529d41136065c7b1E5ff555fbfb9d18fd00e768886F2fc7dfb53b05B43\"\n      ;;\n    msys*|mingw*|cygwin*)\n      expected_sha256=\"9fb6f439e2eb646b9bae7bd2c0317165c0b08abc0bba25f6af53180fa1f86997\"\n      ;;\n    *)\n      echo \"FAIL: Unknown OS ${os} in test\"\n",
                    "rendered": {
                      "text": "      expected_sha256=\"D93508529d41136065c7b1E5ff555fbfb9d18fd00e768886F2fc7dfb53b05B43\"\n      ;;\n    msys*|mingw*|cygwin*)\n      expected_sha256=\"9fb6f439e2eb646b9bae7bd2c0317165c0b08abc0bba25f6af53180fa1f86997\"\n      ;;\n    *)\n      echo \"FAIL: Unknown OS ${os} in test\"\n",
                      "markdown": "`      expected_sha256=\"D93508529d41136065c7b1E5ff555fbfb9d18fd00e768886F2fc7dfb53b05B43\"\n      ;;\n    msys*|mingw*|cygwin*)\n      expected_sha256=\"9fb6f439e2eb646b9bae7bd2c0317165c0b08abc0bba25f6af53180fa1f86997\"\n      ;;\n    *)\n      echo \"FAIL: Unknown OS ${os} in test\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 22,
                  "endLine": 421,
                  "endColumn": 88,
                  "snippet": {
                    "text": "      expected_sha256=\"dae351f491ead382bfc7c14d8957b9c8d735300c566c2161e34035eab994c1f2\"\n      ;;\n    linux)\n      expected_sha256=\"D93508529d41136065c7b1E5ff555fbfb9d18fd00e768886F2fc7dfb53b05B43\"\n      ;;\n    msys*|mingw*|cygwin*)\n      expected_sha256=\"9fb6f439e2eb646b9bae7bd2c0317165c0b08abc0bba25f6af53180fa1f86997\"\n",
                    "rendered": {
                      "text": "      expected_sha256=\"dae351f491ead382bfc7c14d8957b9c8d735300c566c2161e34035eab994c1f2\"\n      ;;\n    linux)\n      expected_sha256=\"D93508529d41136065c7b1E5ff555fbfb9d18fd00e768886F2fc7dfb53b05B43\"\n      ;;\n    msys*|mingw*|cygwin*)\n      expected_sha256=\"9fb6f439e2eb646b9bae7bd2c0317165c0b08abc0bba25f6af53180fa1f86997\"\n",
                      "markdown": "`      expected_sha256=\"dae351f491ead382bfc7c14d8957b9c8d735300c566c2161e34035eab994c1f2\"\n      ;;\n    linux)\n      expected_sha256=\"D93508529d41136065c7b1E5ff555fbfb9d18fd00e768886F2fc7dfb53b05B43\"\n      ;;\n    msys*|mingw*|cygwin*)\n      expected_sha256=\"9fb6f439e2eb646b9bae7bd2c0317165c0b08abc0bba25f6af53180fa1f86997\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 22,
                  "endLine": 418,
                  "endColumn": 88,
                  "snippet": {
                    "text": "  local os=\"$(uname -s | tr A-Z a-z)\"\n  case \"${os}\" in\n    darwin)\n      expected_sha256=\"dae351f491ead382bfc7c14d8957b9c8d735300c566c2161e34035eab994c1f2\"\n      ;;\n    linux)\n      expected_sha256=\"D93508529d41136065c7b1E5ff555fbfb9d18fd00e768886F2fc7dfb53b05B43\"\n",
                    "rendered": {
                      "text": "  local os=\"$(uname -s | tr A-Z a-z)\"\n  case \"${os}\" in\n    darwin)\n      expected_sha256=\"dae351f491ead382bfc7c14d8957b9c8d735300c566c2161e34035eab994c1f2\"\n      ;;\n    linux)\n      expected_sha256=\"D93508529d41136065c7b1E5ff555fbfb9d18fd00e768886F2fc7dfb53b05B43\"\n",
                      "markdown": "`  local os=\"$(uname -s | tr A-Z a-z)\"\n  case \"${os}\" in\n    darwin)\n      expected_sha256=\"dae351f491ead382bfc7c14d8957b9c8d735300c566c2161e34035eab994c1f2\"\n      ;;\n    linux)\n      expected_sha256=\"D93508529d41136065c7b1E5ff555fbfb9d18fd00e768886F2fc7dfb53b05B43\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 38,
                  "endLine": 8,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http:#www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http:#www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http:#www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 1,
                  "endLine": 492,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n  # 7.1.0 is the latest release in releases_for_tests.json\n  PATTERN=$(echo \"^PATH=$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin[:;]\" | sed -e 's/\\//\\[\\/\\\\\\\\\\]/g')\n  grep \"$PATTERN\" log || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "\n  # 7.1.0 is the latest release in releases_for_tests.json\n  PATTERN=$(echo \"^PATH=$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin[:;]\" | sed -e 's/\\//\\[\\/\\\\\\\\\\]/g')\n  grep \"$PATTERN\" log || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n}\n\n",
                      "markdown": "`\n  # 7.1.0 is the latest release in releases_for_tests.json\n  PATTERN=$(echo \"^PATH=$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin[:;]\" | sed -e 's/\\//\\[\\/\\\\\\\\\\]/g')\n  grep \"$PATTERN\" log || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 491,
                  "startColumn": 94,
                  "endLine": 491,
                  "endColumn": 99,
                  "snippet": {
                    "text": "      bazelisk --print_env 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  PATTERN=$(echo \"^PATH=$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin[:;]\" | sed -e 's/\\//\\[\\/\\\\\\\\\\]/g')\n  grep \"$PATTERN\" log || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n}\n",
                    "rendered": {
                      "text": "      bazelisk --print_env 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  PATTERN=$(echo \"^PATH=$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin[:;]\" | sed -e 's/\\//\\[\\/\\\\\\\\\\]/g')\n  grep \"$PATTERN\" log || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n}\n",
                      "markdown": "`      bazelisk --print_env 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  PATTERN=$(echo \"^PATH=$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin[:;]\" | sed -e 's/\\//\\[\\/\\\\\\\\\\]/g')\n  grep \"$PATTERN\" log || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 33,
                  "endLine": 488,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk --print_env 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  PATTERN=$(echo \"^PATH=$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin[:;]\" | sed -e 's/\\//\\[\\/\\\\\\\\\\]/g')\n",
                    "rendered": {
                      "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk --print_env 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  PATTERN=$(echo \"^PATH=$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin[:;]\" | sed -e 's/\\//\\[\\/\\\\\\\\\\]/g')\n",
                      "markdown": "`  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk --print_env 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  PATTERN=$(echo \"^PATH=$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin[:;]\" | sed -e 's/\\//\\[\\/\\\\\\\\\\]/g')\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 50,
                  "endLine": 478,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        exit 1\n        ;;\n    esac\n  path_entry=\"$(grep \"^PATH=\" log | cut -d= -f2- | cut -d\"${path_entry_delimiter}\" -f1)\"\n\n  [[ -x \"${path_entry}${path_delimiter}bazel${extension}\" ]] || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n",
                    "rendered": {
                      "text": "        exit 1\n        ;;\n    esac\n  path_entry=\"$(grep \"^PATH=\" log | cut -d= -f2- | cut -d\"${path_entry_delimiter}\" -f1)\"\n\n  [[ -x \"${path_entry}${path_delimiter}bazel${extension}\" ]] || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n",
                      "markdown": "`        exit 1\n        ;;\n    esac\n  path_entry=\"$(grep \"^PATH=\" log | cut -d= -f2- | cut -d\"${path_entry_delimiter}\" -f1)\"\n\n  [[ -x \"${path_entry}${path_delimiter}bazel${extension}\" ]] || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 35,
                  "endLine": 478,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        exit 1\n        ;;\n    esac\n  path_entry=\"$(grep \"^PATH=\" log | cut -d= -f2- | cut -d\"${path_entry_delimiter}\" -f1)\"\n\n  [[ -x \"${path_entry}${path_delimiter}bazel${extension}\" ]] || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n",
                    "rendered": {
                      "text": "        exit 1\n        ;;\n    esac\n  path_entry=\"$(grep \"^PATH=\" log | cut -d= -f2- | cut -d\"${path_entry_delimiter}\" -f1)\"\n\n  [[ -x \"${path_entry}${path_delimiter}bazel${extension}\" ]] || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n",
                      "markdown": "`        exit 1\n        ;;\n    esac\n  path_entry=\"$(grep \"^PATH=\" log | cut -d= -f2- | cut -d\"${path_entry_delimiter}\" -f1)\"\n\n  [[ -x \"${path_entry}${path_delimiter}bazel${extension}\" ]] || \\\n      (echo \"FAIL: Expected PATH to contains bazel binary directory.\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 33,
                  "endLine": 459,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk --print_env 2>&1 | tee log\n\n  local os=\"$(uname -s | tr A-Z a-z)\"\n  case \"${os}\" in\n",
                    "rendered": {
                      "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk --print_env 2>&1 | tee log\n\n  local os=\"$(uname -s | tr A-Z a-z)\"\n  case \"${os}\" in\n",
                      "markdown": "`  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk --print_env 2>&1 | tee log\n\n  local os=\"$(uname -s | tr A-Z a-z)\"\n  case \"${os}\" in\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 451,
                  "startColumn": 1,
                  "endLine": 451,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"^$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin/bazel\\(.exe\\)\\?$\" log || \\\n      (echo \"FAIL: Expected to download bazel binary into specific path.\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"^$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin/bazel\\(.exe\\)\\?$\" log || \\\n      (echo \"FAIL: Expected to download bazel binary into specific path.\"; exit 1)\n}\n\n",
                      "markdown": "`  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"^$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin/bazel\\(.exe\\)\\?$\" log || \\\n      (echo \"FAIL: Expected to download bazel binary into specific path.\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 51,
                  "endLine": 448,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"^$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin/bazel\\(.exe\\)\\?$\" log || \\\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"^$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin/bazel\\(.exe\\)\\?$\" log || \\\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"^$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin/bazel\\(.exe\\)\\?$\" log || \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 1,
                  "endLine": 448,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"^$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin/bazel\\(.exe\\)\\?$\" log || \\\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"^$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin/bazel\\(.exe\\)\\?$\" log || \\\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"^$BAZELISK_HOME/downloads/bazelbuild/bazel-7.1.0-[a-z0-9_-]*/bin/bazel\\(.exe\\)\\?$\" log || \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 29,
                  "endLine": 446,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n",
                    "rendered": {
                      "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n",
                      "markdown": "`  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/bazelbuild\" 2>&1 | tee log\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 439,
                  "startColumn": 30,
                  "endLine": 439,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_download_path_py() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_download_path_py() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_download_path_py() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 1,
                  "endLine": 438,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"${expected_sha256}\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"${expected_sha256}\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"${expected_sha256}\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 436,
                  "startColumn": 29,
                  "endLine": 436,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  # hash has a random uppercase / lowercase mixture to ensure this does not impact equality\n  # checks.\n  BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"${expected_sha256}\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "  # hash has a random uppercase / lowercase mixture to ensure this does not impact equality\n  # checks.\n  BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"${expected_sha256}\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`  # hash has a random uppercase / lowercase mixture to ensure this does not impact equality\n  # checks.\n  BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"${expected_sha256}\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 30,
                  "endLine": 410,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  fi\n\n  grep \"need sha256=invalid-hash\" log || \\\n      (echo \"FAIL: Expected to find hash mismatch\"; exit 1)\n\n  # IMPORTANT: The mixture of lowercase and uppercase letters in the hashes below is\n  # intentional to ensure the variable contents are normalized before comparison.\n",
                    "rendered": {
                      "text": "  fi\n\n  grep \"need sha256=invalid-hash\" log || \\\n      (echo \"FAIL: Expected to find hash mismatch\"; exit 1)\n\n  # IMPORTANT: The mixture of lowercase and uppercase letters in the hashes below is\n  # intentional to ensure the variable contents are normalized before comparison.\n",
                      "markdown": "`  fi\n\n  grep \"need sha256=invalid-hash\" log || \\\n      (echo \"FAIL: Expected to find hash mismatch\"; exit 1)\n\n  # IMPORTANT: The mixture of lowercase and uppercase letters in the hashes below is\n  # intentional to ensure the variable contents are normalized before comparison.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 1,
                  "endLine": 409,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    echo \"FAIL: Command should have errored out\"; exit 1\n  fi\n\n  grep \"need sha256=invalid-hash\" log || \\\n      (echo \"FAIL: Expected to find hash mismatch\"; exit 1)\n\n  # IMPORTANT: The mixture of lowercase and uppercase letters in the hashes below is\n",
                    "rendered": {
                      "text": "    echo \"FAIL: Command should have errored out\"; exit 1\n  fi\n\n  grep \"need sha256=invalid-hash\" log || \\\n      (echo \"FAIL: Expected to find hash mismatch\"; exit 1)\n\n  # IMPORTANT: The mixture of lowercase and uppercase letters in the hashes below is\n",
                      "markdown": "`    echo \"FAIL: Command should have errored out\"; exit 1\n  fi\n\n  grep \"need sha256=invalid-hash\" log || \\\n      (echo \"FAIL: Expected to find hash mismatch\"; exit 1)\n\n  # IMPORTANT: The mixture of lowercase and uppercase letters in the hashes below is\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 29,
                  "endLine": 405,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n  # First try to download and expect an invalid hash (it doesn't matter what it is).\n  if BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"invalid-hash\" \\\n      bazelisk version 2>&1 | tee log; then\n    echo \"FAIL: Command should have errored out\"; exit 1\n  fi\n\n",
                    "rendered": {
                      "text": "\n  # First try to download and expect an invalid hash (it doesn't matter what it is).\n  if BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"invalid-hash\" \\\n      bazelisk version 2>&1 | tee log; then\n    echo \"FAIL: Command should have errored out\"; exit 1\n  fi\n\n",
                      "markdown": "`\n  # First try to download and expect an invalid hash (it doesn't matter what it is).\n  if BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"invalid-hash\" \\\n      bazelisk version 2>&1 | tee log; then\n    echo \"FAIL: Command should have errored out\"; exit 1\n  fi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 403,
                  "startColumn": 29,
                  "endLine": 403,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n  echo \"7.1.1\" > .bazelversion\n\n  # First try to download and expect an invalid hash (it doesn't matter what it is).\n  if BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"invalid-hash\" \\\n      bazelisk version 2>&1 | tee log; then\n    echo \"FAIL: Command should have errored out\"; exit 1\n",
                    "rendered": {
                      "text": "\n  echo \"7.1.1\" > .bazelversion\n\n  # First try to download and expect an invalid hash (it doesn't matter what it is).\n  if BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"invalid-hash\" \\\n      bazelisk version 2>&1 | tee log; then\n    echo \"FAIL: Command should have errored out\"; exit 1\n",
                      "markdown": "`\n  echo \"7.1.1\" > .bazelversion\n\n  # First try to download and expect an invalid hash (it doesn't matter what it is).\n  if BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_VERIFY_SHA256=\"invalid-hash\" \\\n      bazelisk version 2>&1 | tee log; then\n    echo \"FAIL: Command should have errored out\"; exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 1,
                  "endLine": 394,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n  grep \"^$BAZELISK_HOME/downloads/metadata/bazelbuild/bazel-[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[a-z0-9_-]*$\" log || \\\n      (echo \"FAIL: Expected to download bazel metadata in specific path.\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n  grep \"^$BAZELISK_HOME/downloads/metadata/bazelbuild/bazel-[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[a-z0-9_-]*$\" log || \\\n      (echo \"FAIL: Expected to download bazel metadata in specific path.\"; exit 1)\n}\n\n",
                      "markdown": "`\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n  grep \"^$BAZELISK_HOME/downloads/metadata/bazelbuild/bazel-[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[a-z0-9_-]*$\" log || \\\n      (echo \"FAIL: Expected to download bazel metadata in specific path.\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 60,
                  "endLine": 392,
                  "endColumn": 65,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n  grep \"^$BAZELISK_HOME/downloads/metadata/bazelbuild/bazel-[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[a-z0-9_-]*$\" log || \\\n      (echo \"FAIL: Expected to download bazel metadata in specific path.\"; exit 1)\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n  grep \"^$BAZELISK_HOME/downloads/metadata/bazelbuild/bazel-[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[a-z0-9_-]*$\" log || \\\n      (echo \"FAIL: Expected to download bazel metadata in specific path.\"; exit 1)\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n  grep \"^$BAZELISK_HOME/downloads/metadata/bazelbuild/bazel-[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[a-z0-9_-]*$\" log || \\\n      (echo \"FAIL: Expected to download bazel metadata in specific path.\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 1,
                  "endLine": 392,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n  grep \"^$BAZELISK_HOME/downloads/metadata/bazelbuild/bazel-[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[a-z0-9_-]*$\" log || \\\n      (echo \"FAIL: Expected to download bazel metadata in specific path.\"; exit 1)\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n  grep \"^$BAZELISK_HOME/downloads/metadata/bazelbuild/bazel-[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[a-z0-9_-]*$\" log || \\\n      (echo \"FAIL: Expected to download bazel metadata in specific path.\"; exit 1)\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n  grep \"^$BAZELISK_HOME/downloads/metadata/bazelbuild/bazel-[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[a-z0-9_-]*$\" log || \\\n      (echo \"FAIL: Expected to download bazel metadata in specific path.\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 29,
                  "endLine": 390,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n",
                    "rendered": {
                      "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n",
                      "markdown": "`  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  find \"$BAZELISK_HOME/downloads/metadata/bazelbuild\" 2>&1 | tee log\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 30,
                  "endLine": 383,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_download_path_go() {\n",
                    "rendered": {
                      "text": "      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_download_path_go() {\n",
                      "markdown": "`      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_download_path_go() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 1,
                  "endLine": 382,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 34,
                  "endLine": 380,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 1,
                  "endLine": 379,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      BAZELISK_SKIP_WRAPPER=\"true\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n",
                    "rendered": {
                      "text": "      BAZELISK_SKIP_WRAPPER=\"true\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n",
                      "markdown": "`      BAZELISK_SKIP_WRAPPER=\"true\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"Build label:\" log || \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 29,
                  "endLine": 377,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      BAZELISK_SKIP_WRAPPER=\"true\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      BAZELISK_SKIP_WRAPPER=\"true\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      BAZELISK_SKIP_WRAPPER=\"true\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log && \\\n      (echo \"FAIL: Expected to not find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 1,
                  "endLine": 373,
                  "endColumn": 8,
                  "snippet": {
                    "text": "echo HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      BAZELISK_SKIP_WRAPPER=\"true\" \\\n",
                    "rendered": {
                      "text": "echo HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      BAZELISK_SKIP_WRAPPER=\"true\" \\\n",
                      "markdown": "`echo HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      BAZELISK_SKIP_WRAPPER=\"true\" \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 5,
                  "endLine": 371,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n",
                    "rendered": {
                      "text": "  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n",
                      "markdown": "`  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 18,
                  "endLine": 371,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n",
                    "rendered": {
                      "text": "  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n",
                      "markdown": "`  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 1,
                  "endLine": 368,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  setup\n\n  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\n",
                    "rendered": {
                      "text": "  setup\n\n  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\n",
                      "markdown": "`  setup\n\n  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 144,
                  "endLine": 352,
                  "endColumn": 149,
                  "snippet": {
                    "text": "\n  # We need a separate mirror of bazel binaries, which has identical files.\n  # Ideally we wouldn't depend on sourceforge for test runtime, but hey, it exists and it works.\n  BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_BASE_URL=https://downloads.sourceforge.net/project/bazel.mirror bazelisk sync --only=print_path 2>&1 | tee log2\n\n  path1=\"$(grep \"PATH is:\" log1)\"\n  path2=\"$(grep \"PATH is:\" log2)\"\n",
                    "rendered": {
                      "text": "\n  # We need a separate mirror of bazel binaries, which has identical files.\n  # Ideally we wouldn't depend on sourceforge for test runtime, but hey, it exists and it works.\n  BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_BASE_URL=https://downloads.sourceforge.net/project/bazel.mirror bazelisk sync --only=print_path 2>&1 | tee log2\n\n  path1=\"$(grep \"PATH is:\" log1)\"\n  path2=\"$(grep \"PATH is:\" log2)\"\n",
                      "markdown": "`\n  # We need a separate mirror of bazel binaries, which has identical files.\n  # Ideally we wouldn't depend on sourceforge for test runtime, but hey, it exists and it works.\n  BAZELISK_HOME=\"$BAZELISK_HOME\" BAZELISK_BASE_URL=https://downloads.sourceforge.net/project/bazel.mirror bazelisk sync --only=print_path 2>&1 | tee log2\n\n  path1=\"$(grep \"PATH is:\" log1)\"\n  path2=\"$(grep \"PATH is:\" log2)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 71,
                  "endLine": 346,
                  "endColumn": 76,
                  "snippet": {
                    "text": ")\nEOF\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" bazelisk sync --only=print_path 2>&1 | tee log1\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" bazelisk clean --expunge 2>&1\n\n",
                    "rendered": {
                      "text": ")\nEOF\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" bazelisk sync --only=print_path 2>&1 | tee log1\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" bazelisk clean --expunge 2>&1\n\n",
                      "markdown": "`)\nEOF\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" bazelisk sync --only=print_path 2>&1 | tee log1\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" bazelisk clean --expunge 2>&1\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 332,
                  "endLine": 333,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nnoop()\nEOF\n\ncat >print_path.bzl <<EOF\ndef _print_path_impl(rctx):\n    print(\"PATH is: {}\".format(rctx.os.environ[\"PATH\"]))\n\n",
                    "rendered": {
                      "text": "\nnoop()\nEOF\n\ncat >print_path.bzl <<EOF\ndef _print_path_impl(rctx):\n    print(\"PATH is: {}\".format(rctx.os.environ[\"PATH\"]))\n\n",
                      "markdown": "`\nnoop()\nEOF\n\ncat >print_path.bzl <<EOF\ndef _print_path_impl(rctx):\n    print(\"PATH is: {}\".format(rctx.os.environ[\"PATH\"]))\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 1,
                  "endLine": 323,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n  echo 7.3.1 > .bazelversion\n\n  cat >WORKSPACE <<EOF\nload(\"//:print_path.bzl\", \"print_path\")\n\nprint_path(name = \"print_path\")\n",
                    "rendered": {
                      "text": "\n  echo 7.3.1 > .bazelversion\n\n  cat >WORKSPACE <<EOF\nload(\"//:print_path.bzl\", \"print_path\")\n\nprint_path(name = \"print_path\")\n",
                      "markdown": "`\n  echo 7.3.1 > .bazelversion\n\n  cat >WORKSPACE <<EOF\nload(\"//:print_path.bzl\", \"print_path\")\n\nprint_path(name = \"print_path\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 30,
                  "endLine": 315,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n      (echo \"FAIL: Expected to find 'BAZELISK_SKIP_WRAPPER=true' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_path_is_consistent_regardless_of_base_url() {\n",
                    "rendered": {
                      "text": "      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n      (echo \"FAIL: Expected to find 'BAZELISK_SKIP_WRAPPER=true' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_path_is_consistent_regardless_of_base_url() {\n",
                      "markdown": "`      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n      (echo \"FAIL: Expected to find 'BAZELISK_SKIP_WRAPPER=true' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_path_is_consistent_regardless_of_base_url() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 1,
                  "endLine": 314,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n      (echo \"FAIL: Expected to find 'BAZELISK_SKIP_WRAPPER=true' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n      (echo \"FAIL: Expected to find 'BAZELISK_SKIP_WRAPPER=true' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n      (echo \"FAIL: Expected to find 'BAZELISK_SKIP_WRAPPER=true' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 30,
                  "endLine": 312,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n      (echo \"FAIL: Expected to find 'BAZELISK_SKIP_WRAPPER=true' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n      (echo \"FAIL: Expected to find 'BAZELISK_SKIP_WRAPPER=true' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n      (echo \"FAIL: Expected to find 'BAZELISK_SKIP_WRAPPER=true' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 1,
                  "endLine": 311,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n\n  grep \"BAZELISK_SKIP_WRAPPER=true\" log || \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 29,
                  "endLine": 309,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  chmod +x tools/bazel\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "  chmod +x tools/bazel\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`  chmod +x tools/bazel\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"HELLO_WRAPPER\" log || \\\n      (echo \"FAIL: Expected to find 'HELLO_WRAPPER' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 1,
                  "endLine": 306,
                  "endColumn": 8,
                  "snippet": {
                    "text": "echo HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n",
                    "rendered": {
                      "text": "echo HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n",
                      "markdown": "`echo HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 5,
                  "endLine": 304,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n",
                    "rendered": {
                      "text": "  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n",
                      "markdown": "`  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 18,
                  "endLine": 304,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n",
                    "rendered": {
                      "text": "  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n",
                      "markdown": "`  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\nEOF\n  chmod +x tools/bazel\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 1,
                  "endLine": 301,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  setup\n\n  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\n",
                    "rendered": {
                      "text": "  setup\n\n  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\n",
                      "markdown": "`  setup\n\n  mkdir tools\n  cat > tools/bazel <<'EOF'\n#!/bin/sh\necho HELLO_WRAPPER\nenv | grep BAZELISK_SKIP_WRAPPER\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 30,
                  "endLine": 294,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_delegate_to_wrapper() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_delegate_to_wrapper() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_delegate_to_wrapper() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 1,
                  "endLine": 293,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 29,
                  "endLine": 291,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n  USE_BAZEL_VERSION=\"last_rc\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "\n  USE_BAZEL_VERSION=\"last_rc\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`\n  USE_BAZEL_VERSION=\"last_rc\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label:\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 30,
                  "endLine": 283,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_last_rc() {\n",
                    "rendered": {
                      "text": "      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_last_rc() {\n",
                      "markdown": "`      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_last_rc() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 1,
                  "endLine": 282,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      JAVA_HOME=\"does/not/exist\" \\\n      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      JAVA_HOME=\"does/not/exist\" \\\n      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      JAVA_HOME=\"does/not/exist\" \\\n      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 60,
                  "endLine": 280,
                  "endColumn": 65,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      USE_BAZEL_VERSION=\"7.0.0\" \\\n      JAVA_HOME=\"does/not/exist\" \\\n      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      USE_BAZEL_VERSION=\"7.0.0\" \\\n      JAVA_HOME=\"does/not/exist\" \\\n      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      USE_BAZEL_VERSION=\"7.0.0\" \\\n      JAVA_HOME=\"does/not/exist\" \\\n      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 24,
                  "endLine": 271,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n  set -e\n\n  grep \"FATAL: Could not find embedded or explicit server javabase, and --noautodetect_server_javabase is set.\" log || \\\n      (echo \"FAIL: nojdk Bazel should fail when no JDK is supplied.\"; exit 1)\n\n  # Theoretically there could be a cache collision in the Bazelisk cache between nojdk and regular Bazel.\n",
                    "rendered": {
                      "text": "      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n  set -e\n\n  grep \"FATAL: Could not find embedded or explicit server javabase, and --noautodetect_server_javabase is set.\" log || \\\n      (echo \"FAIL: nojdk Bazel should fail when no JDK is supplied.\"; exit 1)\n\n  # Theoretically there could be a cache collision in the Bazelisk cache between nojdk and regular Bazel.\n",
                      "markdown": "`      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n  set -e\n\n  grep \"FATAL: Could not find embedded or explicit server javabase, and --noautodetect_server_javabase is set.\" log || \\\n      (echo \"FAIL: nojdk Bazel should fail when no JDK is supplied.\"; exit 1)\n\n  # Theoretically there could be a cache collision in the Bazelisk cache between nojdk and regular Bazel.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 1,
                  "endLine": 271,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n  set -e\n\n  grep \"FATAL: Could not find embedded or explicit server javabase, and --noautodetect_server_javabase is set.\" log || \\\n      (echo \"FAIL: nojdk Bazel should fail when no JDK is supplied.\"; exit 1)\n\n  # Theoretically there could be a cache collision in the Bazelisk cache between nojdk and regular Bazel.\n",
                    "rendered": {
                      "text": "      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n  set -e\n\n  grep \"FATAL: Could not find embedded or explicit server javabase, and --noautodetect_server_javabase is set.\" log || \\\n      (echo \"FAIL: nojdk Bazel should fail when no JDK is supplied.\"; exit 1)\n\n  # Theoretically there could be a cache collision in the Bazelisk cache between nojdk and regular Bazel.\n",
                      "markdown": "`      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n  set -e\n\n  grep \"FATAL: Could not find embedded or explicit server javabase, and --noautodetect_server_javabase is set.\" log || \\\n      (echo \"FAIL: nojdk Bazel should fail when no JDK is supplied.\"; exit 1)\n\n  # Theoretically there could be a cache collision in the Bazelisk cache between nojdk and regular Bazel.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 60,
                  "endLine": 268,
                  "endColumn": 65,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      USE_BAZEL_VERSION=\"7.0.0\" \\\n      BAZELISK_NOJDK=\"1\" \\\n      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n  set -e\n\n  grep \"FATAL: Could not find embedded or explicit server javabase, and --noautodetect_server_javabase is set.\" log || \\\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      USE_BAZEL_VERSION=\"7.0.0\" \\\n      BAZELISK_NOJDK=\"1\" \\\n      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n  set -e\n\n  grep \"FATAL: Could not find embedded or explicit server javabase, and --noautodetect_server_javabase is set.\" log || \\\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      USE_BAZEL_VERSION=\"7.0.0\" \\\n      BAZELISK_NOJDK=\"1\" \\\n      bazelisk --noautodetect_server_javabase version 2>&1 | tee log\n  set -e\n\n  grep \"FATAL: Could not find embedded or explicit server javabase, and --noautodetect_server_javabase is set.\" log || \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 3,
                  "endLine": 256,
                  "endColumn": 9,
                  "snippet": {
                    "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  ! grep \"Build label:\" log || \\\n      (echo \"FAIL: 'bazelisk version' of an unreleased binary must not print a build label.\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  ! grep \"Build label:\" log || \\\n      (echo \"FAIL: 'bazelisk version' of an unreleased binary must not print a build label.\"; exit 1)\n}\n\n",
                      "markdown": "`      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  ! grep \"Build label:\" log || \\\n      (echo \"FAIL: 'bazelisk version' of an unreleased binary must not print a build label.\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 29,
                  "endLine": 254,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n  USE_BAZEL_VERSION=\"last_green\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  ! grep \"Build label:\" log || \\\n      (echo \"FAIL: 'bazelisk version' of an unreleased binary must not print a build label.\"; exit 1)\n",
                    "rendered": {
                      "text": "\n  USE_BAZEL_VERSION=\"last_green\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  ! grep \"Build label:\" log || \\\n      (echo \"FAIL: 'bazelisk version' of an unreleased binary must not print a build label.\"; exit 1)\n",
                      "markdown": "`\n  USE_BAZEL_VERSION=\"last_green\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  ! grep \"Build label:\" log || \\\n      (echo \"FAIL: 'bazelisk version' of an unreleased binary must not print a build label.\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 30,
                  "endLine": 246,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_last_green() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_last_green() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_last_green() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 1,
                  "endLine": 245,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 29,
                  "endLine": 243,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n  USE_BAZEL_VERSION=\"latest-3\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "\n  USE_BAZEL_VERSION=\"latest-3\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`\n  USE_BAZEL_VERSION=\"latest-3\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 30,
                  "endLine": 235,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_latest_minus_3_go() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_latest_minus_3_go() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_latest_minus_3_go() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 1,
                  "endLine": 234,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 29,
                  "endLine": 232,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n  USE_BAZEL_VERSION=\"latest-3\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "\n  USE_BAZEL_VERSION=\"latest-3\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`\n  USE_BAZEL_VERSION=\"latest-3\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 30,
                  "endLine": 224,
                  "endColumn": 36,
                  "snippet": {
                    "text": "          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_latest_minus_3_py() {\n",
                    "rendered": {
                      "text": "          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_latest_minus_3_py() {\n",
                      "markdown": "`          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_latest_minus_3_py() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 1,
                  "endLine": 223,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 33,
                  "endLine": 221,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n  BAZELISK_BASE_URL=\"https://github.com/bazelbuild/bazel/releases/download\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "\n  BAZELISK_BASE_URL=\"https://github.com/bazelbuild/bazel/releases/download\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`\n  BAZELISK_BASE_URL=\"https://github.com/bazelbuild/bazel/releases/download\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 30,
                  "endLine": 211,
                  "endColumn": 36,
                  "snippet": {
                    "text": "          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_base_url() {\n",
                    "rendered": {
                      "text": "          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_base_url() {\n",
                      "markdown": "`          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_base_url() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 1,
                  "endLine": 210,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 33,
                  "endLine": 208,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n  BAZELISK_FORMAT_URL=\"https://github.com/bazelbuild/bazel/releases/download/%v/bazel-%v-%o-%m%e\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "\n  BAZELISK_FORMAT_URL=\"https://github.com/bazelbuild/bazel/releases/download/%v/bazel-%v-%o-%m%e\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`\n  BAZELISK_FORMAT_URL=\"https://github.com/bazelbuild/bazel/releases/download/%v/bazel-%v-%o-%m%e\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n          bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 30,
                  "endLine": 198,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_format_url() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_format_url() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_format_url() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 1,
                  "endLine": 197,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 29,
                  "endLine": 195,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  echo \"7.0.0\" > .bazelversion\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "  echo \"7.0.0\" > .bazelversion\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`  echo \"7.0.0\" > .bazelversion\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 30,
                  "endLine": 186,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_file() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_file() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_file() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 29,
                  "endLine": 183,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  echo \"7.0.0\" > .bazelversion\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "  echo \"7.0.0\" > .bazelversion\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`  echo \"7.0.0\" > .bazelversion\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 30,
                  "endLine": 173,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_prefer_bazeliskrc_to_bazelversion_file() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_prefer_bazeliskrc_to_bazelversion_file() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_prefer_bazeliskrc_to_bazelversion_file() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 1,
                  "endLine": 172,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 29,
                  "endLine": 170,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      HOME=\"$USER_HOME\" \\\n      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      HOME=\"$USER_HOME\" \\\n      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      HOME=\"$USER_HOME\" \\\n      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 30,
                  "endLine": 158,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_prefer_workspace_bazeliskrc_to_user_home_bazeliskrc() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_prefer_workspace_bazeliskrc_to_user_home_bazeliskrc() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_prefer_workspace_bazeliskrc_to_user_home_bazeliskrc() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 1,
                  "endLine": 157,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 29,
                  "endLine": 155,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      HOME=\"$USER_HOME\" \\\n      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      HOME=\"$USER_HOME\" \\\n      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      HOME=\"$USER_HOME\" \\\n      USERPROFILE=\"$USER_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 30,
                  "endLine": 144,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_user_home_bazeliskrc() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_user_home_bazeliskrc() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_user_home_bazeliskrc() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 1,
                  "endLine": 143,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 29,
                  "endLine": 141,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  echo \"USE_BAZEL_VERSION=7.2.1\" > .bazeliskrc\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "  echo \"USE_BAZEL_VERSION=7.2.1\" > .bazeliskrc\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`  echo \"USE_BAZEL_VERSION=7.2.1\" > .bazeliskrc\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.2.1\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.2.1' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 30,
                  "endLine": 132,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_workspace_bazeliskrc() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_workspace_bazeliskrc() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_workspace_bazeliskrc() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 1,
                  "endLine": 131,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 29,
                  "endLine": 129,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n  USE_BAZEL_VERSION=\"7.0.0\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "\n  USE_BAZEL_VERSION=\"7.0.0\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`\n  USE_BAZEL_VERSION=\"7.0.0\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 30,
                  "endLine": 119,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_prefer_environment_to_bazeliskrc() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_prefer_environment_to_bazeliskrc() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_prefer_environment_to_bazeliskrc() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 1,
                  "endLine": 118,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 29,
                  "endLine": 116,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n  USE_BAZEL_VERSION=\"7.0.0\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "\n  USE_BAZEL_VERSION=\"7.0.0\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`\n  USE_BAZEL_VERSION=\"7.0.0\" \\\n      BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: 7.0.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label: 7.0.0' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 30,
                  "endLine": 108,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_environment() {\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_environment() {\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_from_environment() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 1,
                  "endLine": 107,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 29,
                  "endLine": 105,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                    "rendered": {
                      "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n",
                      "markdown": "`  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  grep \"Build label: \" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 30,
                  "endLine": 98,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"Build label: 7.1.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_go() {\n",
                    "rendered": {
                      "text": "\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"Build label: 7.1.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_go() {\n",
                      "markdown": "`\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"Build label: 7.1.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\nfunction test_bazel_version_go() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 1,
                  "endLine": 97,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      bazelisk version 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"Build label: 7.1.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                    "rendered": {
                      "text": "      bazelisk version 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"Build label: 7.1.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n",
                      "markdown": "`      bazelisk version 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"Build label: 7.1.0\" log || \\\n      (echo \"FAIL: Expected to find 'Build label' in the output of 'bazelisk version'\"; exit 1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 29,
                  "endLine": 94,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"Build label: 7.1.0\" log || \\\n",
                    "rendered": {
                      "text": "  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"Build label: 7.1.0\" log || \\\n",
                      "markdown": "`  setup\n\n  BAZELISK_HOME=\"$BAZELISK_HOME\" \\\n      bazelisk version 2>&1 | tee log\n\n  # 7.1.0 is the latest release in releases_for_tests.json\n  grep \"Build label: 7.1.0\" log || \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 3,
                  "endLine": 85,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    \"$(rlocation _main/bazelisk_/bazelisk.exe)\" \"$@\"\n  else\n    echo \"Could not find the bazelisk executable, listing files:\"\n    find .\n    exit 1\n  fi\n}\n",
                    "rendered": {
                      "text": "    \"$(rlocation _main/bazelisk_/bazelisk.exe)\" \"$@\"\n  else\n    echo \"Could not find the bazelisk executable, listing files:\"\n    find .\n    exit 1\n  fi\n}\n",
                      "markdown": "`    \"$(rlocation _main/bazelisk_/bazelisk.exe)\" \"$@\"\n  else\n    echo \"Could not find the bazelisk executable, listing files:\"\n    find .\n    exit 1\n  fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 19,
                  "endLine": 84,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  elif [[ -n $(rlocation _main/bazelisk_/bazelisk.exe) ]]; then\n    \"$(rlocation _main/bazelisk_/bazelisk.exe)\" \"$@\"\n  else\n    echo \"Could not find the bazelisk executable, listing files:\"\n    find .\n    exit 1\n  fi\n",
                    "rendered": {
                      "text": "  elif [[ -n $(rlocation _main/bazelisk_/bazelisk.exe) ]]; then\n    \"$(rlocation _main/bazelisk_/bazelisk.exe)\" \"$@\"\n  else\n    echo \"Could not find the bazelisk executable, listing files:\"\n    find .\n    exit 1\n  fi\n",
                      "markdown": "`  elif [[ -n $(rlocation _main/bazelisk_/bazelisk.exe) ]]; then\n    \"$(rlocation _main/bazelisk_/bazelisk.exe)\" \"$@\"\n  else\n    echo \"Could not find the bazelisk executable, listing files:\"\n    find .\n    exit 1\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 50,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  USER_HOME=\"$(mktemp -d $TEST_TMPDIR/user.XXXXXX)\"\n  BAZELISK_HOME=\"$(mktemp -d $TEST_TMPDIR/home.XXXXXX)\"\n\n  cp \"$(rlocation _main/releases_for_tests.json)\" \"${BAZELISK_HOME}/bazelbuild-releases.json\"\n  touch \"${BAZELISK_HOME}/bazelbuild-releases.json\"\n  ln -s \"${BAZELISK_HOME}/bazelbuild-releases.json\" \"${BAZELISK_HOME}/releases.json\"\n\n",
                    "rendered": {
                      "text": "  USER_HOME=\"$(mktemp -d $TEST_TMPDIR/user.XXXXXX)\"\n  BAZELISK_HOME=\"$(mktemp -d $TEST_TMPDIR/home.XXXXXX)\"\n\n  cp \"$(rlocation _main/releases_for_tests.json)\" \"${BAZELISK_HOME}/bazelbuild-releases.json\"\n  touch \"${BAZELISK_HOME}/bazelbuild-releases.json\"\n  ln -s \"${BAZELISK_HOME}/bazelbuild-releases.json\" \"${BAZELISK_HOME}/releases.json\"\n\n",
                      "markdown": "`  USER_HOME=\"$(mktemp -d $TEST_TMPDIR/user.XXXXXX)\"\n  BAZELISK_HOME=\"$(mktemp -d $TEST_TMPDIR/home.XXXXXX)\"\n\n  cp \"$(rlocation _main/releases_for_tests.json)\" \"${BAZELISK_HOME}/bazelbuild-releases.json\"\n  touch \"${BAZELISK_HOME}/bazelbuild-releases.json\"\n  ln -s \"${BAZELISK_HOME}/bazelbuild-releases.json\" \"${BAZELISK_HOME}/releases.json\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 25,
                  "endLine": 34,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  source \"$(grep -m1 \"^bazel_tools/tools/bash/runfiles/runfiles.bash \" \\\n            \"$RUNFILES_MANIFEST_FILE\" | cut -d ' ' -f 2-)\"\nelse\n  echo >&2 \"ERROR: cannot find @bazel_tools//tools/bash/runfiles:runfiles.bash\"\n  exit 1\nfi\n# --- end runfiles.bash initialization ---\n",
                    "rendered": {
                      "text": "  source \"$(grep -m1 \"^bazel_tools/tools/bash/runfiles/runfiles.bash \" \\\n            \"$RUNFILES_MANIFEST_FILE\" | cut -d ' ' -f 2-)\"\nelse\n  echo >&2 \"ERROR: cannot find @bazel_tools//tools/bash/runfiles:runfiles.bash\"\n  exit 1\nfi\n# --- end runfiles.bash initialization ---\n",
                      "markdown": "`  source \"$(grep -m1 \"^bazel_tools/tools/bash/runfiles/runfiles.bash \" \\\n            \"$RUNFILES_MANIFEST_FILE\" | cut -d ' ' -f 2-)\"\nelse\n  echo >&2 \"ERROR: cannot find @bazel_tools//tools/bash/runfiles:runfiles.bash\"\n  exit 1\nfi\n# --- end runfiles.bash initialization ---\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bazelisk.zip/bazelisk_test.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 39,
                  "endLine": 32,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  source \"${RUNFILES_DIR}/bazel_tools/tools/bash/runfiles/runfiles.bash\"\nelif [[ -f \"${RUNFILES_MANIFEST_FILE:-/dev/null}\" ]]; then\n  source \"$(grep -m1 \"^bazel_tools/tools/bash/runfiles/runfiles.bash \" \\\n            \"$RUNFILES_MANIFEST_FILE\" | cut -d ' ' -f 2-)\"\nelse\n  echo >&2 \"ERROR: cannot find @bazel_tools//tools/bash/runfiles:runfiles.bash\"\n  exit 1\n",
                    "rendered": {
                      "text": "  source \"${RUNFILES_DIR}/bazel_tools/tools/bash/runfiles/runfiles.bash\"\nelif [[ -f \"${RUNFILES_MANIFEST_FILE:-/dev/null}\" ]]; then\n  source \"$(grep -m1 \"^bazel_tools/tools/bash/runfiles/runfiles.bash \" \\\n            \"$RUNFILES_MANIFEST_FILE\" | cut -d ' ' -f 2-)\"\nelse\n  echo >&2 \"ERROR: cannot find @bazel_tools//tools/bash/runfiles:runfiles.bash\"\n  exit 1\n",
                      "markdown": "`  source \"${RUNFILES_DIR}/bazel_tools/tools/bash/runfiles/runfiles.bash\"\nelif [[ -f \"${RUNFILES_MANIFEST_FILE:-/dev/null}\" ]]; then\n  source \"$(grep -m1 \"^bazel_tools/tools/bash/runfiles/runfiles.bash \" \\\n            \"$RUNFILES_MANIFEST_FILE\" | cut -d ' ' -f 2-)\"\nelse\n  echo >&2 \"ERROR: cannot find @bazel_tools//tools/bash/runfiles:runfiles.bash\"\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}