{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__cpp.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/bench.html"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 226,
                  "endLine": 111,
                  "endColumn": 232,
                  "snippet": {
                    "text": " that see how the allocator behaves under more extreme circumstances.</p>\n<p>In our benchmarks, <em>mimalloc</em> always outperforms all other leading allocators (<em>jemalloc</em>, <em>tcmalloc</em>, <em>Hoard</em>, etc) (Jan 2021), and usually uses less memory (up to 25% more in the worst case). A nice property is that it does <em>consistently</em> well over the wide range of benchmarks.</p>\n<p>See the <a href=\"https://github.com/microsoft/mimalloc#Performance\">Performance</a> section in the <em>mimalloc</em> repository for benchmark results, or the the technical report for detailed benchmark resu",
                    "rendered": {
                      "text": " that see how the allocator behaves under more extreme circumstances.</p>\n<p>In our benchmarks, <em>mimalloc</em> always outperforms all other leading allocators (<em>jemalloc</em>, <em>tcmalloc</em>, <em>Hoard</em>, etc) (Jan 2021), and usually uses less memory (up to 25% more in the worst case). A nice property is that it does <em>consistently</em> well over the wide range of benchmarks.</p>\n<p>See the <a href=\"https://github.com/microsoft/mimalloc#Performance\">Performance</a> section in the <em>mimalloc</em> repository for benchmark results, or the the technical report for detailed benchmark resu",
                      "markdown": "` that see how the allocator behaves under more extreme circumstances.</p>\n<p>In our benchmarks, <em>mimalloc</em> always outperforms all other leading allocators (<em>jemalloc</em>, <em>tcmalloc</em>, <em>Hoard</em>, etc) (Jan 2021), and usually uses less memory (up to 25% more in the worst case). A nice property is that it does <em>consistently</em> well over the wide range of benchmarks.</p>\n<p>See the <a href=\"https://github.com/microsoft/mimalloc#Performance\">Performance</a> section in the <em>mimalloc</em> repository for benchmark results, or the the technical report for detailed benchmark resu`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/bench.html"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 72,
                  "endLine": 110,
                  "endColumn": 77,
                  "snippet": {
                    "text": "/div>\n<div class=\"SRStatus\" id=\"NoMatches\">No Matches</div>\n</div>\n</div>\n</div>\n</div>\n\n<div><div class=\"header\">\n  <div class=\"headertitle\"><div class=\"title\">Performance</div></div>\n</div><!--header-->\n<div class=\"contents\">\n<div class=\"textblock\"><p>We tested <em>mimalloc</em> against many other top allocators over a wide range of benchmarks, ranging from various real world programs to synthetic benchmarks that see how the allocator behaves under more extreme circumstances.</p>\n<p>In our benchmarks, <em>mimalloc</em> always outperforms all other leading allocators (<em>jemalloc</em>, <em>tcmall",
                    "rendered": {
                      "text": "/div>\n<div class=\"SRStatus\" id=\"NoMatches\">No Matches</div>\n</div>\n</div>\n</div>\n</div>\n\n<div><div class=\"header\">\n  <div class=\"headertitle\"><div class=\"title\">Performance</div></div>\n</div><!--header-->\n<div class=\"contents\">\n<div class=\"textblock\"><p>We tested <em>mimalloc</em> against many other top allocators over a wide range of benchmarks, ranging from various real world programs to synthetic benchmarks that see how the allocator behaves under more extreme circumstances.</p>\n<p>In our benchmarks, <em>mimalloc</em> always outperforms all other leading allocators (<em>jemalloc</em>, <em>tcmall",
                      "markdown": "`/div>\n<div class=\"SRStatus\" id=\"NoMatches\">No Matches</div>\n</div>\n</div>\n</div>\n</div>\n\n<div><div class=\"header\">\n  <div class=\"headertitle\"><div class=\"title\">Performance</div></div>\n</div><!--header-->\n<div class=\"contents\">\n<div class=\"textblock\"><p>We tested <em>mimalloc</em> against many other top allocators over a wide range of benchmarks, ranging from various real world programs to synthetic benchmarks that see how the allocator behaves under more extreme circumstances.</p>\n<p>In our benchmarks, <em>mimalloc</em> always outperforms all other leading allocators (<em>jemalloc</em>, <em>tcmall`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/bench.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1790,
                  "startColumn": 58,
                  "endLine": 1790,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\nEXT_LINKS_IN_WINDOW    = NO\n\n# If the OBFUSCATE_EMAILS tag is set to YES, doxygen will obfuscate email\n# addresses.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n",
                    "rendered": {
                      "text": "\nEXT_LINKS_IN_WINDOW    = NO\n\n# If the OBFUSCATE_EMAILS tag is set to YES, doxygen will obfuscate email\n# addresses.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n",
                      "markdown": "`\nEXT_LINKS_IN_WINDOW    = NO\n\n# If the OBFUSCATE_EMAILS tag is set to YES, doxygen will obfuscate email\n# addresses.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2892,
                  "startColumn": 9,
                  "endLine": 2892,
                  "endColumn": 14,
                  "snippet": {
                    "text": "MSCGEN_TOOL            =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n",
                    "rendered": {
                      "text": "MSCGEN_TOOL            =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n",
                      "markdown": "`MSCGEN_TOOL            =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2875,
                  "startColumn": 64,
                  "endLine": 2875,
                  "endColumn": 69,
                  "snippet": {
                    "text": "# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate\n# files that are used to generate the various graphs.\n#\n# Note: This setting is not only used for dot files but also for msc temporary\n# files.\n# The default value is: YES.\n\n",
                    "rendered": {
                      "text": "# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate\n# files that are used to generate the various graphs.\n#\n# Note: This setting is not only used for dot files but also for msc temporary\n# files.\n# The default value is: YES.\n\n",
                      "markdown": "`# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate\n# files that are used to generate the various graphs.\n#\n# Note: This setting is not only used for dot files but also for msc temporary\n# files.\n# The default value is: YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2843,
                  "startColumn": 30,
                  "endLine": 2843,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n",
                    "rendered": {
                      "text": "\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n",
                      "markdown": "`\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2834,
                  "startColumn": 54,
                  "endLine": 2834,
                  "endColumn": 58,
                  "snippet": {
                    "text": "# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
                    "rendered": {
                      "text": "# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
                      "markdown": "`# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2551,
                  "startColumn": 22,
                  "endLine": 2551,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
                    "rendered": {
                      "text": "# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
                      "markdown": "`# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2414,
                  "startColumn": 56,
                  "endLine": 2414,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n",
                    "rendered": {
                      "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n",
                      "markdown": "`\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2373,
                  "startColumn": 61,
                  "endLine": 2373,
                  "endColumn": 65,
                  "snippet": {
                    "text": "# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n",
                    "rendered": {
                      "text": "# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n",
                      "markdown": "`# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2335,
                  "startColumn": 38,
                  "endLine": 2335,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an\n# AutoGen Definitions (see https://autogen.sourceforge.net/) file that captures\n# the structure of the code including all documentation. Note that this feature\n# is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n",
                    "rendered": {
                      "text": "# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an\n# AutoGen Definitions (see https://autogen.sourceforge.net/) file that captures\n# the structure of the code including all documentation. Note that this feature\n# is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n",
                      "markdown": "`# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an\n# AutoGen Definitions (see https://autogen.sourceforge.net/) file that captures\n# the structure of the code including all documentation. Note that this feature\n# is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2253,
                  "startColumn": 29,
                  "endLine": 2253,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n",
                    "rendered": {
                      "text": "\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n",
                      "markdown": "`\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2138,
                  "startColumn": 77,
                  "endLine": 2139,
                  "snippet": {
                    "text": "# NON_STOP In nonstop mode the diagnostic message will appear on the terminal,\n# but there is no possibility of user interaction just like in batch mode,\n# SCROLL In scroll mode, TeX will stop only for missing files to input or if\n# keyboard input is necessary and ERROR_STOP In errorstop mode, TeX will stop at\n# each error, asking for user intervention.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\n",
                    "rendered": {
                      "text": "# NON_STOP In nonstop mode the diagnostic message will appear on the terminal,\n# but there is no possibility of user interaction just like in batch mode,\n# SCROLL In scroll mode, TeX will stop only for missing files to input or if\n# keyboard input is necessary and ERROR_STOP In errorstop mode, TeX will stop at\n# each error, asking for user intervention.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\n",
                      "markdown": "`# NON_STOP In nonstop mode the diagnostic message will appear on the terminal,\n# but there is no possibility of user interaction just like in batch mode,\n# SCROLL In scroll mode, TeX will stop only for missing files to input or if\n# keyboard input is necessary and ERROR_STOP In errorstop mode, TeX will stop at\n# each error, asking for user intervention.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2133,
                  "startColumn": 5,
                  "endLine": 2133,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# The LATEX_BATCHMODE tag signals the behavior of LaTeX in case of an error.\n# Possible values are: NO same as ERROR_STOP, YES same as BATCH, BATCH In batch\n# mode nothing is printed on the terminal, errors are scrolled as if <return> is\n# hit at every error; missing files that TeX tries to input or request from\n# keyboard input (\\read on a not open input stream) cause the job to abort,\n# NON_STOP In nonstop mode the diagnostic message will appear on the terminal,\n# but there is no possibility of user interaction just like in batch mode,\n",
                    "rendered": {
                      "text": "# The LATEX_BATCHMODE tag signals the behavior of LaTeX in case of an error.\n# Possible values are: NO same as ERROR_STOP, YES same as BATCH, BATCH In batch\n# mode nothing is printed on the terminal, errors are scrolled as if <return> is\n# hit at every error; missing files that TeX tries to input or request from\n# keyboard input (\\read on a not open input stream) cause the job to abort,\n# NON_STOP In nonstop mode the diagnostic message will appear on the terminal,\n# but there is no possibility of user interaction just like in batch mode,\n",
                      "markdown": "`# The LATEX_BATCHMODE tag signals the behavior of LaTeX in case of an error.\n# Possible values are: NO same as ERROR_STOP, YES same as BATCH, BATCH In batch\n# mode nothing is printed on the terminal, errors are scrolled as if <return> is\n# hit at every error; missing files that TeX tries to input or request from\n# keyboard input (\\read on a not open input stream) cause the job to abort,\n# NON_STOP In nonstop mode the diagnostic message will appear on the terminal,\n# but there is no possibility of user interaction just like in batch mode,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 12,
                  "endLine": 1865,
                  "endColumn": 16,
                  "snippet": {
                    "text": "# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n",
                    "rendered": {
                      "text": "# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n",
                      "markdown": "`# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1800,
                  "startColumn": 57,
                  "endLine": 1800,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# If the HTML_FORMULA_FORMAT option is set to svg, doxygen will use the pdf2svg\n# tool (see https://github.com/dawbarton/pdf2svg) or inkscape (see\n# https://inkscape.org) to generate formulas as SVG images instead of PNGs for\n# the HTML output. These images will generally look nicer at scaled resolutions.\n# Possible values are: png (the default) and svg (looks nicer but requires the\n# pdf2svg or inkscape tool).\n# The default value is: png.\n",
                    "rendered": {
                      "text": "# If the HTML_FORMULA_FORMAT option is set to svg, doxygen will use the pdf2svg\n# tool (see https://github.com/dawbarton/pdf2svg) or inkscape (see\n# https://inkscape.org) to generate formulas as SVG images instead of PNGs for\n# the HTML output. These images will generally look nicer at scaled resolutions.\n# Possible values are: png (the default) and svg (looks nicer but requires the\n# pdf2svg or inkscape tool).\n# The default value is: png.\n",
                      "markdown": "`# If the HTML_FORMULA_FORMAT option is set to svg, doxygen will use the pdf2svg\n# tool (see https://github.com/dawbarton/pdf2svg) or inkscape (see\n# https://inkscape.org) to generate formulas as SVG images instead of PNGs for\n# the HTML output. These images will generally look nicer at scaled resolutions.\n# Possible values are: png (the default) and svg (looks nicer but requires the\n# pdf2svg or inkscape tool).\n# The default value is: png.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1746,
                  "startColumn": 27,
                  "endLine": 1746,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine tune the look of the index (see \"Fine-tuning the output\"). As an\n# example, the default style sheet generated by doxygen has an example that\n# shows how to put an image at the root of the tree instead of the PROJECT_NAME.\n# Since the tree basically has the same information as the tab index, you could\n# consider setting DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine tune the look of the index (see \"Fine-tuning the output\"). As an\n# example, the default style sheet generated by doxygen has an example that\n# shows how to put an image at the root of the tree instead of the PROJECT_NAME.\n# Since the tree basically has the same information as the tab index, you could\n# consider setting DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n",
                      "markdown": "`# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine tune the look of the index (see \"Fine-tuning the output\"). As an\n# example, the default style sheet generated by doxygen has an example that\n# shows how to put an image at the root of the tree instead of the PROJECT_NAME.\n# Since the tree basically has the same information as the tab index, you could\n# consider setting DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1728,
                  "startColumn": 73,
                  "endLine": 1728,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n",
                    "rendered": {
                      "text": "\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n",
                      "markdown": "`\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 18,
                  "endLine": 1726,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n",
                    "rendered": {
                      "text": "\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n",
                      "markdown": "`\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1573,
                  "startColumn": 10,
                  "endLine": 1573,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# on Windows. In the beginning of 2021 Microsoft took the original page, with\n# a.o. the download links, offline the HTML help workshop was already many years\n# in maintenance mode). You can download the HTML help workshop from the web\n# archives at Installation executable (see:\n# http://web.archive.org/web/20160201063255/http://download.microsoft.com/downlo\n# ad/0/A/9/0A939EF6-E31C-430F-A3DF-DFAE7960D564/htmlhelp.exe).\n#\n",
                    "rendered": {
                      "text": "# on Windows. In the beginning of 2021 Microsoft took the original page, with\n# a.o. the download links, offline the HTML help workshop was already many years\n# in maintenance mode). You can download the HTML help workshop from the web\n# archives at Installation executable (see:\n# http://web.archive.org/web/20160201063255/http://download.microsoft.com/downlo\n# ad/0/A/9/0A939EF6-E31C-430F-A3DF-DFAE7960D564/htmlhelp.exe).\n#\n",
                      "markdown": "`# on Windows. In the beginning of 2021 Microsoft took the original page, with\n# a.o. the download links, offline the HTML help workshop was already many years\n# in maintenance mode). You can download the HTML help workshop from the web\n# archives at Installation executable (see:\n# http://web.archive.org/web/20160201063255/http://download.microsoft.com/downlo\n# ad/0/A/9/0A939EF6-E31C-430F-A3DF-DFAE7960D564/htmlhelp.exe).\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1522,
                  "startColumn": 77,
                  "endLine": 1523,
                  "snippet": {
                    "text": "# create a documentation set, doxygen will generate a Makefile in the HTML\n# output directory. Running make will produce the docset in that directory and\n# running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy\n# genXcode/_index.html for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n",
                    "rendered": {
                      "text": "# create a documentation set, doxygen will generate a Makefile in the HTML\n# output directory. Running make will produce the docset in that directory and\n# running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy\n# genXcode/_index.html for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n",
                      "markdown": "`# create a documentation set, doxygen will generate a Makefile in the HTML\n# output directory. Running make will produce the docset in that directory and\n# running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy\n# genXcode/_index.html for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1505,
                  "startColumn": 19,
                  "endLine": 1505,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n",
                    "rendered": {
                      "text": "# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n",
                      "markdown": "`# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1504,
                  "startColumn": 57,
                  "endLine": 1504,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                    "rendered": {
                      "text": "\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                      "markdown": "`\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1503,
                  "startColumn": 70,
                  "endLine": 1504,
                  "snippet": {
                    "text": "HTML_PROJECT_COOKIE    =\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                    "rendered": {
                      "text": "HTML_PROJECT_COOKIE    =\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                      "markdown": "`HTML_PROJECT_COOKIE    =\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1502,
                  "startColumn": 37,
                  "endLine": 1502,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\nHTML_PROJECT_COOKIE    =\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n",
                    "rendered": {
                      "text": "\nHTML_PROJECT_COOKIE    =\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n",
                      "markdown": "`\nHTML_PROJECT_COOKIE    =\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1261,
                  "startColumn": 51,
                  "endLine": 1261,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n# If the CLANG_ASSISTED_PARSING tag is set to YES then doxygen will use the\n# clang parser (see:\n# http://clang.llvm.org/) for more accurate parsing at the cost of reduced\n# performance. This can be particularly helpful with template rich C++ code for\n# which doxygen's built-in parser lacks the necessary type information.\n# Note: The availability of this option depends on whether or not doxygen was\n",
                    "rendered": {
                      "text": "\n# If the CLANG_ASSISTED_PARSING tag is set to YES then doxygen will use the\n# clang parser (see:\n# http://clang.llvm.org/) for more accurate parsing at the cost of reduced\n# performance. This can be particularly helpful with template rich C++ code for\n# which doxygen's built-in parser lacks the necessary type information.\n# Note: The availability of this option depends on whether or not doxygen was\n",
                      "markdown": "`\n# If the CLANG_ASSISTED_PARSING tag is set to YES then doxygen will use the\n# clang parser (see:\n# http://clang.llvm.org/) for more accurate parsing at the cost of reduced\n# performance. This can be particularly helpful with template rich C++ code for\n# which doxygen's built-in parser lacks the necessary type information.\n# Note: The availability of this option depends on whether or not doxygen was\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 929,
                  "startColumn": 23,
                  "endLine": 929,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# Example:\n# WARN_LINE_FORMAT = \"'vi $file +$line'\"\n# See also: WARN_FORMAT\n# The default value is: at line $line of file $file.\n\nWARN_LINE_FORMAT       = \"at line $line of file $file\"\n\n",
                    "rendered": {
                      "text": "# Example:\n# WARN_LINE_FORMAT = \"'vi $file +$line'\"\n# See also: WARN_FORMAT\n# The default value is: at line $line of file $file.\n\nWARN_LINE_FORMAT       = \"at line $line of file $file\"\n\n",
                      "markdown": "`# Example:\n# WARN_LINE_FORMAT = \"'vi $file +$line'\"\n# See also: WARN_FORMAT\n# The default value is: at line $line of file $file.\n\nWARN_LINE_FORMAT       = \"at line $line of file $file\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 904,
                  "startColumn": 49,
                  "endLine": 904,
                  "endColumn": 53,
                  "snippet": {
                    "text": "# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not\n# write the warning messages in between other messages but write them at the end\n# of a run, in case a WARN_LOGFILE is defined the warning messages will be\n# besides being in the defined file also be shown at the end of a run, unless\n# the WARN_LOGFILE is defined as - i.e. standard output (stdout) in that case\n# the behavior will remain as with the setting FAIL_ON_WARNINGS.\n# Possible values are: NO, YES, FAIL_ON_WARNINGS and FAIL_ON_WARNINGS_PRINT.\n",
                    "rendered": {
                      "text": "# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not\n# write the warning messages in between other messages but write them at the end\n# of a run, in case a WARN_LOGFILE is defined the warning messages will be\n# besides being in the defined file also be shown at the end of a run, unless\n# the WARN_LOGFILE is defined as - i.e. standard output (stdout) in that case\n# the behavior will remain as with the setting FAIL_ON_WARNINGS.\n# Possible values are: NO, YES, FAIL_ON_WARNINGS and FAIL_ON_WARNINGS_PRINT.\n",
                      "markdown": "`# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not\n# write the warning messages in between other messages but write them at the end\n# of a run, in case a WARN_LOGFILE is defined the warning messages will be\n# besides being in the defined file also be shown at the end of a run, unless\n# the WARN_LOGFILE is defined as - i.e. standard output (stdout) in that case\n# the behavior will remain as with the setting FAIL_ON_WARNINGS.\n# Possible values are: NO, YES, FAIL_ON_WARNINGS and FAIL_ON_WARNINGS_PRINT.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 902,
                  "startColumn": 69,
                  "endLine": 902,
                  "endColumn": 73,
                  "snippet": {
                    "text": "# at the end of the doxygen process doxygen will return with a non-zero status.\n# If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS_PRINT then doxygen behaves\n# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not\n# write the warning messages in between other messages but write them at the end\n# of a run, in case a WARN_LOGFILE is defined the warning messages will be\n# besides being in the defined file also be shown at the end of a run, unless\n# the WARN_LOGFILE is defined as - i.e. standard output (stdout) in that case\n",
                    "rendered": {
                      "text": "# at the end of the doxygen process doxygen will return with a non-zero status.\n# If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS_PRINT then doxygen behaves\n# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not\n# write the warning messages in between other messages but write them at the end\n# of a run, in case a WARN_LOGFILE is defined the warning messages will be\n# besides being in the defined file also be shown at the end of a run, unless\n# the WARN_LOGFILE is defined as - i.e. standard output (stdout) in that case\n",
                      "markdown": "`# at the end of the doxygen process doxygen will return with a non-zero status.\n# If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS_PRINT then doxygen behaves\n# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not\n# write the warning messages in between other messages but write them at the end\n# of a run, in case a WARN_LOGFILE is defined the warning messages will be\n# besides being in the defined file also be shown at the end of a run, unless\n# the WARN_LOGFILE is defined as - i.e. standard output (stdout) in that case\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 899,
                  "startColumn": 1,
                  "endLine": 899,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when\n# a warning is encountered. If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS\n# then doxygen will continue running as if WARN_AS_ERROR tag is set to NO, but\n# at the end of the doxygen process doxygen will return with a non-zero status.\n# If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS_PRINT then doxygen behaves\n# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not\n# write the warning messages in between other messages but write them at the end\n",
                    "rendered": {
                      "text": "# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when\n# a warning is encountered. If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS\n# then doxygen will continue running as if WARN_AS_ERROR tag is set to NO, but\n# at the end of the doxygen process doxygen will return with a non-zero status.\n# If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS_PRINT then doxygen behaves\n# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not\n# write the warning messages in between other messages but write them at the end\n",
                      "markdown": "`# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when\n# a warning is encountered. If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS\n# then doxygen will continue running as if WARN_AS_ERROR tag is set to NO, but\n# at the end of the doxygen process doxygen will return with a non-zero status.\n# If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS_PRINT then doxygen behaves\n# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not\n# write the warning messages in between other messages but write them at the end\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 804,
                  "startColumn": 13,
                  "endLine": 804,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n",
                    "rendered": {
                      "text": "\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n",
                      "markdown": "`\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 781,
                  "startColumn": 74,
                  "endLine": 782,
                  "snippet": {
                    "text": "\nMAX_INITIALIZER_LINES  = 0\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES, the\n# list will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\n",
                    "rendered": {
                      "text": "\nMAX_INITIALIZER_LINES  = 0\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES, the\n# list will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\n",
                      "markdown": "`\nMAX_INITIALIZER_LINES  = 0\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES, the\n# list will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 8,
                  "endLine": 498,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# during processing. When set to 0 doxygen will based this on the number of\n# cores available in the system. You can set it explicitly to a value larger\n# than 0 to get more control over the balance between CPU load and processing\n# speed. At this moment only the input processing can be done using multiple\n# threads. Since this is still an experimental feature the default is set to 1,\n# which effectively disables parallel processing. Please report any issues you\n# encounter. Generating dot graphs in parallel is controlled by the\n",
                    "rendered": {
                      "text": "# during processing. When set to 0 doxygen will based this on the number of\n# cores available in the system. You can set it explicitly to a value larger\n# than 0 to get more control over the balance between CPU load and processing\n# speed. At this moment only the input processing can be done using multiple\n# threads. Since this is still an experimental feature the default is set to 1,\n# which effectively disables parallel processing. Please report any issues you\n# encounter. Generating dot graphs in parallel is controlled by the\n",
                      "markdown": "`# during processing. When set to 0 doxygen will based this on the number of\n# cores available in the system. You can set it explicitly to a value larger\n# than 0 to get more control over the balance between CPU load and processing\n# speed. At this moment only the input processing can be done using multiple\n# threads. Since this is still an experimental feature the default is set to 1,\n# which effectively disables parallel processing. Please report any issues you\n# encounter. Generating dot graphs in parallel is controlled by the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 497,
                  "startColumn": 20,
                  "endLine": 497,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# The NUM_PROC_THREADS specifies the number of threads doxygen is allowed to use\n# during processing. When set to 0 doxygen will based this on the number of\n# cores available in the system. You can set it explicitly to a value larger\n# than 0 to get more control over the balance between CPU load and processing\n# speed. At this moment only the input processing can be done using multiple\n# threads. Since this is still an experimental feature the default is set to 1,\n# which effectively disables parallel processing. Please report any issues you\n",
                    "rendered": {
                      "text": "# The NUM_PROC_THREADS specifies the number of threads doxygen is allowed to use\n# during processing. When set to 0 doxygen will based this on the number of\n# cores available in the system. You can set it explicitly to a value larger\n# than 0 to get more control over the balance between CPU load and processing\n# speed. At this moment only the input processing can be done using multiple\n# threads. Since this is still an experimental feature the default is set to 1,\n# which effectively disables parallel processing. Please report any issues you\n",
                      "markdown": "`# The NUM_PROC_THREADS specifies the number of threads doxygen is allowed to use\n# during processing. When set to 0 doxygen will based this on the number of\n# cores available in the system. You can set it explicitly to a value larger\n# than 0 to get more control over the balance between CPU load and processing\n# speed. At this moment only the input processing can be done using multiple\n# threads. Since this is still an experimental feature the default is set to 1,\n# which effectively disables parallel processing. Please report any issues you\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 10,
                  "endLine": 488,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\n",
                    "rendered": {
                      "text": "# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\n",
                      "markdown": "`# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 26,
                  "endLine": 376,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# generate identifiers for the Markdown headings. Note: Every identifier is\n# unique.\n# Possible values are: DOXYGEN use a fixed 'autotoc_md' string followed by a\n# sequence number starting at 0 and GITHUB use the lower case version of title\n# with any whitespace replaced by '-' and punctuation characters removed.\n# The default value is: DOXYGEN.\n# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.\n",
                    "rendered": {
                      "text": "# generate identifiers for the Markdown headings. Note: Every identifier is\n# unique.\n# Possible values are: DOXYGEN use a fixed 'autotoc_md' string followed by a\n# sequence number starting at 0 and GITHUB use the lower case version of title\n# with any whitespace replaced by '-' and punctuation characters removed.\n# The default value is: DOXYGEN.\n# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.\n",
                      "markdown": "`# generate identifiers for the Markdown headings. Note: Every identifier is\n# unique.\n# Possible values are: DOXYGEN use a fixed 'autotoc_md' string followed by a\n# sequence number starting at 0 and GITHUB use the lower case version of title\n# with any whitespace replaced by '-' and punctuation characters removed.\n# The default value is: DOXYGEN.\n# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 13,
                  "endLine": 93,
                  "endColumn": 17,
                  "snippet": {
                    "text": "# Controls the number of sub-directories that will be created when\n# CREATE_SUBDIRS tag is set to YES. Level 0 represents 16 directories, and every\n# level increment doubles the number of directories, resulting in 4096\n# directories at level 8 which is the default and also the maximum value. The\n# sub-directories are organized in 2 levels, the first level always has a fixed\n# number of 16 directories.\n# Minimum value: 0, maximum value: 8, default value: 8.\n",
                    "rendered": {
                      "text": "# Controls the number of sub-directories that will be created when\n# CREATE_SUBDIRS tag is set to YES. Level 0 represents 16 directories, and every\n# level increment doubles the number of directories, resulting in 4096\n# directories at level 8 which is the default and also the maximum value. The\n# sub-directories are organized in 2 levels, the first level always has a fixed\n# number of 16 directories.\n# Minimum value: 0, maximum value: 8, default value: 8.\n",
                      "markdown": "`# Controls the number of sub-directories that will be created when\n# CREATE_SUBDIRS tag is set to YES. Level 0 represents 16 directories, and every\n# level increment doubles the number of directories, resulting in 4096\n# directories at level 8 which is the default and also the maximum value. The\n# sub-directories are organized in 2 levels, the first level always has a fixed\n# number of 16 directories.\n# Minimum value: 0, maximum value: 8, default value: 8.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 85,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system. Adapt CREATE_SUBDIRS_LEVEL to\n# control the number of sub-directories.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = NO\n",
                    "rendered": {
                      "text": "# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system. Adapt CREATE_SUBDIRS_LEVEL to\n# control the number of sub-directories.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = NO\n",
                      "markdown": "`# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system. Adapt CREATE_SUBDIRS_LEVEL to\n# control the number of sub-directories.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = NO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 28,
                  "endLine": 54,
                  "endColumn": 32,
                  "snippet": {
                    "text": "PROJECT_NUMBER         = 1.8/2.1\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          =\n",
                    "rendered": {
                      "text": "PROJECT_NUMBER         = 1.8/2.1\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          =\n",
                      "markdown": "`PROJECT_NUMBER         = 1.8/2.1\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          =\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 49,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 1.8/2.1\n\n",
                    "rendered": {
                      "text": "\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 1.8/2.1\n\n",
                      "markdown": "`\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 1.8/2.1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2845,
                  "startColumn": 41,
                  "endLine": 2845,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n",
                    "rendered": {
                      "text": "# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n",
                      "markdown": "`# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2844,
                  "startColumn": 23,
                  "endLine": 2844,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n",
                    "rendered": {
                      "text": "# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n",
                      "markdown": "`# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2833,
                  "startColumn": 22,
                  "endLine": 2833,
                  "endColumn": 28,
                  "snippet": {
                    "text": "# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n",
                    "rendered": {
                      "text": "# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n",
                      "markdown": "`# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2832,
                  "startColumn": 29,
                  "endLine": 2832,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n",
                    "rendered": {
                      "text": "# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n",
                      "markdown": "`# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2832,
                  "startColumn": 19,
                  "endLine": 2832,
                  "endColumn": 25,
                  "snippet": {
                    "text": "# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n",
                    "rendered": {
                      "text": "# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n",
                      "markdown": "`# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2812,
                  "startColumn": 21,
                  "endLine": 2812,
                  "endColumn": 27,
                  "snippet": {
                    "text": "DIAFILE_DIRS           =\n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file or to the filename of jar file\n# to be used. If left blank, it is assumed PlantUML is not used or called during\n# a preprocessing step. Doxygen will generate a warning when it encounters a\n# \\startuml command in this case and will not generate output for the diagram.\n",
                    "rendered": {
                      "text": "DIAFILE_DIRS           =\n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file or to the filename of jar file\n# to be used. If left blank, it is assumed PlantUML is not used or called during\n# a preprocessing step. Doxygen will generate a warning when it encounters a\n# \\startuml command in this case and will not generate output for the diagram.\n",
                      "markdown": "`DIAFILE_DIRS           =\n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file or to the filename of jar file\n# to be used. If left blank, it is assumed PlantUML is not used or called during\n# a preprocessing step. Doxygen will generate a warning when it encounters a\n# \\startuml command in this case and will not generate output for the diagram.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2723,
                  "startColumn": 64,
                  "endLine": 2723,
                  "endColumn": 70,
                  "snippet": {
                    "text": "# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command. Disabling a caller graph can be\n# accomplished by means of the command \\hidecallergraph.\n",
                    "rendered": {
                      "text": "# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command. Disabling a caller graph can be\n# accomplished by means of the command \\hidecallergraph.\n",
                      "markdown": "`# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command. Disabling a caller graph can be\n# accomplished by means of the command \\hidecallergraph.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2711,
                  "startColumn": 64,
                  "endLine": 2711,
                  "endColumn": 70,
                  "snippet": {
                    "text": "# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command. Disabling a call graph can be\n# accomplished by means of the command \\hidecallgraph.\n",
                    "rendered": {
                      "text": "# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command. Disabling a call graph can be\n# accomplished by means of the command \\hidecallgraph.\n",
                      "markdown": "`# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command. Disabling a call graph can be\n# accomplished by means of the command \\hidecallgraph.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2588,
                  "startColumn": 36,
                  "endLine": 2588,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\nDOT_NODE_ATTR          = \"shape=box,height=0.2,width=0.4\"\n\n# You can set the path where dot can find font specified with fontname in\n# DOT_COMMON_ATTR and others dot attributes.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\n",
                    "rendered": {
                      "text": "\nDOT_NODE_ATTR          = \"shape=box,height=0.2,width=0.4\"\n\n# You can set the path where dot can find font specified with fontname in\n# DOT_COMMON_ATTR and others dot attributes.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\n",
                      "markdown": "`\nDOT_NODE_ATTR          = \"shape=box,height=0.2,width=0.4\"\n\n# You can set the path where dot can find font specified with fontname in\n# DOT_COMMON_ATTR and others dot attributes.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2563,
                  "startColumn": 4,
                  "endLine": 2563,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# doxygen generates you can specify fontname, fontcolor and fontsize attributes.\n# For details please see <a href=https://graphviz.org/doc/info/attrs.html>Node,\n# Edge and Graph Attributes specification</a> You need to make sure dot is able\n# to find the font, which can be done by putting it in a standard location or by\n# setting the DOTFONTPATH environment variable or by setting DOT_FONTPATH to the\n# directory containing the font. Default graphviz fontsize is 14.\n# The default value is: fontname=Helvetica,fontsize=10.\n",
                    "rendered": {
                      "text": "# doxygen generates you can specify fontname, fontcolor and fontsize attributes.\n# For details please see <a href=https://graphviz.org/doc/info/attrs.html>Node,\n# Edge and Graph Attributes specification</a> You need to make sure dot is able\n# to find the font, which can be done by putting it in a standard location or by\n# setting the DOTFONTPATH environment variable or by setting DOT_FONTPATH to the\n# directory containing the font. Default graphviz fontsize is 14.\n# The default value is: fontname=Helvetica,fontsize=10.\n",
                      "markdown": "`# doxygen generates you can specify fontname, fontcolor and fontsize attributes.\n# For details please see <a href=https://graphviz.org/doc/info/attrs.html>Node,\n# Edge and Graph Attributes specification</a> You need to make sure dot is able\n# to find the font, which can be done by putting it in a standard location or by\n# setting the DOTFONTPATH environment variable or by setting DOT_FONTPATH to the\n# directory containing the font. Default graphviz fontsize is 14.\n# The default value is: fontname=Helvetica,fontsize=10.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2414,
                  "startColumn": 56,
                  "endLine": 2414,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n",
                    "rendered": {
                      "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n",
                      "markdown": "`\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2389,
                  "startColumn": 57,
                  "endLine": 2389,
                  "endColumn": 63,
                  "snippet": {
                    "text": "# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                    "rendered": {
                      "text": "# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                      "markdown": "`# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2389,
                  "startColumn": 13,
                  "endLine": 2389,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                    "rendered": {
                      "text": "# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                      "markdown": "`# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2386,
                  "startColumn": 46,
                  "endLine": 2386,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n",
                    "rendered": {
                      "text": "\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n",
                      "markdown": "`\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2380,
                  "startColumn": 17,
                  "endLine": 2380,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\n",
                    "rendered": {
                      "text": "\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\n",
                      "markdown": "`\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2379,
                  "startColumn": 17,
                  "endLine": 2379,
                  "endColumn": 23,
                  "snippet": {
                    "text": "GENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                    "rendered": {
                      "text": "GENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                      "markdown": "`GENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2370,
                  "startColumn": 68,
                  "endLine": 2370,
                  "endColumn": 74,
                  "snippet": {
                    "text": "# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n",
                    "rendered": {
                      "text": "# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n",
                      "markdown": "`# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2367,
                  "startColumn": 38,
                  "endLine": 2367,
                  "endColumn": 44,
                  "snippet": {
                    "text": "SQLITE3_RECREATE_DB    = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n",
                    "rendered": {
                      "text": "SQLITE3_RECREATE_DB    = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n",
                      "markdown": "`SQLITE3_RECREATE_DB    = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2356,
                  "startColumn": 24,
                  "endLine": 2357,
                  "snippet": {
                    "text": "# The default directory is: sqlite3.\n# This tag requires that the tag GENERATE_SQLITE3 is set to YES.\n\nSQLITE3_OUTPUT         = sqlite3\n\n# The SQLITE3_RECREATE_DB tag is set to YES, the existing doxygen_sqlite3.db\n# database file will be recreated with each doxygen run. If set to NO, doxygen\n# will warn if a database file is already found and not modify it.\n",
                    "rendered": {
                      "text": "# The default directory is: sqlite3.\n# This tag requires that the tag GENERATE_SQLITE3 is set to YES.\n\nSQLITE3_OUTPUT         = sqlite3\n\n# The SQLITE3_RECREATE_DB tag is set to YES, the existing doxygen_sqlite3.db\n# database file will be recreated with each doxygen run. If set to NO, doxygen\n# will warn if a database file is already found and not modify it.\n",
                      "markdown": "`# The default directory is: sqlite3.\n# This tag requires that the tag GENERATE_SQLITE3 is set to YES.\n\nSQLITE3_OUTPUT         = sqlite3\n\n# The SQLITE3_RECREATE_DB tag is set to YES, the existing doxygen_sqlite3.db\n# database file will be recreated with each doxygen run. If set to NO, doxygen\n# will warn if a database file is already found and not modify it.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2350,
                  "startColumn": 53,
                  "endLine": 2350,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\nGENERATE_SQLITE3       = NO\n\n# The SQLITE3_OUTPUT tag is used to specify where the Sqlite3 database will be\n# put. If a relative path is entered the value of OUTPUT_DIRECTORY will be put\n# in front of it.\n# The default directory is: sqlite3.\n",
                    "rendered": {
                      "text": "\nGENERATE_SQLITE3       = NO\n\n# The SQLITE3_OUTPUT tag is used to specify where the Sqlite3 database will be\n# put. If a relative path is entered the value of OUTPUT_DIRECTORY will be put\n# in front of it.\n# The default directory is: sqlite3.\n",
                      "markdown": "`\nGENERATE_SQLITE3       = NO\n\n# The SQLITE3_OUTPUT tag is used to specify where the Sqlite3 database will be\n# put. If a relative path is entered the value of OUTPUT_DIRECTORY will be put\n# in front of it.\n# The default directory is: sqlite3.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2344,
                  "startColumn": 67,
                  "endLine": 2345,
                  "snippet": {
                    "text": "# Configuration options related to Sqlite3 output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_SQLITE3 tag is set to YES doxygen will generate a Sqlite3\n# database with symbols found by doxygen stored in tables.\n# The default value is: NO.\n\nGENERATE_SQLITE3       = NO\n",
                    "rendered": {
                      "text": "# Configuration options related to Sqlite3 output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_SQLITE3 tag is set to YES doxygen will generate a Sqlite3\n# database with symbols found by doxygen stored in tables.\n# The default value is: NO.\n\nGENERATE_SQLITE3       = NO\n",
                      "markdown": "`# Configuration options related to Sqlite3 output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_SQLITE3 tag is set to YES doxygen will generate a Sqlite3\n# database with symbols found by doxygen stored in tables.\n# The default value is: NO.\n\nGENERATE_SQLITE3       = NO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2341,
                  "startColumn": 34,
                  "endLine": 2341,
                  "endColumn": 43,
                  "snippet": {
                    "text": "GENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to Sqlite3 output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_SQLITE3 tag is set to YES doxygen will generate a Sqlite3\n",
                    "rendered": {
                      "text": "GENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to Sqlite3 output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_SQLITE3 tag is set to YES doxygen will generate a Sqlite3\n",
                      "markdown": "`GENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to Sqlite3 output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_SQLITE3 tag is set to YES doxygen will generate a Sqlite3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 2270,
                  "startColumn": 41,
                  "endLine": 2270,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\n",
                    "rendered": {
                      "text": "# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\n",
                      "markdown": "`# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1931,
                  "startColumn": 1,
                  "endLine": 1931,
                  "endColumn": 9,
                  "snippet": {
                    "text": "SERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n",
                    "rendered": {
                      "text": "SERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n",
                      "markdown": "`SERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1930,
                  "startColumn": 73,
                  "endLine": 1931,
                  "snippet": {
                    "text": "\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n",
                    "rendered": {
                      "text": "\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n",
                      "markdown": "`\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 49,
                  "endLine": 1921,
                  "endColumn": 54,
                  "snippet": {
                    "text": "# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using JavaScript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n",
                    "rendered": {
                      "text": "# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using JavaScript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n",
                      "markdown": "`# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using JavaScript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1728,
                  "startColumn": 76,
                  "endLine": 1729,
                  "snippet": {
                    "text": "\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n",
                      "markdown": "`\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1522,
                  "startColumn": 69,
                  "endLine": 1522,
                  "endColumn": 75,
                  "snippet": {
                    "text": "# create a documentation set, doxygen will generate a Makefile in the HTML\n# output directory. Running make will produce the docset in that directory and\n# running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy\n# genXcode/_index.html for more information.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "# create a documentation set, doxygen will generate a Makefile in the HTML\n# output directory. Running make will produce the docset in that directory and\n# running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy\n# genXcode/_index.html for more information.\n# The default value is: NO.\n",
                      "markdown": "`# create a documentation set, doxygen will generate a Makefile in the HTML\n# output directory. Running make will produce the docset in that directory and\n# running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy\n# genXcode/_index.html for more information.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1504,
                  "startColumn": 57,
                  "endLine": 1504,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                    "rendered": {
                      "text": "\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                      "markdown": "`\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1503,
                  "startColumn": 70,
                  "endLine": 1504,
                  "snippet": {
                    "text": "HTML_PROJECT_COOKIE    =\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                    "rendered": {
                      "text": "HTML_PROJECT_COOKIE    =\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                      "markdown": "`HTML_PROJECT_COOKIE    =\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1483,
                  "startColumn": 5,
                  "endLine": 1483,
                  "endColumn": 10,
                  "snippet": {
                    "text": "HTML_CODE_FOLDING      = YES\n\n# If the HTML_COPY_CLIPBOARD tag is set to YES then doxygen will show an icon in\n# the top right corner of code and text fragments that allows the user to copy\n# its content to the clipboard. Note this only works if supported by the browser\n# and the web page is served via a secure context (see:\n# https://www.w3.org/TR/secure-contexts/), i.e. using the https: or file:\n",
                    "rendered": {
                      "text": "HTML_CODE_FOLDING      = YES\n\n# If the HTML_COPY_CLIPBOARD tag is set to YES then doxygen will show an icon in\n# the top right corner of code and text fragments that allows the user to copy\n# its content to the clipboard. Note this only works if supported by the browser\n# and the web page is served via a secure context (see:\n# https://www.w3.org/TR/secure-contexts/), i.e. using the https: or file:\n",
                      "markdown": "`HTML_CODE_FOLDING      = YES\n\n# If the HTML_COPY_CLIPBOARD tag is set to YES then doxygen will show an icon in\n# the top right corner of code and text fragments that allows the user to copy\n# its content to the clipboard. Note this only works if supported by the browser\n# and the web page is served via a secure context (see:\n# https://www.w3.org/TR/secure-contexts/), i.e. using the https: or file:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 20,
                  "endLine": 1431,
                  "endColumn": 25,
                  "snippet": {
                    "text": "# this color. Hue is specified as an angle on a color-wheel, see\n# https://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n",
                    "rendered": {
                      "text": "# this color. Hue is specified as an angle on a color-wheel, see\n# https://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n",
                      "markdown": "`# this color. Hue is specified as an angle on a color-wheel, see\n# https://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 831,
                  "startColumn": 58,
                  "endLine": 831,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n",
                    "rendered": {
                      "text": "# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n",
                      "markdown": "`# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 802,
                  "startColumn": 65,
                  "endLine": 802,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n",
                    "rendered": {
                      "text": "\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n",
                      "markdown": "`\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 61,
                  "endLine": 712,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n",
                      "markdown": "`\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 700,
                  "startColumn": 67,
                  "endLine": 700,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n",
                    "rendered": {
                      "text": "\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n",
                      "markdown": "`\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 692,
                  "startColumn": 60,
                  "endLine": 692,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n",
                    "rendered": {
                      "text": "\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n",
                      "markdown": "`\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 685,
                  "startColumn": 61,
                  "endLine": 685,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order.\n# The default value is: YES.\n",
                    "rendered": {
                      "text": "\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order.\n# The default value is: YES.\n",
                      "markdown": "`\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order.\n# The default value is: YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 30,
                  "endLine": 508,
                  "endColumn": 36,
                  "snippet": {
                    "text": "NUM_PROC_THREADS       = 1\n\n# If the TIMESTAMP tag is set different from NO then each generated page will\n# contain the date or date and time when the page was generated. Setting this to\n# NO can help when comparing the output of multiple runs.\n# Possible values are: YES, NO, DATETIME and DATE.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "NUM_PROC_THREADS       = 1\n\n# If the TIMESTAMP tag is set different from NO then each generated page will\n# contain the date or date and time when the page was generated. Setting this to\n# NO can help when comparing the output of multiple runs.\n# Possible values are: YES, NO, DATETIME and DATE.\n# The default value is: NO.\n",
                      "markdown": "`NUM_PROC_THREADS       = 1\n\n# If the TIMESTAMP tag is set different from NO then each generated page will\n# contain the date or date and time when the page was generated. Setting this to\n# NO can help when comparing the output of multiple runs.\n# Possible values are: YES, NO, DATETIME and DATE.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/doc/doxyfile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 35,
                  "endLine": 54,
                  "endColumn": 40,
                  "snippet": {
                    "text": "PROJECT_NUMBER         = 1.8/2.1\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          =\n",
                    "rendered": {
                      "text": "PROJECT_NUMBER         = 1.8/2.1\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          =\n",
                      "markdown": "`PROJECT_NUMBER         = 1.8/2.1\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          =\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/overrides.html"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 476,
                  "endLine": 133,
                  "endColumn": 485,
                  "snippet": {
                    "text": "file in each source file that re-defines <code>malloc</code> etc. to <code>mi_malloc</code>. This is provided by <a href=\"https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-override.h\"><code>mimalloc-override.h</code></a>. This only works reliably though if all sources are under your control or otherwise mixing of pointers from different heaps may occur!</p>\n<h2>List of Overrides:</h2>\n<p>The specific functions that get redirected to the <em>mimalloc</em> library are:</p>\n<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">// C</span></div>\n<div class=\"line\"><span class=\"keywo",
                    "rendered": {
                      "text": "file in each source file that re-defines <code>malloc</code> etc. to <code>mi_malloc</code>. This is provided by <a href=\"https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-override.h\"><code>mimalloc-override.h</code></a>. This only works reliably though if all sources are under your control or otherwise mixing of pointers from different heaps may occur!</p>\n<h2>List of Overrides:</h2>\n<p>The specific functions that get redirected to the <em>mimalloc</em> library are:</p>\n<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">// C</span></div>\n<div class=\"line\"><span class=\"keywo",
                      "markdown": "`file in each source file that re-defines <code>malloc</code> etc. to <code>mi_malloc</code>. This is provided by <a href=\"https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-override.h\"><code>mimalloc-override.h</code></a>. This only works reliably though if all sources are under your control or otherwise mixing of pointers from different heaps may occur!</p>\n<h2>List of Overrides:</h2>\n<p>The specific functions that get redirected to the <em>mimalloc</em> library are:</p>\n<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">// C</span></div>\n<div class=\"line\"><span class=\"keywo`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/overrides.html"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 110,
                  "endLine": 129,
                  "endColumn": 114,
                  "snippet": {
                    "text": "he <code>new</code>/<code>delete</code> operations (by including <a href=\"include/mimalloc-new-delete.h\"><code>mimalloc-new-delete.h</code></a> a single(!) source file in your project).</p>\n<p>The environment variable <code>MIMALLOC_DISABLE_REDIRECT=1</code> can be used to disable dynamic overriding at run-time. Use <code>MIMALLOC_VERBOSE=1</code> to check if mimalloc was successfully redirected.</p>\n<p>We cannot always re-link an executable with <code>mimalloc-override.dll</code>, and similarly, we cannot always ensure the the DLL comes first in the import table of the final executable. In many c",
                    "rendered": {
                      "text": "he <code>new</code>/<code>delete</code> operations (by including <a href=\"include/mimalloc-new-delete.h\"><code>mimalloc-new-delete.h</code></a> a single(!) source file in your project).</p>\n<p>The environment variable <code>MIMALLOC_DISABLE_REDIRECT=1</code> can be used to disable dynamic overriding at run-time. Use <code>MIMALLOC_VERBOSE=1</code> to check if mimalloc was successfully redirected.</p>\n<p>We cannot always re-link an executable with <code>mimalloc-override.dll</code>, and similarly, we cannot always ensure the the DLL comes first in the import table of the final executable. In many c",
                      "markdown": "`he <code>new</code>/<code>delete</code> operations (by including <a href=\"include/mimalloc-new-delete.h\"><code>mimalloc-new-delete.h</code></a> a single(!) source file in your project).</p>\n<p>The environment variable <code>MIMALLOC_DISABLE_REDIRECT=1</code> can be used to disable dynamic overriding at run-time. Use <code>MIMALLOC_VERBOSE=1</code> to check if mimalloc was successfully redirected.</p>\n<p>We cannot always re-link an executable with <code>mimalloc-override.dll</code>, and similarly, we cannot always ensure the the DLL comes first in the import table of the final executable. In many c`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/overrides.html"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 169,
                  "endLine": 125,
                  "endColumn": 173,
                  "snippet": {
                    "text": "_version</code> switch on the linker). See the <code>mimalloc-override-test</code> project for an example on how to use this.</li>\n<li>The [<code>mimalloc-redirect.dll</code>](bin) (or <code>mimalloc-redirect32.dll</code>) must be put in the same folder as the main <code>mimalloc-override.dll</code> at runtime (as it is a dependency of that DLL). The redirection DLL ensures that all calls to the C runtime malloc API get redirected to mimalloc functions (which reside in <code>mimalloc-override.dll</code>).</li>\n<li>Ensure the <code>mimalloc-override.dll</code> comes as early as possible in the impo",
                    "rendered": {
                      "text": "_version</code> switch on the linker). See the <code>mimalloc-override-test</code> project for an example on how to use this.</li>\n<li>The [<code>mimalloc-redirect.dll</code>](bin) (or <code>mimalloc-redirect32.dll</code>) must be put in the same folder as the main <code>mimalloc-override.dll</code> at runtime (as it is a dependency of that DLL). The redirection DLL ensures that all calls to the C runtime malloc API get redirected to mimalloc functions (which reside in <code>mimalloc-override.dll</code>).</li>\n<li>Ensure the <code>mimalloc-override.dll</code> comes as early as possible in the impo",
                      "markdown": "`_version</code> switch on the linker). See the <code>mimalloc-override-test</code> project for an example on how to use this.</li>\n<li>The [<code>mimalloc-redirect.dll</code>](bin) (or <code>mimalloc-redirect32.dll</code>) must be put in the same folder as the main <code>mimalloc-override.dll</code> at runtime (as it is a dependency of that DLL). The redirection DLL ensures that all calls to the C runtime malloc API get redirected to mimalloc functions (which reside in <code>mimalloc-override.dll</code>).</li>\n<li>Ensure the <code>mimalloc-override.dll</code> comes as early as possible in the impo`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/overrides.html"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 140,
                  "endLine": 124,
                  "endColumn": 144,
                  "snippet": {
                    "text": "s to make the overriding work robustly:</p>\n<ol type=\"1\">\n<li>Use the C-runtime library as a DLL (using the <code>/MD</code> or <code>/MDd</code> switch).</li>\n<li>Link your program explicitly with <code>mimalloc-override.dll</code> library. To ensure the <code>mimalloc-override.dll</code> is loaded at run-time it is easiest to insert some call to the mimalloc API in the <code>main</code> function, like <code>mi_version()</code> (or use the <code>/INCLUDE:mi_version</code> switch on the linker). See the <code>mimalloc-override-test</code> project for an example on how to use this.</li>\n<li>The [<c",
                    "rendered": {
                      "text": "s to make the overriding work robustly:</p>\n<ol type=\"1\">\n<li>Use the C-runtime library as a DLL (using the <code>/MD</code> or <code>/MDd</code> switch).</li>\n<li>Link your program explicitly with <code>mimalloc-override.dll</code> library. To ensure the <code>mimalloc-override.dll</code> is loaded at run-time it is easiest to insert some call to the mimalloc API in the <code>main</code> function, like <code>mi_version()</code> (or use the <code>/INCLUDE:mi_version</code> switch on the linker). See the <code>mimalloc-override-test</code> project for an example on how to use this.</li>\n<li>The [<c",
                      "markdown": "`s to make the overriding work robustly:</p>\n<ol type=\"1\">\n<li>Use the C-runtime library as a DLL (using the <code>/MD</code> or <code>/MDd</code> switch).</li>\n<li>Link your program explicitly with <code>mimalloc-override.dll</code> library. To ensure the <code>mimalloc-override.dll</code> is loaded at run-time it is easiest to insert some call to the mimalloc API in the <code>main</code> function, like <code>mi_version()</code> (or use the <code>/INCLUDE:mi_version</code> switch on the linker). See the <code>mimalloc-override-test</code> project for an example on how to use this.</li>\n<li>The [<c`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/overrides.html"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 214,
                  "endLine": 118,
                  "endColumn": 219,
                  "snippet": {
                    "text": "oc-debug.so myprogram</div>\n</div><!-- fragment --><h3>Dynamic Override on MacOS</h3>\n<p>On macOS we can also preload the mimalloc shared library so all calls to the standard <code>malloc</code> interface are resolved to the <em>mimalloc</em> library. </p><div class=\"fragment\"><div class=\"line\">&gt; env DYLD_INSERT_LIBRARIES=/usr/lib/libmimalloc.dylib myprogram</div>\n</div><!-- fragment --><p>Note that certain security restrictions may apply when doing this from the <a href=\"https://stackoverflow.com/questions/43941322/dyld-insert-libraries-ignored-when-calling-application-through-bash\">shell</a>.<",
                    "rendered": {
                      "text": "oc-debug.so myprogram</div>\n</div><!-- fragment --><h3>Dynamic Override on MacOS</h3>\n<p>On macOS we can also preload the mimalloc shared library so all calls to the standard <code>malloc</code> interface are resolved to the <em>mimalloc</em> library. </p><div class=\"fragment\"><div class=\"line\">&gt; env DYLD_INSERT_LIBRARIES=/usr/lib/libmimalloc.dylib myprogram</div>\n</div><!-- fragment --><p>Note that certain security restrictions may apply when doing this from the <a href=\"https://stackoverflow.com/questions/43941322/dyld-insert-libraries-ignored-when-calling-application-through-bash\">shell</a>.<",
                      "markdown": "`oc-debug.so myprogram</div>\n</div><!-- fragment --><h3>Dynamic Override on MacOS</h3>\n<p>On macOS we can also preload the mimalloc shared library so all calls to the standard <code>malloc</code> interface are resolved to the <em>mimalloc</em> library. </p><div class=\"fragment\"><div class=\"line\">&gt; env DYLD_INSERT_LIBRARIES=/usr/lib/libmimalloc.dylib myprogram</div>\n</div><!-- fragment --><p>Note that certain security restrictions may apply when doing this from the <a href=\"https://stackoverflow.com/questions/43941322/dyld-insert-libraries-ignored-when-calling-application-through-bash\">shell</a>.<`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/overrides.html"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 133,
                  "endLine": 116,
                  "endColumn": 138,
                  "snippet": {
                    "text": "es to check that mimalloc is running, like: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p> or run with the debug version to get detailed statistics: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram</div>\n</div><!-- fragment --><h3>Dynamic Override on MacOS</h3>\n<p>On macOS we can also preload the mimalloc shared library so all calls to the standard <code>malloc</code> interface are resolved to the <em>mimalloc</em> librar",
                    "rendered": {
                      "text": "es to check that mimalloc is running, like: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p> or run with the debug version to get detailed statistics: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram</div>\n</div><!-- fragment --><h3>Dynamic Override on MacOS</h3>\n<p>On macOS we can also preload the mimalloc shared library so all calls to the standard <code>malloc</code> interface are resolved to the <em>mimalloc</em> librar",
                      "markdown": "`es to check that mimalloc is running, like: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p> or run with the debug version to get detailed statistics: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram</div>\n</div><!-- fragment --><h3>Dynamic Override on MacOS</h3>\n<p>On macOS we can also preload the mimalloc shared library so all calls to the standard <code>malloc</code> interface are resolved to the <em>mimalloc</em> librar`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/overrides.html"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 155,
                  "endLine": 115,
                  "endColumn": 160,
                  "snippet": {
                    "text": "solved to the <em>mimalloc</em> library. </p><div class=\"fragment\"><div class=\"line\">&gt; env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p>You can set extra environment variables to check that mimalloc is running, like: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p> or run with the debug version to get detailed statistics: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram</div>\n</div><!-- fr",
                    "rendered": {
                      "text": "solved to the <em>mimalloc</em> library. </p><div class=\"fragment\"><div class=\"line\">&gt; env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p>You can set extra environment variables to check that mimalloc is running, like: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p> or run with the debug version to get detailed statistics: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram</div>\n</div><!-- fr",
                      "markdown": "`solved to the <em>mimalloc</em> library. </p><div class=\"fragment\"><div class=\"line\">&gt; env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p>You can set extra environment variables to check that mimalloc is running, like: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p> or run with the debug version to get detailed statistics: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram</div>\n</div><!-- fr`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/overrides.html"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 223,
                  "endLine": 114,
                  "endColumn": 228,
                  "snippet": {
                    "text": "e the standard malloc interface.</p>\n<h3>Dynamic Override on Linux, BSD</h3>\n<p>On these ELF-based systems we preload the mimalloc shared library so all calls to the standard <code>malloc</code> interface are resolved to the <em>mimalloc</em> library. </p><div class=\"fragment\"><div class=\"line\">&gt; env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p>You can set extra environment variables to check that mimalloc is running, like: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment",
                    "rendered": {
                      "text": "e the standard malloc interface.</p>\n<h3>Dynamic Override on Linux, BSD</h3>\n<p>On these ELF-based systems we preload the mimalloc shared library so all calls to the standard <code>malloc</code> interface are resolved to the <em>mimalloc</em> library. </p><div class=\"fragment\"><div class=\"line\">&gt; env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p>You can set extra environment variables to check that mimalloc is running, like: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment",
                      "markdown": "`e the standard malloc interface.</p>\n<h3>Dynamic Override on Linux, BSD</h3>\n<p>On these ELF-based systems we preload the mimalloc shared library so all calls to the standard <code>malloc</code> interface are resolved to the <em>mimalloc</em> library. </p><div class=\"fragment\"><div class=\"line\">&gt; env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment --><p>You can set extra environment variables to check that mimalloc is running, like: </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram</div>\n</div><!-- fragment`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/overrides.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__malloc.html"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 110,
                  "endLine": 434,
                  "endColumn": 114,
                  "snippet": {
                    "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">fname</td><td>File name. </td></tr>\n    <tr><td class=\"paramname\">resolved_name</td><td>Should be <em>NULL</em> (but can also point to a buffer of at least <em>PATH_MAX</em> bytes). </td></tr>\n  </table>\n  </dd>\n</dl>\n",
                    "rendered": {
                      "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">fname</td><td>File name. </td></tr>\n    <tr><td class=\"paramname\">resolved_name</td><td>Should be <em>NULL</em> (but can also point to a buffer of at least <em>PATH_MAX</em> bytes). </td></tr>\n  </table>\n  </dd>\n</dl>\n",
                      "markdown": "`<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">fname</td><td>File name. </td></tr>\n    <tr><td class=\"paramname\">resolved_name</td><td>Should be <em>NULL</em> (but can also point to a buffer of at least <em>PATH_MAX</em> bytes). </td></tr>\n  </table>\n  </dd>\n</dl>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__malloc.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/classes.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/manylinux-x64/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN cmake ../.. -DMI_DEBUG_FULL=ON\nRUN make -j\nRUN make test\n\nCMD [\"/bin/sh\"]",
                    "rendered": {
                      "text": "RUN cmake ../.. -DMI_DEBUG_FULL=ON\nRUN make -j\nRUN make test\n\nCMD [\"/bin/sh\"]",
                      "markdown": "`RUN cmake ../.. -DMI_DEBUG_FULL=ON\nRUN make -j\nRUN make test\n\nCMD [\"/bin/sh\"]`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/manylinux-x64/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "WORKDIR /home/dev\n\n# Get mimalloc\nRUN git clone https://github.com/microsoft/mimalloc -b dev-slice\nRUN mkdir -p mimalloc/out/release\nRUN mkdir -p mimalloc/out/debug\n\n",
                    "rendered": {
                      "text": "WORKDIR /home/dev\n\n# Get mimalloc\nRUN git clone https://github.com/microsoft/mimalloc -b dev-slice\nRUN mkdir -p mimalloc/out/release\nRUN mkdir -p mimalloc/out/debug\n\n",
                      "markdown": "`WORKDIR /home/dev\n\n# Get mimalloc\nRUN git clone https://github.com/microsoft/mimalloc -b dev-slice\nRUN mkdir -p mimalloc/out/release\nRUN mkdir -p mimalloc/out/debug\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/manylinux-x64/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 8,
                  "snippet": {
                    "text": "RUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n\n",
                    "rendered": {
                      "text": "RUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n\n",
                      "markdown": "`RUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/manylinux-x64/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3,
                  "endLine": 7,
                  "endColumn": 8,
                  "snippet": {
                    "text": "RUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n",
                    "rendered": {
                      "text": "RUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n",
                      "markdown": "`RUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/manylinux-x64/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 18,
                  "endLine": 6,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\n",
                    "rendered": {
                      "text": "# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\n",
                      "markdown": "`# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/manylinux-x64/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\n",
                    "rendered": {
                      "text": "# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\n",
                      "markdown": "`# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\nRUN mkdir -p  /home/dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/manylinux-x64/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\n",
                    "rendered": {
                      "text": "\n# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\n",
                      "markdown": "`\n# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/manylinux-x64/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "FROM quay.io/pypa/manylinux2014_x86_64\n\n# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n",
                    "rendered": {
                      "text": "FROM quay.io/pypa/manylinux2014_x86_64\n\n# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n",
                      "markdown": "`FROM quay.io/pypa/manylinux2014_x86_64\n\n# Install tools\nRUN yum install -y openssl-devel\nRUN yum install -y gcc gcc-c++ kernel-devel make\nRUN yum install -y git cmake\nRUN yum install -y vim\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/alpine-arm32v7/Dockerfile"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 28,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN cmake ../.. -DMI_DEBUG_FULL=ON\nRUN make -j\nRUN make test\n\nCMD [\"/bin/sh\"]\n",
                    "rendered": {
                      "text": "RUN cmake ../.. -DMI_DEBUG_FULL=ON\nRUN make -j\nRUN make test\n\nCMD [\"/bin/sh\"]\n",
                      "markdown": "`RUN cmake ../.. -DMI_DEBUG_FULL=ON\nRUN make -j\nRUN make test\n\nCMD [\"/bin/sh\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/alpine-arm32v7/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 8,
                  "snippet": {
                    "text": "WORKDIR /home/dev\n\n# Get mimalloc\nRUN git clone https://github.com/microsoft/mimalloc -b dev-slice\nRUN mkdir -p mimalloc/out/release\nRUN mkdir -p mimalloc/out/debug\n\n",
                    "rendered": {
                      "text": "WORKDIR /home/dev\n\n# Get mimalloc\nRUN git clone https://github.com/microsoft/mimalloc -b dev-slice\nRUN mkdir -p mimalloc/out/release\nRUN mkdir -p mimalloc/out/debug\n\n",
                      "markdown": "`WORKDIR /home/dev\n\n# Get mimalloc\nRUN git clone https://github.com/microsoft/mimalloc -b dev-slice\nRUN mkdir -p mimalloc/out/release\nRUN mkdir -p mimalloc/out/debug\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/alpine-arm32v7/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 11,
                  "endLine": 13,
                  "snippet": {
                    "text": "# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n\n",
                    "rendered": {
                      "text": "# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n\n",
                      "markdown": "`# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/alpine-arm32v7/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 11,
                  "endLine": 12,
                  "snippet": {
                    "text": "\n# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n",
                    "rendered": {
                      "text": "\n# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n",
                      "markdown": "`\n# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/readme.md"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "```\n> cd <host>\n> docker build -t <host>-mimalloc .\n> docker run -it <host>-mimalloc\n>> make test\n```\n",
                    "rendered": {
                      "text": "```\n> cd <host>\n> docker build -t <host>-mimalloc .\n> docker run -it <host>-mimalloc\n>> make test\n```\n",
                      "markdown": "````\n> cd <host>\n> docker build -t <host>-mimalloc .\n> docker run -it <host>-mimalloc\n>> make test\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/readme.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n```\n> cd <host>\n> docker build -t <host>-mimalloc .\n> docker run -it <host>-mimalloc\n>> make test\n```\n",
                    "rendered": {
                      "text": "\n```\n> cd <host>\n> docker build -t <host>-mimalloc .\n> docker run -it <host>-mimalloc\n>> make test\n```\n",
                      "markdown": "`\n```\n> cd <host>\n> docker build -t <host>-mimalloc .\n> docker run -it <host>-mimalloc\n>> make test\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/readme.md"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 15,
                  "endLine": 1,
                  "endColumn": 23,
                  "snippet": {
                    "text": "Various example docker files used for testing.\n\nUsage:\n\n",
                    "rendered": {
                      "text": "Various example docker files used for testing.\n\nUsage:\n\n",
                      "markdown": "`Various example docker files used for testing.\n\nUsage:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/search/search.js"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 51,
                  "endLine": 312,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        if (width+left+8>maxWidth) width=maxWidth-left-8;\n        let height = 400;\n        if (height+top+8>maxHeight) height=maxHeight-top-8;\n        domPopupSearchResultsWindow.style.top     = top  + 'px';\n        domPopupSearchResultsWindow.style.left    = left + 'px';\n        domPopupSearchResultsWindow.style.width   = width + 'px';\n        domPopupSearchResultsWindow.style.height  = height + 'px';\n",
                    "rendered": {
                      "text": "        if (width+left+8>maxWidth) width=maxWidth-left-8;\n        let height = 400;\n        if (height+top+8>maxHeight) height=maxHeight-top-8;\n        domPopupSearchResultsWindow.style.top     = top  + 'px';\n        domPopupSearchResultsWindow.style.left    = left + 'px';\n        domPopupSearchResultsWindow.style.width   = width + 'px';\n        domPopupSearchResultsWindow.style.height  = height + 'px';\n",
                      "markdown": "`        if (width+left+8>maxWidth) width=maxWidth-left-8;\n        let height = 400;\n        if (height+top+8>maxHeight) height=maxHeight-top-8;\n        domPopupSearchResultsWindow.style.top     = top  + 'px';\n        domPopupSearchResultsWindow.style.left    = left + 'px';\n        domPopupSearchResultsWindow.style.width   = width + 'px';\n        domPopupSearchResultsWindow.style.height  = height + 'px';\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/search/search.js"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 11,
                  "endLine": 302,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      if (domPopupSearchResultsWindow.style.display!='block') {\n        domSearchClose.style.display = 'inline-block';\n        let left = getXPos(domSearchBox) + 150;\n        let top  = getYPos(domSearchBox) + 20;\n        domPopupSearchResultsWindow.style.display = 'block';\n        left -= domPopupSearchResults.offsetWidth;\n        const maxWidth  = document.body.clientWidth;\n",
                    "rendered": {
                      "text": "      if (domPopupSearchResultsWindow.style.display!='block') {\n        domSearchClose.style.display = 'inline-block';\n        let left = getXPos(domSearchBox) + 150;\n        let top  = getYPos(domSearchBox) + 20;\n        domPopupSearchResultsWindow.style.display = 'block';\n        left -= domPopupSearchResults.offsetWidth;\n        const maxWidth  = document.body.clientWidth;\n",
                      "markdown": "`      if (domPopupSearchResultsWindow.style.display!='block') {\n        domSearchClose.style.display = 'inline-block';\n        let left = getXPos(domSearchBox) + 150;\n        let top  = getYPos(domSearchBox) + 20;\n        domPopupSearchResultsWindow.style.display = 'block';\n        left -= domPopupSearchResults.offsetWidth;\n        const maxWidth  = document.body.clientWidth;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/search/search.js"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 13,
                  "endLine": 199,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    for (let i=0;i<win.childNodes.length;i++) {\n      const child = win.childNodes[i]; // get span within a\n      if (child.className=='SelectItem') {\n        const node = child.firstChild;\n        if (j==id) {\n          node.innerHTML='&#8226;';\n          Cookie.writeSetting(SEARCH_COOKIE_NAME, child.childNodes[1].nodeValue, 0)\n",
                    "rendered": {
                      "text": "    for (let i=0;i<win.childNodes.length;i++) {\n      const child = win.childNodes[i]; // get span within a\n      if (child.className=='SelectItem') {\n        const node = child.firstChild;\n        if (j==id) {\n          node.innerHTML='&#8226;';\n          Cookie.writeSetting(SEARCH_COOKIE_NAME, child.childNodes[1].nodeValue, 0)\n",
                      "markdown": "`    for (let i=0;i<win.childNodes.length;i++) {\n      const child = win.childNodes[i]; // get span within a\n      if (child.className=='SelectItem') {\n        const node = child.firstChild;\n        if (j==id) {\n          node.innerHTML='&#8226;';\n          Cookie.writeSetting(SEARCH_COOKIE_NAME, child.childNodes[1].nodeValue, 0)\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/search/search.js"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 36,
                  "endLine": 102,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    // show search selection popup\n    searchSelectWindow.style.display='block';\n    searchSelectWindow.style.left =  left + 'px';\n    searchSelectWindow.style.top  =  top  + 'px';\n\n    // stop selection hide timer\n    if (this.hideTimeout) {\n",
                    "rendered": {
                      "text": "    // show search selection popup\n    searchSelectWindow.style.display='block';\n    searchSelectWindow.style.left =  left + 'px';\n    searchSelectWindow.style.top  =  top  + 'px';\n\n    // stop selection hide timer\n    if (this.hideTimeout) {\n",
                      "markdown": "`    // show search selection popup\n    searchSelectWindow.style.display='block';\n    searchSelectWindow.style.left =  left + 'px';\n    searchSelectWindow.style.top  =  top  + 'px';\n\n    // stop selection hide timer\n    if (this.hideTimeout) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/search/search.js"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 9,
                  "endLine": 97,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    const searchField        = this.DOMSearchSelect();\n\n    const left = getXPos(searchField);\n    const top  = getYPos(searchField) + searchField.offsetHeight;\n\n    // show search selection popup\n    searchSelectWindow.style.display='block';\n",
                    "rendered": {
                      "text": "    const searchField        = this.DOMSearchSelect();\n\n    const left = getXPos(searchField);\n    const top  = getYPos(searchField) + searchField.offsetHeight;\n\n    // show search selection popup\n    searchSelectWindow.style.display='block';\n",
                      "markdown": "`    const searchField        = this.DOMSearchSelect();\n\n    const left = getXPos(searchField);\n    const top  = getYPos(searchField) + searchField.offsetHeight;\n\n    // show search selection popup\n    searchSelectWindow.style.display='block';\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/build.html"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 30,
                  "endLine": 134,
                  "endColumn": 39,
                  "snippet": {
                    "text": "</div><!-- fragment --><p> This will name the shared library as <code>libmimalloc-secure.so</code>. Use <code>ccmake</code><sup>2</sup> instead of <code>cmake</code> to see and customize all the available build options.</p>\n<p>Notes:</p><ol type=\"1\">\n<li>Install CMake: <code>sudo apt-get install cmake</code></li>\n<li>Install CCMake: <code>sudo apt-get install cmake-curses-gui</code> </li>\n</ol>\n</div></div><!-- contents -->\n</div><!-- PageDoc -->\n",
                    "rendered": {
                      "text": "</div><!-- fragment --><p> This will name the shared library as <code>libmimalloc-secure.so</code>. Use <code>ccmake</code><sup>2</sup> instead of <code>cmake</code> to see and customize all the available build options.</p>\n<p>Notes:</p><ol type=\"1\">\n<li>Install CMake: <code>sudo apt-get install cmake</code></li>\n<li>Install CCMake: <code>sudo apt-get install cmake-curses-gui</code> </li>\n</ol>\n</div></div><!-- contents -->\n</div><!-- PageDoc -->\n",
                      "markdown": "`</div><!-- fragment --><p> This will name the shared library as <code>libmimalloc-secure.so</code>. Use <code>ccmake</code><sup>2</sup> instead of <code>cmake</code> to see and customize all the available build options.</p>\n<p>Notes:</p><ol type=\"1\">\n<li>Install CMake: <code>sudo apt-get install cmake</code></li>\n<li>Install CCMake: <code>sudo apt-get install cmake-curses-gui</code> </li>\n</ol>\n</div></div><!-- contents -->\n</div><!-- PageDoc -->\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/build.html"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 29,
                  "endLine": 133,
                  "endColumn": 38,
                  "snippet": {
                    "text": "<div class=\"line\">&gt; make</div>\n</div><!-- fragment --><p> This will name the shared library as <code>libmimalloc-secure.so</code>. Use <code>ccmake</code><sup>2</sup> instead of <code>cmake</code> to see and customize all the available build options.</p>\n<p>Notes:</p><ol type=\"1\">\n<li>Install CMake: <code>sudo apt-get install cmake</code></li>\n<li>Install CCMake: <code>sudo apt-get install cmake-curses-gui</code> </li>\n</ol>\n</div></div><!-- contents -->\n",
                    "rendered": {
                      "text": "<div class=\"line\">&gt; make</div>\n</div><!-- fragment --><p> This will name the shared library as <code>libmimalloc-secure.so</code>. Use <code>ccmake</code><sup>2</sup> instead of <code>cmake</code> to see and customize all the available build options.</p>\n<p>Notes:</p><ol type=\"1\">\n<li>Install CMake: <code>sudo apt-get install cmake</code></li>\n<li>Install CCMake: <code>sudo apt-get install cmake-curses-gui</code> </li>\n</ol>\n</div></div><!-- contents -->\n",
                      "markdown": "`<div class=\"line\">&gt; make</div>\n</div><!-- fragment --><p> This will name the shared library as <code>libmimalloc-secure.so</code>. Use <code>ccmake</code><sup>2</sup> instead of <code>cmake</code> to see and customize all the available build options.</p>\n<p>Notes:</p><ol type=\"1\">\n<li>Install CMake: <code>sudo apt-get install cmake</code></li>\n<li>Install CCMake: <code>sudo apt-get install cmake-curses-gui</code> </li>\n</ol>\n</div></div><!-- contents -->\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/build.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/windows/prim.c"
                },
                "region": {
                  "startLine": 554,
                  "startColumn": 21,
                  "endLine": 554,
                  "endColumn": 55,
                  "snippet": {
                    "text": "// Environment\n//----------------------------------------------------------------\n\n// On Windows use GetEnvironmentVariable instead of getenv to work\n// reliably even when this is invoked before the C runtime is initialized.\n// i.e. when `_mi_preloading() == true`.\n// Note: on windows, environment names are not case sensitive.\n",
                    "rendered": {
                      "text": "// Environment\n//----------------------------------------------------------------\n\n// On Windows use GetEnvironmentVariable instead of getenv to work\n// reliably even when this is invoked before the C runtime is initialized.\n// i.e. when `_mi_preloading() == true`.\n// Note: on windows, environment names are not case sensitive.\n",
                      "markdown": "`// Environment\n//----------------------------------------------------------------\n\n// On Windows use GetEnvironmentVariable instead of getenv to work\n// reliably even when this is invoked before the C runtime is initialized.\n// i.e. when `_mi_preloading() == true`.\n// Note: on windows, environment names are not case sensitive.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/page.c"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 7,
                  "endLine": 239,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      mi_block_t* tail = page->local_free;\n      mi_block_t* next;\n      while ((next = mi_block_next(page, tail)) != NULL) {\n        tail = next;\n      }\n      mi_block_set_next(page, tail, page->free);\n      page->free = page->local_free;\n",
                    "rendered": {
                      "text": "      mi_block_t* tail = page->local_free;\n      mi_block_t* next;\n      while ((next = mi_block_next(page, tail)) != NULL) {\n        tail = next;\n      }\n      mi_block_set_next(page, tail, page->free);\n      page->free = page->local_free;\n",
                      "markdown": "`      mi_block_t* tail = page->local_free;\n      mi_block_t* next;\n      while ((next = mi_block_next(page, tail)) != NULL) {\n        tail = next;\n      }\n      mi_block_set_next(page, tail, page->free);\n      page->free = page->local_free;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/page.c"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 17,
                  "endLine": 236,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    }\n    else if (force) {\n      // append -- only on shutdown (force) as this is a linear operation\n      mi_block_t* tail = page->local_free;\n      mi_block_t* next;\n      while ((next = mi_block_next(page, tail)) != NULL) {\n        tail = next;\n",
                    "rendered": {
                      "text": "    }\n    else if (force) {\n      // append -- only on shutdown (force) as this is a linear operation\n      mi_block_t* tail = page->local_free;\n      mi_block_t* next;\n      while ((next = mi_block_next(page, tail)) != NULL) {\n        tail = next;\n",
                      "markdown": "`    }\n    else if (force) {\n      // append -- only on shutdown (force) as this is a linear operation\n      mi_block_t* tail = page->local_free;\n      mi_block_t* next;\n      while ((next = mi_block_next(page, tail)) != NULL) {\n        tail = next;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/page.c"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 3,
                  "endLine": 202,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  mi_block_t* next;\n  while ((next = mi_block_next(page,tail)) != NULL && count <= max_count) {\n    count++;\n    tail = next;\n  }\n  // if `count > max_count` there was a memory corruption (possibly infinite list due to double multi-threaded free)\n  if (count > max_count) {\n",
                    "rendered": {
                      "text": "  mi_block_t* next;\n  while ((next = mi_block_next(page,tail)) != NULL && count <= max_count) {\n    count++;\n    tail = next;\n  }\n  // if `count > max_count` there was a memory corruption (possibly infinite list due to double multi-threaded free)\n  if (count > max_count) {\n",
                      "markdown": "`  mi_block_t* next;\n  while ((next = mi_block_next(page,tail)) != NULL && count <= max_count) {\n    count++;\n    tail = next;\n  }\n  // if `count > max_count` there was a memory corruption (possibly infinite list due to double multi-threaded free)\n  if (count > max_count) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/page.c"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 13,
                  "endLine": 198,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  // find the tail -- also to get a proper count (without data races)\n  size_t max_count = page->capacity; // cannot collect more than capacity\n  size_t count = 1;\n  mi_block_t* tail = head;\n  mi_block_t* next;\n  while ((next = mi_block_next(page,tail)) != NULL && count <= max_count) {\n    count++;\n",
                    "rendered": {
                      "text": "  // find the tail -- also to get a proper count (without data races)\n  size_t max_count = page->capacity; // cannot collect more than capacity\n  size_t count = 1;\n  mi_block_t* tail = head;\n  mi_block_t* next;\n  while ((next = mi_block_next(page,tail)) != NULL && count <= max_count) {\n    count++;\n",
                      "markdown": "`  // find the tail -- also to get a proper count (without data races)\n  size_t max_count = page->capacity; // cannot collect more than capacity\n  size_t count = 1;\n  mi_block_t* tail = head;\n  mi_block_t* next;\n  while ((next = mi_block_next(page,tail)) != NULL && count <= max_count) {\n    count++;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/page.c"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 3,
                  "endLine": 188,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  mi_thread_free_t tfreex;\n  mi_thread_free_t tfree = mi_atomic_load_relaxed(&page->xthread_free);\n  do {\n    head = mi_tf_block(tfree);\n    tfreex = mi_tf_set_block(tfree,NULL);\n  } while (!mi_atomic_cas_weak_acq_rel(&page->xthread_free, &tfree, tfreex));\n\n",
                    "rendered": {
                      "text": "  mi_thread_free_t tfreex;\n  mi_thread_free_t tfree = mi_atomic_load_relaxed(&page->xthread_free);\n  do {\n    head = mi_tf_block(tfree);\n    tfreex = mi_tf_set_block(tfree,NULL);\n  } while (!mi_atomic_cas_weak_acq_rel(&page->xthread_free, &tfree, tfreex));\n\n",
                      "markdown": "`  mi_thread_free_t tfreex;\n  mi_thread_free_t tfree = mi_atomic_load_relaxed(&page->xthread_free);\n  do {\n    head = mi_tf_block(tfree);\n    tfreex = mi_tf_set_block(tfree,NULL);\n  } while (!mi_atomic_cas_weak_acq_rel(&page->xthread_free, &tfree, tfreex));\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/page.c"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 3,
                  "endLine": 48,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  while (head != NULL) {\n    mi_assert_internal(page == _mi_ptr_page(head));\n    count++;\n    head = mi_block_next(page, head);\n  }\n  return count;\n}\n",
                    "rendered": {
                      "text": "  while (head != NULL) {\n    mi_assert_internal(page == _mi_ptr_page(head));\n    count++;\n    head = mi_block_next(page, head);\n  }\n  return count;\n}\n",
                      "markdown": "`  while (head != NULL) {\n    mi_assert_internal(page == _mi_ptr_page(head));\n    count++;\n    head = mi_block_next(page, head);\n  }\n  return count;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/navtree.js"
                },
                "region": {
                  "startLine": 413,
                  "startColumn": 3,
                  "endLine": 413,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n  const o = {\n    toroot : toroot,\n    node   : {\n      childrenData  : NAVTREE,\n      children      : [],\n      childrenUL    : document.createElement(\"ul\"),\n",
                    "rendered": {
                      "text": "\n  const o = {\n    toroot : toroot,\n    node   : {\n      childrenData  : NAVTREE,\n      children      : [],\n      childrenUL    : document.createElement(\"ul\"),\n",
                      "markdown": "`\n  const o = {\n    toroot : toroot,\n    node   : {\n      childrenData  : NAVTREE,\n      children      : [],\n      childrenUL    : document.createElement(\"ul\"),\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/navtree.js"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 9,
                  "endLine": 157,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  }\n\n  const newNode = function(o, po, text, link, childrenData, lastNode) {\n    const node = {\n      children     : [],\n      childrenData : childrenData,\n      depth        : po.depth + 1,\n",
                    "rendered": {
                      "text": "  }\n\n  const newNode = function(o, po, text, link, childrenData, lastNode) {\n    const node = {\n      children     : [],\n      childrenData : childrenData,\n      depth        : po.depth + 1,\n",
                      "markdown": "`  }\n\n  const newNode = function(o, po, text, link, childrenData, lastNode) {\n    const node = {\n      children     : [],\n      childrenData : childrenData,\n      depth        : po.depth + 1,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/navtree.js"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 9,
                  "endLine": 77,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n  const getScript = function(scriptName,func) {\n    const head = document.getElementsByTagName(\"head\")[0];\n    const script = document.createElement('script');\n    script.id = scriptName;\n    script.type = 'text/javascript';\n    script.onload = func;\n",
                    "rendered": {
                      "text": "\n  const getScript = function(scriptName,func) {\n    const head = document.getElementsByTagName(\"head\")[0];\n    const script = document.createElement('script');\n    script.id = scriptName;\n    script.type = 'text/javascript';\n    script.onload = func;\n",
                      "markdown": "`\n  const getScript = function(scriptName,func) {\n    const head = document.getElementsByTagName(\"head\")[0];\n    const script = document.createElement('script');\n    script.id = scriptName;\n    script.type = 'text/javascript';\n    script.onload = func;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/navtree.js"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 9,
                  "endLine": 76,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  }\n\n  const getScript = function(scriptName,func) {\n    const head = document.getElementsByTagName(\"head\")[0];\n    const script = document.createElement('script');\n    script.id = scriptName;\n    script.type = 'text/javascript';\n",
                    "rendered": {
                      "text": "  }\n\n  const getScript = function(scriptName,func) {\n    const head = document.getElementsByTagName(\"head\")[0];\n    const script = document.createElement('script');\n    script.id = scriptName;\n    script.type = 'text/javascript';\n",
                      "markdown": "`  }\n\n  const getScript = function(scriptName,func) {\n    const head = document.getElementsByTagName(\"head\")[0];\n    const script = document.createElement('script');\n    script.id = scriptName;\n    script.type = 'text/javascript';\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 1542,
                  "startColumn": 27,
                  "endLine": 1542,
                  "endColumn": 31,
                  "snippet": {
                    "text": "}\n\nspan.emoji {\n        /* font family used at the site: https://unicode.org/emoji/charts/full-emoji-list.html\n         * font-family: \"Noto Color Emoji\", \"Apple Color Emoji\", \"Segoe UI Emoji\", Times, Symbola, Aegyptus, Code2000, Code2001, Code2002, Musica, serif, LastResort;\n         */\n}\n",
                    "rendered": {
                      "text": "}\n\nspan.emoji {\n        /* font family used at the site: https://unicode.org/emoji/charts/full-emoji-list.html\n         * font-family: \"Noto Color Emoji\", \"Apple Color Emoji\", \"Segoe UI Emoji\", Times, Symbola, Aegyptus, Code2000, Code2001, Code2002, Musica, serif, LastResort;\n         */\n}\n",
                      "markdown": "`}\n\nspan.emoji {\n        /* font family used at the site: https://unicode.org/emoji/charts/full-emoji-list.html\n         * font-family: \"Noto Color Emoji\", \"Apple Color Emoji\", \"Segoe UI Emoji\", Times, Symbola, Aegyptus, Code2000, Code2001, Code2002, Musica, serif, LastResort;\n         */\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 1519,
                  "startColumn": 7,
                  "endLine": 1519,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        margin: 0;\n}\n\ndiv.toc ul {\n        list-style: none outside none;\n        border: medium none;\n        padding: 0px;\n",
                    "rendered": {
                      "text": "        margin: 0;\n}\n\ndiv.toc ul {\n        list-style: none outside none;\n        border: medium none;\n        padding: 0px;\n",
                      "markdown": "`        margin: 0;\n}\n\ndiv.toc ul {\n        list-style: none outside none;\n        border: medium none;\n        padding: 0px;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 1488,
                  "startColumn": 11,
                  "endLine": 1488,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        width:52px;\n}\n\ndl.citelist dd {\n        margin:2px 0 2px 72px;\n        padding:5px 0;\n}\n",
                    "rendered": {
                      "text": "        width:52px;\n}\n\ndl.citelist dd {\n        margin:2px 0 2px 72px;\n        padding:5px 0;\n}\n",
                      "markdown": "`        width:52px;\n}\n\ndl.citelist dd {\n        margin:2px 0 2px 72px;\n        padding:5px 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 1373,
                  "startColumn": 48,
                  "endLine": 1373,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\ndl.note dd, dl.warning dd, dl.pre dd, dl.post dd,\ndl.remark dd, dl.attention dd, dl.important dd, dl.invariant dd,\ndl.bug dd, dl.deprecated dd, dl.todo dd, dl.test dd {\n    margin-inline-start: 0px;\n}\n\n",
                    "rendered": {
                      "text": "\ndl.note dd, dl.warning dd, dl.pre dd, dl.post dd,\ndl.remark dd, dl.attention dd, dl.important dd, dl.invariant dd,\ndl.bug dd, dl.deprecated dd, dl.todo dd, dl.test dd {\n    margin-inline-start: 0px;\n}\n\n",
                      "markdown": "`\ndl.note dd, dl.warning dd, dl.pre dd, dl.post dd,\ndl.remark dd, dl.attention dd, dl.important dd, dl.invariant dd,\ndl.bug dd, dl.deprecated dd, dl.todo dd, dl.test dd {\n    margin-inline-start: 0px;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 1303,
                  "startColumn": 10,
                  "endLine": 1303,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    border-radius: 4px;\n}\n\ndl.section dd {\n    margin-bottom: 2px;\n}\n\n",
                    "rendered": {
                      "text": "    border-radius: 4px;\n}\n\ndl.section dd {\n    margin-bottom: 2px;\n}\n\n",
                      "markdown": "`    border-radius: 4px;\n}\n\ndl.section dd {\n    margin-bottom: 2px;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 1113,
                  "startColumn": 8,
                  "endLine": 1114,
                  "snippet": {
                    "text": "\tfont-size: 13px;\n}\n\n.navpath ul\n{\n\tfont-size: 11px;\n\tbackground-image: url('tab_b.png');\n\tbackground-repeat:repeat-x;\n",
                    "rendered": {
                      "text": "\tfont-size: 13px;\n}\n\n.navpath ul\n{\n\tfont-size: 11px;\n\tbackground-image: url('tab_b.png');\n\tbackground-repeat:repeat-x;\n",
                      "markdown": "`\tfont-size: 13px;\n}\n\n.navpath ul\n{\n\tfont-size: 11px;\n\tbackground-image: url('tab_b.png');\n\tbackground-repeat:repeat-x;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 781,
                  "startColumn": 10,
                  "endLine": 781,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        padding: 5px;\n}\n\ndl.reflist dd {\n        margin: 0px 0px 10px 0px;\n        padding: 5px;\n}\n",
                    "rendered": {
                      "text": "        padding: 5px;\n}\n\ndl.reflist dd {\n        margin: 0px 0px 10px 0px;\n        padding: 5px;\n}\n",
                      "markdown": "`        padding: 5px;\n}\n\ndl.reflist dd {\n        margin: 0px 0px 10px 0px;\n        padding: 5px;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 754,
                  "startColumn": 19,
                  "endLine": 754,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tfont-size: 65%;\n}\n\n.memdoc, dl.reflist dd {\n        border-bottom: 1px solid #697273;\n        border-left: 1px solid #697273;\n        border-right: 1px solid #697273;\n",
                    "rendered": {
                      "text": "\tfont-size: 65%;\n}\n\n.memdoc, dl.reflist dd {\n        border-bottom: 1px solid #697273;\n        border-left: 1px solid #697273;\n        border-right: 1px solid #697273;\n",
                      "markdown": "`\tfont-size: 65%;\n}\n\n.memdoc, dl.reflist dd {\n        border-bottom: 1px solid #697273;\n        border-left: 1px solid #697273;\n        border-right: 1px solid #697273;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 451,
                  "startColumn": 14,
                  "endLine": 451,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tuser-select: none;\n}\n\ndiv.classindex ul {\n        list-style: none;\n        padding-left: 0;\n}\n",
                    "rendered": {
                      "text": "\tuser-select: none;\n}\n\ndiv.classindex ul {\n        list-style: none;\n        padding-left: 0;\n}\n",
                      "markdown": "`\tuser-select: none;\n}\n\ndiv.classindex ul {\n        list-style: none;\n        padding-left: 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 29,
                  "endLine": 308,
                  "endColumn": 33,
                  "snippet": {
                    "text": "}\n\n#main-nav ul {\n  overflow: visible; /* reset ul rule for the navigation bar drop down lists */\n}\n\n.fragment {\n",
                    "rendered": {
                      "text": "}\n\n#main-nav ul {\n  overflow: visible; /* reset ul rule for the navigation bar drop down lists */\n}\n\n.fragment {\n",
                      "markdown": "`}\n\n#main-nav ul {\n  overflow: visible; /* reset ul rule for the navigation bar drop down lists */\n}\n\n.fragment {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 9,
                  "endLine": 307,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  overflow: visible; /* reset ul rule for scroll bar in GENERATE_TREEVIEW window */\n}\n\n#main-nav ul {\n  overflow: visible; /* reset ul rule for the navigation bar drop down lists */\n}\n\n",
                    "rendered": {
                      "text": "  overflow: visible; /* reset ul rule for scroll bar in GENERATE_TREEVIEW window */\n}\n\n#main-nav ul {\n  overflow: visible; /* reset ul rule for the navigation bar drop down lists */\n}\n\n",
                      "markdown": "`  overflow: visible; /* reset ul rule for scroll bar in GENERATE_TREEVIEW window */\n}\n\n#main-nav ul {\n  overflow: visible; /* reset ul rule for the navigation bar drop down lists */\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 29,
                  "endLine": 304,
                  "endColumn": 33,
                  "snippet": {
                    "text": "}\n\n#side-nav ul {\n  overflow: visible; /* reset ul rule for scroll bar in GENERATE_TREEVIEW window */\n}\n\n#main-nav ul {\n",
                    "rendered": {
                      "text": "}\n\n#side-nav ul {\n  overflow: visible; /* reset ul rule for scroll bar in GENERATE_TREEVIEW window */\n}\n\n#main-nav ul {\n",
                      "markdown": "`}\n\n#side-nav ul {\n  overflow: visible; /* reset ul rule for scroll bar in GENERATE_TREEVIEW window */\n}\n\n#main-nav ul {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 9,
                  "endLine": 303,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        list-style-type: none;\n}\n\n#side-nav ul {\n  overflow: visible; /* reset ul rule for scroll bar in GENERATE_TREEVIEW window */\n}\n\n",
                    "rendered": {
                      "text": "        list-style-type: none;\n}\n\n#side-nav ul {\n  overflow: visible; /* reset ul rule for scroll bar in GENERATE_TREEVIEW window */\n}\n\n",
                      "markdown": "`        list-style-type: none;\n}\n\n#side-nav ul {\n  overflow: visible; /* reset ul rule for scroll bar in GENERATE_TREEVIEW window */\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 287,
                  "endLine": 288,
                  "endColumn": 3,
                  "snippet": {
                    "text": "ol {\n  text-indent: 0px;\n}\n\nul {\n  text-indent: 0px;\n  overflow: visible;\n}\n",
                    "rendered": {
                      "text": "ol {\n  text-indent: 0px;\n}\n\nul {\n  text-indent: 0px;\n  overflow: visible;\n}\n",
                      "markdown": "`ol {\n  text-indent: 0px;\n}\n\nul {\n  text-indent: 0px;\n  overflow: visible;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 41,
                  "endLine": 246,
                  "endColumn": 50,
                  "snippet": {
                    "text": "a.code.hl_protocol { /* style for links to protocol names in code snippets */ }\na.code.hl_category { /* style for links to category names in code snippets */ }\na.code.hl_exception { /* style for links to exception names in code snippets */ }\na.code.hl_service { /* style for links to service names in code snippets */ }\na.code.hl_singleton { /* style for links to singleton names in code snippets */ }\na.code.hl_concept { /* style for links to concept names in code snippets */ }\na.code.hl_namespace { /* style for links to namespace names in code snippets */ }\n",
                    "rendered": {
                      "text": "a.code.hl_protocol { /* style for links to protocol names in code snippets */ }\na.code.hl_category { /* style for links to category names in code snippets */ }\na.code.hl_exception { /* style for links to exception names in code snippets */ }\na.code.hl_service { /* style for links to service names in code snippets */ }\na.code.hl_singleton { /* style for links to singleton names in code snippets */ }\na.code.hl_concept { /* style for links to concept names in code snippets */ }\na.code.hl_namespace { /* style for links to namespace names in code snippets */ }\n",
                      "markdown": "`a.code.hl_protocol { /* style for links to protocol names in code snippets */ }\na.code.hl_category { /* style for links to category names in code snippets */ }\na.code.hl_exception { /* style for links to exception names in code snippets */ }\na.code.hl_service { /* style for links to service names in code snippets */ }\na.code.hl_singleton { /* style for links to singleton names in code snippets */ }\na.code.hl_concept { /* style for links to concept names in code snippets */ }\na.code.hl_namespace { /* style for links to namespace names in code snippets */ }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/doxygen.css"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 11,
                  "endLine": 174,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tcolumn-count:1\n}\n\n.classindex dd {\n\tdisplay:inline-block;\n\tmargin-left: 50px;\n\twidth: 90%;\n",
                    "rendered": {
                      "text": "\tcolumn-count:1\n}\n\n.classindex dd {\n\tdisplay:inline-block;\n\tmargin-left: 50px;\n\twidth: 90%;\n",
                      "markdown": "`\tcolumn-count:1\n}\n\n.classindex dd {\n\tdisplay:inline-block;\n\tmargin-left: 50px;\n\twidth: 90%;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/arena.c"
                },
                "region": {
                  "startLine": 938,
                  "startColumn": 27,
                  "endLine": 938,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    _mi_warning_message(\"failed to reserve %zu GiB huge pages\\n\", pages);\n    return ENOMEM;\n  }\n  _mi_verbose_message(\"numa node %i: reserved %zu GiB huge pages (of the %zu GiB requested)\\n\", numa_node, pages_reserved, pages);\n\n  if (!mi_manage_os_memory_ex2(p, hsize, true, numa_node, exclusive, memid, arena_id)) {\n    _mi_os_free(p, hsize, memid, &_mi_stats_main);\n",
                    "rendered": {
                      "text": "    _mi_warning_message(\"failed to reserve %zu GiB huge pages\\n\", pages);\n    return ENOMEM;\n  }\n  _mi_verbose_message(\"numa node %i: reserved %zu GiB huge pages (of the %zu GiB requested)\\n\", numa_node, pages_reserved, pages);\n\n  if (!mi_manage_os_memory_ex2(p, hsize, true, numa_node, exclusive, memid, arena_id)) {\n    _mi_os_free(p, hsize, memid, &_mi_stats_main);\n",
                      "markdown": "`    _mi_warning_message(\"failed to reserve %zu GiB huge pages\\n\", pages);\n    return ENOMEM;\n  }\n  _mi_verbose_message(\"numa node %i: reserved %zu GiB huge pages (of the %zu GiB requested)\\n\", numa_node, pages_reserved, pages);\n\n  if (!mi_manage_os_memory_ex2(p, hsize, true, numa_node, exclusive, memid, arena_id)) {\n    _mi_os_free(p, hsize, memid, &_mi_stats_main);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/arena.c"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 8,
                  "endLine": 165,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  const size_t oversize = size + alignment - 1;\n  if (toplow + oversize > MI_ARENA_STATIC_MAX) return NULL;\n  const size_t oldtop = mi_atomic_add_acq_rel(&mi_arena_static_top, oversize);\n  size_t top = oldtop + oversize;\n  if (top > MI_ARENA_STATIC_MAX) {\n    // try to roll back, ok if this fails\n    mi_atomic_cas_strong_acq_rel(&mi_arena_static_top, &top, oldtop);\n",
                    "rendered": {
                      "text": "  const size_t oversize = size + alignment - 1;\n  if (toplow + oversize > MI_ARENA_STATIC_MAX) return NULL;\n  const size_t oldtop = mi_atomic_add_acq_rel(&mi_arena_static_top, oversize);\n  size_t top = oldtop + oversize;\n  if (top > MI_ARENA_STATIC_MAX) {\n    // try to roll back, ok if this fails\n    mi_atomic_cas_strong_acq_rel(&mi_arena_static_top, &top, oldtop);\n",
                      "markdown": "`  const size_t oversize = size + alignment - 1;\n  if (toplow + oversize > MI_ARENA_STATIC_MAX) return NULL;\n  const size_t oldtop = mi_atomic_add_acq_rel(&mi_arena_static_top, oversize);\n  size_t top = oldtop + oversize;\n  if (top > MI_ARENA_STATIC_MAX) {\n    // try to roll back, ok if this fails\n    mi_atomic_cas_strong_acq_rel(&mi_arena_static_top, &top, oldtop);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/test/test-stress.c"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 54,
                  "endLine": 136,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    uintptr_t items = (q[0] ^ cookie);\n    for (uintptr_t i = 0; i < items; i++) {\n      if ((q[i] ^ cookie) != items - i) {\n        fprintf(stderr, \"memory corruption at block %p at %zu\\n\", p, i);\n        abort();\n      }\n    }\n",
                    "rendered": {
                      "text": "    uintptr_t items = (q[0] ^ cookie);\n    for (uintptr_t i = 0; i < items; i++) {\n      if ((q[i] ^ cookie) != items - i) {\n        fprintf(stderr, \"memory corruption at block %p at %zu\\n\", p, i);\n        abort();\n      }\n    }\n",
                      "markdown": "`    uintptr_t items = (q[0] ^ cookie);\n    for (uintptr_t i = 0; i < items; i++) {\n      if ((q[i] ^ cookie) != items - i) {\n        fprintf(stderr, \"memory corruption at block %p at %zu\\n\", p, i);\n        abort();\n      }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/test/test-stress.c"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 42,
                  "endLine": 136,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    uintptr_t items = (q[0] ^ cookie);\n    for (uintptr_t i = 0; i < items; i++) {\n      if ((q[i] ^ cookie) != items - i) {\n        fprintf(stderr, \"memory corruption at block %p at %zu\\n\", p, i);\n        abort();\n      }\n    }\n",
                    "rendered": {
                      "text": "    uintptr_t items = (q[0] ^ cookie);\n    for (uintptr_t i = 0; i < items; i++) {\n      if ((q[i] ^ cookie) != items - i) {\n        fprintf(stderr, \"memory corruption at block %p at %zu\\n\", p, i);\n        abort();\n      }\n    }\n",
                      "markdown": "`    uintptr_t items = (q[0] ^ cookie);\n    for (uintptr_t i = 0; i < items; i++) {\n      if ((q[i] ^ cookie) != items - i) {\n        fprintf(stderr, \"memory corruption at block %p at %zu\\n\", p, i);\n        abort();\n      }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/pages.html"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 127,
                  "endLine": 114,
                  "endColumn": 151,
                  "snippet": {
                    "text": "ass=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"using.html\" target=\"_self\">Using the library</a></td><td class=\"desc\"></td></tr>\n<tr id=\"row_2_\" class=\"even\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"environment.html\" target=\"_self\">Environment Options</a></td><td class=\"desc\"></td></tr>\n<tr id=\"row_3_\" class=\"odd\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"overrides.html\" target=\"_self\">Overriding Malloc</a></td><td class=\"desc\"></td></tr>\n<tr id=\"row_4_\" class=\"e",
                    "rendered": {
                      "text": "ass=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"using.html\" target=\"_self\">Using the library</a></td><td class=\"desc\"></td></tr>\n<tr id=\"row_2_\" class=\"even\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"environment.html\" target=\"_self\">Environment Options</a></td><td class=\"desc\"></td></tr>\n<tr id=\"row_3_\" class=\"odd\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"overrides.html\" target=\"_self\">Overriding Malloc</a></td><td class=\"desc\"></td></tr>\n<tr id=\"row_4_\" class=\"e",
                      "markdown": "`ass=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"using.html\" target=\"_self\">Using the library</a></td><td class=\"desc\"></td></tr>\n<tr id=\"row_2_\" class=\"even\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"environment.html\" target=\"_self\">Environment Options</a></td><td class=\"desc\"></td></tr>\n<tr id=\"row_3_\" class=\"odd\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"overrides.html\" target=\"_self\">Overriding Malloc</a></td><td class=\"desc\"></td></tr>\n<tr id=\"row_4_\" class=\"e`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/pages.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__posix.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/using.html"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 222,
                  "endLine": 121,
                  "endColumn": 227,
                  "snippet": {
                    "text": "ec.push_back(some_struct());</div>\n</div><!-- fragment --><h3>Statistics</h3>\n<p>You can pass environment variables to print verbose messages (<code>MIMALLOC_VERBOSE=1</code>) and statistics (<code>MIMALLOC_SHOW_STATS=1</code>) (in the debug version): </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_SHOW_STATS=1 ./cfrac 175451865205073170563711388363</div>\n<div class=\"line\"> </div>\n<div class=\"line\">175451865205073170563711388363 = 374456281610909315237213 * 468551</div>\n<div class=\"line\"> </div>\n<div class=\"line\">heap stats:     peak      total      freed       unit</div>\n<div class=\"",
                    "rendered": {
                      "text": "ec.push_back(some_struct());</div>\n</div><!-- fragment --><h3>Statistics</h3>\n<p>You can pass environment variables to print verbose messages (<code>MIMALLOC_VERBOSE=1</code>) and statistics (<code>MIMALLOC_SHOW_STATS=1</code>) (in the debug version): </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_SHOW_STATS=1 ./cfrac 175451865205073170563711388363</div>\n<div class=\"line\"> </div>\n<div class=\"line\">175451865205073170563711388363 = 374456281610909315237213 * 468551</div>\n<div class=\"line\"> </div>\n<div class=\"line\">heap stats:     peak      total      freed       unit</div>\n<div class=\"",
                      "markdown": "`ec.push_back(some_struct());</div>\n</div><!-- fragment --><h3>Statistics</h3>\n<p>You can pass environment variables to print verbose messages (<code>MIMALLOC_VERBOSE=1</code>) and statistics (<code>MIMALLOC_SHOW_STATS=1</code>) (in the debug version): </p><div class=\"fragment\"><div class=\"line\">&gt; env MIMALLOC_SHOW_STATS=1 ./cfrac 175451865205073170563711388363</div>\n<div class=\"line\"> </div>\n<div class=\"line\">175451865205073170563711388363 = 374456281610909315237213 * 468551</div>\n<div class=\"line\"> </div>\n<div class=\"line\">heap stats:     peak      total      freed       unit</div>\n<div class=\"`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/using.html"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 65,
                  "endLine": 113,
                  "endColumn": 71,
                  "snippet": {
                    "text": "and <code>VirtualAlloc</code>) and can co-exist with other allocators linked to the same program. If you use <code>cmake</code>, you can simply use: </p><div class=\"fragment\"><div class=\"line\">find_package(mimalloc 2.1 REQUIRED)</div>\n</div><!-- fragment --><p> in your <code>CMakeLists.txt</code> to find a locally installed mimalloc. Then use either: </p><div class=\"fragment\"><div class=\"line\">target_link_libraries(myapp PUBLIC mimalloc)</div>\n</div><!-- fragment --><p> to link with the shared (dynamic) library, or: </p><div class=\"fragment\"><div class=\"line\">target_link_libraries(myapp PUBLIC mimal",
                    "rendered": {
                      "text": "and <code>VirtualAlloc</code>) and can co-exist with other allocators linked to the same program. If you use <code>cmake</code>, you can simply use: </p><div class=\"fragment\"><div class=\"line\">find_package(mimalloc 2.1 REQUIRED)</div>\n</div><!-- fragment --><p> in your <code>CMakeLists.txt</code> to find a locally installed mimalloc. Then use either: </p><div class=\"fragment\"><div class=\"line\">target_link_libraries(myapp PUBLIC mimalloc)</div>\n</div><!-- fragment --><p> to link with the shared (dynamic) library, or: </p><div class=\"fragment\"><div class=\"line\">target_link_libraries(myapp PUBLIC mimal",
                      "markdown": "`and <code>VirtualAlloc</code>) and can co-exist with other allocators linked to the same program. If you use <code>cmake</code>, you can simply use: </p><div class=\"fragment\"><div class=\"line\">find_package(mimalloc 2.1 REQUIRED)</div>\n</div><!-- fragment --><p> in your <code>CMakeLists.txt</code> to find a locally installed mimalloc. Then use either: </p><div class=\"fragment\"><div class=\"line\">target_link_libraries(myapp PUBLIC mimalloc)</div>\n</div><!-- fragment --><p> to link with the shared (dynamic) library, or: </p><div class=\"fragment\"><div class=\"line\">target_link_libraries(myapp PUBLIC mimal`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/using.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/index.html"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 133,
                  "endLine": 118,
                  "endColumn": 137,
                  "snippet": {
                    "text": "cation, encrypted free lists, etc. to protect against various heap vulnerabilities. The performance penalty is usually around 10% on average over our benchmarks.</li>\n<li><b>first-class heaps</b>: efficiently create and use multiple heaps to allocate across different regions. A heap can be destroyed at once instead of deallocating each object separately.</li>\n<li><b>bounded</b>: it does not suffer from <em>blowup</em> [1], has bounded worst-case allocation times (<em>wcat</em>) (upto OS primitives), bounded space overhead (~0.2% meta-data, with low internal fragmentation), and has no internal poin",
                    "rendered": {
                      "text": "cation, encrypted free lists, etc. to protect against various heap vulnerabilities. The performance penalty is usually around 10% on average over our benchmarks.</li>\n<li><b>first-class heaps</b>: efficiently create and use multiple heaps to allocate across different regions. A heap can be destroyed at once instead of deallocating each object separately.</li>\n<li><b>bounded</b>: it does not suffer from <em>blowup</em> [1], has bounded worst-case allocation times (<em>wcat</em>) (upto OS primitives), bounded space overhead (~0.2% meta-data, with low internal fragmentation), and has no internal poin",
                      "markdown": "`cation, encrypted free lists, etc. to protect against various heap vulnerabilities. The performance penalty is usually around 10% on average over our benchmarks.</li>\n<li><b>first-class heaps</b>: efficiently create and use multiple heaps to allocate across different regions. A heap can be destroyed at once instead of deallocating each object separately.</li>\n<li><b>bounded</b>: it does not suffer from <em>blowup</em> [1], has bounded worst-case allocation times (<em>wcat</em>) (upto OS primitives), bounded space overhead (~0.2% meta-data, with low internal fragmentation), and has no internal poin`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/index.html"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 509,
                  "endLine": 113,
                  "endColumn": 513,
                  "snippet": {
                    "text": "ooks for a monotonic <em>heartbeat</em> and deferred freeing (for bounded worst-case times with reference counting). Partly due to its simplicity, mimalloc has been ported to many systems (Windows, macOS, Linux, WASM, various BSD's, Haiku, MUSL, etc) and has excellent support for dynamic overriding. At the same time, it is an industrial strength allocator that runs (very) large scale distributed services on thousands of machines with excellent worst case latencies.</li>\n<li><b>free list sharding</b>: instead of one big free list (per size class) we have many smaller lists per \"mimalloc page\" which",
                    "rendered": {
                      "text": "ooks for a monotonic <em>heartbeat</em> and deferred freeing (for bounded worst-case times with reference counting). Partly due to its simplicity, mimalloc has been ported to many systems (Windows, macOS, Linux, WASM, various BSD's, Haiku, MUSL, etc) and has excellent support for dynamic overriding. At the same time, it is an industrial strength allocator that runs (very) large scale distributed services on thousands of machines with excellent worst case latencies.</li>\n<li><b>free list sharding</b>: instead of one big free list (per size class) we have many smaller lists per \"mimalloc page\" which",
                      "markdown": "`ooks for a monotonic <em>heartbeat</em> and deferred freeing (for bounded worst-case times with reference counting). Partly due to its simplicity, mimalloc has been ported to many systems (Windows, macOS, Linux, WASM, various BSD's, Haiku, MUSL, etc) and has excellent support for dynamic overriding. At the same time, it is an industrial strength allocator that runs (very) large scale distributed services on thousands of machines with excellent worst case latencies.</li>\n<li><b>free list sharding</b>: instead of one big free list (per size class) we have many smaller lists per \"mimalloc page\" which`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/index.html"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 229,
                  "endLine": 120,
                  "endColumn": 235,
                  "snippet": {
                    "text": "as no internal points of contention using only atomic operations.</li>\n<li><b>fast</b>: In our benchmarks (see <a class=\"el\" href=\"bench.html\">below</a>), <em>mimalloc</em> outperforms other leading allocators (<em>jemalloc</em>, <em>tcmalloc</em>, <em>Hoard</em>, etc), and often uses less memory. A nice property is that it does consistently well over a wide range of benchmarks. There is also good huge OS page support for larger server programs.</li>\n</ul>\n<p>You can read more on the design of <em>mimalloc</em> in the <a href=\"https://www.microsoft.com/en-us/research/publication/mimalloc-free-list-s",
                    "rendered": {
                      "text": "as no internal points of contention using only atomic operations.</li>\n<li><b>fast</b>: In our benchmarks (see <a class=\"el\" href=\"bench.html\">below</a>), <em>mimalloc</em> outperforms other leading allocators (<em>jemalloc</em>, <em>tcmalloc</em>, <em>Hoard</em>, etc), and often uses less memory. A nice property is that it does consistently well over a wide range of benchmarks. There is also good huge OS page support for larger server programs.</li>\n</ul>\n<p>You can read more on the design of <em>mimalloc</em> in the <a href=\"https://www.microsoft.com/en-us/research/publication/mimalloc-free-list-s",
                      "markdown": "`as no internal points of contention using only atomic operations.</li>\n<li><b>fast</b>: In our benchmarks (see <a class=\"el\" href=\"bench.html\">below</a>), <em>mimalloc</em> outperforms other leading allocators (<em>jemalloc</em>, <em>tcmalloc</em>, <em>Hoard</em>, etc), and often uses less memory. A nice property is that it does consistently well over a wide range of benchmarks. There is also good huge OS page support for larger server programs.</li>\n</ul>\n<p>You can read more on the design of <em>mimalloc</em> in the <a href=\"https://www.microsoft.com/en-us/research/publication/mimalloc-free-list-s`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/index.html"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 217,
                  "endLine": 114,
                  "endColumn": 223,
                  "snippet": {
                    "text": "ibuted services on thousands of machines with excellent worst case latencies.</li>\n<li><b>free list sharding</b>: instead of one big free list (per size class) we have many smaller lists per \"mimalloc page\" which reduces fragmentation and increases locality &ndash; things that are allocated close in time get allocated close in memory. (A mimalloc page contains blocks of one size class and is usually 64KiB on a 64-bit system).</li>\n<li><b>free list multi-sharding</b>: the big idea! Not only do we shard the free list per mimalloc page, but for each page we have multiple free lists. In particular, ther",
                    "rendered": {
                      "text": "ibuted services on thousands of machines with excellent worst case latencies.</li>\n<li><b>free list sharding</b>: instead of one big free list (per size class) we have many smaller lists per \"mimalloc page\" which reduces fragmentation and increases locality &ndash; things that are allocated close in time get allocated close in memory. (A mimalloc page contains blocks of one size class and is usually 64KiB on a 64-bit system).</li>\n<li><b>free list multi-sharding</b>: the big idea! Not only do we shard the free list per mimalloc page, but for each page we have multiple free lists. In particular, ther",
                      "markdown": "`ibuted services on thousands of machines with excellent worst case latencies.</li>\n<li><b>free list sharding</b>: instead of one big free list (per size class) we have many smaller lists per \"mimalloc page\" which reduces fragmentation and increases locality &ndash; things that are allocated close in time get allocated close in memory. (A mimalloc page contains blocks of one size class and is usually 64KiB on a 64-bit system).</li>\n<li><b>free list multi-sharding</b>: the big idea! Not only do we shard the free list per mimalloc page, but for each page we have multiple free lists. In particular, ther`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/index.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/functions_vars.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/alloc-posix.c"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 37,
                  "endLine": 24,
                  "endColumn": 46,
                  "snippet": {
                    "text": "#include <stdlib.h>  // getenv\n\n#ifdef _MSC_VER\n#pragma warning(disable:4996)  // getenv _wgetenv\n#endif\n\n#ifndef EINVAL\n",
                    "rendered": {
                      "text": "#include <stdlib.h>  // getenv\n\n#ifdef _MSC_VER\n#pragma warning(disable:4996)  // getenv _wgetenv\n#endif\n\n#ifndef EINVAL\n",
                      "markdown": "`#include <stdlib.h>  // getenv\n\n#ifdef _MSC_VER\n#pragma warning(disable:4996)  // getenv _wgetenv\n#endif\n\n#ifndef EINVAL\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/include/mimalloc/internal.h"
                },
                "region": {
                  "startLine": 695,
                  "startColumn": 69,
                  "endLine": 695,
                  "endColumn": 73,
                  "snippet": {
                    "text": "  // check for free list corruption: is `next` at least in the same page?\n  // TODO: check if `next` is `page->block_size` aligned?\n  if mi_unlikely(next!=NULL && !mi_is_in_same_page(block, next)) {\n    _mi_error_message(EFAULT, \"corrupted free list entry of size %zub at %p: value 0x%zx\\n\", mi_page_block_size(page), block, (uintptr_t)next);\n    next = NULL;\n  }\n  return next;\n",
                    "rendered": {
                      "text": "  // check for free list corruption: is `next` at least in the same page?\n  // TODO: check if `next` is `page->block_size` aligned?\n  if mi_unlikely(next!=NULL && !mi_is_in_same_page(block, next)) {\n    _mi_error_message(EFAULT, \"corrupted free list entry of size %zub at %p: value 0x%zx\\n\", mi_page_block_size(page), block, (uintptr_t)next);\n    next = NULL;\n  }\n  return next;\n",
                      "markdown": "`  // check for free list corruption: is `next` at least in the same page?\n  // TODO: check if `next` is `page->block_size` aligned?\n  if mi_unlikely(next!=NULL && !mi_is_in_same_page(block, next)) {\n    _mi_error_message(EFAULT, \"corrupted free list entry of size %zub at %p: value 0x%zx\\n\", mi_page_block_size(page), block, (uintptr_t)next);\n    next = NULL;\n  }\n  return next;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/include/mimalloc/internal.h"
                },
                "region": {
                  "startLine": 460,
                  "startColumn": 11,
                  "endLine": 460,
                  "endColumn": 17,
                  "snippet": {
                    "text": "// used internally\nstatic inline size_t _mi_segment_page_idx_of(const mi_segment_t* segment, const void* p) {\n  // if (segment->page_size > MI_SEGMENT_SIZE) return &segment->pages[0];  // huge pages\n  ptrdiff_t diff = (uint8_t*)p - (uint8_t*)segment;\n  mi_assert_internal(diff >= 0 && (size_t)diff <= MI_SEGMENT_SIZE /* for huge alignment it can be equal */);\n  size_t idx = (size_t)diff >> segment->page_shift;\n  mi_assert_internal(idx < segment->capacity);\n",
                    "rendered": {
                      "text": "// used internally\nstatic inline size_t _mi_segment_page_idx_of(const mi_segment_t* segment, const void* p) {\n  // if (segment->page_size > MI_SEGMENT_SIZE) return &segment->pages[0];  // huge pages\n  ptrdiff_t diff = (uint8_t*)p - (uint8_t*)segment;\n  mi_assert_internal(diff >= 0 && (size_t)diff <= MI_SEGMENT_SIZE /* for huge alignment it can be equal */);\n  size_t idx = (size_t)diff >> segment->page_shift;\n  mi_assert_internal(idx < segment->capacity);\n",
                      "markdown": "`// used internally\nstatic inline size_t _mi_segment_page_idx_of(const mi_segment_t* segment, const void* p) {\n  // if (segment->page_size > MI_SEGMENT_SIZE) return &segment->pages[0];  // huge pages\n  ptrdiff_t diff = (uint8_t*)p - (uint8_t*)segment;\n  mi_assert_internal(diff >= 0 && (size_t)diff <= MI_SEGMENT_SIZE /* for huge alignment it can be equal */);\n  size_t idx = (size_t)diff >> segment->page_shift;\n  mi_assert_internal(idx < segment->capacity);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__heap.html"
                },
                "region": {
                  "startLine": 818,
                  "startColumn": 24,
                  "endLine": 818,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Duplicate a string of at most length <em>n</em> in a specific heap. </p>\n<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"group__malloc.html#ga486d0d26b3b3794f6d1cdb41a9aed92d\" title=\"Allocate and duplicate a string up to n bytes.\">mi_strndup()</a> </dd></dl>\n\n</div>\n",
                    "rendered": {
                      "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Duplicate a string of at most length <em>n</em> in a specific heap. </p>\n<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"group__malloc.html#ga486d0d26b3b3794f6d1cdb41a9aed92d\" title=\"Allocate and duplicate a string up to n bytes.\">mi_strndup()</a> </dd></dl>\n\n</div>\n",
                      "markdown": "`      </table>\n</div><div class=\"memdoc\">\n\n<p>Duplicate a string of at most length <em>n</em> in a specific heap. </p>\n<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"group__malloc.html#ga486d0d26b3b3794f6d1cdb41a9aed92d\" title=\"Allocate and duplicate a string up to n bytes.\">mi_strndup()</a> </dd></dl>\n\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__heap.html"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 132,
                  "endLine": 162,
                  "endColumn": 136,
                  "snippet": {
                    "text": "d224df78f1fbee942df8adf023e12cf3\">mi_heap_strndup</a> (<a class=\"el\" href=\"#ga34a47cde5a5b38c29f1aa3c5e76943c2\">mi_heap_t</a> *heap, const char *s, size_t n)</td></tr>\n<tr class=\"memdesc:gad224df78f1fbee942df8adf023e12cf3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Duplicate a string of at most length <em>n</em> in a specific heap.  <br /></td></tr>\n<tr class=\"separator:gad224df78f1fbee942df8adf023e12cf3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ga55545a3ec6da29c5b4f62e540ecac1e2\" id=\"r_ga55545a3ec6da29c5b4f62e540ecac1e2\"><td class=\"memItemLeft\" align=\"",
                    "rendered": {
                      "text": "d224df78f1fbee942df8adf023e12cf3\">mi_heap_strndup</a> (<a class=\"el\" href=\"#ga34a47cde5a5b38c29f1aa3c5e76943c2\">mi_heap_t</a> *heap, const char *s, size_t n)</td></tr>\n<tr class=\"memdesc:gad224df78f1fbee942df8adf023e12cf3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Duplicate a string of at most length <em>n</em> in a specific heap.  <br /></td></tr>\n<tr class=\"separator:gad224df78f1fbee942df8adf023e12cf3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ga55545a3ec6da29c5b4f62e540ecac1e2\" id=\"r_ga55545a3ec6da29c5b4f62e540ecac1e2\"><td class=\"memItemLeft\" align=\"",
                      "markdown": "`d224df78f1fbee942df8adf023e12cf3\">mi_heap_strndup</a> (<a class=\"el\" href=\"#ga34a47cde5a5b38c29f1aa3c5e76943c2\">mi_heap_t</a> *heap, const char *s, size_t n)</td></tr>\n<tr class=\"memdesc:gad224df78f1fbee942df8adf023e12cf3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Duplicate a string of at most length <em>n</em> in a specific heap.  <br /></td></tr>\n<tr class=\"separator:gad224df78f1fbee942df8adf023e12cf3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ga55545a3ec6da29c5b4f62e540ecac1e2\" id=\"r_ga55545a3ec6da29c5b4f62e540ecac1e2\"><td class=\"memItemLeft\" align=\"`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__heap.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/navtree.css"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 9,
                  "endLine": 6,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  padding:4px;\n}\n\n#nav-tree ul {\n  list-style:none outside none;\n  margin:0px;\n  padding:0px;\n",
                    "rendered": {
                      "text": "  padding:4px;\n}\n\n#nav-tree ul {\n  list-style:none outside none;\n  margin:0px;\n  padding:0px;\n",
                      "markdown": "`  padding:4px;\n}\n\n#nav-tree ul {\n  list-style:none outside none;\n  margin:0px;\n  padding:0px;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 9049,
                  "endLine": 34,
                  "endColumn": 9054,
                  "snippet": {
                    "text": "},isTouchMode:function(){return!mouse||this.opts.noMouseOver||this.isCollapsible()},itemActivate:function(t,e){var i=t.closest(\"ul\"),s=i.dataSM(\"level\");if(s>1&&(!this.activatedItems[s-2]||this.activatedItems[s-2][0]!=i.dataSM(\"parent-a\")[0])){var o=this;$(i.parentsUntil(\"[data-smartmenus-id]\",\"ul\").get().reverse()).add(i).each(function(){o.itemActivate($(this).dataSM(\"parent-a\"))})}if((!this.isCollapsible()||e)&&this.menuHideSubMenus(this.activatedItems[s-1]&&this.activatedItems[s-1][0]==t[0]?s:s-1),this.activatedItems[s-1]=t,this.$root.triggerHandler(\"activate.smapi\",t[0])!==!1){var a=t.dataSM(\"s",
                    "rendered": {
                      "text": "},isTouchMode:function(){return!mouse||this.opts.noMouseOver||this.isCollapsible()},itemActivate:function(t,e){var i=t.closest(\"ul\"),s=i.dataSM(\"level\");if(s>1&&(!this.activatedItems[s-2]||this.activatedItems[s-2][0]!=i.dataSM(\"parent-a\")[0])){var o=this;$(i.parentsUntil(\"[data-smartmenus-id]\",\"ul\").get().reverse()).add(i).each(function(){o.itemActivate($(this).dataSM(\"parent-a\"))})}if((!this.isCollapsible()||e)&&this.menuHideSubMenus(this.activatedItems[s-1]&&this.activatedItems[s-1][0]==t[0]?s:s-1),this.activatedItems[s-1]=t,this.$root.triggerHandler(\"activate.smapi\",t[0])!==!1){var a=t.dataSM(\"s",
                      "markdown": "`},isTouchMode:function(){return!mouse||this.opts.noMouseOver||this.isCollapsible()},itemActivate:function(t,e){var i=t.closest(\"ul\"),s=i.dataSM(\"level\");if(s>1&&(!this.activatedItems[s-2]||this.activatedItems[s-2][0]!=i.dataSM(\"parent-a\")[0])){var o=this;$(i.parentsUntil(\"[data-smartmenus-id]\",\"ul\").get().reverse()).add(i).each(function(){o.itemActivate($(this).dataSM(\"parent-a\"))})}if((!this.isCollapsible()||e)&&this.menuHideSubMenus(this.activatedItems[s-1]&&this.activatedItems[s-1][0]==t[0]?s:s-1),this.activatedItems[s-1]=t,this.$root.triggerHandler(\"activate.smapi\",t[0])!==!1){var a=t.dataSM(\"s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 2250,
                  "endLine": 14,
                  "endColumn": 2255,
                  "snippet": {
                    "text": "],k[h])-Math.min(l[b],k[b])};$.Tween.propHooks.scrollLeft=$.Tween.propHooks.scrollTop={get:function(a){return $(a.elem)[a.prop]()}, set:function(a){var d=this.get(a);if(a.options.interrupt&&a._last&&a._last!==d)return $(a.elem).stop();var b=Math.round(a.now);d!==b&&($(a.elem)[a.prop](b),a._last=this.get(a))}};return p});\n/*!\n PowerTip v1.3.1 (2018-04-15)\n https://stevenbenner.github.io/jquery-powertip/\n Copyright (c) 2018 Steven Benner (http://stevenbenner.com/).\n Released under MIT license.\n https://raw.github.com/stevenbenner/jquery-powertip/master/LICENSE.txt\n*/\n(function(root,factory){if(typeof",
                    "rendered": {
                      "text": "],k[h])-Math.min(l[b],k[b])};$.Tween.propHooks.scrollLeft=$.Tween.propHooks.scrollTop={get:function(a){return $(a.elem)[a.prop]()}, set:function(a){var d=this.get(a);if(a.options.interrupt&&a._last&&a._last!==d)return $(a.elem).stop();var b=Math.round(a.now);d!==b&&($(a.elem)[a.prop](b),a._last=this.get(a))}};return p});\n/*!\n PowerTip v1.3.1 (2018-04-15)\n https://stevenbenner.github.io/jquery-powertip/\n Copyright (c) 2018 Steven Benner (http://stevenbenner.com/).\n Released under MIT license.\n https://raw.github.com/stevenbenner/jquery-powertip/master/LICENSE.txt\n*/\n(function(root,factory){if(typeof",
                      "markdown": "`],k[h])-Math.min(l[b],k[b])};$.Tween.propHooks.scrollLeft=$.Tween.propHooks.scrollTop={get:function(a){return $(a.elem)[a.prop]()}, set:function(a){var d=this.get(a);if(a.options.interrupt&&a._last&&a._last!==d)return $(a.elem).stop();var b=Math.round(a.now);d!==b&&($(a.elem)[a.prop](b),a._last=this.get(a))}};return p});\n/*!\n PowerTip v1.3.1 (2018-04-15)\n https://stevenbenner.github.io/jquery-powertip/\n Copyright (c) 2018 Steven Benner (http://stevenbenner.com/).\n Released under MIT license.\n https://raw.github.com/stevenbenner/jquery-powertip/master/LICENSE.txt\n*/\n(function(root,factory){if(typeof`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 2108,
                  "endLine": 14,
                  "endColumn": 2113,
                  "snippet": {
                    "text": "b;if(!n(a))return a[h]-$(a)[b.toLowerCase()]();var b=\"client\"+b,k=a.ownerDocument||a.document,l=k.documentElement,k=k.body;return Math.max(l[h],k[h])-Math.min(l[b],k[b])};$.Tween.propHooks.scrollLeft=$.Tween.propHooks.scrollTop={get:function(a){return $(a.elem)[a.prop]()}, set:function(a){var d=this.get(a);if(a.options.interrupt&&a._last&&a._last!==d)return $(a.elem).stop();var b=Math.round(a.now);d!==b&&($(a.elem)[a.prop](b),a._last=this.get(a))}};return p});\n/*!\n PowerTip v1.3.1 (2018-04-15)\n https://stevenbenner.github.io/jquery-powertip/\n Copyright (c) 2018 Steven Benner (http://stevenbenner.co",
                    "rendered": {
                      "text": "b;if(!n(a))return a[h]-$(a)[b.toLowerCase()]();var b=\"client\"+b,k=a.ownerDocument||a.document,l=k.documentElement,k=k.body;return Math.max(l[h],k[h])-Math.min(l[b],k[b])};$.Tween.propHooks.scrollLeft=$.Tween.propHooks.scrollTop={get:function(a){return $(a.elem)[a.prop]()}, set:function(a){var d=this.get(a);if(a.options.interrupt&&a._last&&a._last!==d)return $(a.elem).stop();var b=Math.round(a.now);d!==b&&($(a.elem)[a.prop](b),a._last=this.get(a))}};return p});\n/*!\n PowerTip v1.3.1 (2018-04-15)\n https://stevenbenner.github.io/jquery-powertip/\n Copyright (c) 2018 Steven Benner (http://stevenbenner.co",
                      "markdown": "`b;if(!n(a))return a[h]-$(a)[b.toLowerCase()]();var b=\"client\"+b,k=a.ownerDocument||a.document,l=k.documentElement,k=k.body;return Math.max(l[h],k[h])-Math.min(l[b],k[b])};$.Tween.propHooks.scrollLeft=$.Tween.propHooks.scrollTop={get:function(a){return $(a.elem)[a.prop]()}, set:function(a){var d=this.get(a);if(a.options.interrupt&&a._last&&a._last!==d)return $(a.elem).stop();var b=Math.round(a.now);d!==b&&($(a.elem)[a.prop](b),a._last=this.get(a))}};return p});\n/*!\n PowerTip v1.3.1 (2018-04-15)\n https://stevenbenner.github.io/jquery-powertip/\n Copyright (c) 2018 Steven Benner (http://stevenbenner.co`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38317,
                  "endLine": 8,
                  "endColumn": 38322,
                  "snippet": {
                    "text": "dClass(this.options.ghost),t.ghost.appendTo(t.helper)},resize:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.ghost.css({position:\"relative\",height:t.size.height,width:t.size.width})},stop:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),y.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var t,e=y(this).resizable(\"instance\"),i=e.options,s=e.size,n=e.originalSize,o=e.originalPosition,h=e.axis,a=\"number\"==typeof i.grid?[i.grid,i.grid]:i.grid,r=a[0]||1,l=a[1]||1,u=Math.round((s.width-n.width)/r)*r,p=Math.round((s.height-n.hei",
                    "rendered": {
                      "text": "dClass(this.options.ghost),t.ghost.appendTo(t.helper)},resize:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.ghost.css({position:\"relative\",height:t.size.height,width:t.size.width})},stop:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),y.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var t,e=y(this).resizable(\"instance\"),i=e.options,s=e.size,n=e.originalSize,o=e.originalPosition,h=e.axis,a=\"number\"==typeof i.grid?[i.grid,i.grid]:i.grid,r=a[0]||1,l=a[1]||1,u=Math.round((s.width-n.width)/r)*r,p=Math.round((s.height-n.hei",
                      "markdown": "`dClass(this.options.ghost),t.ghost.appendTo(t.helper)},resize:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.ghost.css({position:\"relative\",height:t.size.height,width:t.size.width})},stop:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),y.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var t,e=y(this).resizable(\"instance\"),i=e.options,s=e.size,n=e.originalSize,o=e.originalPosition,h=e.axis,a=\"number\"==typeof i.grid?[i.grid,i.grid]:i.grid,r=a[0]||1,l=a[1]||1,u=Math.round((s.width-n.width)/r)*r,p=Math.round((s.height-n.hei`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38290,
                  "endLine": 8,
                  "endColumn": 38295,
                  "snippet": {
                    "text": "t.options.ghost&&t.ghost.addClass(this.options.ghost),t.ghost.appendTo(t.helper)},resize:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.ghost.css({position:\"relative\",height:t.size.height,width:t.size.width})},stop:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),y.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var t,e=y(this).resizable(\"instance\"),i=e.options,s=e.size,n=e.originalSize,o=e.originalPosition,h=e.axis,a=\"number\"==typeof i.grid?[i.grid,i.grid]:i.grid,r=a[0]||1,l=a[1]||1,u=Math.round((s.width-n.width)/r)*r,p",
                    "rendered": {
                      "text": "t.options.ghost&&t.ghost.addClass(this.options.ghost),t.ghost.appendTo(t.helper)},resize:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.ghost.css({position:\"relative\",height:t.size.height,width:t.size.width})},stop:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),y.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var t,e=y(this).resizable(\"instance\"),i=e.options,s=e.size,n=e.originalSize,o=e.originalPosition,h=e.axis,a=\"number\"==typeof i.grid?[i.grid,i.grid]:i.grid,r=a[0]||1,l=a[1]||1,u=Math.round((s.width-n.width)/r)*r,p",
                      "markdown": "`t.options.ghost&&t.ghost.addClass(this.options.ghost),t.ghost.appendTo(t.helper)},resize:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.ghost.css({position:\"relative\",height:t.size.height,width:t.size.width})},stop:function(){var t=y(this).resizable(\"instance\");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),y.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var t,e=y(this).resizable(\"instance\"),i=e.options,s=e.size,n=e.originalSize,o=e.originalPosition,h=e.axis,a=\"number\"==typeof i.grid?[i.grid,i.grid]:i.grid,r=a[0]||1,l=a[1]||1,u=Math.round((s.width-n.width)/r)*r,p`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 35529,
                  "endLine": 8,
                  "endColumn": 35534,
                  "snippet": {
                    "text": "e.width/e.aspectRatio,t=!1),e.position.left=i.helper?s.left:0),n.top<(e._helper?s.top:0)&&(e.size.height=e.size.height+(e._helper?e.position.top-s.top:e.position.top),o&&(e.size.width=e.size.height*e.aspectRatio,t=!1),e.position.top=e._helper?s.top:0),i=e.containerElement.get(0)===e.element.parent().get(0),n=/relative|absolute/.test(e.containerElement.css(\"position\")),i&&n?(e.offset.left=e.parentData.left+e.position.left,e.offset.top=e.parentData.top+e.position.top):(e.offset.left=e.element.offset().left,e.offset.top=e.element.offset().top),n=Math.abs(e.sizeDiff.width+(e._helper?e.offset.left-h.lef",
                    "rendered": {
                      "text": "e.width/e.aspectRatio,t=!1),e.position.left=i.helper?s.left:0),n.top<(e._helper?s.top:0)&&(e.size.height=e.size.height+(e._helper?e.position.top-s.top:e.position.top),o&&(e.size.width=e.size.height*e.aspectRatio,t=!1),e.position.top=e._helper?s.top:0),i=e.containerElement.get(0)===e.element.parent().get(0),n=/relative|absolute/.test(e.containerElement.css(\"position\")),i&&n?(e.offset.left=e.parentData.left+e.position.left,e.offset.top=e.parentData.top+e.position.top):(e.offset.left=e.element.offset().left,e.offset.top=e.element.offset().top),n=Math.abs(e.sizeDiff.width+(e._helper?e.offset.left-h.lef",
                      "markdown": "`e.width/e.aspectRatio,t=!1),e.position.left=i.helper?s.left:0),n.top<(e._helper?s.top:0)&&(e.size.height=e.size.height+(e._helper?e.position.top-s.top:e.position.top),o&&(e.size.width=e.size.height*e.aspectRatio,t=!1),e.position.top=e._helper?s.top:0),i=e.containerElement.get(0)===e.element.parent().get(0),n=/relative|absolute/.test(e.containerElement.css(\"position\")),i&&n?(e.offset.left=e.parentData.left+e.position.left,e.offset.top=e.parentData.top+e.position.top):(e.offset.left=e.element.offset().left,e.offset.top=e.element.offset().top),n=Math.abs(e.sizeDiff.width+(e._helper?e.offset.left-h.lef`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 35501,
                  "endLine": 8,
                  "endColumn": 35506,
                  "snippet": {
                    "text": "eft),o&&(e.size.height=e.size.width/e.aspectRatio,t=!1),e.position.left=i.helper?s.left:0),n.top<(e._helper?s.top:0)&&(e.size.height=e.size.height+(e._helper?e.position.top-s.top:e.position.top),o&&(e.size.width=e.size.height*e.aspectRatio,t=!1),e.position.top=e._helper?s.top:0),i=e.containerElement.get(0)===e.element.parent().get(0),n=/relative|absolute/.test(e.containerElement.css(\"position\")),i&&n?(e.offset.left=e.parentData.left+e.position.left,e.offset.top=e.parentData.top+e.position.top):(e.offset.left=e.element.offset().left,e.offset.top=e.element.offset().top),n=Math.abs(e.sizeDiff.width+(e",
                    "rendered": {
                      "text": "eft),o&&(e.size.height=e.size.width/e.aspectRatio,t=!1),e.position.left=i.helper?s.left:0),n.top<(e._helper?s.top:0)&&(e.size.height=e.size.height+(e._helper?e.position.top-s.top:e.position.top),o&&(e.size.width=e.size.height*e.aspectRatio,t=!1),e.position.top=e._helper?s.top:0),i=e.containerElement.get(0)===e.element.parent().get(0),n=/relative|absolute/.test(e.containerElement.css(\"position\")),i&&n?(e.offset.left=e.parentData.left+e.position.left,e.offset.top=e.parentData.top+e.position.top):(e.offset.left=e.element.offset().left,e.offset.top=e.element.offset().top),n=Math.abs(e.sizeDiff.width+(e",
                      "markdown": "`eft),o&&(e.size.height=e.size.width/e.aspectRatio,t=!1),e.position.left=i.helper?s.left:0),n.top<(e._helper?s.top:0)&&(e.size.height=e.size.height+(e._helper?e.position.top-s.top:e.position.top),o&&(e.size.width=e.size.height*e.aspectRatio,t=!1),e.position.top=e._helper?s.top:0),i=e.containerElement.get(0)===e.element.parent().get(0),n=/relative|absolute/.test(e.containerElement.css(\"position\")),i&&n?(e.offset.left=e.parentData.left+e.position.left,e.offset.top=e.parentData.top+e.position.top):(e.offset.left=e.element.offset().left,e.offset.top=e.element.offset().top),n=Math.abs(e.sizeDiff.width+(e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 34134,
                  "endLine": 8,
                  "endColumn": 34139,
                  "snippet": {
                    "text": "s&&s.length&&y(s[0]).css({width:t.width,height:t.height}),i._updateCache(t),i._propagate(\"resize\",e)}})}}),y.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var i,s,n=y(this).resizable(\"instance\"),t=n.options,e=n.element,o=t.containment,h=o instanceof y?o.get(0):/parent/.test(o)?e.parent().get(0):o;h&&(n.containerElement=y(h),/document/.test(o)||o===document?(n.containerOffset={left:0,top:0},n.containerPosition={left:0,top:0},n.parentData={element:y(document),left:0,top:0,width:y(document).width(),height:y(document).height()||document.body.parentNode.scrollHeight}):(i=y(h),s=[],y([\"Top\",\"",
                    "rendered": {
                      "text": "s&&s.length&&y(s[0]).css({width:t.width,height:t.height}),i._updateCache(t),i._propagate(\"resize\",e)}})}}),y.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var i,s,n=y(this).resizable(\"instance\"),t=n.options,e=n.element,o=t.containment,h=o instanceof y?o.get(0):/parent/.test(o)?e.parent().get(0):o;h&&(n.containerElement=y(h),/document/.test(o)||o===document?(n.containerOffset={left:0,top:0},n.containerPosition={left:0,top:0},n.parentData={element:y(document),left:0,top:0,width:y(document).width(),height:y(document).height()||document.body.parentNode.scrollHeight}):(i=y(h),s=[],y([\"Top\",\"",
                      "markdown": "`s&&s.length&&y(s[0]).css({width:t.width,height:t.height}),i._updateCache(t),i._propagate(\"resize\",e)}})}}),y.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var i,s,n=y(this).resizable(\"instance\"),t=n.options,e=n.element,o=t.containment,h=o instanceof y?o.get(0):/parent/.test(o)?e.parent().get(0):o;h&&(n.containerElement=y(h),/document/.test(o)||o===document?(n.containerOffset={left:0,top:0},n.containerPosition={left:0,top:0},n.parentData={element:y(document),left:0,top:0,width:y(document).width(),height:y(document).height()||document.body.parentNode.scrollHeight}):(i=y(h),s=[],y([\"Top\",\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 34099,
                  "endLine": 8,
                  "endColumn": 34104,
                  "snippet": {
                    "text": "parseFloat(i.element.css(\"left\"))};s&&s.length&&y(s[0]).css({width:t.width,height:t.height}),i._updateCache(t),i._propagate(\"resize\",e)}})}}),y.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var i,s,n=y(this).resizable(\"instance\"),t=n.options,e=n.element,o=t.containment,h=o instanceof y?o.get(0):/parent/.test(o)?e.parent().get(0):o;h&&(n.containerElement=y(h),/document/.test(o)||o===document?(n.containerOffset={left:0,top:0},n.containerPosition={left:0,top:0},n.parentData={element:y(document),left:0,top:0,width:y(document).width(),height:y(document).height()||document.body.parentNode.scr",
                    "rendered": {
                      "text": "parseFloat(i.element.css(\"left\"))};s&&s.length&&y(s[0]).css({width:t.width,height:t.height}),i._updateCache(t),i._propagate(\"resize\",e)}})}}),y.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var i,s,n=y(this).resizable(\"instance\"),t=n.options,e=n.element,o=t.containment,h=o instanceof y?o.get(0):/parent/.test(o)?e.parent().get(0):o;h&&(n.containerElement=y(h),/document/.test(o)||o===document?(n.containerOffset={left:0,top:0},n.containerPosition={left:0,top:0},n.parentData={element:y(document),left:0,top:0,width:y(document).width(),height:y(document).height()||document.body.parentNode.scr",
                      "markdown": "`parseFloat(i.element.css(\"left\"))};s&&s.length&&y(s[0]).css({width:t.width,height:t.height}),i._updateCache(t),i._propagate(\"resize\",e)}})}}),y.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var i,s,n=y(this).resizable(\"instance\"),t=n.options,e=n.element,o=t.containment,h=o instanceof y?o.get(0):/parent/.test(o)?e.parent().get(0):o;h&&(n.containerElement=y(h),/document/.test(o)||o===document?(n.containerOffset={left:0,top:0},n.containerPosition={left:0,top:0},n.parentData={element:y(document),left:0,top:0,width:y(document).width(),height:y(document).height()||document.body.parentNode.scr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 6947,
                  "endLine": 8,
                  "endColumn": 6952,
                  "snippet": {
                    "text": "-]*)\\s*(.*)$/),t=s[1]+a.eventNamespace,s=s[2];s?h.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=y(this.bindings.not(t).get()),this.focusable=y(this.focusable.not(t).get()),this.hoverable=y(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(y(t.currentTarget),null,\"ui-state-hover\")},mouseleave:function(t",
                    "rendered": {
                      "text": "-]*)\\s*(.*)$/),t=s[1]+a.eventNamespace,s=s[2];s?h.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=y(this.bindings.not(t).get()),this.focusable=y(this.focusable.not(t).get()),this.hoverable=y(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(y(t.currentTarget),null,\"ui-state-hover\")},mouseleave:function(t",
                      "markdown": "`-]*)\\s*(.*)$/),t=s[1]+a.eventNamespace,s=s[2];s?h.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=y(this.bindings.not(t).get()),this.focusable=y(this.focusable.not(t).get()),this.hoverable=y(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(y(t.currentTarget),null,\"ui-state-hover\")},mouseleave:function(t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 6901,
                  "endLine": 8,
                  "endColumn": 6906,
                  "snippet": {
                    "text": ".guid||i.guid||y.guid++);var s=t.match(/^([\\w:-]*)\\s*(.*)$/),t=s[1]+a.eventNamespace,s=s[2];s?h.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=y(this.bindings.not(t).get()),this.focusable=y(this.focusable.not(t).get()),this.hoverable=y(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(y(t.currentTarget)",
                    "rendered": {
                      "text": ".guid||i.guid||y.guid++);var s=t.match(/^([\\w:-]*)\\s*(.*)$/),t=s[1]+a.eventNamespace,s=s[2];s?h.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=y(this.bindings.not(t).get()),this.focusable=y(this.focusable.not(t).get()),this.hoverable=y(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(y(t.currentTarget)",
                      "markdown": "`.guid||i.guid||y.guid++);var s=t.match(/^([\\w:-]*)\\s*(.*)$/),t=s[1]+a.eventNamespace,s=s[2];s?h.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=y(this.bindings.not(t).get()),this.focusable=y(this.focusable.not(t).get()),this.hoverable=y(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(y(t.currentTarget)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 6855,
                  "endLine": 8,
                  "endColumn": 6860,
                  "snippet": {
                    "text": "rguments)}\"string\"!=typeof e&&(i.guid=e.guid=e.guid||i.guid||y.guid++);var s=t.match(/^([\\w:-]*)\\s*(.*)$/),t=s[1]+a.eventNamespace,s=s[2];s?h.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=y(this.bindings.not(t).get()),this.focusable=y(this.focusable.not(t).get()),this.hoverable=y(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter",
                    "rendered": {
                      "text": "rguments)}\"string\"!=typeof e&&(i.guid=e.guid=e.guid||i.guid||y.guid++);var s=t.match(/^([\\w:-]*)\\s*(.*)$/),t=s[1]+a.eventNamespace,s=s[2];s?h.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=y(this.bindings.not(t).get()),this.focusable=y(this.focusable.not(t).get()),this.hoverable=y(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter",
                      "markdown": "`rguments)}\"string\"!=typeof e&&(i.guid=e.guid=e.guid||i.guid||y.guid++);var s=t.match(/^([\\w:-]*)\\s*(.*)$/),t=s[1]+a.eventNamespace,s=s[2];s?h.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=y(this.bindings.not(t).get()),this.focusable=y(this.focusable.not(t).get()),this.hoverable=y(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5887,
                  "endLine": 8,
                  "endColumn": 5892,
                  "snippet": {
                    "text": "his.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.join(\" \")},_untrackClassesElement:function(i){var s=this;y.each(s.classesElementLookup,function(t,e){-1!==y.inArray(i.target,e)&&(s.classesElementLookup[t]=y(e.not(i.target).get()))}),this._off(y(i.target))},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){var n=\"string\"==typeof t||null===t,i={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s=\"boolean\"==typeof s?",
                    "rendered": {
                      "text": "his.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.join(\" \")},_untrackClassesElement:function(i){var s=this;y.each(s.classesElementLookup,function(t,e){-1!==y.inArray(i.target,e)&&(s.classesElementLookup[t]=y(e.not(i.target).get()))}),this._off(y(i.target))},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){var n=\"string\"==typeof t||null===t,i={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s=\"boolean\"==typeof s?",
                      "markdown": "`his.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.join(\" \")},_untrackClassesElement:function(i){var s=this;y.each(s.classesElementLookup,function(t,e){-1!==y.inArray(i.target,e)&&(s.classesElementLookup[t]=y(e.not(i.target).get()))}),this._off(y(i.target))},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){var n=\"string\"==typeof t||null===t,i={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s=\"boolean\"==typeof s?`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5463,
                  "endLine": 8,
                  "endColumn": 5468,
                  "snippet": {
                    "text": "sElementLookup[t[s]]||y(),i=n.add?(function(){var i=[];n.element.each(function(t,e){y.map(h.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),h._on(y(i),{remove:\"_untrackClassesElement\"})}(),y(y.uniqueSort(i.get().concat(n.element.get())))):y(i.not(n.element).get()),h.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=y.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.join(\" \")},_untrackClassesElement:function(i){var s=th",
                    "rendered": {
                      "text": "sElementLookup[t[s]]||y(),i=n.add?(function(){var i=[];n.element.each(function(t,e){y.map(h.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),h._on(y(i),{remove:\"_untrackClassesElement\"})}(),y(y.uniqueSort(i.get().concat(n.element.get())))):y(i.not(n.element).get()),h.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=y.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.join(\" \")},_untrackClassesElement:function(i){var s=th",
                      "markdown": "`sElementLookup[t[s]]||y(),i=n.add?(function(){var i=[];n.element.each(function(t,e){y.map(h.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),h._on(y(i),{remove:\"_untrackClassesElement\"})}(),y(y.uniqueSort(i.get().concat(n.element.get())))):y(i.not(n.element).get()),h.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=y.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.join(\" \")},_untrackClassesElement:function(i){var s=th`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5434,
                  "endLine": 8,
                  "endColumn": 5439,
                  "snippet": {
                    "text": "s=0;s<t.length;s++)i=h.classesElementLookup[t[s]]||y(),i=n.add?(function(){var i=[];n.element.each(function(t,e){y.map(h.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),h._on(y(i),{remove:\"_untrackClassesElement\"})}(),y(y.uniqueSort(i.get().concat(n.element.get())))):y(i.not(n.element).get()),h.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=y.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.join(\" \")},_untrackClasse",
                    "rendered": {
                      "text": "s=0;s<t.length;s++)i=h.classesElementLookup[t[s]]||y(),i=n.add?(function(){var i=[];n.element.each(function(t,e){y.map(h.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),h._on(y(i),{remove:\"_untrackClassesElement\"})}(),y(y.uniqueSort(i.get().concat(n.element.get())))):y(i.not(n.element).get()),h.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=y.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.join(\" \")},_untrackClasse",
                      "markdown": "`s=0;s<t.length;s++)i=h.classesElementLookup[t[s]]||y(),i=n.add?(function(){var i=[];n.element.each(function(t,e){y.map(h.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),h._on(y(i),{remove:\"_untrackClassesElement\"})}(),y(y.uniqueSort(i.get().concat(n.element.get())))):y(i.not(n.element).get()),h.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=y.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.join(\" \")},_untrackClasse`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5411,
                  "endLine": 8,
                  "endColumn": 5416,
                  "snippet": {
                    "text": "ction t(t,e){for(var i,s=0;s<t.length;s++)i=h.classesElementLookup[t[s]]||y(),i=n.add?(function(){var i=[];n.element.each(function(t,e){y.map(h.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),h._on(y(i),{remove:\"_untrackClassesElement\"})}(),y(y.uniqueSort(i.get().concat(n.element.get())))):y(i.not(n.element).get()),h.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=y.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.jo",
                    "rendered": {
                      "text": "ction t(t,e){for(var i,s=0;s<t.length;s++)i=h.classesElementLookup[t[s]]||y(),i=n.add?(function(){var i=[];n.element.each(function(t,e){y.map(h.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),h._on(y(i),{remove:\"_untrackClassesElement\"})}(),y(y.uniqueSort(i.get().concat(n.element.get())))):y(i.not(n.element).get()),h.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=y.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.jo",
                      "markdown": "`ction t(t,e){for(var i,s=0;s<t.length;s++)i=h.classesElementLookup[t[s]]||y(),i=n.add?(function(){var i=[];n.element.each(function(t,e){y.map(h.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),h._on(y(i),{remove:\"_untrackClassesElement\"})}(),y(y.uniqueSort(i.get().concat(n.element.get())))):y(i.not(n.element).get()),h.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=y.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(/\\S+/g)||[],!0),n.extra&&t(n.extra.match(/\\S+/g)||[]),o.jo`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4635,
                  "endLine": 8,
                  "endColumn": 4640,
                  "snippet": {
                    "text": "Option(e,t[e]);return this},_setOption:function(t,e){return\"classes\"===t&&this._setOptionClasses(e),this.options[t]=e,\"disabled\"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(t){var e,i,s;for(e in t)s=this.classesElementLookup[e],t[e]!==this.options.classes[e]&&s&&s.length&&(i=y(s.get()),this._removeClass(s,e),i.addClass(this._classes({element:i,keys:e,classes:t,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+\"-disabled\",null,!!t),t&&(this._removeClass(this.hoverable,null,\"ui-state-hover\"),this._removeClass(this.focusable,null,\"ui-st",
                    "rendered": {
                      "text": "Option(e,t[e]);return this},_setOption:function(t,e){return\"classes\"===t&&this._setOptionClasses(e),this.options[t]=e,\"disabled\"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(t){var e,i,s;for(e in t)s=this.classesElementLookup[e],t[e]!==this.options.classes[e]&&s&&s.length&&(i=y(s.get()),this._removeClass(s,e),i.addClass(this._classes({element:i,keys:e,classes:t,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+\"-disabled\",null,!!t),t&&(this._removeClass(this.hoverable,null,\"ui-state-hover\"),this._removeClass(this.focusable,null,\"ui-st",
                      "markdown": "`Option(e,t[e]);return this},_setOption:function(t,e){return\"classes\"===t&&this._setOptionClasses(e),this.options[t]=e,\"disabled\"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(t){var e,i,s;for(e in t)s=this.classesElementLookup[e],t[e]!==this.options.classes[e]&&s&&s.length&&(i=y(s.get()),this._removeClass(s,e),i.addClass(this._classes({element:i,keys:e,classes:t,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+\"-disabled\",null,!!t),t&&(this._removeClass(this.hoverable,null,\"ui-state-hover\"),this._removeClass(this.focusable,null,\"ui-st`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 2188,
                  "endLine": 8,
                  "endColumn": 2193,
                  "snippet": {
                    "text": "arguments,1),n=this;return t?this.length||\"instance\"!==i?this.each(function(){var t,e=y.data(this,h);return\"instance\"===i?(n=e,!1):e?\"function\"!=typeof e[i]||\"_\"===i.charAt(0)?y.error(\"no such method '\"+i+\"' for \"+o+\" widget instance\"):(t=e[i].apply(e,s))!==e&&void 0!==t?(n=t&&t.jquery?n.pushStack(t.get()):t,!1):void 0:y.error(\"cannot call methods on \"+o+\" prior to initialization; attempted to call method '\"+i+\"'\")}):n=void 0:(s.length&&(i=y.widget.extend.apply(null,[i].concat(s))),this.each(function(){var t=y.data(this,h);t?(t.option(i||{}),t._init&&t._init()):y.data(this,h,new e(i,this))})),n}},y",
                    "rendered": {
                      "text": "arguments,1),n=this;return t?this.length||\"instance\"!==i?this.each(function(){var t,e=y.data(this,h);return\"instance\"===i?(n=e,!1):e?\"function\"!=typeof e[i]||\"_\"===i.charAt(0)?y.error(\"no such method '\"+i+\"' for \"+o+\" widget instance\"):(t=e[i].apply(e,s))!==e&&void 0!==t?(n=t&&t.jquery?n.pushStack(t.get()):t,!1):void 0:y.error(\"cannot call methods on \"+o+\" prior to initialization; attempted to call method '\"+i+\"'\")}):n=void 0:(s.length&&(i=y.widget.extend.apply(null,[i].concat(s))),this.each(function(){var t=y.data(this,h);t?(t.option(i||{}),t._init&&t._init()):y.data(this,h,new e(i,this))})),n}},y",
                      "markdown": "`arguments,1),n=this;return t?this.length||\"instance\"!==i?this.each(function(){var t,e=y.data(this,h);return\"instance\"===i?(n=e,!1):e?\"function\"!=typeof e[i]||\"_\"===i.charAt(0)?y.error(\"no such method '\"+i+\"' for \"+o+\" widget instance\"):(t=e[i].apply(e,s))!==e&&void 0!==t?(n=t&&t.jquery?n.pushStack(t.get()):t,!1):void 0:y.error(\"cannot call methods on \"+o+\" prior to initialization; attempted to call method '\"+i+\"'\")}):n=void 0:(s.length&&(i=y.widget.extend.apply(null,[i].concat(s))),this.each(function(){var t=y.data(this,h);t?(t.option(i||{}),t._init&&t._init()):y.data(this,h,new e(i,this))})),n}},y`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 80218,
                  "endLine": 2,
                  "endColumn": 80223,
                  "snippet": {
                    "text": ",T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--S.active||S.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,\"json\")},getScript:function(e,t){return S.get(e,void 0,t,\"script\")}}),S.each([\"get\",\"post\"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e.headers)\"content-type\"===t.toLowerCase()&&(e.conten",
                    "rendered": {
                      "text": ",T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--S.active||S.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,\"json\")},getScript:function(e,t){return S.get(e,void 0,t,\"script\")}}),S.each([\"get\",\"post\"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e.headers)\"content-type\"===t.toLowerCase()&&(e.conten",
                      "markdown": "`,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--S.active||S.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,\"json\")},getScript:function(e,t){return S.get(e,void 0,t,\"script\")}}),S.each([\"get\",\"post\"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e.headers)\"content-type\"===t.toLowerCase()&&(e.conten`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 80166,
                  "endLine": 2,
                  "endColumn": 80171,
                  "snippet": {
                    "text": "atus=e,T.statusText=(t||l)+\"\",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--S.active||S.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,\"json\")},getScript:function(e,t){return S.get(e,void 0,t,\"script\")}}),S.each([\"get\",\"post\"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e",
                    "rendered": {
                      "text": "atus=e,T.statusText=(t||l)+\"\",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--S.active||S.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,\"json\")},getScript:function(e,t){return S.get(e,void 0,t,\"script\")}}),S.each([\"get\",\"post\"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e",
                      "markdown": "`atus=e,T.statusText=(t||l)+\"\",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--S.active||S.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,\"json\")},getScript:function(e,t){return S.get(e,void 0,t,\"script\")}}),S.each([\"get\",\"post\"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 74144,
                  "endLine": 2,
                  "endColumn": 74149,
                  "snippet": {
                    "text": "pe;return this.name&&!S(this).is(\":disabled\")&&kt.test(this.nodeName)&&!St.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=S(this).val();return null==n?null:Array.isArray(n)?S.map(n,function(e){return{name:t.name,value:e.replace(Et,\"\\r\\n\")}}):{name:t.name,value:n.replace(Et,\"\\r\\n\")}}).get()}});var Nt=/%20/g,jt=/#.*$/,Dt=/([?&])_=[^&]*/,qt=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Lt=/^(?:GET|HEAD)$/,Ht=/^\\/\\//,Ot={},Pt={},Rt=\"*/\".concat(\"*\"),Mt=E.createElement(\"a\");function It(o){return function(e,t){\"string\"!=typeof e&&(t=e,e=\"*\");var n,r=0,i=e.toLowerCase().match(P)||[];if(m(t))while(n=i[r++])\"",
                    "rendered": {
                      "text": "pe;return this.name&&!S(this).is(\":disabled\")&&kt.test(this.nodeName)&&!St.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=S(this).val();return null==n?null:Array.isArray(n)?S.map(n,function(e){return{name:t.name,value:e.replace(Et,\"\\r\\n\")}}):{name:t.name,value:n.replace(Et,\"\\r\\n\")}}).get()}});var Nt=/%20/g,jt=/#.*$/,Dt=/([?&])_=[^&]*/,qt=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Lt=/^(?:GET|HEAD)$/,Ht=/^\\/\\//,Ot={},Pt={},Rt=\"*/\".concat(\"*\"),Mt=E.createElement(\"a\");function It(o){return function(e,t){\"string\"!=typeof e&&(t=e,e=\"*\");var n,r=0,i=e.toLowerCase().match(P)||[];if(m(t))while(n=i[r++])\"",
                      "markdown": "`pe;return this.name&&!S(this).is(\":disabled\")&&kt.test(this.nodeName)&&!St.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=S(this).val();return null==n?null:Array.isArray(n)?S.map(n,function(e){return{name:t.name,value:e.replace(Et,\"\\r\\n\")}}):{name:t.name,value:n.replace(Et,\"\\r\\n\")}}).get()}});var Nt=/%20/g,jt=/#.*$/,Dt=/([?&])_=[^&]*/,qt=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Lt=/^(?:GET|HEAD)$/,Ht=/^\\/\\//,Ot={},Pt={},Rt=\"*/\".concat(\"*\"),Mt=E.createElement(\"a\");function It(o){return function(e,t){\"string\"!=typeof e&&(t=e,e=\"*\");var n,r=0,i=e.toLowerCase().match(P)||[];if(m(t))while(n=i[r++])\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 71493,
                  "endLine": 2,
                  "endColumn": 71498,
                  "snippet": {
                    "text": "ubble&&!x(n)){for(s=c.delegateType||d,mt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,\"events\")||Object.create(null))[e.type]&&Y.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),S.event.triggered=d,e.isPropagationStopped()&&f.a",
                    "rendered": {
                      "text": "ubble&&!x(n)){for(s=c.delegateType||d,mt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,\"events\")||Object.create(null))[e.type]&&Y.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),S.event.triggered=d,e.isPropagationStopped()&&f.a",
                      "markdown": "`ubble&&!x(n)){for(s=c.delegateType||d,mt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,\"events\")||Object.create(null))[e.type]&&Y.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),S.event.triggered=d,e.isPropagationStopped()&&f.a`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 71444,
                  "endLine": 2,
                  "endColumn": 71449,
                  "snippet": {
                    "text": "rigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,mt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,\"events\")||Object.create(null))[e.type]&&Y.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),",
                    "rendered": {
                      "text": "rigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,mt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,\"events\")||Object.create(null))[e.type]&&Y.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),",
                      "markdown": "`rigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,mt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,\"events\")||Object.create(null))[e.type]&&Y.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 70141,
                  "endLine": 2,
                  "endColumn": 70146,
                  "snippet": {
                    "text": "th;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,\"optgroup\"))){if(t=S(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=S.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<S.inArray(S.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),S.each([\"radio\",\"checkbox\"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})}),y.focu",
                    "rendered": {
                      "text": "th;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,\"optgroup\"))){if(t=S(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=S.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<S.inArray(S.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),S.each([\"radio\",\"checkbox\"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})}),y.focu",
                      "markdown": "`th;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,\"optgroup\"))){if(t=S(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=S.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<S.inArray(S.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),S.each([\"radio\",\"checkbox\"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})}),y.focu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 69534,
                  "endLine": 2,
                  "endColumn": 69539,
                  "snippet": {
                    "text": "typeof t?t+=\"\":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?\"\":e+\"\"})),(r=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&\"set\"in r&&void 0!==r.set(this,t,\"value\")||(this.value=t))})):t?(r=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&\"get\"in r&&void 0!==(e=r.get(t,\"value\"))?e:\"string\"==typeof(e=t.value)?e.replace(yt,\"\"):null==e?\"\":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,\"value\");return null!=t?t:ht(S.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a=\"select-one\"===e.type,s=a?null:[],u=a?o+1:i.le",
                    "rendered": {
                      "text": "typeof t?t+=\"\":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?\"\":e+\"\"})),(r=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&\"set\"in r&&void 0!==r.set(this,t,\"value\")||(this.value=t))})):t?(r=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&\"get\"in r&&void 0!==(e=r.get(t,\"value\"))?e:\"string\"==typeof(e=t.value)?e.replace(yt,\"\"):null==e?\"\":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,\"value\");return null!=t?t:ht(S.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a=\"select-one\"===e.type,s=a?null:[],u=a?o+1:i.le",
                      "markdown": "`typeof t?t+=\"\":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?\"\":e+\"\"})),(r=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&\"set\"in r&&void 0!==r.set(this,t,\"value\")||(this.value=t))})):t?(r=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&\"get\"in r&&void 0!==(e=r.get(t,\"value\"))?e:\"string\"==typeof(e=t.value)?e.replace(yt,\"\"):null==e?\"\":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,\"value\");return null!=t?t:ht(S.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a=\"select-one\"===e.type,s=a?null:[],u=a?o+1:i.le`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 68861,
                  "endLine": 2,
                  "endColumn": 68866,
                  "snippet": {
                    "text": "toggleClass(i.call(this,e,gt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=S(this),r=vt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&\"boolean\"!==o||((e=gt(this))&&Y.set(this,\"__className__\",e),this.setAttribute&&this.setAttribute(\"class\",e||!1===i?\"\":Y.get(this,\"__className__\")||\"\"))})},hasClass:function(e){var t,n,r=0;t=\" \"+e+\" \";while(n=this[r++])if(1===n.nodeType&&-1<(\" \"+ht(gt(n))+\" \").indexOf(t))return!0;return!1}});var yt=/\\r/g;S.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.n",
                    "rendered": {
                      "text": "toggleClass(i.call(this,e,gt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=S(this),r=vt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&\"boolean\"!==o||((e=gt(this))&&Y.set(this,\"__className__\",e),this.setAttribute&&this.setAttribute(\"class\",e||!1===i?\"\":Y.get(this,\"__className__\")||\"\"))})},hasClass:function(e){var t,n,r=0;t=\" \"+e+\" \";while(n=this[r++])if(1===n.nodeType&&-1<(\" \"+ht(gt(n))+\" \").indexOf(t))return!0;return!1}});var yt=/\\r/g;S.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.n",
                      "markdown": "`toggleClass(i.call(this,e,gt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=S(this),r=vt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&\"boolean\"!==o||((e=gt(this))&&Y.set(this,\"__className__\",e),this.setAttribute&&this.setAttribute(\"class\",e||!1===i?\"\":Y.get(this,\"__className__\")||\"\"))})},hasClass:function(e){var t,n,r=0;t=\" \"+e+\" \";while(n=this[r++])if(1===n.nodeType&&-1<(\" \"+ht(gt(n))+\" \").indexOf(t))return!0;return!1}});var yt=/\\r/g;S.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 67038,
                  "endLine": 2,
                  "endColumn": 67043,
                  "snippet": {
                    "text": "function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&S.isXMLDoc(e)||(t=S.propFix[t]||t,i=S.propHooks[t]),void 0!==n?i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&\"get\"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,\"tabindex\");return t?parseInt(t,10):pt.test(e.nodeName)||dt.test(e.nodeName)&&e.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.par",
                    "rendered": {
                      "text": "function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&S.isXMLDoc(e)||(t=S.propFix[t]||t,i=S.propHooks[t]),void 0!==n?i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&\"get\"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,\"tabindex\");return t?parseInt(t,10):pt.test(e.nodeName)||dt.test(e.nodeName)&&e.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.par",
                      "markdown": "`function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&S.isXMLDoc(e)||(t=S.propFix[t]||t,i=S.propHooks[t]),void 0!==n?i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&\"get\"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,\"tabindex\");return t?parseInt(t,10):pt.test(e.nodeName)||dt.test(e.nodeName)&&e.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.par`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 65809,
                  "endLine": 2,
                  "endColumn": 65814,
                  "snippet": {
                    "text": "8!==o&&2!==o)return\"undefined\"==typeof e.getAttribute?S.prop(e,t,n):(1===o&&S.isXMLDoc(e)||(i=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?ct:void 0)),void 0!==n?null===n?void S.removeAttr(e,t):i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+\"\"),n):i&&\"get\"in i&&null!==(r=i.get(e,t))?r:null==(r=S.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&\"radio\"===t&&A(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(P);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)",
                    "rendered": {
                      "text": "8!==o&&2!==o)return\"undefined\"==typeof e.getAttribute?S.prop(e,t,n):(1===o&&S.isXMLDoc(e)||(i=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?ct:void 0)),void 0!==n?null===n?void S.removeAttr(e,t):i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+\"\"),n):i&&\"get\"in i&&null!==(r=i.get(e,t))?r:null==(r=S.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&\"radio\"===t&&A(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(P);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)",
                      "markdown": "`8!==o&&2!==o)return\"undefined\"==typeof e.getAttribute?S.prop(e,t,n):(1===o&&S.isXMLDoc(e)||(i=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?ct:void 0)),void 0!==n?null===n?void S.removeAttr(e,t):i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+\"\"),n):i&&\"get\"in i&&null!==(r=i.get(e,t))?r:null==(r=S.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&\"radio\"===t&&A(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(P);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 63810,
                  "endLine": 2,
                  "endColumn": 63815,
                  "snippet": {
                    "text": "Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&it.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Y.get(this),n=t[a+\"queue\"],r=t[a+\"queueHooks\"],i=S.timers,o=n?n.length:0;for(t.finish=!0,S.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.",
                    "rendered": {
                      "text": "Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&it.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Y.get(this),n=t[a+\"queue\"],r=t[a+\"queueHooks\"],i=S.timers,o=n?n.length:0;for(t.finish=!0,S.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.",
                      "markdown": "`Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&it.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Y.get(this),n=t[a+\"queue\"],r=t[a+\"queueHooks\"],i=S.timers,o=n?n.length:0;for(t.finish=!0,S.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 63511,
                  "endLine": 2,
                  "endColumn": 63516,
                  "snippet": {
                    "text": "\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=S.timers,r=Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&it.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Y.get(t",
                    "rendered": {
                      "text": "\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=S.timers,r=Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&it.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Y.get(t",
                      "markdown": "`\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=S.timers,r=Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&it.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Y.get(t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 63194,
                  "endLine": 2,
                  "endColumn": 63199,
                  "snippet": {
                    "text": "(r.old)&&r.old.call(this),r.queue&&S.dequeue(this,r.queue)},r},S.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ae).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=S.isEmptyObject(t),o=S.speed(e,n,r),a=function(){var e=lt(this,S.extend({},t),o);(i||Y.get(this,\"finish\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=",
                    "rendered": {
                      "text": "(r.old)&&r.old.call(this),r.queue&&S.dequeue(this,r.queue)},r},S.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ae).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=S.isEmptyObject(t),o=S.speed(e,n,r),a=function(){var e=lt(this,S.extend({},t),o);(i||Y.get(this,\"finish\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=",
                      "markdown": "`(r.old)&&r.old.call(this),r.queue&&S.dequeue(this,r.queue)},r},S.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ae).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=S.isEmptyObject(t),o=S.speed(e,n,r),a=function(){var e=lt(this,S.extend({},t),o);(i||Y.get(this,\"finish\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 61754,
                  "endLine": 2,
                  "endColumn": 61759,
                  "snippet": {
                    "text": "t[r],rt.test(i)){if(delete t[r],o=o||\"toggle\"===i,i===(g?\"hide\":\"show\")){if(\"show\"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||S.style(e,r)}if((u=!S.isEmptyObject(t))||!S.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Y.get(e,\"display\")),\"none\"===(c=S.css(e,\"display\"))&&(l?c=l:(le([e],!0),l=e.style.display||l,c=S.css(e,\"display\"),le([e]))),(\"inline\"===c||\"inline-block\"===c&&null!=l)&&\"none\"===S.css(e,\"float\")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l=\"none\"===c?\"\":c)),h.display=\"inline-block\")),n.ov",
                    "rendered": {
                      "text": "t[r],rt.test(i)){if(delete t[r],o=o||\"toggle\"===i,i===(g?\"hide\":\"show\")){if(\"show\"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||S.style(e,r)}if((u=!S.isEmptyObject(t))||!S.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Y.get(e,\"display\")),\"none\"===(c=S.css(e,\"display\"))&&(l?c=l:(le([e],!0),l=e.style.display||l,c=S.css(e,\"display\"),le([e]))),(\"inline\"===c||\"inline-block\"===c&&null!=l)&&\"none\"===S.css(e,\"float\")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l=\"none\"===c?\"\":c)),h.display=\"inline-block\")),n.ov",
                      "markdown": "`t[r],rt.test(i)){if(delete t[r],o=o||\"toggle\"===i,i===(g?\"hide\":\"show\")){if(\"show\"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||S.style(e,r)}if((u=!S.isEmptyObject(t))||!S.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Y.get(e,\"display\")),\"none\"===(c=S.css(e,\"display\"))&&(l?c=l:(le([e],!0),l=e.style.display||l,c=S.css(e,\"display\"),le([e]))),(\"inline\"===c||\"inline-block\"===c&&null!=l)&&\"none\"===S.css(e,\"float\")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l=\"none\"===c?\"\":c)),h.display=\"inline-block\")),n.ov`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 61188,
                  "endLine": 2,
                  "endColumn": 61193,
                  "snippet": {
                    "text": "em,e,te.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=[\"*\"]):e=e.match(P);for(var n,r=0,i=e.length;r<i;r++)n=e[r],lt.tweeners[n]=lt.tweeners[n]||[],lt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f=\"width\"in t||\"height\"in t,p=this,d={},h=e.style,g=e.nodeType&&ae(e),v=Y.get(e,\"fxshow\");for(r in n.queue||(null==(a=S._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,S.queue(e,\"fx\").length||a.empty.fire()})})),t)if(i=t[r],rt.test(i)){if(delete t[r],o=o||\"t",
                    "rendered": {
                      "text": "em,e,te.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=[\"*\"]):e=e.match(P);for(var n,r=0,i=e.length;r<i;r++)n=e[r],lt.tweeners[n]=lt.tweeners[n]||[],lt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f=\"width\"in t||\"height\"in t,p=this,d={},h=e.style,g=e.nodeType&&ae(e),v=Y.get(e,\"fxshow\");for(r in n.queue||(null==(a=S._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,S.queue(e,\"fx\").length||a.empty.fire()})})),t)if(i=t[r],rt.test(i)){if(delete t[r],o=o||\"t",
                      "markdown": "`em,e,te.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=[\"*\"]):e=e.match(P);for(var n,r=0,i=e.length;r<i;r++)n=e[r],lt.tweeners[n]=lt.tweeners[n]||[],lt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f=\"width\"in t||\"height\"in t,p=this,d={},h=e.style,g=e.nodeType&&ae(e),v=Y.get(e,\"fxshow\");for(r in n.queue||(null==(a=S._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,S.queue(e,\"fx\").length||a.empty.fire()})})),t)if(i=t[r],rt.test(i)){if(delete t[r],o=o||\"t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 57767,
                  "endLine": 2,
                  "endColumn": 57772,
                  "snippet": {
                    "text": "prototype={constructor:Ke,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?\"\":\"px\")},cur:function(){var e=Ke.propHooks[this.prop];return e&&e.get?e.get(this):Ke.propHooks._default.get(this)},run:function(e){var t,n=Ke.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.s",
                    "rendered": {
                      "text": "prototype={constructor:Ke,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?\"\":\"px\")},cur:function(){var e=Ke.propHooks[this.prop];return e&&e.get?e.get(this):Ke.propHooks._default.get(this)},run:function(e){var t,n=Ke.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.s",
                      "markdown": "`prototype={constructor:Ke,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?\"\":\"px\")},cur:function(){var e=Ke.propHooks[this.prop];return e&&e.get?e.get(this):Ke.propHooks._default.get(this)},run:function(e){var t,n=Ke.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 57735,
                  "endLine": 2,
                  "endColumn": 57740,
                  "snippet": {
                    "text": "uments.length)}}),((S.Tween=Ke).prototype={constructor:Ke,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?\"\":\"px\")},cur:function(){var e=Ke.propHooks[this.prop];return e&&e.get?e.get(this):Ke.propHooks._default.get(this)},run:function(e){var t,n=Ke.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call",
                    "rendered": {
                      "text": "uments.length)}}),((S.Tween=Ke).prototype={constructor:Ke,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?\"\":\"px\")},cur:function(){var e=Ke.propHooks[this.prop];return e&&e.get?e.get(this):Ke.propHooks._default.get(this)},run:function(e){var t,n=Ke.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call",
                      "markdown": "`uments.length)}}),((S.Tween=Ke).prototype={constructor:Ke,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?\"\":\"px\")},cur:function(){var e=Ke.propHooks[this.prop];return e&&e.get?e.get(this):Ke.propHooks._default.get(this)},run:function(e){var t,n=Ke.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 56056,
                  "endLine": 2,
                  "endColumn": 56061,
                  "snippet": {
                    "text": "=i&&i[3]||(S.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=X(t);return Xe.test(t)||(t=ze(s)),(a=S.cssHooks[t]||S.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=We(e,t,r)),\"normal\"===i&&t in Ge&&(i=Ge[t]),\"\"===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),S.each([\"height\",\"width\"],function(e,u){S.cssHooks[u]={get:function(e,t,n){if(t)return!Ue.test(S.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().wid",
                    "rendered": {
                      "text": "=i&&i[3]||(S.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=X(t);return Xe.test(t)||(t=ze(s)),(a=S.cssHooks[t]||S.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=We(e,t,r)),\"normal\"===i&&t in Ge&&(i=Ge[t]),\"\"===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),S.each([\"height\",\"width\"],function(e,u){S.cssHooks[u]={get:function(e,t,n){if(t)return!Ue.test(S.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().wid",
                      "markdown": "`=i&&i[3]||(S.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=X(t);return Xe.test(t)||(t=ze(s)),(a=S.cssHooks[t]||S.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=We(e,t,r)),\"normal\"===i&&t in Ge&&(i=Ge[t]),\"\"===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),S.each([\"height\",\"width\"],function(e,u){S.cssHooks[u]={get:function(e,t,n){if(t)return!Ue.test(S.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().wid`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 55627,
                  "endLine": 2,
                  "endColumn": 55632,
                  "snippet": {
                    "text": "owStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=X(t),u=Xe.test(t),l=e.style;if(u||(t=ze(s)),a=S.cssHooks[t]||S.cssHooks[s],void 0===n)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];\"string\"===(o=typeof n)&&(i=te.exec(n))&&i[1]&&(n=se(e,t,i),o=\"number\"),null!=n&&n==n&&(\"number\"!==o||u||(n+=i&&i[3]||(S.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]",
                    "rendered": {
                      "text": "owStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=X(t),u=Xe.test(t),l=e.style;if(u||(t=ze(s)),a=S.cssHooks[t]||S.cssHooks[s],void 0===n)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];\"string\"===(o=typeof n)&&(i=te.exec(n))&&i[1]&&(n=se(e,t,i),o=\"number\"),null!=n&&n==n&&(\"number\"!==o||u||(n+=i&&i[3]||(S.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]",
                      "markdown": "`owStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=X(t),u=Xe.test(t),l=e.style;if(u||(t=ze(s)),a=S.cssHooks[t]||S.cssHooks[s],void 0===n)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];\"string\"===(o=typeof n)&&(i=te.exec(n))&&i[1]&&(n=se(e,t,i),o=\"number\"),null!=n&&n==n&&(\"number\"!==o||u||(n+=i&&i[3]||(S.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 51270,
                  "endLine": 2,
                  "endColumn": 51275,
                  "snippet": {
                    "text": "anData(ve(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,a){S.fn[e]=function(e){for(var t,n=[],r=S(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),S(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var Pe=new RegExp(\"^(\"+ee+\")(?!px)[a-z%]+$\",\"i\"),Re=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Me=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r",
                    "rendered": {
                      "text": "anData(ve(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,a){S.fn[e]=function(e){for(var t,n=[],r=S(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),S(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var Pe=new RegExp(\"^(\"+ee+\")(?!px)[a-z%]+$\",\"i\"),Re=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Me=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r",
                      "markdown": "`anData(ve(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,a){S.fn[e]=function(e){for(var t,n=[],r=S(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),S(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var Pe=new RegExp(\"^(\"+ee+\")(?!px)[a-z%]+$\",\"i\"),Re=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Me=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 47490,
                  "endLine": 2,
                  "endColumn": 47495,
                  "snippet": {
                    "text": "firstChild,\"tr\")&&S(e).children(\"tbody\")[0]||e}function De(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function qe(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Le(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(Y.hasData(e)&&(s=Y.get(e).events))for(i in Y.remove(t,\"handle events\"),s)for(n=0,r=s[i].length;n<r;n++)S.event.add(t,i,s[i][n]);Q.hasData(e)&&(o=Q.access(e),a=S.extend({},o),Q.set(t,a))}}function He(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&\"string\"==typeof d&&!y.checkClone&&Ae.test(d))",
                    "rendered": {
                      "text": "firstChild,\"tr\")&&S(e).children(\"tbody\")[0]||e}function De(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function qe(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Le(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(Y.hasData(e)&&(s=Y.get(e).events))for(i in Y.remove(t,\"handle events\"),s)for(n=0,r=s[i].length;n<r;n++)S.event.add(t,i,s[i][n]);Q.hasData(e)&&(o=Q.access(e),a=S.extend({},o),Q.set(t,a))}}function He(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&\"string\"==typeof d&&!y.checkClone&&Ae.test(d))",
                      "markdown": "`firstChild,\"tr\")&&S(e).children(\"tbody\")[0]||e}function De(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function qe(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Le(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(Y.hasData(e)&&(s=Y.get(e).events))for(i in Y.remove(t,\"handle events\"),s)for(n=0,r=s[i].length;n<r;n++)S.event.add(t,i,s[i][n]);Q.hasData(e)&&(o=Q.access(e),a=S.extend({},o),Q.set(t,a))}}function He(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&\"string\"==typeof d&&!y.checkClone&&Ae.test(d))`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 44379,
                  "endLine": 2,
                  "endColumn": 44384,
                  "snippet": {
                    "text": "ubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\",we),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Y.get(t,\"click\")||A(t,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&",
                    "rendered": {
                      "text": "ubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\",we),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Y.get(t,\"click\")||A(t,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&",
                      "markdown": "`ubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\",we),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Y.get(t,\"click\")||A(t,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 42517,
                  "endLine": 2,
                  "endColumn": 42522,
                  "snippet": {
                    "text": "all(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||S.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)S.event.remove(e,d+t[l],n,r,!0);S.isEmptyObject(u)&&Y.remove(e,\"handle events\")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=S.event.fix(e),l=(Y.get(this,\"events\")||Object.create(null))[u.type]||[],c=S.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=S.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.curren",
                    "rendered": {
                      "text": "all(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||S.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)S.event.remove(e,d+t[l],n,r,!0);S.isEmptyObject(u)&&Y.remove(e,\"handle events\")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=S.event.fix(e),l=(Y.get(this,\"events\")||Object.create(null))[u.type]||[],c=S.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=S.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.curren",
                      "markdown": "`all(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||S.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)S.event.remove(e,d+t[l],n,r,!0);S.isEmptyObject(u)&&Y.remove(e,\"handle events\")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=S.event.fix(e),l=(Y.get(this,\"events\")||Object.create(null))[u.type]||[],c=S.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=S.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.curren`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 41740,
                  "endLine": 2,
                  "endColumn": 41745,
                  "snippet": {
                    "text": "elegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),S.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.hasData(e)&&Y.get(e);if(v&&(u=v.events)){l=(t=(t||\"\").match(P)||[\"\"]).length;while(l--)if(d=g=(s=be.exec(t[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d){f=S.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=p.length;while(o--)c=p[o],!i",
                    "rendered": {
                      "text": "elegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),S.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.hasData(e)&&Y.get(e);if(v&&(u=v.events)){l=(t=(t||\"\").match(P)||[\"\"]).length;while(l--)if(d=g=(s=be.exec(t[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d){f=S.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=p.length;while(o--)c=p[o],!i",
                      "markdown": "`elegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),S.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.hasData(e)&&Y.get(e);if(v&&(u=v.events)){l=(t=(t||\"\").match(P)||[\"\"]).length;while(l--)if(d=g=(s=be.exec(t[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d){f=S.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=p.length;while(o--)c=p[o],!i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40772,
                  "endLine": 2,
                  "endColumn": 40777,
                  "snippet": {
                    "text": "diatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return\"undefined\"!=typeof S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=",
                    "rendered": {
                      "text": "diatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return\"undefined\"!=typeof S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=",
                      "markdown": "`diatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return\"undefined\"!=typeof S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40669,
                  "endLine": 2,
                  "endColumn": 40674,
                  "snippet": {
                    "text": "(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){",
                    "rendered": {
                      "text": "(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){",
                      "markdown": "`(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40410,
                  "endLine": 2,
                  "endColumn": 40415,
                  "snippet": {
                    "text": "d(this,t,i,r,n)})}function Se(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global",
                    "rendered": {
                      "text": "d(this,t,i,r,n)})}function Se(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global",
                      "markdown": "`d(this,t,i,r,n)})}function Se(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40225,
                  "endLine": 2,
                  "endColumn": 40230,
                  "snippet": {
                    "text": "r=n,n=void 0)),!1===i)i=Te;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return S().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=S.guid++)),e.each(function(){S.event.add(this,t,i,r,n)})}function Se(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.le",
                    "rendered": {
                      "text": "r=n,n=void 0)),!1===i)i=Te;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return S().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=S.guid++)),e.each(function(){S.event.add(this,t,i,r,n)})}function Se(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.le",
                      "markdown": "`r=n,n=void 0)),!1===i)i=Te;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return S().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=S.guid++)),e.each(function(){S.event.add(this,t,i,r,n)})}function Se(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.le`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 38706,
                  "endLine": 2,
                  "endColumn": 38711,
                  "snippet": {
                    "text": ",\"\",\"\"]};function ve(e,t){var n;return n=\"undefined\"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):\"undefined\"!=typeof e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&A(e,t)?S.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Y.set(e[n],\"globalEval\",!t||Y.get(t[n],\"globalEval\"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,y.option||(ge.optgroup=ge.option=[1,\"<select multiple='multiple'>\",\"</select>\"]);var me=/<|&#?\\w+;/;function xe(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o",
                    "rendered": {
                      "text": ",\"\",\"\"]};function ve(e,t){var n;return n=\"undefined\"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):\"undefined\"!=typeof e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&A(e,t)?S.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Y.set(e[n],\"globalEval\",!t||Y.get(t[n],\"globalEval\"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,y.option||(ge.optgroup=ge.option=[1,\"<select multiple='multiple'>\",\"</select>\"]);var me=/<|&#?\\w+;/;function xe(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o",
                      "markdown": "`,\"\",\"\"]};function ve(e,t){var n;return n=\"undefined\"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):\"undefined\"!=typeof e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&A(e,t)?S.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Y.set(e[n],\"globalEval\",!t||Y.get(t[n],\"globalEval\"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,y.option||(ge.optgroup=ge.option=[1,\"<select multiple='multiple'>\",\"</select>\"]);var me=/<|&#?\\w+;/;function xe(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 37070,
                  "endLine": 2,
                  "endColumn": 37075,
                  "snippet": {
                    "text": "(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,S.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ue={};function le(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?(\"none\"===n&&(l[c]=Y.get(r,\"display\")||null,l[c]||(r.style.display=\"\")),\"\"===r.style.display&&ae(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ue[s])||(o=a.body.appendChild(a.createElement(s)),u=S.css(o,\"display\"),o.parentNode.removeChild(o),\"none\"===u&&(u=\"block\"),ue[s]=u)))):\"none\"!==n&&(l[c]=\"none\",Y.set(",
                    "rendered": {
                      "text": "(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,S.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ue={};function le(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?(\"none\"===n&&(l[c]=Y.get(r,\"display\")||null,l[c]||(r.style.display=\"\")),\"\"===r.style.display&&ae(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ue[s])||(o=a.body.appendChild(a.createElement(s)),u=S.css(o,\"display\"),o.parentNode.removeChild(o),\"none\"===u&&(u=\"block\"),ue[s]=u)))):\"none\"!==n&&(l[c]=\"none\",Y.set(",
                      "markdown": "`(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,S.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ue={};function le(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?(\"none\"===n&&(l[c]=Y.get(r,\"display\")||null,l[c]||(r.style.display=\"\")),\"\"===r.style.display&&ae(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ue[s])||(o=a.body.appendChild(a.createElement(s)),u=S.css(o,\"display\"),o.parentNode.removeChild(o),\"none\"===u&&(u=\"block\"),ue[s]=u)))):\"none\"!==n&&(l[c]=\"none\",Y.set(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 35966,
                  "endLine": 2,
                  "endColumn": 35971,
                  "snippet": {
                    "text": "his,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=S.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";while(a--)(n=Y.get(o[a],e+\"queueHooks\"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var ee=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,te=new RegExp(\"^(?:([+-])=|)(\"+ee+\")([a-z%]*)$\",\"i\"),ne=[\"Top\",\"Right\",\"Bottom\",\"Left\"],re=E.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={co",
                    "rendered": {
                      "text": "his,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=S.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";while(a--)(n=Y.get(o[a],e+\"queueHooks\"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var ee=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,te=new RegExp(\"^(?:([+-])=|)(\"+ee+\")([a-z%]*)$\",\"i\"),ne=[\"Top\",\"Right\",\"Bottom\",\"Left\"],re=E.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={co",
                      "markdown": "`his,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=S.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";while(a--)(n=Y.get(o[a],e+\"queueHooks\"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var ee=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,te=new RegExp(\"^(?:([+-])=|)(\"+ee+\")([a-z%]*)$\",\"i\"),ne=[\"Top\",\"Right\",\"Bottom\",\"Left\"],re=E.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={co`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 35313,
                  "endLine": 2,
                  "endColumn": 35318,
                  "snippet": {
                    "text": "equeue:function(e,t){t=t||\"fx\";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return Y.get(e,n)||Y.access(e,n,{empty:S.Callbacks(\"once memory\").add(function(){Y.remove(e,[t+\"queue\",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return\"string\"!=typeof t&&(n=t,t=\"fx\",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(th",
                    "rendered": {
                      "text": "equeue:function(e,t){t=t||\"fx\";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return Y.get(e,n)||Y.access(e,n,{empty:S.Callbacks(\"once memory\").add(function(){Y.remove(e,[t+\"queue\",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return\"string\"!=typeof t&&(n=t,t=\"fx\",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(th",
                      "markdown": "`equeue:function(e,t){t=t||\"fx\";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return Y.get(e,n)||Y.access(e,n,{empty:S.Callbacks(\"once memory\").add(function(){Y.remove(e,[t+\"queue\",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return\"string\"!=typeof t&&(n=t,t=\"fx\",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(th`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 34928,
                  "endLine": 2,
                  "endColumn": 34933,
                  "snippet": {
                    "text": "f(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.access(e,t,S.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)",
                    "rendered": {
                      "text": "f(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.access(e,t,S.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)",
                      "markdown": "`f(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.access(e,t,S.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 34664,
                  "endLine": 2,
                  "endColumn": 34669,
                  "snippet": {
                    "text": "(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.ac",
                    "rendered": {
                      "text": "(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.ac",
                      "markdown": "`(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.ac`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 34386,
                  "endLine": 2,
                  "endColumn": 34391,
                  "snippet": {
                    "text": "function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(",
                    "rendered": {
                      "text": "function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(",
                      "markdown": "`function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 34360,
                  "endLine": 2,
                  "endColumn": 34365,
                  "snippet": {
                    "text": "ta(e)||Y.hasData(e)},data:function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.",
                    "rendered": {
                      "text": "ta(e)||Y.hasData(e)},data:function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.",
                      "markdown": "`ta(e)||Y.hasData(e)},data:function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 33279,
                  "endLine": 2,
                  "endColumn": 33284,
                  "snippet": {
                    "text": "urable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if(\"string\"==typeof t)i[X(t)]=n;else for(r in t)i[X(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&\"string\"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in r?[t]:t.match(P)||[]).length;while(n--)delete r[t[n]]}(void 0===t||S.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando",
                    "rendered": {
                      "text": "urable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if(\"string\"==typeof t)i[X(t)]=n;else for(r in t)i[X(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&\"string\"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in r?[t]:t.match(P)||[]).length;while(n--)delete r[t[n]]}(void 0===t||S.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando",
                      "markdown": "`urable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if(\"string\"==typeof t)i[X(t)]=n;else for(r in t)i[X(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&\"string\"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in r?[t]:t.match(P)||[]).length;while(n--)delete r[t[n]]}(void 0===t||S.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 26771,
                  "endLine": 2,
                  "endColumn": 26776,
                  "snippet": {
                    "text": "(n,e))){o.push(n);break}return this.pushStack(1<o.length?S.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?i.call(S(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,\"parentNode\")},parentsUntil:function(e,t,n){return h(e,\"parentNode\",n)},next:function(",
                    "rendered": {
                      "text": "(n,e))){o.push(n);break}return this.pushStack(1<o.length?S.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?i.call(S(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,\"parentNode\")},parentsUntil:function(e,t,n){return h(e,\"parentNode\",n)},next:function(",
                      "markdown": "`(n,e))){o.push(n);break}return this.pushStack(1<o.length?S.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?i.call(S(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,\"parentNode\")},parentsUntil:function(e,t,n){return h(e,\"parentNode\",n)},next:function(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 81906,
                  "endLine": 2,
                  "endColumn": 81914,
                  "snippet": {
                    "text": "on(){try{return new C.XMLHttpRequest}catch(e){}};var Bt={0:200,1223:204},$t=S.ajaxSettings.xhr();y.cors=!!$t&&\"withCredentials\"in $t,y.ajax=$t=!!$t,S.ajaxTransport(function(i){var o,a;if(y.cors||$t&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onab",
                    "rendered": {
                      "text": "on(){try{return new C.XMLHttpRequest}catch(e){}};var Bt={0:200,1223:204},$t=S.ajaxSettings.xhr();y.cors=!!$t&&\"withCredentials\"in $t,y.ajax=$t=!!$t,S.ajaxTransport(function(i){var o,a;if(y.cors||$t&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onab",
                      "markdown": "`on(){try{return new C.XMLHttpRequest}catch(e){}};var Bt={0:200,1223:204},$t=S.ajaxSettings.xhr();y.cors=!!$t&&\"withCredentials\"in $t,y.ajax=$t=!!$t,S.ajaxTransport(function(i){var o,a;if(y.cors||$t&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onab`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/jquery.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 19014,
                  "endLine": 2,
                  "endColumn": 19022,
                  "snippet": {
                    "text": "0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r=\"\";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&\"parentNode\"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.no",
                    "rendered": {
                      "text": "0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r=\"\";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&\"parentNode\"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.no",
                      "markdown": "`0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r=\"\";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&\"parentNode\"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.no`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 624,
                  "startColumn": 391,
                  "endLine": 624,
                  "endColumn": 395,
                  "snippet": {
                    "text": "79a0fb2de65d23f7333\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\">mi_option_reserve_os_memory</a></div><div class=\"ttdeci\">@ mi_option_reserve_os_memory</div><div class=\"ttdoc\">reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use m...</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:922</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116a",
                    "rendered": {
                      "text": "79a0fb2de65d23f7333\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\">mi_option_reserve_os_memory</a></div><div class=\"ttdeci\">@ mi_option_reserve_os_memory</div><div class=\"ttdoc\">reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use m...</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:922</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116a",
                      "markdown": "`79a0fb2de65d23f7333\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\">mi_option_reserve_os_memory</a></div><div class=\"ttdeci\">@ mi_option_reserve_os_memory</div><div class=\"ttdoc\">reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use m...</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:922</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116a`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 337,
                  "endLine": 622,
                  "endColumn": 341,
                  "snippet": {
                    "text": "html_ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\">mi_option_max_warnings</a></div><div class=\"ttdeci\">@ mi_option_max_warnings</div><div class=\"ttdoc\">issue at most N warning messages</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:917</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cafbf482",
                    "rendered": {
                      "text": "html_ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\">mi_option_max_warnings</a></div><div class=\"ttdeci\">@ mi_option_max_warnings</div><div class=\"ttdoc\">issue at most N warning messages</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:917</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cafbf482",
                      "markdown": "`html_ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\">mi_option_max_warnings</a></div><div class=\"ttdeci\">@ mi_option_max_warnings</div><div class=\"ttdoc\">issue at most N warning messages</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:917</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cafbf482`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 621,
                  "startColumn": 333,
                  "endLine": 621,
                  "endColumn": 337,
                  "snippet": {
                    "text": "ons_html_ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\">mi_option_max_errors</a></div><div class=\"ttdeci\">@ mi_option_max_errors</div><div class=\"ttdoc\">issue at most N error messages</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:916</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caf9595921",
                    "rendered": {
                      "text": "ons_html_ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\">mi_option_max_errors</a></div><div class=\"ttdeci\">@ mi_option_max_errors</div><div class=\"ttdoc\">issue at most N error messages</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:916</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caf9595921",
                      "markdown": "`ons_html_ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\">mi_option_max_errors</a></div><div class=\"ttdeci\">@ mi_option_max_errors</div><div class=\"ttdoc\">issue at most N error messages</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:916</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caf9595921`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 619,
                  "startColumn": 424,
                  "endLine": 619,
                  "endColumn": 428,
                  "snippet": {
                    "text": "ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\">mi_option_purge_delay</a></div><div class=\"ttdeci\">@ mi_option_purge_delay</div><div class=\"ttdoc\">memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all...</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:934</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc41827",
                    "rendered": {
                      "text": "ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\">mi_option_purge_delay</a></div><div class=\"ttdeci\">@ mi_option_purge_delay</div><div class=\"ttdoc\">memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all...</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:934</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc41827",
                      "markdown": "`ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\">mi_option_purge_delay</a></div><div class=\"ttdeci\">@ mi_option_purge_delay</div><div class=\"ttdoc\">memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all...</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:934</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc41827`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 617,
                  "startColumn": 386,
                  "endLine": 617,
                  "endColumn": 390,
                  "snippet": {
                    "text": "be3b0b9d0b82432c7bf41af2\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\">mi_option_reserve_huge_os_pages</a></div><div class=\"ttdeci\">@ mi_option_reserve_huge_os_pages</div><div class=\"ttdoc\">reserve N huge OS pages (1GiB pages) at startup</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:920</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be6590",
                    "rendered": {
                      "text": "be3b0b9d0b82432c7bf41af2\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\">mi_option_reserve_huge_os_pages</a></div><div class=\"ttdeci\">@ mi_option_reserve_huge_os_pages</div><div class=\"ttdoc\">reserve N huge OS pages (1GiB pages) at startup</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:920</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be6590",
                      "markdown": "`be3b0b9d0b82432c7bf41af2\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\">mi_option_reserve_huge_os_pages</a></div><div class=\"ttdeci\">@ mi_option_reserve_huge_os_pages</div><div class=\"ttdoc\">reserve N huge OS pages (1GiB pages) at startup</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:920</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be6590`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 379,
                  "endLine": 614,
                  "endColumn": 383,
                  "snippet": {
                    "text": "13e7926d4339d2aa6fbf61d4473fd5c\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\">mi_option_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">@ mi_option_reserve_huge_os_pages_at</div><div class=\"ttdoc\">Reserve N huge OS pages at a specific NUMA node N.</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:921</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa9ad90",
                    "rendered": {
                      "text": "13e7926d4339d2aa6fbf61d4473fd5c\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\">mi_option_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">@ mi_option_reserve_huge_os_pages_at</div><div class=\"ttdoc\">Reserve N huge OS pages at a specific NUMA node N.</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:921</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa9ad90",
                      "markdown": "`13e7926d4339d2aa6fbf61d4473fd5c\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\">mi_option_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">@ mi_option_reserve_huge_os_pages_at</div><div class=\"ttdoc\">Reserve N huge OS pages at a specific NUMA node N.</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:921</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa9ad90`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 600,
                  "startColumn": 383,
                  "endLine": 600,
                  "endColumn": 387,
                  "snippet": {
                    "text": "a18f6b659fcfaf44efb0bab1b74\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\">mi_option_use_numa_nodes</a></div><div class=\"ttdeci\">@ mi_option_use_numa_nodes</div><div class=\"ttdoc\">0 = use all available numa nodes, otherwise use at most N nodes.</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:935</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489",
                    "rendered": {
                      "text": "a18f6b659fcfaf44efb0bab1b74\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\">mi_option_use_numa_nodes</a></div><div class=\"ttdeci\">@ mi_option_use_numa_nodes</div><div class=\"ttdoc\">0 = use all available numa nodes, otherwise use at most N nodes.</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:935</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489",
                      "markdown": "`a18f6b659fcfaf44efb0bab1b74\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\">mi_option_use_numa_nodes</a></div><div class=\"ttdeci\">@ mi_option_use_numa_nodes</div><div class=\"ttdoc\">0 = use all available numa nodes, otherwise use at most N nodes.</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:935</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 312,
                  "endLine": 570,
                  "endColumn": 316,
                  "snippet": {
                    "text": "ttc\" id=\"agroup__heap_html_gad224df78f1fbee942df8adf023e12cf3\"><div class=\"ttname\"><a href=\"group__heap.html#gad224df78f1fbee942df8adf023e12cf3\">mi_heap_strndup</a></div><div class=\"ttdeci\">char * mi_heap_strndup(mi_heap_t *heap, const char *s, size_t n)</div><div class=\"ttdoc\">Duplicate a string of at most length n in a specific heap.</div></div>\n<div class=\"ttc\" id=\"agroup__heap_html_gae7cd171425bee04c683c65a3701f0b4a\"><div class=\"ttname\"><a href=\"group__heap.html#gae7cd171425bee04c683c65a3701f0b4a\">mi_heap_reallocf</a></div><div class=\"ttdeci\">void * mi_heap_reallocf(mi_heap_t *heap, void *p, s",
                    "rendered": {
                      "text": "ttc\" id=\"agroup__heap_html_gad224df78f1fbee942df8adf023e12cf3\"><div class=\"ttname\"><a href=\"group__heap.html#gad224df78f1fbee942df8adf023e12cf3\">mi_heap_strndup</a></div><div class=\"ttdeci\">char * mi_heap_strndup(mi_heap_t *heap, const char *s, size_t n)</div><div class=\"ttdoc\">Duplicate a string of at most length n in a specific heap.</div></div>\n<div class=\"ttc\" id=\"agroup__heap_html_gae7cd171425bee04c683c65a3701f0b4a\"><div class=\"ttname\"><a href=\"group__heap.html#gae7cd171425bee04c683c65a3701f0b4a\">mi_heap_reallocf</a></div><div class=\"ttdeci\">void * mi_heap_reallocf(mi_heap_t *heap, void *p, s",
                      "markdown": "`ttc\" id=\"agroup__heap_html_gad224df78f1fbee942df8adf023e12cf3\"><div class=\"ttname\"><a href=\"group__heap.html#gad224df78f1fbee942df8adf023e12cf3\">mi_heap_strndup</a></div><div class=\"ttdeci\">char * mi_heap_strndup(mi_heap_t *heap, const char *s, size_t n)</div><div class=\"ttdoc\">Duplicate a string of at most length n in a specific heap.</div></div>\n<div class=\"ttc\" id=\"agroup__heap_html_gae7cd171425bee04c683c65a3701f0b4a\"><div class=\"ttname\"><a href=\"group__heap.html#gae7cd171425bee04c683c65a3701f0b4a\">mi_heap_reallocf</a></div><div class=\"ttdeci\">void * mi_heap_reallocf(mi_heap_t *heap, void *p, s`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 526,
                  "startColumn": 407,
                  "endLine": 526,
                  "endColumn": 411,
                  "snippet": {
                    "text": "\"group__extended.html#ga7795a13d20087447281858d2c771cca1\">mi_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">int mi_reserve_huge_os_pages_at(size_t pages, int numa_node, size_t timeout_msecs)</div><div class=\"ttdoc\">Reserve pages of huge OS pages (1GiB) at a specific numa_node, but stops after at most timeout_msecs ...</div></div>\n<div class=\"ttc\" id=\"agroup__extended_html_ga7d862c2affd5790381da14eb102a364d\"><div class=\"ttname\"><a href=\"group__extended.html#ga7d862c2affd5790381da14eb102a364d\">mi_process_info</a></div><div class=\"ttdeci\">void mi_process_info(size_t *elapsed_msecs, size_t *use",
                    "rendered": {
                      "text": "\"group__extended.html#ga7795a13d20087447281858d2c771cca1\">mi_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">int mi_reserve_huge_os_pages_at(size_t pages, int numa_node, size_t timeout_msecs)</div><div class=\"ttdoc\">Reserve pages of huge OS pages (1GiB) at a specific numa_node, but stops after at most timeout_msecs ...</div></div>\n<div class=\"ttc\" id=\"agroup__extended_html_ga7d862c2affd5790381da14eb102a364d\"><div class=\"ttname\"><a href=\"group__extended.html#ga7d862c2affd5790381da14eb102a364d\">mi_process_info</a></div><div class=\"ttdeci\">void mi_process_info(size_t *elapsed_msecs, size_t *use",
                      "markdown": "`\"group__extended.html#ga7795a13d20087447281858d2c771cca1\">mi_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">int mi_reserve_huge_os_pages_at(size_t pages, int numa_node, size_t timeout_msecs)</div><div class=\"ttdoc\">Reserve pages of huge OS pages (1GiB) at a specific numa_node, but stops after at most timeout_msecs ...</div></div>\n<div class=\"ttc\" id=\"agroup__extended_html_ga7d862c2affd5790381da14eb102a364d\"><div class=\"ttname\"><a href=\"group__extended.html#ga7d862c2affd5790381da14eb102a364d\">mi_process_info</a></div><div class=\"ttdeci\">void mi_process_info(size_t *elapsed_msecs, size_t *use`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 526,
                  "startColumn": 366,
                  "endLine": 526,
                  "endColumn": 370,
                  "snippet": {
                    "text": "8d2c771cca1\"><div class=\"ttname\"><a href=\"group__extended.html#ga7795a13d20087447281858d2c771cca1\">mi_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">int mi_reserve_huge_os_pages_at(size_t pages, int numa_node, size_t timeout_msecs)</div><div class=\"ttdoc\">Reserve pages of huge OS pages (1GiB) at a specific numa_node, but stops after at most timeout_msecs ...</div></div>\n<div class=\"ttc\" id=\"agroup__extended_html_ga7d862c2affd5790381da14eb102a364d\"><div class=\"ttname\"><a href=\"group__extended.html#ga7d862c2affd5790381da14eb102a364d\">mi_process_info</a></div><div class=\"ttdeci\">void mi_proces",
                    "rendered": {
                      "text": "8d2c771cca1\"><div class=\"ttname\"><a href=\"group__extended.html#ga7795a13d20087447281858d2c771cca1\">mi_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">int mi_reserve_huge_os_pages_at(size_t pages, int numa_node, size_t timeout_msecs)</div><div class=\"ttdoc\">Reserve pages of huge OS pages (1GiB) at a specific numa_node, but stops after at most timeout_msecs ...</div></div>\n<div class=\"ttc\" id=\"agroup__extended_html_ga7d862c2affd5790381da14eb102a364d\"><div class=\"ttname\"><a href=\"group__extended.html#ga7d862c2affd5790381da14eb102a364d\">mi_process_info</a></div><div class=\"ttdeci\">void mi_proces",
                      "markdown": "`8d2c771cca1\"><div class=\"ttname\"><a href=\"group__extended.html#ga7795a13d20087447281858d2c771cca1\">mi_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">int mi_reserve_huge_os_pages_at(size_t pages, int numa_node, size_t timeout_msecs)</div><div class=\"ttdoc\">Reserve pages of huge OS pages (1GiB) at a specific numa_node, but stops after at most timeout_msecs ...</div></div>\n<div class=\"ttc\" id=\"agroup__extended_html_ga7d862c2affd5790381da14eb102a364d\"><div class=\"ttname\"><a href=\"group__extended.html#ga7d862c2affd5790381da14eb102a364d\">mi_process_info</a></div><div class=\"ttdeci\">void mi_proces`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 440,
                  "endLine": 514,
                  "endColumn": 444,
                  "snippet": {
                    "text": "b756fc0e8ec0b74fb58df50\">mi_reserve_huge_os_pages_interleave</a></div><div class=\"ttdeci\">int mi_reserve_huge_os_pages_interleave(size_t pages, size_t numa_nodes, size_t timeout_msecs)</div><div class=\"ttdoc\">Reserve pages of huge OS pages (1GiB) evenly divided over numa_nodes nodes, but stops after at most t...</div></div>\n<div class=\"ttc\" id=\"agroup__extended_html_ga32f519797fd9a81acb4f52d36e6d751b\"><div class=\"ttname\"><a href=\"group__extended.html#ga32f519797fd9a81acb4f52d36e6d751b\">mi_reserve_os_memory_ex</a></div><div class=\"ttdeci\">int mi_reserve_os_memory_ex(size_t size, bool commit, bool a",
                    "rendered": {
                      "text": "b756fc0e8ec0b74fb58df50\">mi_reserve_huge_os_pages_interleave</a></div><div class=\"ttdeci\">int mi_reserve_huge_os_pages_interleave(size_t pages, size_t numa_nodes, size_t timeout_msecs)</div><div class=\"ttdoc\">Reserve pages of huge OS pages (1GiB) evenly divided over numa_nodes nodes, but stops after at most t...</div></div>\n<div class=\"ttc\" id=\"agroup__extended_html_ga32f519797fd9a81acb4f52d36e6d751b\"><div class=\"ttname\"><a href=\"group__extended.html#ga32f519797fd9a81acb4f52d36e6d751b\">mi_reserve_os_memory_ex</a></div><div class=\"ttdeci\">int mi_reserve_os_memory_ex(size_t size, bool commit, bool a",
                      "markdown": "`b756fc0e8ec0b74fb58df50\">mi_reserve_huge_os_pages_interleave</a></div><div class=\"ttdeci\">int mi_reserve_huge_os_pages_interleave(size_t pages, size_t numa_nodes, size_t timeout_msecs)</div><div class=\"ttdoc\">Reserve pages of huge OS pages (1GiB) evenly divided over numa_nodes nodes, but stops after at most t...</div></div>\n<div class=\"ttc\" id=\"agroup__extended_html_ga32f519797fd9a81acb4f52d36e6d751b\"><div class=\"ttname\"><a href=\"group__extended.html#ga32f519797fd9a81acb4f52d36e6d751b\">mi_reserve_os_memory_ex</a></div><div class=\"ttdeci\">int mi_reserve_os_memory_ex(size_t size, bool commit, bool a`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 351,
                  "endLine": 478,
                  "endColumn": 355,
                  "snippet": {
                    "text": "b95a7cd6cce1b6e07752ae8ca\"><div class=\"ttname\"><a href=\"group__aligned.html#ga2022f71b95a7cd6cce1b6e07752ae8ca\">mi_malloc_aligned_at</a></div><div class=\"ttdeci\">void * mi_malloc_aligned_at(size_t size, size_t alignment, size_t offset)</div><div class=\"ttdoc\">Allocate size bytes aligned by alignment at a specified offset.</div></div>\n<div class=\"ttc\" id=\"agroup__aligned_html_ga424ef386fb1f9f8e0a86ab53f16eaaf1\"><div class=\"ttname\"><a href=\"group__aligned.html#ga424ef386fb1f9f8e0a86ab53f16eaaf1\">mi_calloc_aligned</a></div><div class=\"ttdeci\">void * mi_calloc_aligned(size_t count, size_t size, size_t",
                    "rendered": {
                      "text": "b95a7cd6cce1b6e07752ae8ca\"><div class=\"ttname\"><a href=\"group__aligned.html#ga2022f71b95a7cd6cce1b6e07752ae8ca\">mi_malloc_aligned_at</a></div><div class=\"ttdeci\">void * mi_malloc_aligned_at(size_t size, size_t alignment, size_t offset)</div><div class=\"ttdoc\">Allocate size bytes aligned by alignment at a specified offset.</div></div>\n<div class=\"ttc\" id=\"agroup__aligned_html_ga424ef386fb1f9f8e0a86ab53f16eaaf1\"><div class=\"ttname\"><a href=\"group__aligned.html#ga424ef386fb1f9f8e0a86ab53f16eaaf1\">mi_calloc_aligned</a></div><div class=\"ttdeci\">void * mi_calloc_aligned(size_t count, size_t size, size_t",
                      "markdown": "`b95a7cd6cce1b6e07752ae8ca\"><div class=\"ttname\"><a href=\"group__aligned.html#ga2022f71b95a7cd6cce1b6e07752ae8ca\">mi_malloc_aligned_at</a></div><div class=\"ttdeci\">void * mi_malloc_aligned_at(size_t size, size_t alignment, size_t offset)</div><div class=\"ttdoc\">Allocate size bytes aligned by alignment at a specified offset.</div></div>\n<div class=\"ttc\" id=\"agroup__aligned_html_ga424ef386fb1f9f8e0a86ab53f16eaaf1\"><div class=\"ttname\"><a href=\"group__aligned.html#ga424ef386fb1f9f8e0a86ab53f16eaaf1\">mi_calloc_aligned</a></div><div class=\"ttdeci\">void * mi_calloc_aligned(size_t count, size_t size, size_t`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 125,
                  "endLine": 114,
                  "endColumn": 129,
                  "snippet": {
                    "text": "><a id=\"l00004\" name=\"l00004\"></a><span class=\"lineno\">    4</span><span class=\"comment\">terms of the MIT license. A copy of the license can be found in the file</span></div>\n<div class=\"line\"><a id=\"l00005\" name=\"l00005\"></a><span class=\"lineno\">    5</span><span class=\"comment\">&quot;LICENSE&quot; at the root of this distribution.</span></div>\n<div class=\"line\"><a id=\"l00006\" name=\"l00006\"></a><span class=\"lineno\">    6</span><span class=\"comment\">-----------------------------------------------------------------------------*/</span></div>\n<div class=\"line\"><a id=\"l00007\" name=\"l00007\"></a><span ",
                    "rendered": {
                      "text": "><a id=\"l00004\" name=\"l00004\"></a><span class=\"lineno\">    4</span><span class=\"comment\">terms of the MIT license. A copy of the license can be found in the file</span></div>\n<div class=\"line\"><a id=\"l00005\" name=\"l00005\"></a><span class=\"lineno\">    5</span><span class=\"comment\">&quot;LICENSE&quot; at the root of this distribution.</span></div>\n<div class=\"line\"><a id=\"l00006\" name=\"l00006\"></a><span class=\"lineno\">    6</span><span class=\"comment\">-----------------------------------------------------------------------------*/</span></div>\n<div class=\"line\"><a id=\"l00007\" name=\"l00007\"></a><span ",
                      "markdown": "`><a id=\"l00004\" name=\"l00004\"></a><span class=\"lineno\">    4</span><span class=\"comment\">terms of the MIT license. A copy of the license can be found in the file</span></div>\n<div class=\"line\"><a id=\"l00005\" name=\"l00005\"></a><span class=\"lineno\">    5</span><span class=\"comment\">&quot;LICENSE&quot; at the root of this distribution.</span></div>\n<div class=\"line\"><a id=\"l00006\" name=\"l00006\"></a><span class=\"lineno\">    6</span><span class=\"comment\">-----------------------------------------------------------------------------*/</span></div>\n<div class=\"line\"><a id=\"l00007\" name=\"l00007\"></a><span `"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 398,
                  "endLine": 614,
                  "endColumn": 404,
                  "snippet": {
                    "text": "f61d4473fd5c\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\">mi_option_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">@ mi_option_reserve_huge_os_pages_at</div><div class=\"ttdoc\">Reserve N huge OS pages at a specific NUMA node N.</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:921</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31",
                    "rendered": {
                      "text": "f61d4473fd5c\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\">mi_option_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">@ mi_option_reserve_huge_os_pages_at</div><div class=\"ttdoc\">Reserve N huge OS pages at a specific NUMA node N.</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:921</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31",
                      "markdown": "`f61d4473fd5c\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\">mi_option_reserve_huge_os_pages_at</a></div><div class=\"ttdeci\">@ mi_option_reserve_huge_os_pages_at</div><div class=\"ttdoc\">Reserve N huge OS pages at a specific NUMA node N.</div><div class=\"ttdef\"><b>Definition</b> mimalloc-doc.h:921</div></div>\n<div class=\"ttc\" id=\"agroup__options_html_ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"><div class=\"ttname\"><a href=\"group__options.html#ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/mimalloc-doc_8h_source.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/modules.html"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 224,
                  "endLine": 109,
                  "endColumn": 228,
                  "snippet": {
                    "text": "f\">Typed Macros</a></td><td class=\"desc\">Typed allocation macros </td></tr>\n<tr id=\"row_6_\" class=\"even\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"group__analysis.html\" target=\"_self\">Heap Introspection</a></td><td class=\"desc\">Inspect the heap at runtime </td></tr>\n<tr id=\"row_7_\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"group__options.html\" target=\"_self\">Runtime Options</a></td><td class=\"desc\">Set runtime behavior </td></tr>\n<tr id=\"row_8_\" class=\"even\"><td class=\"entry\"><span style",
                    "rendered": {
                      "text": "f\">Typed Macros</a></td><td class=\"desc\">Typed allocation macros </td></tr>\n<tr id=\"row_6_\" class=\"even\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"group__analysis.html\" target=\"_self\">Heap Introspection</a></td><td class=\"desc\">Inspect the heap at runtime </td></tr>\n<tr id=\"row_7_\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"group__options.html\" target=\"_self\">Runtime Options</a></td><td class=\"desc\">Set runtime behavior </td></tr>\n<tr id=\"row_8_\" class=\"even\"><td class=\"entry\"><span style",
                      "markdown": "`f\">Typed Macros</a></td><td class=\"desc\">Typed allocation macros </td></tr>\n<tr id=\"row_6_\" class=\"even\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"group__analysis.html\" target=\"_self\">Heap Introspection</a></td><td class=\"desc\">Inspect the heap at runtime </td></tr>\n<tr id=\"row_7_\"><td class=\"entry\"><span style=\"width:16px;display:inline-block;\">&#160;</span><a class=\"el\" href=\"group__options.html\" target=\"_self\">Runtime Options</a></td><td class=\"desc\">Set runtime behavior </td></tr>\n<tr id=\"row_8_\" class=\"even\"><td class=\"entry\"><span style`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/modules.html"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 10,
                  "endLine": 65,
                  "endColumn": 15,
                  "snippet": {
                    "text": "var searchBox = new SearchBox(\"searchBox\", \"search\",false,'Search','.html');\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "var searchBox = new SearchBox(\"searchBox\", \"search\",false,'Search','.html');\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`var searchBox = new SearchBox(\"searchBox\", \"search\",false,'Search','.html');\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 722,
                  "startColumn": 9,
                  "endLine": 722,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  if (name==NULL) return false;\n  const size_t len = _mi_strlen(name);\n  if (len == 0) return false;\n  char** env = mi_get_environ();\n  if (env == NULL) return false;\n  // compare up to 10000 entries\n  for (int i = 0; i < 10000 && env[i] != NULL; i++) {\n",
                    "rendered": {
                      "text": "  if (name==NULL) return false;\n  const size_t len = _mi_strlen(name);\n  if (len == 0) return false;\n  char** env = mi_get_environ();\n  if (env == NULL) return false;\n  // compare up to 10000 entries\n  for (int i = 0; i < 10000 && env[i] != NULL; i++) {\n",
                      "markdown": "`  if (name==NULL) return false;\n  const size_t len = _mi_strlen(name);\n  if (len == 0) return false;\n  char** env = mi_get_environ();\n  if (env == NULL) return false;\n  // compare up to 10000 entries\n  for (int i = 0; i < 10000 && env[i] != NULL; i++) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 75,
                  "endLine": 476,
                  "endColumn": 79,
                  "snippet": {
                    "text": "  bool is_large = true;\n  *is_zero = true;\n  *addr = unix_mmap(hint_addr, size, MI_SEGMENT_SIZE, PROT_READ | PROT_WRITE, true, true, &is_large);\n  if (*addr != NULL && numa_node >= 0 && numa_node < 8*MI_INTPTR_SIZE) { // at most 64 nodes\n    unsigned long numa_mask = (1UL << numa_node);\n    // TODO: does `mbind` work correctly for huge OS pages? should we\n    // use `set_mempolicy` before calling mmap instead?\n",
                    "rendered": {
                      "text": "  bool is_large = true;\n  *is_zero = true;\n  *addr = unix_mmap(hint_addr, size, MI_SEGMENT_SIZE, PROT_READ | PROT_WRITE, true, true, &is_large);\n  if (*addr != NULL && numa_node >= 0 && numa_node < 8*MI_INTPTR_SIZE) { // at most 64 nodes\n    unsigned long numa_mask = (1UL << numa_node);\n    // TODO: does `mbind` work correctly for huge OS pages? should we\n    // use `set_mempolicy` before calling mmap instead?\n",
                      "markdown": "`  bool is_large = true;\n  *is_zero = true;\n  *addr = unix_mmap(hint_addr, size, MI_SEGMENT_SIZE, PROT_READ | PROT_WRITE, true, true, &is_large);\n  if (*addr != NULL && numa_node >= 0 && numa_node < 8*MI_INTPTR_SIZE) { // at most 64 nodes\n    unsigned long numa_mask = (1UL << numa_node);\n    // TODO: does `mbind` work correctly for huge OS pages? should we\n    // use `set_mempolicy` before calling mmap instead?\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 26,
                  "endLine": 340,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      }\n      #elif defined(__sun)\n      if (allow_large && _mi_os_use_large_page(size, try_alignment)) {\n        struct memcntl_mha cmd = {0};\n        cmd.mha_pagesize = _mi_os_large_page_size();\n        cmd.mha_cmd = MHA_MAPSIZE_VA;\n        if (memcntl((caddr_t)p, size, MC_HAT_ADVISE, (caddr_t)&cmd, 0, 0) == 0) {\n",
                    "rendered": {
                      "text": "      }\n      #elif defined(__sun)\n      if (allow_large && _mi_os_use_large_page(size, try_alignment)) {\n        struct memcntl_mha cmd = {0};\n        cmd.mha_pagesize = _mi_os_large_page_size();\n        cmd.mha_cmd = MHA_MAPSIZE_VA;\n        if (memcntl((caddr_t)p, size, MC_HAT_ADVISE, (caddr_t)&cmd, 0, 0) == 0) {\n",
                      "markdown": "`      }\n      #elif defined(__sun)\n      if (allow_large && _mi_os_use_large_page(size, try_alignment)) {\n        struct memcntl_mha cmd = {0};\n        cmd.mha_pagesize = _mi_os_large_page_size();\n        cmd.mha_cmd = MHA_MAPSIZE_VA;\n        if (memcntl((caddr_t)p, size, MC_HAT_ADVISE, (caddr_t)&cmd, 0, 0) == 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 722,
                  "startColumn": 8,
                  "endLine": 722,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  if (name==NULL) return false;\n  const size_t len = _mi_strlen(name);\n  if (len == 0) return false;\n  char** env = mi_get_environ();\n  if (env == NULL) return false;\n  // compare up to 10000 entries\n  for (int i = 0; i < 10000 && env[i] != NULL; i++) {\n",
                    "rendered": {
                      "text": "  if (name==NULL) return false;\n  const size_t len = _mi_strlen(name);\n  if (len == 0) return false;\n  char** env = mi_get_environ();\n  if (env == NULL) return false;\n  // compare up to 10000 entries\n  for (int i = 0; i < 10000 && env[i] != NULL; i++) {\n",
                      "markdown": "`  if (name==NULL) return false;\n  const size_t len = _mi_strlen(name);\n  if (len == 0) return false;\n  char** env = mi_get_environ();\n  if (env == NULL) return false;\n  // compare up to 10000 entries\n  for (int i = 0; i < 10000 && env[i] != NULL; i++) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 537,
                  "startColumn": 16,
                  "endLine": 537,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  size_t node;\n  int policy;\n  if (cpuset_getdomain(CPU_LEVEL_CPUSET, CPU_WHICH_PID, -1, sizeof(dom), &dom, &policy) == -1) return 0ul;\n  for (node = 0; node < MAXMEMDOM; node++) {\n    if (DOMAINSET_ISSET(node, &dom)) return node;\n  }\n  return 0ul;\n",
                    "rendered": {
                      "text": "  size_t node;\n  int policy;\n  if (cpuset_getdomain(CPU_LEVEL_CPUSET, CPU_WHICH_PID, -1, sizeof(dom), &dom, &policy) == -1) return 0ul;\n  for (node = 0; node < MAXMEMDOM; node++) {\n    if (DOMAINSET_ISSET(node, &dom)) return node;\n  }\n  return 0ul;\n",
                      "markdown": "`  size_t node;\n  int policy;\n  if (cpuset_getdomain(CPU_LEVEL_CPUSET, CPU_WHICH_PID, -1, sizeof(dom), &dom, &policy) == -1) return 0ul;\n  for (node = 0; node < MAXMEMDOM; node++) {\n    if (DOMAINSET_ISSET(node, &dom)) return node;\n  }\n  return 0ul;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 61,
                  "endLine": 524,
                  "endColumn": 67,
                  "snippet": {
                    "text": "  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n    if (mi_prim_access(buf,R_OK) != 0) break;\n  }\n  return (node+1);\n",
                    "rendered": {
                      "text": "  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n    if (mi_prim_access(buf,R_OK) != 0) break;\n  }\n  return (node+1);\n",
                      "markdown": "`  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n    if (mi_prim_access(buf,R_OK) != 0) break;\n  }\n  return (node+1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 16,
                  "endLine": 523,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  char buf[128];\n  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n    if (mi_prim_access(buf,R_OK) != 0) break;\n  }\n",
                    "rendered": {
                      "text": "  char buf[128];\n  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n    if (mi_prim_access(buf,R_OK) != 0) break;\n  }\n",
                      "markdown": "`  char buf[128];\n  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n    if (mi_prim_access(buf,R_OK) != 0) break;\n  }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 15,
                  "endLine": 522,
                  "endColumn": 21,
                  "snippet": {
                    "text": "size_t _mi_prim_numa_node_count(void) {\n  char buf[128];\n  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n    if (mi_prim_access(buf,R_OK) != 0) break;\n",
                    "rendered": {
                      "text": "size_t _mi_prim_numa_node_count(void) {\n  char buf[128];\n  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n    if (mi_prim_access(buf,R_OK) != 0) break;\n",
                      "markdown": "`size_t _mi_prim_numa_node_count(void) {\n  char buf[128];\n  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n    if (mi_prim_access(buf,R_OK) != 0) break;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 521,
                  "startColumn": 10,
                  "endLine": 521,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\nsize_t _mi_prim_numa_node_count(void) {\n  char buf[128];\n  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n",
                    "rendered": {
                      "text": "\nsize_t _mi_prim_numa_node_count(void) {\n  char buf[128];\n  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n",
                      "markdown": "`\nsize_t _mi_prim_numa_node_count(void) {\n  char buf[128];\n  unsigned node = 0;\n  for(node = 0; node < 256; node++) {\n    // enumerate node entries -- todo: it there a more efficient way to do this? (but ensure there is no allocation)\n    _mi_snprintf(buf, 127, \"/sys/devices/system/node/node%u\", node + 1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 17,
                  "endLine": 509,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nsize_t _mi_prim_numa_node(void) {\n  #if defined(MI_HAS_SYSCALL_H) && defined(SYS_getcpu)\n    unsigned long node = 0;\n    unsigned long ncpu = 0;\n    long err = syscall(SYS_getcpu, &ncpu, &node, NULL);\n    if (err != 0) return 0;\n",
                    "rendered": {
                      "text": "\nsize_t _mi_prim_numa_node(void) {\n  #if defined(MI_HAS_SYSCALL_H) && defined(SYS_getcpu)\n    unsigned long node = 0;\n    unsigned long ncpu = 0;\n    long err = syscall(SYS_getcpu, &ncpu, &node, NULL);\n    if (err != 0) return 0;\n",
                      "markdown": "`\nsize_t _mi_prim_numa_node(void) {\n  #if defined(MI_HAS_SYSCALL_H) && defined(SYS_getcpu)\n    unsigned long node = 0;\n    unsigned long ncpu = 0;\n    long err = syscall(SYS_getcpu, &ncpu, &node, NULL);\n    if (err != 0) return 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/prim/unix/prim.c"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 67,
                  "endLine": 484,
                  "endColumn": 73,
                  "snippet": {
                    "text": "    long err = mi_prim_mbind(*addr, size, MPOL_PREFERRED, &numa_mask, 8*MI_INTPTR_SIZE, 0);\n    if (err != 0) {\n      err = errno;\n      _mi_warning_message(\"failed to bind huge (1GiB) pages to numa node %d (error: %d (0x%x))\\n\", numa_node, err, err);\n    }\n  }\n  return (*addr != NULL ? 0 : errno);\n",
                    "rendered": {
                      "text": "    long err = mi_prim_mbind(*addr, size, MPOL_PREFERRED, &numa_mask, 8*MI_INTPTR_SIZE, 0);\n    if (err != 0) {\n      err = errno;\n      _mi_warning_message(\"failed to bind huge (1GiB) pages to numa node %d (error: %d (0x%x))\\n\", numa_node, err, err);\n    }\n  }\n  return (*addr != NULL ? 0 : errno);\n",
                      "markdown": "`    long err = mi_prim_mbind(*addr, size, MPOL_PREFERRED, &numa_mask, 8*MI_INTPTR_SIZE, 0);\n    if (err != 0) {\n      err = errno;\n      _mi_warning_message(\"failed to bind huge (1GiB) pages to numa node %d (error: %d (0x%x))\\n\", numa_node, err, err);\n    }\n  }\n  return (*addr != NULL ? 0 : errno);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/include/mimalloc.h"
                },
                "region": {
                  "startLine": 534,
                  "startColumn": 55,
                  "endLine": 534,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  using is_always_equal = std::false_type;\n  #endif\n\n  void collect(bool force) { mi_heap_collect(this->heap.get(), force); }\n  template<class U> bool is_equal(const _mi_heap_stl_allocator_common<U, _mi_destroy>& x) const { return (this->heap == x.heap); }\n\nprotected:\n",
                    "rendered": {
                      "text": "  using is_always_equal = std::false_type;\n  #endif\n\n  void collect(bool force) { mi_heap_collect(this->heap.get(), force); }\n  template<class U> bool is_equal(const _mi_heap_stl_allocator_common<U, _mi_destroy>& x) const { return (this->heap == x.heap); }\n\nprotected:\n",
                      "markdown": "`  using is_always_equal = std::false_type;\n  #endif\n\n  void collect(bool force) { mi_heap_collect(this->heap.get(), force); }\n  template<class U> bool is_equal(const _mi_heap_stl_allocator_common<U, _mi_destroy>& x) const { return (this->heap == x.heap); }\n\nprotected:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/include/mimalloc.h"
                },
                "region": {
                  "startLine": 527,
                  "startColumn": 131,
                  "endLine": 527,
                  "endColumn": 136,
                  "snippet": {
                    "text": "  mi_decl_nodiscard T* allocate(size_type count) { return static_cast<T*>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(T))); }\n  mi_decl_nodiscard T* allocate(size_type count, const void*) { return allocate(count); }\n  #else\n  mi_decl_nodiscard pointer allocate(size_type count, const void* = 0) { return static_cast<pointer>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(value_type))); }\n  #endif\n\n  #if ((__cplusplus >= 201103L) || (_MSC_VER > 1900))  // C++11\n",
                    "rendered": {
                      "text": "  mi_decl_nodiscard T* allocate(size_type count) { return static_cast<T*>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(T))); }\n  mi_decl_nodiscard T* allocate(size_type count, const void*) { return allocate(count); }\n  #else\n  mi_decl_nodiscard pointer allocate(size_type count, const void* = 0) { return static_cast<pointer>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(value_type))); }\n  #endif\n\n  #if ((__cplusplus >= 201103L) || (_MSC_VER > 1900))  // C++11\n",
                      "markdown": "`  mi_decl_nodiscard T* allocate(size_type count) { return static_cast<T*>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(T))); }\n  mi_decl_nodiscard T* allocate(size_type count, const void*) { return allocate(count); }\n  #else\n  mi_decl_nodiscard pointer allocate(size_type count, const void* = 0) { return static_cast<pointer>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(value_type))); }\n  #endif\n\n  #if ((__cplusplus >= 201103L) || (_MSC_VER > 1900))  // C++11\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/include/mimalloc.h"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 104,
                  "endLine": 524,
                  "endColumn": 109,
                  "snippet": {
                    "text": "  _mi_heap_stl_allocator_common(mi_heap_t* hp) : heap(hp, [](mi_heap_t*) {}) {}    /* will not delete nor destroy the passed in heap */\n\n  #if (__cplusplus >= 201703L)  // C++17\n  mi_decl_nodiscard T* allocate(size_type count) { return static_cast<T*>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(T))); }\n  mi_decl_nodiscard T* allocate(size_type count, const void*) { return allocate(count); }\n  #else\n  mi_decl_nodiscard pointer allocate(size_type count, const void* = 0) { return static_cast<pointer>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(value_type))); }\n",
                    "rendered": {
                      "text": "  _mi_heap_stl_allocator_common(mi_heap_t* hp) : heap(hp, [](mi_heap_t*) {}) {}    /* will not delete nor destroy the passed in heap */\n\n  #if (__cplusplus >= 201703L)  // C++17\n  mi_decl_nodiscard T* allocate(size_type count) { return static_cast<T*>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(T))); }\n  mi_decl_nodiscard T* allocate(size_type count, const void*) { return allocate(count); }\n  #else\n  mi_decl_nodiscard pointer allocate(size_type count, const void* = 0) { return static_cast<pointer>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(value_type))); }\n",
                      "markdown": "`  _mi_heap_stl_allocator_common(mi_heap_t* hp) : heap(hp, [](mi_heap_t*) {}) {}    /* will not delete nor destroy the passed in heap */\n\n  #if (__cplusplus >= 201703L)  // C++17\n  mi_decl_nodiscard T* allocate(size_type count) { return static_cast<T*>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(T))); }\n  mi_decl_nodiscard T* allocate(size_type count, const void*) { return allocate(count); }\n  #else\n  mi_decl_nodiscard pointer allocate(size_type count, const void* = 0) { return static_cast<pointer>(mi_heap_alloc_new_n(this->heap.get(), count, sizeof(value_type))); }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 108,
                  "endLine": 254,
                  "endColumn": 178,
                  "snippet": {
                    "text": "</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\"></a>_mi_option_last&#160;</td><td class=\"fielddoc\"></td></tr>\n</table>\n\n</div>\n",
                    "rendered": {
                      "text": "</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\"></a>_mi_option_last&#160;</td><td class=\"fielddoc\"></td></tr>\n</table>\n\n</div>\n",
                      "markdown": "`</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\"></a>_mi_option_last&#160;</td><td class=\"fielddoc\"></td></tr>\n</table>\n\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 32,
                  "endLine": 254,
                  "endColumn": 102,
                  "snippet": {
                    "text": "</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\"></a>_mi_option_last&#160;</td><td class=\"fielddoc\"></td></tr>\n</table>\n\n</div>\n",
                    "rendered": {
                      "text": "</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\"></a>_mi_option_last&#160;</td><td class=\"fielddoc\"></td></tr>\n</table>\n\n</div>\n",
                      "markdown": "`</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\"></a>_mi_option_last&#160;</td><td class=\"fielddoc\"></td></tr>\n</table>\n\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 108,
                  "endLine": 252,
                  "endColumn": 178,
                  "snippet": {
                    "text": "1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d875680",
                    "rendered": {
                      "text": "1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d875680",
                      "markdown": "`1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d87568036c32eb1a2e4a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d875680`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 32,
                  "endLine": 252,
                  "endColumn": 102,
                  "snippet": {
                    "text": "1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d875680",
                    "rendered": {
                      "text": "1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d875680",
                      "markdown": "`1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\"></a>mi_option_visit_abandoned&#160;</td><td class=\"fielddoc\"><p>allow visiting heap blocks from abandoned threads (=0) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca5b4357b74be0d875680`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 108,
                  "endLine": 250,
                  "endColumn": 178,
                  "snippet": {
                    "text": "116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce",
                    "rendered": {
                      "text": "116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce",
                      "markdown": "`116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca38c67733a3956a1f4eeaca89fab9e78e\" name=\"ggafebf7ed116adb38ae5218bc3ce`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 32,
                  "endLine": 250,
                  "endColumn": 102,
                  "snippet": {
                    "text": "116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce",
                    "rendered": {
                      "text": "116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce",
                      "markdown": "`116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\"></a>mi_option_disallow_arena_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use arena's for allocation (except if using specific arena id's) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 108,
                  "endLine": 248,
                  "endColumn": 178,
                  "snippet": {
                    "text": "218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182",
                    "rendered": {
                      "text": "218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182",
                      "markdown": "`218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182730cc04e40\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 32,
                  "endLine": 248,
                  "endColumn": 102,
                  "snippet": {
                    "text": "218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182",
                    "rendered": {
                      "text": "218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182",
                      "markdown": "`218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\"></a>mi_option_purge_extend_delay&#160;</td><td class=\"fielddoc\"><p>extend purge delay on each subsequent delay (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caeae1696100e4057ffc4182`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 108,
                  "endLine": 246,
                  "endColumn": 178,
                  "snippet": {
                    "text": "36501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bd",
                    "rendered": {
                      "text": "36501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bd",
                      "markdown": "`36501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bdf03f5f00c5be726adf487\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bd`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 32,
                  "endLine": 246,
                  "endColumn": 102,
                  "snippet": {
                    "text": "36501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bd",
                    "rendered": {
                      "text": "36501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bd",
                      "markdown": "`36501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\"></a>mi_option_abandoned_reclaim_on_free&#160;</td><td class=\"fielddoc\"><p>allow to reclaim an abandoned segment on a free (=1) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca02005f164bd`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 108,
                  "endLine": 244,
                  "endColumn": 178,
                  "snippet": {
                    "text": "d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce0",
                    "rendered": {
                      "text": "d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce0",
                      "markdown": "`d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca009e4b5684922ce664d73d2a8e1698d9\" name=\"ggafebf7ed116adb38ae5218bc3ce0`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 32,
                  "endLine": 244,
                  "endColumn": 102,
                  "snippet": {
                    "text": "d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce0",
                    "rendered": {
                      "text": "d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce0",
                      "markdown": "`d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\"></a>mi_option_arena_purge_mult&#160;</td><td class=\"fielddoc\"><p>multiplier for <code>purge_delay</code> for the purging delay for arenas (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce0`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 108,
                  "endLine": 242,
                  "endColumn": 178,
                  "snippet": {
                    "text": "a9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38a",
                    "rendered": {
                      "text": "a9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38a",
                      "markdown": "`a9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8236501f1ab45d26e6fd885d191a2b5e\" name=\"ggafebf7ed116adb38a`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 32,
                  "endLine": 242,
                  "endColumn": 102,
                  "snippet": {
                    "text": "a9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38a",
                    "rendered": {
                      "text": "a9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38a",
                      "markdown": "`a9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\"></a>mi_option_destroy_on_exit&#160;</td><td class=\"fielddoc\"><p>if set, release all memory on exit; sometimes used for dynamic unloading but can be unsafe </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38a`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 108,
                  "endLine": 240,
                  "endColumn": 178,
                  "snippet": {
                    "text": "fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce068",
                    "rendered": {
                      "text": "fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce068",
                      "markdown": "`fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca6364331e305e7d3c0218b058ff3afc88\" name=\"ggafebf7ed116adb38ae5218bc3ce068`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 32,
                  "endLine": 240,
                  "endColumn": 102,
                  "snippet": {
                    "text": "fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce068",
                    "rendered": {
                      "text": "fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce068",
                      "markdown": "`fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\"></a>mi_option_max_segment_reclaim&#160;</td><td class=\"fielddoc\"><p>max. percentage of the abandoned segments can be reclaimed per try (=10%) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce068`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 108,
                  "endLine": 238,
                  "endColumn": 178,
                  "snippet": {
                    "text": "580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06",
                    "rendered": {
                      "text": "580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06",
                      "markdown": "`580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa9ad9005d7017c8c30ad2d6ba31db909\" name=\"ggafebf7ed116adb38ae5218bc3ce06`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 32,
                  "endLine": 238,
                  "endColumn": 102,
                  "snippet": {
                    "text": "580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06",
                    "rendered": {
                      "text": "580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06",
                      "markdown": "`580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\"></a>mi_option_limit_os_alloc&#160;</td><td class=\"fielddoc\"><p>If set to 1, do not use OS memory for allocation (but only pre-reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 108,
                  "endLine": 236,
                  "endColumn": 178,
                  "snippet": {
                    "text": "18bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218",
                    "rendered": {
                      "text": "18bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218",
                      "markdown": "`18bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9fa61bd9668479f8452d2195759444cc\" name=\"ggafebf7ed116adb38ae5218`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 32,
                  "endLine": 236,
                  "endColumn": 102,
                  "snippet": {
                    "text": "18bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218",
                    "rendered": {
                      "text": "18bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218",
                      "markdown": "`18bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory for allocation (but only programmatically reserved arenas) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 108,
                  "endLine": 234,
                  "endColumn": 178,
                  "snippet": {
                    "text": "e7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a0958",
                    "rendered": {
                      "text": "e7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a0958",
                      "markdown": "`e7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a0958`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 32,
                  "endLine": 234,
                  "endColumn": 102,
                  "snippet": {
                    "text": "e7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a0958",
                    "rendered": {
                      "text": "e7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a0958",
                      "markdown": "`e7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a0958`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 108,
                  "endLine": 232,
                  "endColumn": 178,
                  "snippet": {
                    "text": "ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafe",
                    "rendered": {
                      "text": "ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafe",
                      "markdown": "`ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafe`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 32,
                  "endLine": 232,
                  "endColumn": 102,
                  "snippet": {
                    "text": "ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafe",
                    "rendered": {
                      "text": "ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafe",
                      "markdown": "`ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafe`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 108,
                  "endLine": 230,
                  "endColumn": 178,
                  "snippet": {
                    "text": "6884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd85",
                    "rendered": {
                      "text": "6884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd85",
                      "markdown": "`6884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd85`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 32,
                  "endLine": 230,
                  "endColumn": 102,
                  "snippet": {
                    "text": "6884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd85",
                    "rendered": {
                      "text": "6884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd85",
                      "markdown": "`6884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\"></a>mi_option_abandoned_page_purge&#160;</td><td class=\"fielddoc\"><p>immediately purge delayed purges on thread termination </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd85`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 108,
                  "endLine": 228,
                  "endColumn": 178,
                  "snippet": {
                    "text": "68c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11",
                    "rendered": {
                      "text": "68c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11",
                      "markdown": "`68c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11e62ed69200a489a5be955582078c0c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca11`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 32,
                  "endLine": 228,
                  "endColumn": 102,
                  "snippet": {
                    "text": "68c4c068c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11",
                    "rendered": {
                      "text": "68c4c068c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11",
                      "markdown": "`68c4c068c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\"></a>mi_option_arena_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit arenas? Use 2 to enable just on overcommit systems (=2) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca11`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 108,
                  "endLine": 226,
                  "endColumn": 178,
                  "snippet": {
                    "text": "ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7e",
                    "rendered": {
                      "text": "ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7e",
                      "markdown": "`ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafd0c5ddbc4b59fd8b5216871728167a5\" name=\"ggafebf7e`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 32,
                  "endLine": 226,
                  "endColumn": 102,
                  "snippet": {
                    "text": "ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7e",
                    "rendered": {
                      "text": "ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7e",
                      "markdown": "`ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\"></a>mi_option_eager_commit_delay&#160;</td><td class=\"fielddoc\"><p>the first N segments per thread are not eagerly committed (but per page in the segment on demand) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7e`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 108,
                  "endLine": 224,
                  "endColumn": 178,
                  "snippet": {
                    "text": "899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\" name=\"ggafebf7ed116adb38a",
                    "rendered": {
                      "text": "899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\" name=\"ggafebf7ed116adb38a",
                      "markdown": "`899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca17a190c25be381142d87e0468c4c068c\" name=\"ggafebf7ed116adb38a`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 32,
                  "endLine": 224,
                  "endColumn": 102,
                  "snippet": {
                    "text": "899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38a",
                    "rendered": {
                      "text": "899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38a",
                      "markdown": "`899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\"></a>mi_option_eager_commit&#160;</td><td class=\"fielddoc\"><p>eager commit segments? (after <code>eager_commit_delay</code> segments) (enabled by default). </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38a`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 108,
                  "endLine": 222,
                  "endColumn": 178,
                  "snippet": {
                    "text": "gafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116ad",
                    "rendered": {
                      "text": "gafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116ad",
                      "markdown": "`gafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca1e8de72c93da7ff22d91e1e27b52ac2b\" name=\"ggafebf7ed116ad`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 32,
                  "endLine": 222,
                  "endColumn": 102,
                  "snippet": {
                    "text": "gafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116ad",
                    "rendered": {
                      "text": "gafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116ad",
                      "markdown": "`gafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\"></a>mi_option_retry_on_oom&#160;</td><td class=\"fielddoc\"><p>retry on out-of-memory for N milli seconds (=400), set to 0 to disable retries. (only on windows) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116ad`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 108,
                  "endLine": 220,
                  "endColumn": 178,
                  "snippet": {
                    "text": "reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865",
                    "rendered": {
                      "text": "reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865",
                      "markdown": "`reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865e\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 32,
                  "endLine": 220,
                  "endColumn": 102,
                  "snippet": {
                    "text": "db38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\"></a>mi_option_arena_reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865",
                    "rendered": {
                      "text": "db38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\"></a>mi_option_arena_reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865",
                      "markdown": "`db38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\"></a>mi_option_arena_reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c2361b73c1d14bf\"></a>mi_option_os_tag&#160;</td><td class=\"fielddoc\"><p>tag used for OS logging (macOS only for now) (=100) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca8f51df355bf6651db899e6085b54865`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 108,
                  "endLine": 218,
                  "endColumn": 178,
                  "snippet": {
                    "text": "e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\"></a>mi_option_arena_reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c",
                    "rendered": {
                      "text": "e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\"></a>mi_option_arena_reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c",
                      "markdown": "`e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\"></a>mi_option_arena_reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca4b74ae2a69e445de6c`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 32,
                  "endLine": 218,
                  "endColumn": 102,
                  "snippet": {
                    "text": "e4dd5ab9a4\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\"></a>mi_option_arena_reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td cla",
                    "rendered": {
                      "text": "e4dd5ab9a4\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\"></a>mi_option_arena_reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td cla",
                      "markdown": "`e4dd5ab9a4\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\"></a>mi_option_arena_reserve&#160;</td><td class=\"fielddoc\"><p>initial memory size for arena reservation (= 1 GiB on 64-bit) (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td cla`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 108,
                  "endLine": 216,
                  "endColumn": 178,
                  "snippet": {
                    "text": "556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\" name=\"ggafebf7ed",
                    "rendered": {
                      "text": "556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\" name=\"ggafebf7ed",
                      "markdown": "`556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cab1c88e23ae290bbeec824038a97959de\" name=\"ggafebf7ed`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 32,
                  "endLine": 216,
                  "endColumn": 102,
                  "snippet": {
                    "text": "556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed",
                    "rendered": {
                      "text": "556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed",
                      "markdown": "`556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\"></a>mi_option_purge_decommits&#160;</td><td class=\"fielddoc\"><p>should a memory purge decommit? (=1). Set to 0 to use memory reset on a purge (instead of decommit) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 108,
                  "endLine": 214,
                  "endColumn": 178,
                  "snippet": {
                    "text": "s_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\" name=\"gga",
                    "rendered": {
                      "text": "s_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\" name=\"gga",
                      "markdown": "`s_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca9d15c5e3d2115eef681c17e4dd5ab9a4\" name=\"gga`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 32,
                  "endLine": 214,
                  "endColumn": 102,
                  "snippet": {
                    "text": "8ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"gga",
                    "rendered": {
                      "text": "8ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"gga",
                      "markdown": "`8ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large_os_pages&#160;</td><td class=\"fielddoc\"><p>allow large (2 or 4 MiB) OS pages, implies eager commit. If false, also disables THP for the process. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"gga`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 108,
                  "endLine": 212,
                  "endColumn": 178,
                  "snippet": {
                    "text": "ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004",
                    "rendered": {
                      "text": "ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004",
                      "markdown": "`ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 32,
                  "endLine": 212,
                  "endColumn": 102,
                  "snippet": {
                    "text": "ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td ",
                    "rendered": {
                      "text": "ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td ",
                      "markdown": "`ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td `"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 108,
                  "endLine": 210,
                  "endColumn": 178,
                  "snippet": {
                    "text": "6adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf7",
                    "rendered": {
                      "text": "6adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf7",
                      "markdown": "`6adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf7`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 32,
                  "endLine": 210,
                  "endColumn": 102,
                  "snippet": {
                    "text": "6adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf7",
                    "rendered": {
                      "text": "6adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf7",
                      "markdown": "`6adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf7`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 108,
                  "endLine": 208,
                  "endColumn": 178,
                  "snippet": {
                    "text": "2665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fb",
                    "rendered": {
                      "text": "2665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fb",
                      "markdown": "`2665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fb`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 32,
                  "endLine": 208,
                  "endColumn": 102,
                  "snippet": {
                    "text": "ame\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fb",
                    "rendered": {
                      "text": "ame\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fb",
                      "markdown": "`ame\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fb`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 108,
                  "endLine": 206,
                  "endColumn": 178,
                  "snippet": {
                    "text": "a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_opt",
                    "rendered": {
                      "text": "a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_opt",
                      "markdown": "`a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_opt`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 32,
                  "endLine": 206,
                  "endColumn": 102,
                  "snippet": {
                    "text": "eldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggaf",
                    "rendered": {
                      "text": "eldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggaf",
                      "markdown": "`eldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggaf`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 108,
                  "endLine": 204,
                  "endColumn": 178,
                  "snippet": {
                    "text": "1bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_",
                    "rendered": {
                      "text": "1bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_",
                      "markdown": "`1bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 32,
                  "endLine": 204,
                  "endColumn": 102,
                  "snippet": {
                    "text": " class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7",
                    "rendered": {
                      "text": " class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7",
                      "markdown": "` class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 108,
                  "endLine": 202,
                  "endColumn": 178,
                  "snippet": {
                    "text": "422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors",
                    "rendered": {
                      "text": "422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors",
                      "markdown": "`422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 32,
                  "endLine": 202,
                  "endColumn": 102,
                  "snippet": {
                    "text": "dname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38",
                    "rendered": {
                      "text": "dname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38",
                      "markdown": "`dname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_option_verbose&#160;</td><td class=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 108,
                  "endLine": 200,
                  "endColumn": 178,
                  "snippet": {
                    "text": "5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_optio",
                    "rendered": {
                      "text": "5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_optio",
                      "markdown": "`5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\"></a>mi_optio`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 32,
                  "endLine": 200,
                  "endColumn": 102,
                  "snippet": {
                    "text": "lass=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafeb",
                    "rendered": {
                      "text": "lass=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafeb",
                      "markdown": "`lass=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7c8b7bf5281c581bad64f5daa6442777\" name=\"ggafeb`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 148,
                  "endLine": 198,
                  "endColumn": 218,
                  "snippet": {
                    "text": "\n<p>Runtime options. </p>\n<table class=\"fieldtable\">\n<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n",
                    "rendered": {
                      "text": "\n<p>Runtime options. </p>\n<table class=\"fieldtable\">\n<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n",
                      "markdown": "`\n<p>Runtime options. </p>\n<table class=\"fieldtable\">\n<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 72,
                  "endLine": 198,
                  "endColumn": 142,
                  "snippet": {
                    "text": "\n<p>Runtime options. </p>\n<table class=\"fieldtable\">\n<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n",
                    "rendered": {
                      "text": "\n<p>Runtime options. </p>\n<table class=\"fieldtable\">\n<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n",
                      "markdown": "`\n<p>Runtime options. </p>\n<table class=\"fieldtable\">\n<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4822e5c00732c5984b32a032837f0\"></a>mi_option_show_errors&#160;</td><td class=\"fielddoc\"><p>Print error messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0957ef73b2550764b4840edf48422fda\"></a>mi_option_show_stats&#160;</td><td class=\"fielddoc\"><p>Print statistics on termination. </p>\n</td></tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 289,
                  "endLine": 234,
                  "endColumn": 293,
                  "snippet": {
                    "text": "</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory ",
                    "rendered": {
                      "text": "</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory ",
                      "markdown": "`</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa nodes, otherwise use at most N nodes. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadcfb5a09580361b1be65901d2d812de6\"></a>mi_option_disallow_os_alloc&#160;</td><td class=\"fielddoc\"><p>1 = do not use OS memory `"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 333,
                  "endLine": 232,
                  "endColumn": 337,
                  "snippet": {
                    "text": "ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa node",
                    "rendered": {
                      "text": "ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa node",
                      "markdown": "`ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cadd351e615acd8563529c20a347be7290\"></a>mi_option_purge_delay&#160;</td><td class=\"fielddoc\"><p>memory purging is delayed by N milli seconds; use 0 for immediate purging or -1 for no purging at all. (=10) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca0ac33a18f6b659fcfaf44efb0bab1b74\"></a>mi_option_use_numa_nodes&#160;</td><td class=\"fielddoc\"><p>0 = use all available numa node`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 294,
                  "endLine": 212,
                  "endColumn": 298,
                  "snippet": {
                    "text": "</tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large",
                    "rendered": {
                      "text": "</tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large",
                      "markdown": "`</tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memory in an arena at startup (internally, this value is in KiB; use <code>mi_option_get_size</code>) </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\" name=\"ggafebf7ed116adb38ae5218bc3ce06884ca7cc4804ced69004fa42a9a136a9ba556\"></a>mi_option_allow_large`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 275,
                  "endLine": 210,
                  "endColumn": 279,
                  "snippet": {
                    "text": " startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specifi",
                    "rendered": {
                      "text": " startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specifi",
                      "markdown": "` startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specifi`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 285,
                  "endLine": 208,
                  "endColumn": 289,
                  "snippet": {
                    "text": "/p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages ",
                    "rendered": {
                      "text": "/p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages ",
                      "markdown": "`/p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N huge OS pages (1GiB pages) at startup </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages `"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 245,
                  "endLine": 206,
                  "endColumn": 249,
                  "snippet": {
                    "text": "doc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N h",
                    "rendered": {
                      "text": "doc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N h",
                      "markdown": "`doc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warning messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caca7ed041be3b0b9d0b82432c7bf41af2\"></a>mi_option_reserve_huge_os_pages&#160;</td><td class=\"fielddoc\"><p>reserve N h`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 243,
                  "endLine": 204,
                  "endColumn": 247,
                  "snippet": {
                    "text": "ss=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warnin",
                    "rendered": {
                      "text": "ss=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warnin",
                      "markdown": "`ss=\"fielddoc\"><p>Print verbose messages. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caec6ecbe29d46a48205ed8823a8a52a6a\"></a>mi_option_max_errors&#160;</td><td class=\"fielddoc\"><p>issue at most N error messages </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caf9595921087e942602ee079158762665\"></a>mi_option_max_warnings&#160;</td><td class=\"fielddoc\"><p>issue at most N warnin`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 294,
                  "endLine": 210,
                  "endColumn": 300,
                  "snippet": {
                    "text": "</tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memor",
                    "rendered": {
                      "text": "</tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memor",
                      "markdown": "`</tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\" name=\"ggafebf7ed116adb38ae5218bc3ce06884caa13e7926d4339d2aa6fbf61d4473fd5c\"></a>mi_option_reserve_huge_os_pages_at&#160;</td><td class=\"fielddoc\"><p>Reserve N huge OS pages at a specific NUMA node N. </p>\n</td></tr>\n<tr><td class=\"fieldname\"><a id=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\" name=\"ggafebf7ed116adb38ae5218bc3ce06884cafbf4999c828cf79a0fb2de65d23f7333\"></a>mi_option_reserve_os_memory&#160;</td><td class=\"fielddoc\"><p>reserve specified amount of OS memor`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__options.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__typed.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/alpine/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN cmake ../.. -DMI_DEBUG_FULL=ON\nRUN make -j\nRUN make test\n\nCMD [\"/bin/sh\"]",
                    "rendered": {
                      "text": "RUN cmake ../.. -DMI_DEBUG_FULL=ON\nRUN make -j\nRUN make test\n\nCMD [\"/bin/sh\"]",
                      "markdown": "`RUN cmake ../.. -DMI_DEBUG_FULL=ON\nRUN make -j\nRUN make test\n\nCMD [\"/bin/sh\"]`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/alpine/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "WORKDIR /home/dev\n\n# Get mimalloc\nRUN git clone https://github.com/microsoft/mimalloc -b dev-slice\nRUN mkdir -p mimalloc/out/release\nRUN mkdir -p mimalloc/out/debug\n\n",
                    "rendered": {
                      "text": "WORKDIR /home/dev\n\n# Get mimalloc\nRUN git clone https://github.com/microsoft/mimalloc -b dev-slice\nRUN mkdir -p mimalloc/out/release\nRUN mkdir -p mimalloc/out/debug\n\n",
                      "markdown": "`WORKDIR /home/dev\n\n# Get mimalloc\nRUN git clone https://github.com/microsoft/mimalloc -b dev-slice\nRUN mkdir -p mimalloc/out/release\nRUN mkdir -p mimalloc/out/debug\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/alpine/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 11,
                  "endLine": 8,
                  "snippet": {
                    "text": "# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n\n",
                    "rendered": {
                      "text": "# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n\n",
                      "markdown": "`# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docker/alpine/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 11,
                  "endLine": 7,
                  "snippet": {
                    "text": "\n# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n",
                    "rendered": {
                      "text": "\n# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n",
                      "markdown": "`\n# Install tools\nRUN apk add build-base make cmake\nRUN apk add git\nRUN apk add vim\n\nRUN mkdir -p  /home/dev\nWORKDIR /home/dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/os.c"
                },
                "region": {
                  "startLine": 615,
                  "startColumn": 75,
                  "endLine": 615,
                  "endColumn": 79,
                  "snippet": {
                    "text": "    if (p != addr) {\n      // no success, issue a warning and break\n      if (p != NULL) {\n        _mi_warning_message(\"could not allocate contiguous huge OS page %zu at %p\\n\", page, addr);\n        mi_os_prim_free(p, MI_HUGE_OS_PAGE_SIZE, true, &_mi_stats_main);\n      }\n      break;\n",
                    "rendered": {
                      "text": "    if (p != addr) {\n      // no success, issue a warning and break\n      if (p != NULL) {\n        _mi_warning_message(\"could not allocate contiguous huge OS page %zu at %p\\n\", page, addr);\n        mi_os_prim_free(p, MI_HUGE_OS_PAGE_SIZE, true, &_mi_stats_main);\n      }\n      break;\n",
                      "markdown": "`    if (p != addr) {\n      // no success, issue a warning and break\n      if (p != NULL) {\n        _mi_warning_message(\"could not allocate contiguous huge OS page %zu at %p\\n\", page, addr);\n        mi_os_prim_free(p, MI_HUGE_OS_PAGE_SIZE, true, &_mi_stats_main);\n      }\n      break;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/os.c"
                },
                "region": {
                  "startLine": 388,
                  "startColumn": 11,
                  "endLine": 388,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    : mi_align_down_ptr(addr, _mi_os_page_size()));\n  void* end = (conservative ? mi_align_down_ptr((uint8_t*)addr + size, _mi_os_page_size())\n    : mi_align_up_ptr((uint8_t*)addr + size, _mi_os_page_size()));\n  ptrdiff_t diff = (uint8_t*)end - (uint8_t*)start;\n  if (diff <= 0) return NULL;\n\n  mi_assert_internal((conservative && (size_t)diff <= size) || (!conservative && (size_t)diff >= size));\n",
                    "rendered": {
                      "text": "    : mi_align_down_ptr(addr, _mi_os_page_size()));\n  void* end = (conservative ? mi_align_down_ptr((uint8_t*)addr + size, _mi_os_page_size())\n    : mi_align_up_ptr((uint8_t*)addr + size, _mi_os_page_size()));\n  ptrdiff_t diff = (uint8_t*)end - (uint8_t*)start;\n  if (diff <= 0) return NULL;\n\n  mi_assert_internal((conservative && (size_t)diff <= size) || (!conservative && (size_t)diff >= size));\n",
                      "markdown": "`    : mi_align_down_ptr(addr, _mi_os_page_size()));\n  void* end = (conservative ? mi_align_down_ptr((uint8_t*)addr + size, _mi_os_page_size())\n    : mi_align_up_ptr((uint8_t*)addr + size, _mi_os_page_size()));\n  ptrdiff_t diff = (uint8_t*)end - (uint8_t*)start;\n  if (diff <= 0) return NULL;\n\n  mi_assert_internal((conservative && (size_t)diff <= size) || (!conservative && (size_t)diff >= size));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/SECURITY.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 185,
                  "endLine": 17,
                  "endColumn": 189,
                  "snippet": {
                    "text": "ease download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  *",
                    "rendered": {
                      "text": "ease download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  *",
                      "markdown": "`ease download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  *`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/SECURITY.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 76,
                  "endLine": 13,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/security.md/msrc/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\n",
                    "rendered": {
                      "text": "\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/security.md/msrc/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\n",
                      "markdown": "`\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/security.md/msrc/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 1748,
                  "endLine": 126,
                  "endColumn": 1752,
                  "snippet": {
                    "text": "he huge OS page area (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any memory is now written in that area, the OS will cop",
                    "rendered": {
                      "text": "he huge OS page area (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any memory is now written in that area, the OS will cop",
                      "markdown": "`he huge OS page area (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any memory is now written in that area, the OS will cop`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 1711,
                  "endLine": 126,
                  "endColumn": 1715,
                  "snippet": {
                    "text": "e just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any memory is now ",
                    "rendered": {
                      "text": "e just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any memory is now ",
                      "markdown": "`e just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any memory is now `"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 521,
                  "endLine": 126,
                  "endColumn": 525,
                  "snippet": {
                    "text": "vement on big workloads. Usually it is better to not use <code>MIMALLOC_ALLOW_LARGE_OS_PAGES=1</code> in combination with this setting. Just like large OS pages, use with care as reserving contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at startup only once). Note that we usually need to explicitly give permission for huge OS pages (as on <a href=\"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/enable-the-lock-pages-in-memory-option-windows?view=sql-server-2017\">Windows</a> and <a href=\"https://access.redhat.com",
                    "rendered": {
                      "text": "vement on big workloads. Usually it is better to not use <code>MIMALLOC_ALLOW_LARGE_OS_PAGES=1</code> in combination with this setting. Just like large OS pages, use with care as reserving contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at startup only once). Note that we usually need to explicitly give permission for huge OS pages (as on <a href=\"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/enable-the-lock-pages-in-memory-option-windows?view=sql-server-2017\">Windows</a> and <a href=\"https://access.redhat.com",
                      "markdown": "`vement on big workloads. Usually it is better to not use <code>MIMALLOC_ALLOW_LARGE_OS_PAGES=1</code> in combination with this setting. Just like large OS pages, use with care as reserving contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at startup only once). Note that we usually need to explicitly give permission for huge OS pages (as on <a href=\"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/enable-the-lock-pages-in-memory-option-windows?view=sql-server-2017\">Windows</a> and <a href=\"https://access.redhat.com`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 146,
                  "endLine": 126,
                  "endColumn": 150,
                  "snippet": {
                    "text": "t can have fragmented memory (for that reason, we generally recommend to use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES</code> instead whenever possible).</li>\n<li><code>MIMALLOC_RESERVE_HUGE_OS_PAGES=N</code>: where <code>N</code> is the number of 1GiB <em>huge</em> OS pages. This reserves the huge pages at startup and sometimes this can give a large (latency) performance improvement on big workloads. Usually it is better to not use <code>MIMALLOC_ALLOW_LARGE_OS_PAGES=1</code> in combination with this setting. Just like large OS pages, use with care as reserving contiguous physical memory can take a lo",
                    "rendered": {
                      "text": "t can have fragmented memory (for that reason, we generally recommend to use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES</code> instead whenever possible).</li>\n<li><code>MIMALLOC_RESERVE_HUGE_OS_PAGES=N</code>: where <code>N</code> is the number of 1GiB <em>huge</em> OS pages. This reserves the huge pages at startup and sometimes this can give a large (latency) performance improvement on big workloads. Usually it is better to not use <code>MIMALLOC_ALLOW_LARGE_OS_PAGES=1</code> in combination with this setting. Just like large OS pages, use with care as reserving contiguous physical memory can take a lo",
                      "markdown": "`t can have fragmented memory (for that reason, we generally recommend to use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES</code> instead whenever possible).</li>\n<li><code>MIMALLOC_RESERVE_HUGE_OS_PAGES=N</code>: where <code>N</code> is the number of 1GiB <em>huge</em> OS pages. This reserves the huge pages at startup and sometimes this can give a large (latency) performance improvement on big workloads. Usually it is better to not use <code>MIMALLOC_ALLOW_LARGE_OS_PAGES=1</code> in combination with this setting. Just like large OS pages, use with care as reserving contiguous physical memory can take a lo`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 143,
                  "endLine": 124,
                  "endColumn": 147,
                  "snippet": {
                    "text": "those ranges (to make the underlying physical memory available to other processes).</li>\n</ul>\n<p>Further options for large workloads and services:</p>\n<ul>\n<li><code>MIMALLOC_USE_NUMA_NODES=N</code>: pretend there are at most <code>N</code> NUMA nodes. If not set, the actual NUMA nodes are detected at runtime. Setting <code>N</code> to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than the actual NUMA nodes is fine and will only cause threads to potentially allocate more memory across actual NUMA nodes (but this can happen in any case as NUMA local allocati",
                    "rendered": {
                      "text": "those ranges (to make the underlying physical memory available to other processes).</li>\n</ul>\n<p>Further options for large workloads and services:</p>\n<ul>\n<li><code>MIMALLOC_USE_NUMA_NODES=N</code>: pretend there are at most <code>N</code> NUMA nodes. If not set, the actual NUMA nodes are detected at runtime. Setting <code>N</code> to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than the actual NUMA nodes is fine and will only cause threads to potentially allocate more memory across actual NUMA nodes (but this can happen in any case as NUMA local allocati",
                      "markdown": "`those ranges (to make the underlying physical memory available to other processes).</li>\n</ul>\n<p>Further options for large workloads and services:</p>\n<ul>\n<li><code>MIMALLOC_USE_NUMA_NODES=N</code>: pretend there are at most <code>N</code> NUMA nodes. If not set, the actual NUMA nodes are detected at runtime. Setting <code>N</code> to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than the actual NUMA nodes is fine and will only cause threads to potentially allocate more memory across actual NUMA nodes (but this can happen in any case as NUMA local allocati`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 61,
                  "endLine": 124,
                  "endColumn": 65,
                  "snippet": {
                    "text": "ory, in other words, it tries to keep virtual address ranges and decommits within those ranges (to make the underlying physical memory available to other processes).</li>\n</ul>\n<p>Further options for large workloads and services:</p>\n<ul>\n<li><code>MIMALLOC_USE_NUMA_NODES=N</code>: pretend there are at most <code>N</code> NUMA nodes. If not set, the actual NUMA nodes are detected at runtime. Setting <code>N</code> to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than the actual NUMA nodes is fine and will only cause threads to potentially allocate more memor",
                    "rendered": {
                      "text": "ory, in other words, it tries to keep virtual address ranges and decommits within those ranges (to make the underlying physical memory available to other processes).</li>\n</ul>\n<p>Further options for large workloads and services:</p>\n<ul>\n<li><code>MIMALLOC_USE_NUMA_NODES=N</code>: pretend there are at most <code>N</code> NUMA nodes. If not set, the actual NUMA nodes are detected at runtime. Setting <code>N</code> to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than the actual NUMA nodes is fine and will only cause threads to potentially allocate more memor",
                      "markdown": "`ory, in other words, it tries to keep virtual address ranges and decommits within those ranges (to make the underlying physical memory available to other processes).</li>\n</ul>\n<p>Further options for large workloads and services:</p>\n<ul>\n<li><code>MIMALLOC_USE_NUMA_NODES=N</code>: pretend there are at most <code>N</code> NUMA nodes. If not set, the actual NUMA nodes are detected at runtime. Setting <code>N</code> to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than the actual NUMA nodes is fine and will only cause threads to potentially allocate more memor`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 633,
                  "endLine": 119,
                  "endColumn": 637,
                  "snippet": {
                    "text": "tting <code>N</code> to <code>0</code> purges immediately when a page becomes unused which can improve memory usage but also decreases performance. Setting <code>N</code> to a higher value like <code>100</code> can improve performance (sometimes by a lot) at the cost of potentially using more memory at times. Setting it to <code>-1</code> disables purging completely.</li>\n<li><code>MIMALLOC_PURGE_DECOMMITS=1</code>: By default \"purging\" memory means unused memory is decommitted (<code>MEM_DECOMMIT</code> on Windows, <code>MADV_DONTNEED</code> (which decresease rss immediately) on <code>mmap</code>",
                    "rendered": {
                      "text": "tting <code>N</code> to <code>0</code> purges immediately when a page becomes unused which can improve memory usage but also decreases performance. Setting <code>N</code> to a higher value like <code>100</code> can improve performance (sometimes by a lot) at the cost of potentially using more memory at times. Setting it to <code>-1</code> disables purging completely.</li>\n<li><code>MIMALLOC_PURGE_DECOMMITS=1</code>: By default \"purging\" memory means unused memory is decommitted (<code>MEM_DECOMMIT</code> on Windows, <code>MADV_DONTNEED</code> (which decresease rss immediately) on <code>mmap</code>",
                      "markdown": "`tting <code>N</code> to <code>0</code> purges immediately when a page becomes unused which can improve memory usage but also decreases performance. Setting <code>N</code> to a higher value like <code>100</code> can improve performance (sometimes by a lot) at the cost of potentially using more memory at times. Setting it to <code>-1</code> disables purging completely.</li>\n<li><code>MIMALLOC_PURGE_DECOMMITS=1</code>: By default \"purging\" memory means unused memory is decommitted (<code>MEM_DECOMMIT</code> on Windows, <code>MADV_DONTNEED</code> (which decresease rss immediately) on <code>mmap</code>`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 588,
                  "endLine": 119,
                  "endColumn": 592,
                  "snippet": {
                    "text": "ecially in long running (server) programs. Setting <code>N</code> to <code>0</code> purges immediately when a page becomes unused which can improve memory usage but also decreases performance. Setting <code>N</code> to a higher value like <code>100</code> can improve performance (sometimes by a lot) at the cost of potentially using more memory at times. Setting it to <code>-1</code> disables purging completely.</li>\n<li><code>MIMALLOC_PURGE_DECOMMITS=1</code>: By default \"purging\" memory means unused memory is decommitted (<code>MEM_DECOMMIT</code> on Windows, <code>MADV_DONTNEED</code> (which dec",
                    "rendered": {
                      "text": "ecially in long running (server) programs. Setting <code>N</code> to <code>0</code> purges immediately when a page becomes unused which can improve memory usage but also decreases performance. Setting <code>N</code> to a higher value like <code>100</code> can improve performance (sometimes by a lot) at the cost of potentially using more memory at times. Setting it to <code>-1</code> disables purging completely.</li>\n<li><code>MIMALLOC_PURGE_DECOMMITS=1</code>: By default \"purging\" memory means unused memory is decommitted (<code>MEM_DECOMMIT</code> on Windows, <code>MADV_DONTNEED</code> (which dec",
                      "markdown": "`ecially in long running (server) programs. Setting <code>N</code> to <code>0</code> purges immediately when a page becomes unused which can improve memory usage but also decreases performance. Setting <code>N</code> to a higher value like <code>100</code> can improve performance (sometimes by a lot) at the cost of potentially using more memory at times. Setting it to <code>-1</code> disables purging completely.</li>\n<li><code>MIMALLOC_PURGE_DECOMMITS=1</code>: By default \"purging\" memory means unused memory is decommitted (<code>MEM_DECOMMIT</code> on Windows, <code>MADV_DONTNEED</code> (which dec`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 382,
                  "endLine": 118,
                  "endColumn": 386,
                  "snippet": {
                    "text": "e arenas (usually 1GiB) from which mimalloc allocates segments and pages. Set this to 2 (default) to only enable this on overcommit systems (e.g. Linux). Set this to 1 to enable explicitly on other systems as well (like Windows or macOS) which may improve performance (as the whole arena is committed at once). Note that eager commit only increases the commit but not the actual the peak resident set (rss) so it is generally ok to enable this.</li>\n<li><code>MIMALLOC_PURGE_DELAY=N</code>: the delay in <code>N</code> milli-seconds (by default <code>10</code>) after which mimalloc will purge OS pages t",
                    "rendered": {
                      "text": "e arenas (usually 1GiB) from which mimalloc allocates segments and pages. Set this to 2 (default) to only enable this on overcommit systems (e.g. Linux). Set this to 1 to enable explicitly on other systems as well (like Windows or macOS) which may improve performance (as the whole arena is committed at once). Note that eager commit only increases the commit but not the actual the peak resident set (rss) so it is generally ok to enable this.</li>\n<li><code>MIMALLOC_PURGE_DELAY=N</code>: the delay in <code>N</code> milli-seconds (by default <code>10</code>) after which mimalloc will purge OS pages t",
                      "markdown": "`e arenas (usually 1GiB) from which mimalloc allocates segments and pages. Set this to 2 (default) to only enable this on overcommit systems (e.g. Linux). Set this to 1 to enable explicitly on other systems as well (like Windows or macOS) which may improve performance (as the whole arena is committed at once). Note that eager commit only increases the commit but not the actual the peak resident set (rss) so it is generally ok to enable this.</li>\n<li><code>MIMALLOC_PURGE_DELAY=N</code>: the delay in <code>N</code> milli-seconds (by default <code>10</code>) after which mimalloc will purge OS pages t`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 1767,
                  "endLine": 126,
                  "endColumn": 1773,
                  "snippet": {
                    "text": "a (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any memory is now written in that area, the OS will copy the entire 1GiB hug",
                    "rendered": {
                      "text": "a (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any memory is now written in that area, the OS will copy the entire 1GiB hug",
                      "markdown": "`a (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any memory is now written in that area, the OS will copy the entire 1GiB hug`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 1696,
                  "endLine": 126,
                  "endColumn": 1702,
                  "snippet": {
                    "text": "ved and allocate just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any m",
                    "rendered": {
                      "text": "ved and allocate just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any m",
                      "markdown": "`ved and allocate just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned to physical memory). The huge pages are usually allocated evenly among NUMA nodes. We can use <code>MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N</code> where <code>N</code> is the numa node (starting at 0) to allocate all the huge pages at a specific numa node instead.</li>\n</ul>\n<p>Use caution when using <code>fork</code> in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write for all pages in the original process including the huge OS pages. When any m`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 452,
                  "endLine": 126,
                  "endColumn": 458,
                  "snippet": {
                    "text": "artup and sometimes this can give a large (latency) performance improvement on big workloads. Usually it is better to not use <code>MIMALLOC_ALLOW_LARGE_OS_PAGES=1</code> in combination with this setting. Just like large OS pages, use with care as reserving contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at startup only once). Note that we usually need to explicitly give permission for huge OS pages (as on <a href=\"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/enable-the-lock-pages-in-memory-option-windows?view=",
                    "rendered": {
                      "text": "artup and sometimes this can give a large (latency) performance improvement on big workloads. Usually it is better to not use <code>MIMALLOC_ALLOW_LARGE_OS_PAGES=1</code> in combination with this setting. Just like large OS pages, use with care as reserving contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at startup only once). Note that we usually need to explicitly give permission for huge OS pages (as on <a href=\"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/enable-the-lock-pages-in-memory-option-windows?view=",
                      "markdown": "`artup and sometimes this can give a large (latency) performance improvement on big workloads. Usually it is better to not use <code>MIMALLOC_ALLOW_LARGE_OS_PAGES=1</code> in combination with this setting. Just like large OS pages, use with care as reserving contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at startup only once). Note that we usually need to explicitly give permission for huge OS pages (as on <a href=\"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/enable-the-lock-pages-in-memory-option-windows?view=`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/environment.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 1433,
                  "startColumn": 102,
                  "endLine": 1433,
                  "endColumn": 106,
                  "snippet": {
                    "text": "  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>a pointer to newly allocated zero-initialized memory of at least <em>size</em> bytes, or <em>NULL</em> if out of memory. This function is meant for use in run-time systems for best performance and does not check if <em>size</em> was indeed small &ndash; use with care! </dd></dl>\n\n</div>\n</div>\n",
                    "rendered": {
                      "text": "  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>a pointer to newly allocated zero-initialized memory of at least <em>size</em> bytes, or <em>NULL</em> if out of memory. This function is meant for use in run-time systems for best performance and does not check if <em>size</em> was indeed small &ndash; use with care! </dd></dl>\n\n</div>\n</div>\n",
                      "markdown": "`  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>a pointer to newly allocated zero-initialized memory of at least <em>size</em> bytes, or <em>NULL</em> if out of memory. This function is meant for use in run-time systems for best performance and does not check if <em>size</em> was indeed small &ndash; use with care! </dd></dl>\n\n</div>\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 1429,
                  "startColumn": 68,
                  "endLine": 1429,
                  "endColumn": 72,
                  "snippet": {
                    "text": "<p>Allocate a zero initialized small object. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>The size in bytes, can be at most <a class=\"el\" href=\"#ga1ea64283508718d9d645c38efc2f4305\" title=\"Maximum size allowed for small allocations in mi_malloc_small and mi_zalloc_small (usually 128*sizeof...\">MI_SMALL_SIZE_MAX</a>. </td></tr>\n  </table>\n  </dd>\n</dl>\n",
                    "rendered": {
                      "text": "<p>Allocate a zero initialized small object. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>The size in bytes, can be at most <a class=\"el\" href=\"#ga1ea64283508718d9d645c38efc2f4305\" title=\"Maximum size allowed for small allocations in mi_malloc_small and mi_zalloc_small (usually 128*sizeof...\">MI_SMALL_SIZE_MAX</a>. </td></tr>\n  </table>\n  </dd>\n</dl>\n",
                      "markdown": "`<p>Allocate a zero initialized small object. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>The size in bytes, can be at most <a class=\"el\" href=\"#ga1ea64283508718d9d645c38efc2f4305\" title=\"Maximum size allowed for small allocations in mi_malloc_small and mi_zalloc_small (usually 128*sizeof...\">MI_SMALL_SIZE_MAX</a>. </td></tr>\n  </table>\n  </dd>\n</dl>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 1402,
                  "startColumn": 101,
                  "endLine": 1402,
                  "endColumn": 105,
                  "snippet": {
                    "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>Returns the available bytes in the memory block, or 0 if <em>p</em> was <em>NULL</em>.</dd></dl>\n<p>The returned size can be used to call <em>mi_expand</em> successfully. The returned size is always at least equal to the allocated size of <em>p</em>.</p>\n<dl class=\"section see\"><dt>See also</dt><dd><a href=\"https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/msize?view=vs-2017\">_msize</a> (Windows) </dd>\n<dd>\n<a href=\"http://man7.org/linux/man-pages/man3/malloc_usable_size.3.html\">malloc_usable_size</a> (Linux) </dd>\n",
                    "rendered": {
                      "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>Returns the available bytes in the memory block, or 0 if <em>p</em> was <em>NULL</em>.</dd></dl>\n<p>The returned size can be used to call <em>mi_expand</em> successfully. The returned size is always at least equal to the allocated size of <em>p</em>.</p>\n<dl class=\"section see\"><dt>See also</dt><dd><a href=\"https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/msize?view=vs-2017\">_msize</a> (Windows) </dd>\n<dd>\n<a href=\"http://man7.org/linux/man-pages/man3/malloc_usable_size.3.html\">malloc_usable_size</a> (Linux) </dd>\n",
                      "markdown": "`  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>Returns the available bytes in the memory block, or 0 if <em>p</em> was <em>NULL</em>.</dd></dl>\n<p>The returned size can be used to call <em>mi_expand</em> successfully. The returned size is always at least equal to the allocated size of <em>p</em>.</p>\n<dl class=\"section see\"><dt>See also</dt><dd><a href=\"https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/msize?view=vs-2017\">_msize</a> (Windows) </dd>\n<dd>\n<a href=\"http://man7.org/linux/man-pages/man3/malloc_usable_size.3.html\">malloc_usable_size</a> (Linux) </dd>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 1029,
                  "startColumn": 112,
                  "endLine": 1029,
                  "endColumn": 116,
                  "snippet": {
                    "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Reserve <em>pages</em> of huge OS pages (1GiB) evenly divided over <em>numa_nodes</em> nodes, but stops after at most <code>timeout_msecs</code> seconds. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n",
                    "rendered": {
                      "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Reserve <em>pages</em> of huge OS pages (1GiB) evenly divided over <em>numa_nodes</em> nodes, but stops after at most <code>timeout_msecs</code> seconds. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n",
                      "markdown": "`      </table>\n</div><div class=\"memdoc\">\n\n<p>Reserve <em>pages</em> of huge OS pages (1GiB) evenly divided over <em>numa_nodes</em> nodes, but stops after at most <code>timeout_msecs</code> seconds. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 97,
                  "endLine": 946,
                  "endColumn": 101,
                  "snippet": {
                    "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n    <tr><td class=\"paramname\">numa_node</td><td>The NUMA node where the memory is reserved (start at 0). Use -1 for no affinity. </td></tr>\n    <tr><td class=\"paramname\">timeout_msecs</td><td>Maximum number of milli-seconds to try reserving, or 0 for no timeout. </td></tr>\n  </table>\n  </dd>\n",
                    "rendered": {
                      "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n    <tr><td class=\"paramname\">numa_node</td><td>The NUMA node where the memory is reserved (start at 0). Use -1 for no affinity. </td></tr>\n    <tr><td class=\"paramname\">timeout_msecs</td><td>Maximum number of milli-seconds to try reserving, or 0 for no timeout. </td></tr>\n  </table>\n  </dd>\n",
                      "markdown": "`<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n    <tr><td class=\"paramname\">numa_node</td><td>The NUMA node where the memory is reserved (start at 0). Use -1 for no affinity. </td></tr>\n    <tr><td class=\"paramname\">timeout_msecs</td><td>Maximum number of milli-seconds to try reserving, or 0 for no timeout. </td></tr>\n  </table>\n  </dd>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 942,
                  "startColumn": 99,
                  "endLine": 942,
                  "endColumn": 103,
                  "snippet": {
                    "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n",
                    "rendered": {
                      "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n",
                      "markdown": "`      </table>\n</div><div class=\"memdoc\">\n\n<p>Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 942,
                  "startColumn": 49,
                  "endLine": 942,
                  "endColumn": 53,
                  "snippet": {
                    "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n",
                    "rendered": {
                      "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n",
                      "markdown": "`      </table>\n</div><div class=\"memdoc\">\n\n<p>Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 846,
                  "startColumn": 619,
                  "endLine": 846,
                  "endColumn": 623,
                  "snippet": {
                    "text": " <em>heartbeat</em> parameter is monotonically increasing and guaranteed to be deterministic if the program allocates deterministically. The <em>deferred_free</em> function is guaranteed to be called deterministically after some number of allocations (regardless of freeing or available free memory). At most one <em>deferred_free</em> function can be active. </p>\n\n</div>\n</div>\n<a id=\"gaa1d55e0e894be240827e5d87ec3a1f45\" name=\"gaa1d55e0e894be240827e5d87ec3a1f45\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa1d55e0e894be240827e5d87ec3a1f45\">&#9670;&#160;</a></span>mi_register_error()",
                    "rendered": {
                      "text": " <em>heartbeat</em> parameter is monotonically increasing and guaranteed to be deterministic if the program allocates deterministically. The <em>deferred_free</em> function is guaranteed to be called deterministically after some number of allocations (regardless of freeing or available free memory). At most one <em>deferred_free</em> function can be active. </p>\n\n</div>\n</div>\n<a id=\"gaa1d55e0e894be240827e5d87ec3a1f45\" name=\"gaa1d55e0e894be240827e5d87ec3a1f45\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa1d55e0e894be240827e5d87ec3a1f45\">&#9670;&#160;</a></span>mi_register_error()",
                      "markdown": "` <em>heartbeat</em> parameter is monotonically increasing and guaranteed to be deterministic if the program allocates deterministically. The <em>deferred_free</em> function is guaranteed to be called deterministically after some number of allocations (regardless of freeing or available free memory). At most one <em>deferred_free</em> function can be active. </p>\n\n</div>\n</div>\n<a id=\"gaa1d55e0e894be240827e5d87ec3a1f45\" name=\"gaa1d55e0e894be240827e5d87ec3a1f45\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa1d55e0e894be240827e5d87ec3a1f45\">&#9670;&#160;</a></span>mi_register_error()`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 626,
                  "startColumn": 85,
                  "endLine": 626,
                  "endColumn": 89,
                  "snippet": {
                    "text": "  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>a pointer to newly allocated memory of at least <em>size</em> bytes, or <em>NULL</em> if out of memory. This function is meant for use in run-time systems for best performance and does not check if <em>size</em> was indeed small &ndash; use with care! </dd></dl>\n\n</div>\n</div>\n",
                    "rendered": {
                      "text": "  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>a pointer to newly allocated memory of at least <em>size</em> bytes, or <em>NULL</em> if out of memory. This function is meant for use in run-time systems for best performance and does not check if <em>size</em> was indeed small &ndash; use with care! </dd></dl>\n\n</div>\n</div>\n",
                      "markdown": "`  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>a pointer to newly allocated memory of at least <em>size</em> bytes, or <em>NULL</em> if out of memory. This function is meant for use in run-time systems for best performance and does not check if <em>size</em> was indeed small &ndash; use with care! </dd></dl>\n\n</div>\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 68,
                  "endLine": 622,
                  "endColumn": 72,
                  "snippet": {
                    "text": "<p>Allocate a small object. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>The size in bytes, can be at most <a class=\"el\" href=\"#ga1ea64283508718d9d645c38efc2f4305\" title=\"Maximum size allowed for small allocations in mi_malloc_small and mi_zalloc_small (usually 128*sizeof...\">MI_SMALL_SIZE_MAX</a>. </td></tr>\n  </table>\n  </dd>\n</dl>\n",
                    "rendered": {
                      "text": "<p>Allocate a small object. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>The size in bytes, can be at most <a class=\"el\" href=\"#ga1ea64283508718d9d645c38efc2f4305\" title=\"Maximum size allowed for small allocations in mi_malloc_small and mi_zalloc_small (usually 128*sizeof...\">MI_SMALL_SIZE_MAX</a>. </td></tr>\n  </table>\n  </dd>\n</dl>\n",
                      "markdown": "`<p>Allocate a small object. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>The size in bytes, can be at most <a class=\"el\" href=\"#ga1ea64283508718d9d645c38efc2f4305\" title=\"Maximum size allowed for small allocations in mi_malloc_small and mi_zalloc_small (usually 128*sizeof...\">MI_SMALL_SIZE_MAX</a>. </td></tr>\n  </table>\n  </dd>\n</dl>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 66,
                  "endLine": 346,
                  "endColumn": 70,
                  "snippet": {
                    "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">msg</td><td>Message to output. </td></tr>\n    <tr><td class=\"paramname\">arg</td><td>Argument that was passed at registration to hold extra state.</td></tr>\n  </table>\n  </dd>\n</dl>\n",
                    "rendered": {
                      "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">msg</td><td>Message to output. </td></tr>\n    <tr><td class=\"paramname\">arg</td><td>Argument that was passed at registration to hold extra state.</td></tr>\n  </table>\n  </dd>\n</dl>\n",
                      "markdown": "`<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">msg</td><td>Message to output. </td></tr>\n    <tr><td class=\"paramname\">arg</td><td>Argument that was passed at registration to hold extra state.</td></tr>\n  </table>\n  </dd>\n</dl>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 66,
                  "endLine": 322,
                  "endColumn": 70,
                  "snippet": {
                    "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">err</td><td>Error code (see <a class=\"el\" href=\"#gaa1d55e0e894be240827e5d87ec3a1f45\" title=\"Register an error callback function.\">mi_register_error()</a> for a complete list). </td></tr>\n    <tr><td class=\"paramname\">arg</td><td>Argument that was passed at registration to hold extra state.</td></tr>\n  </table>\n  </dd>\n</dl>\n",
                    "rendered": {
                      "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">err</td><td>Error code (see <a class=\"el\" href=\"#gaa1d55e0e894be240827e5d87ec3a1f45\" title=\"Register an error callback function.\">mi_register_error()</a> for a complete list). </td></tr>\n    <tr><td class=\"paramname\">arg</td><td>Argument that was passed at registration to hold extra state.</td></tr>\n  </table>\n  </dd>\n</dl>\n",
                      "markdown": "`<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">err</td><td>Error code (see <a class=\"el\" href=\"#gaa1d55e0e894be240827e5d87ec3a1f45\" title=\"Register an error callback function.\">mi_register_error()</a> for a complete list). </td></tr>\n    <tr><td class=\"paramname\">arg</td><td>Argument that was passed at registration to hold extra state.</td></tr>\n  </table>\n  </dd>\n</dl>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 66,
                  "endLine": 298,
                  "endColumn": 70,
                  "snippet": {
                    "text": "  <table class=\"params\">\n    <tr><td class=\"paramname\">force</td><td>If <em>true</em> all outstanding items should be freed. </td></tr>\n    <tr><td class=\"paramname\">heartbeat</td><td>A monotonically increasing count. </td></tr>\n    <tr><td class=\"paramname\">arg</td><td>Argument that was passed at registration to hold extra state.</td></tr>\n  </table>\n  </dd>\n</dl>\n",
                    "rendered": {
                      "text": "  <table class=\"params\">\n    <tr><td class=\"paramname\">force</td><td>If <em>true</em> all outstanding items should be freed. </td></tr>\n    <tr><td class=\"paramname\">heartbeat</td><td>A monotonically increasing count. </td></tr>\n    <tr><td class=\"paramname\">arg</td><td>Argument that was passed at registration to hold extra state.</td></tr>\n  </table>\n  </dd>\n</dl>\n",
                      "markdown": "`  <table class=\"params\">\n    <tr><td class=\"paramname\">force</td><td>If <em>true</em> all outstanding items should be freed. </td></tr>\n    <tr><td class=\"paramname\">heartbeat</td><td>A monotonically increasing count. </td></tr>\n    <tr><td class=\"paramname\">arg</td><td>Argument that was passed at registration to hold extra state.</td></tr>\n  </table>\n  </dd>\n</dl>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 207,
                  "endLine": 202,
                  "endColumn": 211,
                  "snippet": {
                    "text": "i_reserve_huge_os_pages_at</a> (size_t pages, int numa_node, size_t timeout_msecs)</td></tr>\n<tr class=\"memdesc:ga7795a13d20087447281858d2c771cca1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds.  <br /></td></tr>\n<tr class=\"separator:ga7795a13d20087447281858d2c771cca1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:gaad25050b19f30cd79397b227e0157a3f\" id=\"r_gaad25050b19f30cd79397b227e0157a3f\"><td class=\"memItemLeft\" align=\"ri",
                    "rendered": {
                      "text": "i_reserve_huge_os_pages_at</a> (size_t pages, int numa_node, size_t timeout_msecs)</td></tr>\n<tr class=\"memdesc:ga7795a13d20087447281858d2c771cca1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds.  <br /></td></tr>\n<tr class=\"separator:ga7795a13d20087447281858d2c771cca1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:gaad25050b19f30cd79397b227e0157a3f\" id=\"r_gaad25050b19f30cd79397b227e0157a3f\"><td class=\"memItemLeft\" align=\"ri",
                      "markdown": "`i_reserve_huge_os_pages_at</a> (size_t pages, int numa_node, size_t timeout_msecs)</td></tr>\n<tr class=\"memdesc:ga7795a13d20087447281858d2c771cca1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds.  <br /></td></tr>\n<tr class=\"separator:ga7795a13d20087447281858d2c771cca1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:gaad25050b19f30cd79397b227e0157a3f\" id=\"r_gaad25050b19f30cd79397b227e0157a3f\"><td class=\"memItemLeft\" align=\"ri`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 157,
                  "endLine": 202,
                  "endColumn": 161,
                  "snippet": {
                    "text": "=\"el\" href=\"#ga7795a13d20087447281858d2c771cca1\">mi_reserve_huge_os_pages_at</a> (size_t pages, int numa_node, size_t timeout_msecs)</td></tr>\n<tr class=\"memdesc:ga7795a13d20087447281858d2c771cca1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds.  <br /></td></tr>\n<tr class=\"separator:ga7795a13d20087447281858d2c771cca1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:gaad25050b19f30cd79397b227e0157a3f\" id=\"r_gaad25050b19f30cd79",
                    "rendered": {
                      "text": "=\"el\" href=\"#ga7795a13d20087447281858d2c771cca1\">mi_reserve_huge_os_pages_at</a> (size_t pages, int numa_node, size_t timeout_msecs)</td></tr>\n<tr class=\"memdesc:ga7795a13d20087447281858d2c771cca1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds.  <br /></td></tr>\n<tr class=\"separator:ga7795a13d20087447281858d2c771cca1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:gaad25050b19f30cd79397b227e0157a3f\" id=\"r_gaad25050b19f30cd79",
                      "markdown": "`=\"el\" href=\"#ga7795a13d20087447281858d2c771cca1\">mi_reserve_huge_os_pages_at</a> (size_t pages, int numa_node, size_t timeout_msecs)</td></tr>\n<tr class=\"memdesc:ga7795a13d20087447281858d2c771cca1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reserve <em>pages</em> of huge OS pages (1GiB) at a specific <em>numa_node</em>, but stops after at most <code>timeout_msecs</code> seconds.  <br /></td></tr>\n<tr class=\"separator:ga7795a13d20087447281858d2c771cca1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:gaad25050b19f30cd79397b227e0157a3f\" id=\"r_gaad25050b19f30cd79`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 220,
                  "endLine": 199,
                  "endColumn": 224,
                  "snippet": {
                    "text": "nterleave</a> (size_t pages, size_t numa_nodes, size_t timeout_msecs)</td></tr>\n<tr class=\"memdesc:ga3132f521fb756fc0e8ec0b74fb58df50\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reserve <em>pages</em> of huge OS pages (1GiB) evenly divided over <em>numa_nodes</em> nodes, but stops after at most <code>timeout_msecs</code> seconds.  <br /></td></tr>\n<tr class=\"separator:ga3132f521fb756fc0e8ec0b74fb58df50\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ga7795a13d20087447281858d2c771cca1\" id=\"r_ga7795a13d20087447281858d2c771cca1\"><td class=\"memItemLeft\" align=\"ri",
                    "rendered": {
                      "text": "nterleave</a> (size_t pages, size_t numa_nodes, size_t timeout_msecs)</td></tr>\n<tr class=\"memdesc:ga3132f521fb756fc0e8ec0b74fb58df50\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reserve <em>pages</em> of huge OS pages (1GiB) evenly divided over <em>numa_nodes</em> nodes, but stops after at most <code>timeout_msecs</code> seconds.  <br /></td></tr>\n<tr class=\"separator:ga3132f521fb756fc0e8ec0b74fb58df50\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ga7795a13d20087447281858d2c771cca1\" id=\"r_ga7795a13d20087447281858d2c771cca1\"><td class=\"memItemLeft\" align=\"ri",
                      "markdown": "`nterleave</a> (size_t pages, size_t numa_nodes, size_t timeout_msecs)</td></tr>\n<tr class=\"memdesc:ga3132f521fb756fc0e8ec0b74fb58df50\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reserve <em>pages</em> of huge OS pages (1GiB) evenly divided over <em>numa_nodes</em> nodes, but stops after at most <code>timeout_msecs</code> seconds.  <br /></td></tr>\n<tr class=\"separator:ga3132f521fb756fc0e8ec0b74fb58df50\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ga7795a13d20087447281858d2c771cca1\" id=\"r_ga7795a13d20087447281858d2c771cca1\"><td class=\"memItemLeft\" align=\"ri`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 1039,
                  "startColumn": 268,
                  "endLine": 1039,
                  "endColumn": 274,
                  "snippet": {
                    "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n",
                    "rendered": {
                      "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n",
                      "markdown": "`  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 1039,
                  "startColumn": 194,
                  "endLine": 1039,
                  "endColumn": 200,
                  "snippet": {
                    "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n",
                    "rendered": {
                      "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n",
                      "markdown": "`  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 952,
                  "startColumn": 268,
                  "endLine": 952,
                  "endColumn": 274,
                  "snippet": {
                    "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n",
                    "rendered": {
                      "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n",
                      "markdown": "`  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 952,
                  "startColumn": 194,
                  "endLine": 952,
                  "endColumn": 200,
                  "snippet": {
                    "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n",
                    "rendered": {
                      "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n",
                      "markdown": "`  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 if successful, <em>ENOMEM</em> if running out of memory, or <em>ETIMEDOUT</em> if timed out.</dd></dl>\n<p>The reserved memory is used by mimalloc to satisfy allocations. May quit before <em>timeout_msecs</em> are expired if it estimates it will take more than 1.5 times <em>timeout_msecs</em>. The time limit is needed because on some operating systems it can take a long time to reserve contiguous memory if the physical memory is fragmented. </p>\n\n</div>\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 56,
                  "endLine": 946,
                  "endColumn": 62,
                  "snippet": {
                    "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n    <tr><td class=\"paramname\">numa_node</td><td>The NUMA node where the memory is reserved (start at 0). Use -1 for no affinity. </td></tr>\n    <tr><td class=\"paramname\">timeout_msecs</td><td>Maximum number of milli-seconds to try reserving, or 0 for no timeout. </td></tr>\n  </table>\n  </dd>\n",
                    "rendered": {
                      "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n    <tr><td class=\"paramname\">numa_node</td><td>The NUMA node where the memory is reserved (start at 0). Use -1 for no affinity. </td></tr>\n    <tr><td class=\"paramname\">timeout_msecs</td><td>Maximum number of milli-seconds to try reserving, or 0 for no timeout. </td></tr>\n  </table>\n  </dd>\n",
                      "markdown": "`<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">pages</td><td>The number of 1GiB pages to reserve. </td></tr>\n    <tr><td class=\"paramname\">numa_node</td><td>The NUMA node where the memory is reserved (start at 0). Use -1 for no affinity. </td></tr>\n    <tr><td class=\"paramname\">timeout_msecs</td><td>Maximum number of milli-seconds to try reserving, or 0 for no timeout. </td></tr>\n  </table>\n  </dd>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 806,
                  "startColumn": 67,
                  "endLine": 806,
                  "endColumn": 73,
                  "snippet": {
                    "text": "ame\">elapsed_msecs</td><td>Optional. Elapsed wall-clock time of the process in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">user_msecs</td><td>Optional. User time in milli-seconds (as the sum over all threads). </td></tr>\n    <tr><td class=\"paramname\">system_msecs</td><td>Optional. System time in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">current_rss</td><td>Optional. Current working set size (touched pages). </td></tr>\n    <tr><td class=\"paramname\">peak_rss</td><td>Optional. Peak working set size (touched pages). </td></tr>\n    <tr><td class=\"paramname\">current_commit</td><t",
                    "rendered": {
                      "text": "ame\">elapsed_msecs</td><td>Optional. Elapsed wall-clock time of the process in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">user_msecs</td><td>Optional. User time in milli-seconds (as the sum over all threads). </td></tr>\n    <tr><td class=\"paramname\">system_msecs</td><td>Optional. System time in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">current_rss</td><td>Optional. Current working set size (touched pages). </td></tr>\n    <tr><td class=\"paramname\">peak_rss</td><td>Optional. Peak working set size (touched pages). </td></tr>\n    <tr><td class=\"paramname\">current_commit</td><t",
                      "markdown": "`ame\">elapsed_msecs</td><td>Optional. Elapsed wall-clock time of the process in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">user_msecs</td><td>Optional. User time in milli-seconds (as the sum over all threads). </td></tr>\n    <tr><td class=\"paramname\">system_msecs</td><td>Optional. System time in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">current_rss</td><td>Optional. Current working set size (touched pages). </td></tr>\n    <tr><td class=\"paramname\">peak_rss</td><td>Optional. Peak working set size (touched pages). </td></tr>\n    <tr><td class=\"paramname\">current_commit</td><t`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 805,
                  "startColumn": 63,
                  "endLine": 805,
                  "endColumn": 69,
                  "snippet": {
                    "text": "ormation (time and memory usage). </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">elapsed_msecs</td><td>Optional. Elapsed wall-clock time of the process in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">user_msecs</td><td>Optional. User time in milli-seconds (as the sum over all threads). </td></tr>\n    <tr><td class=\"paramname\">system_msecs</td><td>Optional. System time in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">current_rss</td><td>Optional. Current working set size (touched pages). </td></tr>\n    <tr><td class=\"paramna",
                    "rendered": {
                      "text": "ormation (time and memory usage). </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">elapsed_msecs</td><td>Optional. Elapsed wall-clock time of the process in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">user_msecs</td><td>Optional. User time in milli-seconds (as the sum over all threads). </td></tr>\n    <tr><td class=\"paramname\">system_msecs</td><td>Optional. System time in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">current_rss</td><td>Optional. Current working set size (touched pages). </td></tr>\n    <tr><td class=\"paramna",
                      "markdown": "`ormation (time and memory usage). </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">elapsed_msecs</td><td>Optional. Elapsed wall-clock time of the process in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">user_msecs</td><td>Optional. User time in milli-seconds (as the sum over all threads). </td></tr>\n    <tr><td class=\"paramname\">system_msecs</td><td>Optional. System time in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">current_rss</td><td>Optional. Current working set size (touched pages). </td></tr>\n    <tr><td class=\"paramna`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 804,
                  "startColumn": 80,
                  "endLine": 804,
                  "endColumn": 86,
                  "snippet": {
                    "text": "<p>Return process information (time and memory usage). </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">elapsed_msecs</td><td>Optional. Elapsed wall-clock time of the process in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">user_msecs</td><td>Optional. User time in milli-seconds (as the sum over all threads). </td></tr>\n    <tr><td class=\"paramname\">system_msecs</td><td>Optional. System time in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">current_rss</td><td>Optional. Current working set size (touched pages). </td></tr>\n",
                    "rendered": {
                      "text": "<p>Return process information (time and memory usage). </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">elapsed_msecs</td><td>Optional. Elapsed wall-clock time of the process in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">user_msecs</td><td>Optional. User time in milli-seconds (as the sum over all threads). </td></tr>\n    <tr><td class=\"paramname\">system_msecs</td><td>Optional. System time in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">current_rss</td><td>Optional. Current working set size (touched pages). </td></tr>\n",
                      "markdown": "`<p>Return process information (time and memory usage). </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">elapsed_msecs</td><td>Optional. Elapsed wall-clock time of the process in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">user_msecs</td><td>Optional. User time in milli-seconds (as the sum over all threads). </td></tr>\n    <tr><td class=\"paramname\">system_msecs</td><td>Optional. System time in milli-seconds. </td></tr>\n    <tr><td class=\"paramname\">current_rss</td><td>Optional. Current working set size (touched pages). </td></tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 677,
                  "startColumn": 72,
                  "endLine": 677,
                  "endColumn": 78,
                  "snippet": {
                    "text": "    <tr><td class=\"paramname\">is_committed</td><td>Is the area already committed? </td></tr>\n    <tr><td class=\"paramname\">is_large</td><td>Does it consist of large OS pages? Set this to <em>true</em> as well for memory that should not be decommitted or protected (like rdma etc.) </td></tr>\n    <tr><td class=\"paramname\">is_zero</td><td>Does the area consists of zero's? </td></tr>\n    <tr><td class=\"paramname\">numa_node</td><td>Possible associated numa node or <code>-1</code>. </td></tr>\n  </table>\n  </dd>\n</dl>\n",
                    "rendered": {
                      "text": "    <tr><td class=\"paramname\">is_committed</td><td>Is the area already committed? </td></tr>\n    <tr><td class=\"paramname\">is_large</td><td>Does it consist of large OS pages? Set this to <em>true</em> as well for memory that should not be decommitted or protected (like rdma etc.) </td></tr>\n    <tr><td class=\"paramname\">is_zero</td><td>Does the area consists of zero's? </td></tr>\n    <tr><td class=\"paramname\">numa_node</td><td>Possible associated numa node or <code>-1</code>. </td></tr>\n  </table>\n  </dd>\n</dl>\n",
                      "markdown": "`    <tr><td class=\"paramname\">is_committed</td><td>Is the area already committed? </td></tr>\n    <tr><td class=\"paramname\">is_large</td><td>Does it consist of large OS pages? Set this to <em>true</em> as well for memory that should not be decommitted or protected (like rdma etc.) </td></tr>\n    <tr><td class=\"paramname\">is_zero</td><td>Does the area consists of zero's? </td></tr>\n    <tr><td class=\"paramname\">numa_node</td><td>Possible associated numa node or <code>-1</code>. </td></tr>\n  </table>\n  </dd>\n</dl>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__extended.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/functions.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__zeroinit.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/heap.c"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 116,
                  "endLine": 378,
                  "endColumn": 120,
                  "snippet": {
                    "text": "  return;\n  #else\n  if (!heap->no_reclaim) {\n    _mi_warning_message(\"'mi_heap_destroy' called but ignored as the heap was not created with 'allow_destroy' (heap at %p)\\n\", heap);\n    // don't free in case it may contain reclaimed pages\n    mi_heap_delete(heap);\n  }\n",
                    "rendered": {
                      "text": "  return;\n  #else\n  if (!heap->no_reclaim) {\n    _mi_warning_message(\"'mi_heap_destroy' called but ignored as the heap was not created with 'allow_destroy' (heap at %p)\\n\", heap);\n    // don't free in case it may contain reclaimed pages\n    mi_heap_delete(heap);\n  }\n",
                      "markdown": "`  return;\n  #else\n  if (!heap->no_reclaim) {\n    _mi_warning_message(\"'mi_heap_destroy' called but ignored as the heap was not created with 'allow_destroy' (heap at %p)\\n\", heap);\n    // don't free in case it may contain reclaimed pages\n    mi_heap_delete(heap);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/heap.c"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 96,
                  "endLine": 373,
                  "endColumn": 100,
                  "snippet": {
                    "text": "  mi_assert_expensive(mi_heap_is_valid(heap));\n  if (heap==NULL || !mi_heap_is_initialized(heap)) return;\n  #if MI_DEBUG_GUARDED\n  _mi_warning_message(\"'mi_heap_destroy' called but ignored as MI_DEBUG_GUARDED is enabled (heap at %p)\\n\", heap);\n  mi_heap_delete(heap);\n  return;\n  #else\n",
                    "rendered": {
                      "text": "  mi_assert_expensive(mi_heap_is_valid(heap));\n  if (heap==NULL || !mi_heap_is_initialized(heap)) return;\n  #if MI_DEBUG_GUARDED\n  _mi_warning_message(\"'mi_heap_destroy' called but ignored as MI_DEBUG_GUARDED is enabled (heap at %p)\\n\", heap);\n  mi_heap_delete(heap);\n  return;\n  #else\n",
                      "markdown": "`  mi_assert_expensive(mi_heap_is_valid(heap));\n  if (heap==NULL || !mi_heap_is_initialized(heap)) return;\n  #if MI_DEBUG_GUARDED\n  _mi_warning_message(\"'mi_heap_destroy' called but ignored as MI_DEBUG_GUARDED is enabled (heap at %p)\\n\", heap);\n  mi_heap_delete(heap);\n  return;\n  #else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/options.c"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 54,
                  "endLine": 423,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n#if MI_DEBUG\nvoid _mi_assert_fail(const char* assertion, const char* fname, unsigned line, const char* func ) {\n  _mi_fprintf(NULL, NULL, \"mimalloc: assertion failed: at \\\"%s\\\":%u, %s\\n  assertion: \\\"%s\\\"\\n\", fname, line, (func==NULL?\"\":func), assertion);\n  abort();\n}\n#endif\n",
                    "rendered": {
                      "text": "\n#if MI_DEBUG\nvoid _mi_assert_fail(const char* assertion, const char* fname, unsigned line, const char* func ) {\n  _mi_fprintf(NULL, NULL, \"mimalloc: assertion failed: at \\\"%s\\\":%u, %s\\n  assertion: \\\"%s\\\"\\n\", fname, line, (func==NULL?\"\":func), assertion);\n  abort();\n}\n#endif\n",
                      "markdown": "`\n#if MI_DEBUG\nvoid _mi_assert_fail(const char* assertion, const char* fname, unsigned line, const char* func ) {\n  _mi_fprintf(NULL, NULL, \"mimalloc: assertion failed: at \\\"%s\\\":%u, %s\\n  assertion: \\\"%s\\\"\\n\", fname, line, (func==NULL?\"\":func), assertion);\n  abort();\n}\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/bin/readme.md"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 20,
                  "endLine": 59,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  -h   --help        show this help\n  -v   --verbose     be verbose\n  -l   --list        only list imported modules\n  -i   --inplace     update the exe in-place (make sure there is a backup!)\n  -f   --force       always overwrite without prompting\n       --postfix=<p> use <p> as a postfix to the mimalloc dll (default is 'override')\n                     e.g. use --postfix=override-debug to link with mimalloc-override-debug.dll\n",
                    "rendered": {
                      "text": "  -h   --help        show this help\n  -v   --verbose     be verbose\n  -l   --list        only list imported modules\n  -i   --inplace     update the exe in-place (make sure there is a backup!)\n  -f   --force       always overwrite without prompting\n       --postfix=<p> use <p> as a postfix to the mimalloc dll (default is 'override')\n                     e.g. use --postfix=override-debug to link with mimalloc-override-debug.dll\n",
                      "markdown": "`  -h   --help        show this help\n  -v   --verbose     be verbose\n  -l   --list        only list imported modules\n  -i   --inplace     update the exe in-place (make sure there is a backup!)\n  -f   --force       always overwrite without prompting\n       --postfix=<p> use <p> as a postfix to the mimalloc dll (default is 'override')\n                     e.g. use --postfix=override-debug to link with mimalloc-override-debug.dll\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/bin/readme.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 10,
                  "endLine": 32,
                  "endColumn": 14,
                  "snippet": {
                    "text": "a single(!) source file in your project).\n\nThe environment variable `MIMALLOC_DISABLE_REDIRECT=1` can be used to disable dynamic\noverriding at run-time. Use `MIMALLOC_VERBOSE=1` to check if mimalloc was successfully redirected.\n\n## Minject\n\n",
                    "rendered": {
                      "text": "a single(!) source file in your project).\n\nThe environment variable `MIMALLOC_DISABLE_REDIRECT=1` can be used to disable dynamic\noverriding at run-time. Use `MIMALLOC_VERBOSE=1` to check if mimalloc was successfully redirected.\n\n## Minject\n\n",
                      "markdown": "`a single(!) source file in your project).\n\nThe environment variable `MIMALLOC_DISABLE_REDIRECT=1` can be used to disable dynamic\noverriding at run-time. Use `MIMALLOC_VERBOSE=1` to check if mimalloc was successfully redirected.\n\n## Minject\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/bin/readme.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 57,
                  "endLine": 19,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    for an example on how to use this. \n\n3. The `mimalloc-redirect.dll` (or `mimalloc-redirect32.dll`) must be put\n   in the same folder as the main `mimalloc-override.dll` at runtime (as it is a dependency of that DLL).\n   The redirection DLL ensures that all calls to the C runtime malloc API get redirected to\n   mimalloc functions (which reside in `mimalloc-override.dll`).\n\n",
                    "rendered": {
                      "text": "    for an example on how to use this. \n\n3. The `mimalloc-redirect.dll` (or `mimalloc-redirect32.dll`) must be put\n   in the same folder as the main `mimalloc-override.dll` at runtime (as it is a dependency of that DLL).\n   The redirection DLL ensures that all calls to the C runtime malloc API get redirected to\n   mimalloc functions (which reside in `mimalloc-override.dll`).\n\n",
                      "markdown": "`    for an example on how to use this. \n\n3. The `mimalloc-redirect.dll` (or `mimalloc-redirect32.dll`) must be put\n   in the same folder as the main `mimalloc-override.dll` at runtime (as it is a dependency of that DLL).\n   The redirection DLL ensures that all calls to the C runtime malloc API get redirected to\n   mimalloc functions (which reside in `mimalloc-override.dll`).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/bin/readme.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 50,
                  "endLine": 13,
                  "endColumn": 54,
                  "snippet": {
                    "text": "1. Use the C-runtime library as a DLL (using the `/MD` or `/MDd` switch).\n\n2. Link your program explicitly with `mimalloc-override.dll` library.\n   To ensure the `mimalloc-override.dll` is loaded at run-time it is easiest to insert some\n    call to the mimalloc API in the `main` function, like `mi_version()`\n    (or use the `/INCLUDE:mi_version` switch on the linker). See the `mimalloc-override-test` project\n    for an example on how to use this. \n",
                    "rendered": {
                      "text": "1. Use the C-runtime library as a DLL (using the `/MD` or `/MDd` switch).\n\n2. Link your program explicitly with `mimalloc-override.dll` library.\n   To ensure the `mimalloc-override.dll` is loaded at run-time it is easiest to insert some\n    call to the mimalloc API in the `main` function, like `mi_version()`\n    (or use the `/INCLUDE:mi_version` switch on the linker). See the `mimalloc-override-test` project\n    for an example on how to use this. \n",
                      "markdown": "`1. Use the C-runtime library as a DLL (using the `/MD` or `/MDd` switch).\n\n2. Link your program explicitly with `mimalloc-override.dll` library.\n   To ensure the `mimalloc-override.dll` is loaded at run-time it is easiest to insert some\n    call to the mimalloc API in the `main` function, like `mi_version()`\n    (or use the `/INCLUDE:mi_version` switch on the linker). See the `mimalloc-override-test` project\n    for an example on how to use this. \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/test/main-override.cpp"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 20,
                  "endLine": 290,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    ts.emplace_back(std::async(std::launch::async, fn));\n\n  for (auto& f : ts)\n    for (auto& p : f.get())\n      delete[] p;\n\n  std::cout << \"done\" << std::endl;\n",
                    "rendered": {
                      "text": "    ts.emplace_back(std::async(std::launch::async, fn));\n\n  for (auto& f : ts)\n    for (auto& p : f.get())\n      delete[] p;\n\n  std::cout << \"done\" << std::endl;\n",
                      "markdown": "`    ts.emplace_back(std::async(std::launch::async, fn));\n\n  for (auto& f : ts)\n    for (auto& p : f.get())\n      delete[] p;\n\n  std::cout << \"done\" << std::endl;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__analysis.html"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 77,
                  "endLine": 275,
                  "endColumn": 81,
                  "snippet": {
                    "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd><em>true</em> if all areas and blocks were visited.</dd></dl>\n<p>Note: requires the option <code>mi_option_visit_abandoned</code> to be set at the start of the program. </p>\n\n</div>\n</div>\n",
                    "rendered": {
                      "text": "  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd><em>true</em> if all areas and blocks were visited.</dd></dl>\n<p>Note: requires the option <code>mi_option_visit_abandoned</code> to be set at the start of the program. </p>\n\n</div>\n</div>\n",
                      "markdown": "`  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd><em>true</em> if all areas and blocks were visited.</dd></dl>\n<p>Note: requires the option <code>mi_option_visit_abandoned</code> to be set at the start of the program. </p>\n\n</div>\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__analysis.html"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 19,
                  "endLine": 146,
                  "endColumn": 23,
                  "snippet": {
                    "text": "<tr class=\"separator:ga6a4865a887b2ec5247854af61562503c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n</table>\n<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n<p>Inspect the heap at runtime. </p>\n<hr/><h2 class=\"groupheader\">Data Structure Documentation</h2>\n<a name=\"structmi__heap__area__t\" id=\"structmi__heap__area__t\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#structmi__heap__area__t\">&#9670;&#160;</a></span>mi_heap_area_t</h2>\n",
                    "rendered": {
                      "text": "<tr class=\"separator:ga6a4865a887b2ec5247854af61562503c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n</table>\n<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n<p>Inspect the heap at runtime. </p>\n<hr/><h2 class=\"groupheader\">Data Structure Documentation</h2>\n<a name=\"structmi__heap__area__t\" id=\"structmi__heap__area__t\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#structmi__heap__area__t\">&#9670;&#160;</a></span>mi_heap_area_t</h2>\n",
                      "markdown": "`<tr class=\"separator:ga6a4865a887b2ec5247854af61562503c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n</table>\n<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n<p>Inspect the heap at runtime. </p>\n<hr/><h2 class=\"groupheader\">Data Structure Documentation</h2>\n<a name=\"structmi__heap__area__t\" id=\"structmi__heap__area__t\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#structmi__heap__area__t\">&#9670;&#160;</a></span>mi_heap_area_t</h2>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__analysis.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/annotated.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__aligned.html"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 93,
                  "endLine": 264,
                  "endColumn": 97,
                  "snippet": {
                    "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>number of bytes to allocate. </td></tr>\n    <tr><td class=\"paramname\">alignment</td><td>the minimal alignment of the allocated memory at <em>offset</em>. </td></tr>\n    <tr><td class=\"paramname\">offset</td><td>the offset that should be aligned. </td></tr>\n  </table>\n  </dd>\n",
                    "rendered": {
                      "text": "<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>number of bytes to allocate. </td></tr>\n    <tr><td class=\"paramname\">alignment</td><td>the minimal alignment of the allocated memory at <em>offset</em>. </td></tr>\n    <tr><td class=\"paramname\">offset</td><td>the offset that should be aligned. </td></tr>\n  </table>\n  </dd>\n",
                      "markdown": "`<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>number of bytes to allocate. </td></tr>\n    <tr><td class=\"paramname\">alignment</td><td>the minimal alignment of the allocated memory at <em>offset</em>. </td></tr>\n    <tr><td class=\"paramname\">offset</td><td>the offset that should be aligned. </td></tr>\n  </table>\n  </dd>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__aligned.html"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 61,
                  "endLine": 260,
                  "endColumn": 65,
                  "snippet": {
                    "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Allocate <em>size</em> bytes aligned by <em>alignment</em> at a specified <em>offset</em>. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>number of bytes to allocate. </td></tr>\n",
                    "rendered": {
                      "text": "      </table>\n</div><div class=\"memdoc\">\n\n<p>Allocate <em>size</em> bytes aligned by <em>alignment</em> at a specified <em>offset</em>. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>number of bytes to allocate. </td></tr>\n",
                      "markdown": "`      </table>\n</div><div class=\"memdoc\">\n\n<p>Allocate <em>size</em> bytes aligned by <em>alignment</em> at a specified <em>offset</em>. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">size</td><td>number of bytes to allocate. </td></tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__aligned.html"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 169,
                  "endLine": 125,
                  "endColumn": 173,
                  "snippet": {
                    "text": "=\"el\" href=\"#ga2022f71b95a7cd6cce1b6e07752ae8ca\">mi_malloc_aligned_at</a> (size_t size, size_t alignment, size_t offset)</td></tr>\n<tr class=\"memdesc:ga2022f71b95a7cd6cce1b6e07752ae8ca\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Allocate <em>size</em> bytes aligned by <em>alignment</em> at a specified <em>offset</em>.  <br /></td></tr>\n<tr class=\"separator:ga2022f71b95a7cd6cce1b6e07752ae8ca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ga7c1778805ce50ebbf02ccbd5e39d5dba\" id=\"r_ga7c1778805ce50ebbf02ccbd5e39d5dba\"><td class=\"memItemLeft\" align=\"right\" valign=",
                    "rendered": {
                      "text": "=\"el\" href=\"#ga2022f71b95a7cd6cce1b6e07752ae8ca\">mi_malloc_aligned_at</a> (size_t size, size_t alignment, size_t offset)</td></tr>\n<tr class=\"memdesc:ga2022f71b95a7cd6cce1b6e07752ae8ca\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Allocate <em>size</em> bytes aligned by <em>alignment</em> at a specified <em>offset</em>.  <br /></td></tr>\n<tr class=\"separator:ga2022f71b95a7cd6cce1b6e07752ae8ca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ga7c1778805ce50ebbf02ccbd5e39d5dba\" id=\"r_ga7c1778805ce50ebbf02ccbd5e39d5dba\"><td class=\"memItemLeft\" align=\"right\" valign=",
                      "markdown": "`=\"el\" href=\"#ga2022f71b95a7cd6cce1b6e07752ae8ca\">mi_malloc_aligned_at</a> (size_t size, size_t alignment, size_t offset)</td></tr>\n<tr class=\"memdesc:ga2022f71b95a7cd6cce1b6e07752ae8ca\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Allocate <em>size</em> bytes aligned by <em>alignment</em> at a specified <em>offset</em>.  <br /></td></tr>\n<tr class=\"separator:ga2022f71b95a7cd6cce1b6e07752ae8ca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ga7c1778805ce50ebbf02ccbd5e39d5dba\" id=\"r_ga7c1778805ce50ebbf02ccbd5e39d5dba\"><td class=\"memItemLeft\" align=\"right\" valign=`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/docs/group__aligned.html"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                    "rendered": {
                      "text": "$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n",
                      "markdown": "`$(function() { codefold.init(0); });\n/* @license-end */\n</script>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/free.c"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 12,
                  "endLine": 66,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    adjust = diff & (((size_t)1 << page->block_size_shift) - 1);\n  }\n  else {\n    adjust = diff % mi_page_block_size(page);\n  }\n\n  return (mi_block_t*)((uintptr_t)p - adjust);\n",
                    "rendered": {
                      "text": "    adjust = diff & (((size_t)1 << page->block_size_shift) - 1);\n  }\n  else {\n    adjust = diff % mi_page_block_size(page);\n  }\n\n  return (mi_block_t*)((uintptr_t)p - adjust);\n",
                      "markdown": "`    adjust = diff & (((size_t)1 << page->block_size_shift) - 1);\n  }\n  else {\n    adjust = diff % mi_page_block_size(page);\n  }\n\n  return (mi_block_t*)((uintptr_t)p - adjust);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/free.c"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 12,
                  "endLine": 63,
                  "endColumn": 18,
                  "snippet": {
                    "text": "  size_t diff = (uint8_t*)p - page->page_start;\n  size_t adjust;\n  if mi_likely(page->block_size_shift != 0) {\n    adjust = diff & (((size_t)1 << page->block_size_shift) - 1);\n  }\n  else {\n    adjust = diff % mi_page_block_size(page);\n",
                    "rendered": {
                      "text": "  size_t diff = (uint8_t*)p - page->page_start;\n  size_t adjust;\n  if mi_likely(page->block_size_shift != 0) {\n    adjust = diff & (((size_t)1 << page->block_size_shift) - 1);\n  }\n  else {\n    adjust = diff % mi_page_block_size(page);\n",
                      "markdown": "`  size_t diff = (uint8_t*)p - page->page_start;\n  size_t adjust;\n  if mi_likely(page->block_size_shift != 0) {\n    adjust = diff & (((size_t)1 << page->block_size_shift) - 1);\n  }\n  else {\n    adjust = diff % mi_page_block_size(page);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/free.c"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 8,
                  "endLine": 60,
                  "endColumn": 14,
                  "snippet": {
                    "text": "mi_block_t* _mi_page_ptr_unalign(const mi_page_t* page, const void* p) {\n  mi_assert_internal(page!=NULL && p!=NULL);\n\n  size_t diff = (uint8_t*)p - page->page_start;\n  size_t adjust;\n  if mi_likely(page->block_size_shift != 0) {\n    adjust = diff & (((size_t)1 << page->block_size_shift) - 1);\n",
                    "rendered": {
                      "text": "mi_block_t* _mi_page_ptr_unalign(const mi_page_t* page, const void* p) {\n  mi_assert_internal(page!=NULL && p!=NULL);\n\n  size_t diff = (uint8_t*)p - page->page_start;\n  size_t adjust;\n  if mi_likely(page->block_size_shift != 0) {\n    adjust = diff & (((size_t)1 << page->block_size_shift) - 1);\n",
                      "markdown": "`mi_block_t* _mi_page_ptr_unalign(const mi_page_t* page, const void* p) {\n  mi_assert_internal(page!=NULL && p!=NULL);\n\n  size_t diff = (uint8_t*)p - page->page_start;\n  size_t adjust;\n  if mi_likely(page->block_size_shift != 0) {\n    adjust = diff & (((size_t)1 << page->block_size_shift) - 1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/src/libc.c"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 36,
                  "endLine": 164,
                  "endColumn": 41,
                  "snippet": {
                    "text": "#define MI_NEXTC()  c = *in; if (c==0) break; in++;\n\nvoid _mi_vsnprintf(char* buf, size_t bufsize, const char* fmt, va_list args) {\n  if (buf == NULL || bufsize == 0 || fmt == NULL) return;\n  buf[bufsize - 1] = 0;\n  char* const end = buf + (bufsize - 1);\n  const char* in = fmt;\n",
                    "rendered": {
                      "text": "#define MI_NEXTC()  c = *in; if (c==0) break; in++;\n\nvoid _mi_vsnprintf(char* buf, size_t bufsize, const char* fmt, va_list args) {\n  if (buf == NULL || bufsize == 0 || fmt == NULL) return;\n  buf[bufsize - 1] = 0;\n  char* const end = buf + (bufsize - 1);\n  const char* in = fmt;\n",
                      "markdown": "`#define MI_NEXTC()  c = *in; if (c==0) break; in++;\n\nvoid _mi_vsnprintf(char* buf, size_t bufsize, const char* fmt, va_list args) {\n  if (buf == NULL || bufsize == 0 || fmt == NULL) return;\n  buf[bufsize - 1] = 0;\n  char* const end = buf + (bufsize - 1);\n  const char* in = fmt;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/cmake/mimalloc-config.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 8,
                  "snippet": {
                    "text": "get_filename_component(MIMALLOC_VERSION_DIR \"${CMAKE_CURRENT_LIST_DIR}\" NAME)\nstring(REPLACE \"/lib/cmake\" \"/lib\" MIMALLOC_LIBRARY_DIR \"${MIMALLOC_CMAKE_DIR}\")\nif(\"${MIMALLOC_VERSION_DIR}\" EQUAL \"mimalloc\")\n  # top level install\n  string(REPLACE \"/lib/cmake\" \"/include\" MIMALLOC_INCLUDE_DIR \"${MIMALLOC_CMAKE_DIR}\")\n  set(MIMALLOC_OBJECT_DIR \"${MIMALLOC_LIBRARY_DIR}\")\nelse()\n",
                    "rendered": {
                      "text": "get_filename_component(MIMALLOC_VERSION_DIR \"${CMAKE_CURRENT_LIST_DIR}\" NAME)\nstring(REPLACE \"/lib/cmake\" \"/lib\" MIMALLOC_LIBRARY_DIR \"${MIMALLOC_CMAKE_DIR}\")\nif(\"${MIMALLOC_VERSION_DIR}\" EQUAL \"mimalloc\")\n  # top level install\n  string(REPLACE \"/lib/cmake\" \"/include\" MIMALLOC_INCLUDE_DIR \"${MIMALLOC_CMAKE_DIR}\")\n  set(MIMALLOC_OBJECT_DIR \"${MIMALLOC_LIBRARY_DIR}\")\nelse()\n",
                      "markdown": "`get_filename_component(MIMALLOC_VERSION_DIR \"${CMAKE_CURRENT_LIST_DIR}\" NAME)\nstring(REPLACE \"/lib/cmake\" \"/lib\" MIMALLOC_LIBRARY_DIR \"${MIMALLOC_CMAKE_DIR}\")\nif(\"${MIMALLOC_VERSION_DIR}\" EQUAL \"mimalloc\")\n  # top level install\n  string(REPLACE \"/lib/cmake\" \"/include\" MIMALLOC_INCLUDE_DIR \"${MIMALLOC_CMAKE_DIR}\")\n  set(MIMALLOC_OBJECT_DIR \"${MIMALLOC_LIBRARY_DIR}\")\nelse()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 796,
                  "startColumn": 89,
                  "endLine": 796,
                  "endColumn": 93,
                  "snippet": {
                    "text": "  In USENIX Annual Technical Conference, Freenix Session. San Diego, CA. Jun. 2000.\n  Available at <https://github.com/kuszmaul/SuperMalloc/tree/master/tests>\n\n- \\[6] Timothy Crundal. _Reducing Active-False Sharing in TCMalloc_. 2016. CS16S1 project at the Australian National University. [pdf](http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf)\n\n- \\[7] Alexey Kukanov, and Michael J Voss.\n   _The Foundations for Scalable Multi-Core Software in Intel Threading Building Blocks._\n",
                    "rendered": {
                      "text": "  In USENIX Annual Technical Conference, Freenix Session. San Diego, CA. Jun. 2000.\n  Available at <https://github.com/kuszmaul/SuperMalloc/tree/master/tests>\n\n- \\[6] Timothy Crundal. _Reducing Active-False Sharing in TCMalloc_. 2016. CS16S1 project at the Australian National University. [pdf](http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf)\n\n- \\[7] Alexey Kukanov, and Michael J Voss.\n   _The Foundations for Scalable Multi-Core Software in Intel Threading Building Blocks._\n",
                      "markdown": "`  In USENIX Annual Technical Conference, Freenix Session. San Diego, CA. Jun. 2000.\n  Available at <https://github.com/kuszmaul/SuperMalloc/tree/master/tests>\n\n- \\[6] Timothy Crundal. _Reducing Active-False Sharing in TCMalloc_. 2016. CS16S1 project at the Australian National University. [pdf](http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf)\n\n- \\[7] Alexey Kukanov, and Michael J Voss.\n   _The Foundations for Scalable Multi-Core Software in Intel Threading Building Blocks._\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 794,
                  "startColumn": 11,
                  "endLine": 794,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n- \\[5] C. Lever, and D. Boreham. _Malloc() Performance in a Multithreaded Linux Environment._\n  In USENIX Annual Technical Conference, Freenix Session. San Diego, CA. Jun. 2000.\n  Available at <https://github.com/kuszmaul/SuperMalloc/tree/master/tests>\n\n- \\[6] Timothy Crundal. _Reducing Active-False Sharing in TCMalloc_. 2016. CS16S1 project at the Australian National University. [pdf](http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf)\n\n",
                    "rendered": {
                      "text": "\n- \\[5] C. Lever, and D. Boreham. _Malloc() Performance in a Multithreaded Linux Environment._\n  In USENIX Annual Technical Conference, Freenix Session. San Diego, CA. Jun. 2000.\n  Available at <https://github.com/kuszmaul/SuperMalloc/tree/master/tests>\n\n- \\[6] Timothy Crundal. _Reducing Active-False Sharing in TCMalloc_. 2016. CS16S1 project at the Australian National University. [pdf](http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf)\n\n",
                      "markdown": "`\n- \\[5] C. Lever, and D. Boreham. _Malloc() Performance in a Multithreaded Linux Environment._\n  In USENIX Annual Technical Conference, Freenix Session. San Diego, CA. Jun. 2000.\n  Available at <https://github.com/kuszmaul/SuperMalloc/tree/master/tests>\n\n- \\[6] Timothy Crundal. _Reducing Active-False Sharing in TCMalloc_. 2016. CS16S1 project at the Australian National University. [pdf](http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 766,
                  "startColumn": 35,
                  "endLine": 766,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\nFor completeness, here are the results on a\n[r5a.12xlarge](https://aws.amazon.com/ec2/instance-types/#Memory_Optimized) instance\nhaving a 48 processor AMD Epyc 7000 at 2.5GHz with 384GiB of memory.\nThe results are similar to the Intel results but it is interesting to\nsee the differences in the _larsonN_, _mstressN_, and _xmalloc-testN_ benchmarks.\n\n",
                    "rendered": {
                      "text": "\nFor completeness, here are the results on a\n[r5a.12xlarge](https://aws.amazon.com/ec2/instance-types/#Memory_Optimized) instance\nhaving a 48 processor AMD Epyc 7000 at 2.5GHz with 384GiB of memory.\nThe results are similar to the Intel results but it is interesting to\nsee the differences in the _larsonN_, _mstressN_, and _xmalloc-testN_ benchmarks.\n\n",
                      "markdown": "`\nFor completeness, here are the results on a\n[r5a.12xlarge](https://aws.amazon.com/ec2/instance-types/#Memory_Optimized) instance\nhaving a 48 processor AMD Epyc 7000 at 2.5GHz with 384GiB of memory.\nThe results are similar to the Intel results but it is interesting to\nsee the differences in the _larsonN_, _mstressN_, and _xmalloc-testN_ benchmarks.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 739,
                  "startColumn": 39,
                  "endLine": 739,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\nTesting on a big Amazon EC2 compute instance\n([c5.18xlarge](https://aws.amazon.com/ec2/instance-types/#Compute_Optimized))\nconsisting of a 72 processor Intel Xeon at 3GHz\nwith 144GiB ECC memory, running\tUbuntu 18.04.1 with glibc 2.27 and GCC 7.4.0.\nThe measured allocators are _mimalloc_ (xmi, tag:v1.4.0, page reset enabled)\nand its secure build as _smi_,\n",
                    "rendered": {
                      "text": "\nTesting on a big Amazon EC2 compute instance\n([c5.18xlarge](https://aws.amazon.com/ec2/instance-types/#Compute_Optimized))\nconsisting of a 72 processor Intel Xeon at 3GHz\nwith 144GiB ECC memory, running\tUbuntu 18.04.1 with glibc 2.27 and GCC 7.4.0.\nThe measured allocators are _mimalloc_ (xmi, tag:v1.4.0, page reset enabled)\nand its secure build as _smi_,\n",
                      "markdown": "`\nTesting on a big Amazon EC2 compute instance\n([c5.18xlarge](https://aws.amazon.com/ec2/instance-types/#Compute_Optimized))\nconsisting of a 72 processor Intel Xeon at 3GHz\nwith 144GiB ECC memory, running\tUbuntu 18.04.1 with glibc 2.27 and GCC 7.4.0.\nThe measured allocators are _mimalloc_ (xmi, tag:v1.4.0, page reset enabled)\nand its secure build as _smi_,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 705,
                  "startColumn": 57,
                  "endLine": 705,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\nFor completeness, here are the results on a big Amazon\n[c5.18xlarge](https://aws.amazon.com/ec2/instance-types/#Compute_Optimized) instance\nconsisting of a 2&times;18-core Intel Xeon (Cascade Lake) at 3.4GHz (boost 3.5GHz)\nwith 144GiB ECC memory, running\tUbuntu 20.04 with glibc 2.31, GCC 9.3.0, and\nClang 10.0.0. This time, the mimalloc allocators (mi, xmi, and smi) were\ncompiled with the Clang compiler instead of GCC.\n",
                    "rendered": {
                      "text": "\nFor completeness, here are the results on a big Amazon\n[c5.18xlarge](https://aws.amazon.com/ec2/instance-types/#Compute_Optimized) instance\nconsisting of a 2&times;18-core Intel Xeon (Cascade Lake) at 3.4GHz (boost 3.5GHz)\nwith 144GiB ECC memory, running\tUbuntu 20.04 with glibc 2.31, GCC 9.3.0, and\nClang 10.0.0. This time, the mimalloc allocators (mi, xmi, and smi) were\ncompiled with the Clang compiler instead of GCC.\n",
                      "markdown": "`\nFor completeness, here are the results on a big Amazon\n[c5.18xlarge](https://aws.amazon.com/ec2/instance-types/#Compute_Optimized) instance\nconsisting of a 2&times;18-core Intel Xeon (Cascade Lake) at 3.4GHz (boost 3.5GHz)\nwith 144GiB ECC memory, running\tUbuntu 20.04 with glibc 2.31, GCC 9.3.0, and\nClang 10.0.0. This time, the mimalloc allocators (mi, xmi, and smi) were\ncompiled with the Clang compiler instead of GCC.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 604,
                  "startColumn": 17,
                  "endLine": 604,
                  "endColumn": 21,
                  "snippet": {
                    "text": "## Benchmark Results on a 16-core AMD 5950x (Zen3)\n\nTesting on the 16-core AMD 5950x processor at 3.4Ghz (4.9Ghz boost), with\nwith 32GiB memory at 3600Mhz, running\tUbuntu 20.04 with glibc 2.31 and GCC 9.3.0.\n\nWe measure three versions of _mimalloc_: the main version `mi` (tag:v1.7.0),\nthe new v2.0 beta version as `xmi` (tag:v2.0.0), and the main version in secure mode as `smi` (tag:v1.7.0).\n",
                    "rendered": {
                      "text": "## Benchmark Results on a 16-core AMD 5950x (Zen3)\n\nTesting on the 16-core AMD 5950x processor at 3.4Ghz (4.9Ghz boost), with\nwith 32GiB memory at 3600Mhz, running\tUbuntu 20.04 with glibc 2.31 and GCC 9.3.0.\n\nWe measure three versions of _mimalloc_: the main version `mi` (tag:v1.7.0),\nthe new v2.0 beta version as `xmi` (tag:v2.0.0), and the main version in secure mode as `smi` (tag:v1.7.0).\n",
                      "markdown": "`## Benchmark Results on a 16-core AMD 5950x (Zen3)\n\nTesting on the 16-core AMD 5950x processor at 3.4Ghz (4.9Ghz boost), with\nwith 32GiB memory at 3600Mhz, running\tUbuntu 20.04 with glibc 2.31 and GCC 9.3.0.\n\nWe measure three versions of _mimalloc_: the main version `mi` (tag:v1.7.0),\nthe new v2.0 beta version as `xmi` (tag:v2.0.0), and the main version in secure mode as `smi` (tag:v1.7.0).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 603,
                  "startColumn": 42,
                  "endLine": 603,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n## Benchmark Results on a 16-core AMD 5950x (Zen3)\n\nTesting on the 16-core AMD 5950x processor at 3.4Ghz (4.9Ghz boost), with\nwith 32GiB memory at 3600Mhz, running\tUbuntu 20.04 with glibc 2.31 and GCC 9.3.0.\n\nWe measure three versions of _mimalloc_: the main version `mi` (tag:v1.7.0),\n",
                    "rendered": {
                      "text": "\n## Benchmark Results on a 16-core AMD 5950x (Zen3)\n\nTesting on the 16-core AMD 5950x processor at 3.4Ghz (4.9Ghz boost), with\nwith 32GiB memory at 3600Mhz, running\tUbuntu 20.04 with glibc 2.31 and GCC 9.3.0.\n\nWe measure three versions of _mimalloc_: the main version `mi` (tag:v1.7.0),\n",
                      "markdown": "`\n## Benchmark Results on a 16-core AMD 5950x (Zen3)\n\nTesting on the 16-core AMD 5950x processor at 3.4Ghz (4.9Ghz boost), with\nwith 32GiB memory at 3600Mhz, running\tUbuntu 20.04 with glibc 2.31 and GCC 9.3.0.\n\nWe measure three versions of _mimalloc_: the main version `mi` (tag:v1.7.0),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 10,
                  "endLine": 473,
                  "endColumn": 19,
                  "snippet": {
                    "text": "link statically to mimalloc (as shown in the introduction) and include a\nheader file in each source file that re-defines `malloc` etc. to `mi_malloc`.\nThis is provided by [`mimalloc-override.h`](https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-override.h). This only works reliably though if all sources are\nunder your control or otherwise mixing of pointers from different heaps may occur!\n\n\n# Tools\n",
                    "rendered": {
                      "text": "link statically to mimalloc (as shown in the introduction) and include a\nheader file in each source file that re-defines `malloc` etc. to `mi_malloc`.\nThis is provided by [`mimalloc-override.h`](https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-override.h). This only works reliably though if all sources are\nunder your control or otherwise mixing of pointers from different heaps may occur!\n\n\n# Tools\n",
                      "markdown": "`link statically to mimalloc (as shown in the introduction) and include a\nheader file in each source file that re-defines `malloc` etc. to `mi_malloc`.\nThis is provided by [`mimalloc-override.h`](https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-override.h). This only works reliably though if all sources are\nunder your control or otherwise mixing of pointers from different heaps may occur!\n\n\n# Tools\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 10,
                  "endLine": 446,
                  "endColumn": 14,
                  "snippet": {
                    "text": "a single(!) source file in your project).\n\nThe environment variable `MIMALLOC_DISABLE_REDIRECT=1` can be used to disable dynamic\noverriding at run-time. Use `MIMALLOC_VERBOSE=1` to check if mimalloc was successfully redirected.\n\nWe cannot always re-link an executable with `mimalloc-override.dll`, and similarly, we cannot always\nensure the the DLL comes first in the import table of the final executable.\n",
                    "rendered": {
                      "text": "a single(!) source file in your project).\n\nThe environment variable `MIMALLOC_DISABLE_REDIRECT=1` can be used to disable dynamic\noverriding at run-time. Use `MIMALLOC_VERBOSE=1` to check if mimalloc was successfully redirected.\n\nWe cannot always re-link an executable with `mimalloc-override.dll`, and similarly, we cannot always\nensure the the DLL comes first in the import table of the final executable.\n",
                      "markdown": "`a single(!) source file in your project).\n\nThe environment variable `MIMALLOC_DISABLE_REDIRECT=1` can be used to disable dynamic\noverriding at run-time. Use `MIMALLOC_VERBOSE=1` to check if mimalloc was successfully redirected.\n\nWe cannot always re-link an executable with `mimalloc-override.dll`, and similarly, we cannot always\nensure the the DLL comes first in the import table of the final executable.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 57,
                  "endLine": 434,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    (or use the `/INCLUDE:mi_version` switch on the linker). See the `mimalloc-override-test` project\n    for an example on how to use this. \n3. The [`mimalloc-redirect.dll`](bin) (or `mimalloc-redirect32.dll`) must be put\n   in the same folder as the main `mimalloc-override.dll` at runtime (as it is a dependency of that DLL).\n   The redirection DLL ensures that all calls to the C runtime malloc API get redirected to\n   mimalloc functions (which reside in `mimalloc-override.dll`).\n4. Ensure the `mimalloc-override.dll` comes as early as possible in the import\n",
                    "rendered": {
                      "text": "    (or use the `/INCLUDE:mi_version` switch on the linker). See the `mimalloc-override-test` project\n    for an example on how to use this. \n3. The [`mimalloc-redirect.dll`](bin) (or `mimalloc-redirect32.dll`) must be put\n   in the same folder as the main `mimalloc-override.dll` at runtime (as it is a dependency of that DLL).\n   The redirection DLL ensures that all calls to the C runtime malloc API get redirected to\n   mimalloc functions (which reside in `mimalloc-override.dll`).\n4. Ensure the `mimalloc-override.dll` comes as early as possible in the import\n",
                      "markdown": "`    (or use the `/INCLUDE:mi_version` switch on the linker). See the `mimalloc-override-test` project\n    for an example on how to use this. \n3. The [`mimalloc-redirect.dll`](bin) (or `mimalloc-redirect32.dll`) must be put\n   in the same folder as the main `mimalloc-override.dll` at runtime (as it is a dependency of that DLL).\n   The redirection DLL ensures that all calls to the C runtime malloc API get redirected to\n   mimalloc functions (which reside in `mimalloc-override.dll`).\n4. Ensure the `mimalloc-override.dll` comes as early as possible in the import\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 50,
                  "endLine": 429,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n1. Use the C-runtime library as a DLL (using the `/MD` or `/MDd` switch).\n2. Link your program explicitly with `mimalloc-override.dll` library.\n   To ensure the `mimalloc-override.dll` is loaded at run-time it is easiest to insert some\n    call to the mimalloc API in the `main` function, like `mi_version()`\n    (or use the `/INCLUDE:mi_version` switch on the linker). See the `mimalloc-override-test` project\n    for an example on how to use this. \n",
                    "rendered": {
                      "text": "\n1. Use the C-runtime library as a DLL (using the `/MD` or `/MDd` switch).\n2. Link your program explicitly with `mimalloc-override.dll` library.\n   To ensure the `mimalloc-override.dll` is loaded at run-time it is easiest to insert some\n    call to the mimalloc API in the `main` function, like `mi_version()`\n    (or use the `/INCLUDE:mi_version` switch on the linker). See the `mimalloc-override-test` project\n    for an example on how to use this. \n",
                      "markdown": "`\n1. Use the C-runtime library as a DLL (using the `/MD` or `/MDd` switch).\n2. Link your program explicitly with `mimalloc-override.dll` library.\n   To ensure the `mimalloc-override.dll` is loaded at run-time it is easiest to insert some\n    call to the mimalloc API in the `main` function, like `mi_version()`\n    (or use the `/INCLUDE:mi_version` switch on the linker). See the `mimalloc-override-test` project\n    for an example on how to use this. \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 26,
                  "endLine": 373,
                  "endColumn": 30,
                  "snippet": {
                    "text": "When _mimalloc_ is built using debug mode, various checks are done at runtime to catch development errors.\n\n- Statistics are maintained in detail for each object size. They can be shown using `MIMALLOC_SHOW_STATS=1` at runtime.\n- All objects have padding at the end to detect (byte precise) heap block overflows.\n- Double free's, and freeing invalid heap pointers are detected.\n- Corrupted free-lists and some forms of use-after-free are detected.\n\n",
                    "rendered": {
                      "text": "When _mimalloc_ is built using debug mode, various checks are done at runtime to catch development errors.\n\n- Statistics are maintained in detail for each object size. They can be shown using `MIMALLOC_SHOW_STATS=1` at runtime.\n- All objects have padding at the end to detect (byte precise) heap block overflows.\n- Double free's, and freeing invalid heap pointers are detected.\n- Corrupted free-lists and some forms of use-after-free are detected.\n\n",
                      "markdown": "`When _mimalloc_ is built using debug mode, various checks are done at runtime to catch development errors.\n\n- Statistics are maintained in detail for each object size. They can be shown using `MIMALLOC_SHOW_STATS=1` at runtime.\n- All objects have padding at the end to detect (byte precise) heap block overflows.\n- Double free's, and freeing invalid heap pointers are detected.\n- Corrupted free-lists and some forms of use-after-free are detected.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 107,
                  "endLine": 372,
                  "endColumn": 111,
                  "snippet": {
                    "text": "\nWhen _mimalloc_ is built using debug mode, various checks are done at runtime to catch development errors.\n\n- Statistics are maintained in detail for each object size. They can be shown using `MIMALLOC_SHOW_STATS=1` at runtime.\n- All objects have padding at the end to detect (byte precise) heap block overflows.\n- Double free's, and freeing invalid heap pointers are detected.\n- Corrupted free-lists and some forms of use-after-free are detected.\n",
                    "rendered": {
                      "text": "\nWhen _mimalloc_ is built using debug mode, various checks are done at runtime to catch development errors.\n\n- Statistics are maintained in detail for each object size. They can be shown using `MIMALLOC_SHOW_STATS=1` at runtime.\n- All objects have padding at the end to detect (byte precise) heap block overflows.\n- Double free's, and freeing invalid heap pointers are detected.\n- Corrupted free-lists and some forms of use-after-free are detected.\n",
                      "markdown": "`\nWhen _mimalloc_ is built using debug mode, various checks are done at runtime to catch development errors.\n\n- Statistics are maintained in detail for each object size. They can be shown using `MIMALLOC_SHOW_STATS=1` at runtime.\n- All objects have padding at the end to detect (byte precise) heap block overflows.\n- Double free's, and freeing invalid heap pointers are detected.\n- Corrupted free-lists and some forms of use-after-free are detected.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 66,
                  "endLine": 370,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\n## Debug Mode\n\nWhen _mimalloc_ is built using debug mode, various checks are done at runtime to catch development errors.\n\n- Statistics are maintained in detail for each object size. They can be shown using `MIMALLOC_SHOW_STATS=1` at runtime.\n- All objects have padding at the end to detect (byte precise) heap block overflows.\n",
                    "rendered": {
                      "text": "\n## Debug Mode\n\nWhen _mimalloc_ is built using debug mode, various checks are done at runtime to catch development errors.\n\n- Statistics are maintained in detail for each object size. They can be shown using `MIMALLOC_SHOW_STATS=1` at runtime.\n- All objects have padding at the end to detect (byte precise) heap block overflows.\n",
                      "markdown": "`\n## Debug Mode\n\nWhen _mimalloc_ is built using debug mode, various checks are done at runtime to catch development errors.\n\n- Statistics are maintained in detail for each object size. They can be shown using `MIMALLOC_SHOW_STATS=1` at runtime.\n- All objects have padding at the end to detect (byte precise) heap block overflows.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 17,
                  "endLine": 342,
                  "endColumn": 21,
                  "snippet": {
                    "text": "   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\nfor all pages in the original process including the huge OS pages. When any memory is now written in that area, the\n",
                    "rendered": {
                      "text": "   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\nfor all pages in the original process including the huge OS pages. When any memory is now written in that area, the\n",
                      "markdown": "`   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\nfor all pages in the original process including the huge OS pages. When any memory is now written in that area, the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 88,
                  "endLine": 341,
                  "endColumn": 92,
                  "snippet": {
                    "text": "   and allocate just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned\n   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\n",
                    "rendered": {
                      "text": "   and allocate just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned\n   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\n",
                      "markdown": "`   and allocate just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned\n   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 114,
                  "endLine": 333,
                  "snippet": {
                    "text": "ovement on big workloads.\n   Usually it is better to not use `MIMALLOC_ALLOW_LARGE_OS_PAGES=1` in combination with this setting. Just like large \n   OS pages, use with care as reserving\n   contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at\n   startup only once).\n   Note that we usually need to explicitly give permission for huge OS pages (as on [Windows][windows-huge] and [Linux][linux-huge])).\n   With huge OS pages, it may be beneficial to set the setting\n   `MIMALLOC_EAGER_COMMIT_DELAY=N` (`N` is 1 by default) to delay the initial `",
                    "rendered": {
                      "text": "ovement on big workloads.\n   Usually it is better to not use `MIMALLOC_ALLOW_LARGE_OS_PAGES=1` in combination with this setting. Just like large \n   OS pages, use with care as reserving\n   contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at\n   startup only once).\n   Note that we usually need to explicitly give permission for huge OS pages (as on [Windows][windows-huge] and [Linux][linux-huge])).\n   With huge OS pages, it may be beneficial to set the setting\n   `MIMALLOC_EAGER_COMMIT_DELAY=N` (`N` is 1 by default) to delay the initial `",
                      "markdown": "`ovement on big workloads.\n   Usually it is better to not use `MIMALLOC_ALLOW_LARGE_OS_PAGES=1` in combination with this setting. Just like large \n   OS pages, use with care as reserving\n   contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at\n   startup only once).\n   Note that we usually need to explicitly give permission for huge OS pages (as on [Windows][windows-huge] and [Linux][linux-huge])).\n   With huge OS pages, it may be beneficial to set the setting\n   `MIMALLOC_EAGER_COMMIT_DELAY=N` (`N` is 1 by default) to delay the initial ``"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 115,
                  "endLine": 329,
                  "snippet": {
                    "text": " OS pages so use with care on systems that\n   can have fragmented memory (for that reason, we generally recommend to use `MIMALLOC_RESERVE_HUGE_OS_PAGES` instead whenever possible).   \n- `MIMALLOC_RESERVE_HUGE_OS_PAGES=N`: where `N` is the number of 1GiB _huge_ OS pages. This reserves the huge pages at\n   startup and sometimes this can give a large (latency) performance improvement on big workloads.\n   Usually it is better to not use `MIMALLOC_ALLOW_LARGE_OS_PAGES=1` in combination with this setting. Just like large \n   OS pages, use with care as reserving\n   contiguous physical memory can take a ",
                    "rendered": {
                      "text": " OS pages so use with care on systems that\n   can have fragmented memory (for that reason, we generally recommend to use `MIMALLOC_RESERVE_HUGE_OS_PAGES` instead whenever possible).   \n- `MIMALLOC_RESERVE_HUGE_OS_PAGES=N`: where `N` is the number of 1GiB _huge_ OS pages. This reserves the huge pages at\n   startup and sometimes this can give a large (latency) performance improvement on big workloads.\n   Usually it is better to not use `MIMALLOC_ALLOW_LARGE_OS_PAGES=1` in combination with this setting. Just like large \n   OS pages, use with care as reserving\n   contiguous physical memory can take a ",
                      "markdown": "` OS pages so use with care on systems that\n   can have fragmented memory (for that reason, we generally recommend to use `MIMALLOC_RESERVE_HUGE_OS_PAGES` instead whenever possible).   \n- `MIMALLOC_RESERVE_HUGE_OS_PAGES=N`: where `N` is the number of 1GiB _huge_ OS pages. This reserves the huge pages at\n   startup and sometimes this can give a large (latency) performance improvement on big workloads.\n   Usually it is better to not use `MIMALLOC_ALLOW_LARGE_OS_PAGES=1` in combination with this setting. Just like large \n   OS pages, use with care as reserving\n   contiguous physical memory can take a `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 2,
                  "endLine": 319,
                  "endColumn": 6,
                  "snippet": {
                    "text": "l \n   address ranges and decommits within those ranges (to make the underlying physical memory available to other processes).\n\nFurther options for large workloads and services:\n\n- `MIMALLOC_USE_NUMA_NODES=N`: pretend there are at most `N` NUMA nodes. If not set, the actual NUMA nodes are detected\n   at runtime. Setting `N` to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than\n   the actual NUMA nodes is fine and will only cause threads to potentially allocate more memory across actual NUMA\n   nodes (but this can happen in any case as NUMA local allocation is",
                    "rendered": {
                      "text": "l \n   address ranges and decommits within those ranges (to make the underlying physical memory available to other processes).\n\nFurther options for large workloads and services:\n\n- `MIMALLOC_USE_NUMA_NODES=N`: pretend there are at most `N` NUMA nodes. If not set, the actual NUMA nodes are detected\n   at runtime. Setting `N` to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than\n   the actual NUMA nodes is fine and will only cause threads to potentially allocate more memory across actual NUMA\n   nodes (but this can happen in any case as NUMA local allocation is",
                      "markdown": "`l \n   address ranges and decommits within those ranges (to make the underlying physical memory available to other processes).\n\nFurther options for large workloads and services:\n\n- `MIMALLOC_USE_NUMA_NODES=N`: pretend there are at most `N` NUMA nodes. If not set, the actual NUMA nodes are detected\n   at runtime. Setting `N` to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than\n   the actual NUMA nodes is fine and will only cause threads to potentially allocate more memory across actual NUMA\n   nodes (but this can happen in any case as NUMA local allocation is`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 48,
                  "endLine": 318,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nFurther options for large workloads and services:\n\n- `MIMALLOC_USE_NUMA_NODES=N`: pretend there are at most `N` NUMA nodes. If not set, the actual NUMA nodes are detected\n   at runtime. Setting `N` to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than\n   the actual NUMA nodes is fine and will only cause threads to potentially allocate more memory across actual NUMA\n   nodes (but this can happen in any case as NUMA local allocation is always a best effort but not guaranteed).\n",
                    "rendered": {
                      "text": "\nFurther options for large workloads and services:\n\n- `MIMALLOC_USE_NUMA_NODES=N`: pretend there are at most `N` NUMA nodes. If not set, the actual NUMA nodes are detected\n   at runtime. Setting `N` to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than\n   the actual NUMA nodes is fine and will only cause threads to potentially allocate more memory across actual NUMA\n   nodes (but this can happen in any case as NUMA local allocation is always a best effort but not guaranteed).\n",
                      "markdown": "`\nFurther options for large workloads and services:\n\n- `MIMALLOC_USE_NUMA_NODES=N`: pretend there are at most `N` NUMA nodes. If not set, the actual NUMA nodes are detected\n   at runtime. Setting `N` to 1 may avoid problems in some virtual environments. Also, setting it to a lower number than\n   the actual NUMA nodes is fine and will only cause threads to potentially allocate more memory across actual NUMA\n   nodes (but this can happen in any case as NUMA local allocation is always a best effort but not guaranteed).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 109,
                  "endLine": 308,
                  "endColumn": 113,
                  "snippet": {
                    "text": " in long running (server) programs. Setting `N` to `0` purges immediately when\n   a page becomes unused which can improve memory usage but also decreases performance. Setting `N` to a higher\n   value like `100` can improve performance (sometimes by a lot) at the cost of potentially using more memory at times.\n   Setting it to `-1` disables purging completely.\n- `MIMALLOC_PURGE_DECOMMITS=1`: By default \"purging\" memory means unused memory is decommitted (`MEM_DECOMMIT` on Windows,\n   `MADV_DONTNEED` (which decresease rss immediately) on `mmap` systems). Set this to 0 to instead \"reset\" unused\n   me",
                    "rendered": {
                      "text": " in long running (server) programs. Setting `N` to `0` purges immediately when\n   a page becomes unused which can improve memory usage but also decreases performance. Setting `N` to a higher\n   value like `100` can improve performance (sometimes by a lot) at the cost of potentially using more memory at times.\n   Setting it to `-1` disables purging completely.\n- `MIMALLOC_PURGE_DECOMMITS=1`: By default \"purging\" memory means unused memory is decommitted (`MEM_DECOMMIT` on Windows,\n   `MADV_DONTNEED` (which decresease rss immediately) on `mmap` systems). Set this to 0 to instead \"reset\" unused\n   me",
                      "markdown": "` in long running (server) programs. Setting `N` to `0` purges immediately when\n   a page becomes unused which can improve memory usage but also decreases performance. Setting `N` to a higher\n   value like `100` can improve performance (sometimes by a lot) at the cost of potentially using more memory at times.\n   Setting it to `-1` disables purging completely.\n- `MIMALLOC_PURGE_DECOMMITS=1`: By default \"purging\" memory means unused memory is decommitted (`MEM_DECOMMIT` on Windows,\n   `MADV_DONTNEED` (which decresease rss immediately) on `mmap` systems). Set this to 0 to instead \"reset\" unused\n   me`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 64,
                  "endLine": 308,
                  "endColumn": 68,
                  "snippet": {
                    "text": "   can reduce memory fragmentation especially in long running (server) programs. Setting `N` to `0` purges immediately when\n   a page becomes unused which can improve memory usage but also decreases performance. Setting `N` to a higher\n   value like `100` can improve performance (sometimes by a lot) at the cost of potentially using more memory at times.\n   Setting it to `-1` disables purging completely.\n- `MIMALLOC_PURGE_DECOMMITS=1`: By default \"purging\" memory means unused memory is decommitted (`MEM_DECOMMIT` on Windows,\n   `MADV_DONTNEED` (which decresease rss immediately) on `mmap` systems). ",
                    "rendered": {
                      "text": "   can reduce memory fragmentation especially in long running (server) programs. Setting `N` to `0` purges immediately when\n   a page becomes unused which can improve memory usage but also decreases performance. Setting `N` to a higher\n   value like `100` can improve performance (sometimes by a lot) at the cost of potentially using more memory at times.\n   Setting it to `-1` disables purging completely.\n- `MIMALLOC_PURGE_DECOMMITS=1`: By default \"purging\" memory means unused memory is decommitted (`MEM_DECOMMIT` on Windows,\n   `MADV_DONTNEED` (which decresease rss immediately) on `mmap` systems). ",
                      "markdown": "`   can reduce memory fragmentation especially in long running (server) programs. Setting `N` to `0` purges immediately when\n   a page becomes unused which can improve memory usage but also decreases performance. Setting `N` to a higher\n   value like `100` can improve performance (sometimes by a lot) at the cost of potentially using more memory at times.\n   Setting it to `-1` disables purging completely.\n- `MIMALLOC_PURGE_DECOMMITS=1`: By default \"purging\" memory means unused memory is decommitted (`MEM_DECOMMIT` on Windows,\n   `MADV_DONTNEED` (which decresease rss immediately) on `mmap` systems). `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 97,
                  "endLine": 301,
                  "endColumn": 101,
                  "snippet": {
                    "text": "ually 1GiB) from which mimalloc \n   allocates segments and pages. Set this to 2 (default) to \n   only enable this on overcommit systems (e.g. Linux). Set this to 1 to enable explicitly on other systems \n   as well (like Windows or macOS) which may improve performance (as the whole arena is committed at once). \n   Note that eager commit only increases the commit but not the actual the peak resident set \n   (rss) so it is generally ok to enable this.\n- `MIMALLOC_PURGE_DELAY=N`: the delay in `N` milli-seconds (by default `10`) after which mimalloc will purge \n   OS pages that are not in use. This sig",
                    "rendered": {
                      "text": "ually 1GiB) from which mimalloc \n   allocates segments and pages. Set this to 2 (default) to \n   only enable this on overcommit systems (e.g. Linux). Set this to 1 to enable explicitly on other systems \n   as well (like Windows or macOS) which may improve performance (as the whole arena is committed at once). \n   Note that eager commit only increases the commit but not the actual the peak resident set \n   (rss) so it is generally ok to enable this.\n- `MIMALLOC_PURGE_DELAY=N`: the delay in `N` milli-seconds (by default `10`) after which mimalloc will purge \n   OS pages that are not in use. This sig",
                      "markdown": "`ually 1GiB) from which mimalloc \n   allocates segments and pages. Set this to 2 (default) to \n   only enable this on overcommit systems (e.g. Linux). Set this to 1 to enable explicitly on other systems \n   as well (like Windows or macOS) which may improve performance (as the whole arena is committed at once). \n   Note that eager commit only increases the commit but not the actual the peak resident set \n   (rss) so it is generally ok to enable this.\n- `MIMALLOC_PURGE_DELAY=N`: the delay in `N` milli-seconds (by default `10`) after which mimalloc will purge \n   OS pages that are not in use. This sig`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 15,
                  "endLine": 214,
                  "endColumn": 19,
                  "snippet": {
                    "text": "## Single source\n\nYou can also directly build the single `src/static.c` file as part of your project without\nneeding `cmake` at all. Make sure to also add the mimalloc `include` directory to the include path.\n\n\n# Using the library\n",
                    "rendered": {
                      "text": "## Single source\n\nYou can also directly build the single `src/static.c` file as part of your project without\nneeding `cmake` at all. Make sure to also add the mimalloc `include` directory to the include path.\n\n\n# Using the library\n",
                      "markdown": "`## Single source\n\nYou can also directly build the single `src/static.c` file as part of your project without\nneeding `cmake` at all. Make sure to also add the mimalloc `include` directory to the include path.\n\n\n# Using the library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 1,
                  "endLine": 138,
                  "endColumn": 5,
                  "snippet": {
                    "text": " Mary Feofanova (@mary3000), Evgeniy Moiseenko, and Manuel Pöter (@mpoeter) for making mimalloc TSAN checkable, and finding\n  memory model bugs using the [genMC] model checker.\n* Weipeng Liu (@pongba), Zhuowei Li, Junhua Wang, and Jakub Szymanski, for their early support of mimalloc and deployment\n  at large scale services, leading to many improvements in the mimalloc algorithms for large workloads.\n* Jason Gibson (@jasongibson) for exhaustive testing on large scale workloads and server environments, and finding complex bugs\n  in (early versions of) `mimalloc`.\n* Manuel Pöter (@mpoeter) and Sam Gr",
                    "rendered": {
                      "text": " Mary Feofanova (@mary3000), Evgeniy Moiseenko, and Manuel Pöter (@mpoeter) for making mimalloc TSAN checkable, and finding\n  memory model bugs using the [genMC] model checker.\n* Weipeng Liu (@pongba), Zhuowei Li, Junhua Wang, and Jakub Szymanski, for their early support of mimalloc and deployment\n  at large scale services, leading to many improvements in the mimalloc algorithms for large workloads.\n* Jason Gibson (@jasongibson) for exhaustive testing on large scale workloads and server environments, and finding complex bugs\n  in (early versions of) `mimalloc`.\n* Manuel Pöter (@mpoeter) and Sam Gr",
                      "markdown": "` Mary Feofanova (@mary3000), Evgeniy Moiseenko, and Manuel Pöter (@mpoeter) for making mimalloc TSAN checkable, and finding\n  memory model bugs using the [genMC] model checker.\n* Weipeng Liu (@pongba), Zhuowei Li, Junhua Wang, and Jakub Szymanski, for their early support of mimalloc and deployment\n  at large scale services, leading to many improvements in the mimalloc algorithms for large workloads.\n* Jason Gibson (@jasongibson) for exhaustive testing on large scale workloads and server environments, and finding complex bugs\n  in (early versions of) `mimalloc`.\n* Manuel Pöter (@mpoeter) and Sam Gr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 25,
                  "endLine": 57,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  heap vulnerabilities. The performance penalty is usually around 10% on average\n  over our benchmarks.\n- __first-class heaps__: efficiently create and use multiple heaps to allocate across different regions.\n  A heap can be destroyed at once instead of deallocating each object separately.\n- __bounded__: it does not suffer from _blowup_ \\[1\\], has bounded worst-case allocation\n  times (_wcat_) (upto OS primitives), bounded space overhead (~0.2% meta-data, with low\n  internal fragmentation), and has no internal points of contention using only atomic operations.\n",
                    "rendered": {
                      "text": "  heap vulnerabilities. The performance penalty is usually around 10% on average\n  over our benchmarks.\n- __first-class heaps__: efficiently create and use multiple heaps to allocate across different regions.\n  A heap can be destroyed at once instead of deallocating each object separately.\n- __bounded__: it does not suffer from _blowup_ \\[1\\], has bounded worst-case allocation\n  times (_wcat_) (upto OS primitives), bounded space overhead (~0.2% meta-data, with low\n  internal fragmentation), and has no internal points of contention using only atomic operations.\n",
                      "markdown": "`  heap vulnerabilities. The performance penalty is usually around 10% on average\n  over our benchmarks.\n- __first-class heaps__: efficiently create and use multiple heaps to allocate across different regions.\n  A heap can be destroyed at once instead of deallocating each object separately.\n- __bounded__: it does not suffer from _blowup_ \\[1\\], has bounded worst-case allocation\n  times (_wcat_) (upto OS primitives), bounded space overhead (~0.2% meta-data, with low\n  internal fragmentation), and has no internal points of contention using only atomic operations.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  bounded worst-case times with reference counting).\n  Partly due to its simplicity, mimalloc has been ported to many systems (Windows, macOS,\n  Linux, WASM, various BSD's, Haiku, MUSL, etc) and has excellent support for dynamic overriding.\n  At the same time, it is an industrial strength allocator that runs (very) large scale\n  distributed services on thousands of machines with excellent worst case latencies.\n- __free list sharding__: instead of one big free list (per size class) we have\n  many smaller lists per \"mimalloc page\" which reduces fragmentation and\n",
                    "rendered": {
                      "text": "  bounded worst-case times with reference counting).\n  Partly due to its simplicity, mimalloc has been ported to many systems (Windows, macOS,\n  Linux, WASM, various BSD's, Haiku, MUSL, etc) and has excellent support for dynamic overriding.\n  At the same time, it is an industrial strength allocator that runs (very) large scale\n  distributed services on thousands of machines with excellent worst case latencies.\n- __free list sharding__: instead of one big free list (per size class) we have\n  many smaller lists per \"mimalloc page\" which reduces fragmentation and\n",
                      "markdown": "`  bounded worst-case times with reference counting).\n  Partly due to its simplicity, mimalloc has been ported to many systems (Windows, macOS,\n  Linux, WASM, various BSD's, Haiku, MUSL, etc) and has excellent support for dynamic overriding.\n  At the same time, it is an industrial strength allocator that runs (very) large scale\n  distributed services on thousands of machines with excellent worst case latencies.\n- __free list sharding__: instead of one big free list (per size class) we have\n  many smaller lists per \"mimalloc page\" which reduces fragmentation and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 841,
                  "startColumn": 7,
                  "endLine": 841,
                  "endColumn": 12,
                  "snippet": {
                    "text": " 1.6: improved error recovery in low-memory situations,\n  support for IllumOS and Haiku, NUMA support for Vista/XP, improved NUMA detection for AMD Ryzen, ubsan support.\n* 2020-05-05, `v1.6.3`: stable release 1.6: improved behavior in out-of-memory situations, improved malloc zones on macOS,\n  build PIC static libraries by default, add option to abort on out-of-memory, line buffered statistics.\n* 2020-04-20, `v1.6.2`: stable release 1.6: fix compilation on Android, MingW, Raspberry, and Conda,\n  stability fix for Windows 7, fix multiple mimalloc instances in one executable, fix `strnlen` overload,\n",
                    "rendered": {
                      "text": " 1.6: improved error recovery in low-memory situations,\n  support for IllumOS and Haiku, NUMA support for Vista/XP, improved NUMA detection for AMD Ryzen, ubsan support.\n* 2020-05-05, `v1.6.3`: stable release 1.6: improved behavior in out-of-memory situations, improved malloc zones on macOS,\n  build PIC static libraries by default, add option to abort on out-of-memory, line buffered statistics.\n* 2020-04-20, `v1.6.2`: stable release 1.6: fix compilation on Android, MingW, Raspberry, and Conda,\n  stability fix for Windows 7, fix multiple mimalloc instances in one executable, fix `strnlen` overload,\n",
                      "markdown": "` 1.6: improved error recovery in low-memory situations,\n  support for IllumOS and Haiku, NUMA support for Vista/XP, improved NUMA detection for AMD Ryzen, ubsan support.\n* 2020-05-05, `v1.6.3`: stable release 1.6: improved behavior in out-of-memory situations, improved malloc zones on macOS,\n  build PIC static libraries by default, add option to abort on out-of-memory, line buffered statistics.\n* 2020-04-20, `v1.6.2`: stable release 1.6: fix compilation on Android, MingW, Raspberry, and Conda,\n  stability fix for Windows 7, fix multiple mimalloc instances in one executable, fix `strnlen` overload,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 656,
                  "startColumn": 21,
                  "endLine": 656,
                  "endColumn": 27,
                  "snippet": {
                    "text": "The _mstressN_ workload performs many allocations and re-allocations,\nand migrates objects between threads (as in _larsonN_). However, it also\ncreates  and destroys the _N_ worker threads a few times keeping some objects\nalive beyond the life time of the allocating thread. We observed this\nbehavior in many larger server applications.\n\nThe [_rptestN_](https://github.com/mjansson/rpmalloc-benchmark) benchmark\n",
                    "rendered": {
                      "text": "The _mstressN_ workload performs many allocations and re-allocations,\nand migrates objects between threads (as in _larsonN_). However, it also\ncreates  and destroys the _N_ worker threads a few times keeping some objects\nalive beyond the life time of the allocating thread. We observed this\nbehavior in many larger server applications.\n\nThe [_rptestN_](https://github.com/mjansson/rpmalloc-benchmark) benchmark\n",
                      "markdown": "`The _mstressN_ workload performs many allocations and re-allocations,\nand migrates objects between threads (as in _larsonN_). However, it also\ncreates  and destroys the _N_ worker threads a few times keeping some objects\nalive beyond the life time of the allocating thread. We observed this\nbehavior in many larger server applications.\n\nThe [_rptestN_](https://github.com/mjansson/rpmalloc-benchmark) benchmark\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 44,
                  "endLine": 639,
                  "endColumn": 50,
                  "snippet": {
                    "text": "concurrent workload of the [Lean](https://github.com/leanprover/lean)\ntheorem prover compiling its own standard library, and there is a 13%\nspeedup over _tcmalloc_. This is\nquite significant: if Lean spends 20% of its time in the\nallocator that means that _mimalloc_ is 1.6&times; faster than _tcmalloc_\nhere. (This is surprising as that is not measured in a pure\nallocation benchmark like _alloc-test_. We conjecture that we see this\n",
                    "rendered": {
                      "text": "concurrent workload of the [Lean](https://github.com/leanprover/lean)\ntheorem prover compiling its own standard library, and there is a 13%\nspeedup over _tcmalloc_. This is\nquite significant: if Lean spends 20% of its time in the\nallocator that means that _mimalloc_ is 1.6&times; faster than _tcmalloc_\nhere. (This is surprising as that is not measured in a pure\nallocation benchmark like _alloc-test_. We conjecture that we see this\n",
                      "markdown": "`concurrent workload of the [Lean](https://github.com/leanprover/lean)\ntheorem prover compiling its own standard library, and there is a 13%\nspeedup over _tcmalloc_. This is\nquite significant: if Lean spends 20% of its time in the\nallocator that means that _mimalloc_ is 1.6&times; faster than _tcmalloc_\nhere. (This is surprising as that is not measured in a pure\nallocation benchmark like _alloc-test_. We conjecture that we see this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 49,
                  "endLine": 579,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\nGeneral memory allocators are interesting as there exists no algorithm that is\noptimal -- for a given allocator one can usually construct a workload\nwhere it does not do so well. The goal is thus to find an allocation\nstrategy that performs well over a wide range of benchmarks without\nsuffering from (too much) underperformance in less common situations.\n\n",
                    "rendered": {
                      "text": "\nGeneral memory allocators are interesting as there exists no algorithm that is\noptimal -- for a given allocator one can usually construct a workload\nwhere it does not do so well. The goal is thus to find an allocation\nstrategy that performs well over a wide range of benchmarks without\nsuffering from (too much) underperformance in less common situations.\n\n",
                      "markdown": "`\nGeneral memory allocators are interesting as there exists no algorithm that is\noptimal -- for a given allocator one can usually construct a workload\nwhere it does not do so well. The goal is thus to find an allocation\nstrategy that performs well over a wide range of benchmarks without\nsuffering from (too much) underperformance in less common situations.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 88,
                  "endLine": 574,
                  "endColumn": 94,
                  "snippet": {
                    "text": "range of benchmarks, ranging from various real world programs to\nsynthetic benchmarks that see how the allocator behaves under more\nextreme circumstances. In our benchmark suite, _mimalloc_ outperforms other leading\nallocators (_jemalloc_, _tcmalloc_, _Hoard_, etc), and has a similar memory footprint. A nice property is that it\ndoes consistently well over the wide range of benchmarks.\n\nGeneral memory allocators are interesting as there exists no algorithm that is\n",
                    "rendered": {
                      "text": "range of benchmarks, ranging from various real world programs to\nsynthetic benchmarks that see how the allocator behaves under more\nextreme circumstances. In our benchmark suite, _mimalloc_ outperforms other leading\nallocators (_jemalloc_, _tcmalloc_, _Hoard_, etc), and has a similar memory footprint. A nice property is that it\ndoes consistently well over the wide range of benchmarks.\n\nGeneral memory allocators are interesting as there exists no algorithm that is\n",
                      "markdown": "`range of benchmarks, ranging from various real world programs to\nsynthetic benchmarks that see how the allocator behaves under more\nextreme circumstances. In our benchmark suite, _mimalloc_ outperforms other leading\nallocators (_jemalloc_, _tcmalloc_, _Hoard_, etc), and has a similar memory footprint. A nice property is that it\ndoes consistently well over the wide range of benchmarks.\n\nGeneral memory allocators are interesting as there exists no algorithm that is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 39,
                  "endLine": 570,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nLast update: 2021-01-30\n\nWe tested _mimalloc_ against many other top allocators over a wide\nrange of benchmarks, ranging from various real world programs to\nsynthetic benchmarks that see how the allocator behaves under more\nextreme circumstances. In our benchmark suite, _mimalloc_ outperforms other leading\n",
                    "rendered": {
                      "text": "\nLast update: 2021-01-30\n\nWe tested _mimalloc_ against many other top allocators over a wide\nrange of benchmarks, ranging from various real world programs to\nsynthetic benchmarks that see how the allocator behaves under more\nextreme circumstances. In our benchmark suite, _mimalloc_ outperforms other leading\n",
                      "markdown": "`\nLast update: 2021-01-30\n\nWe tested _mimalloc_ against many other top allocators over a wide\nrange of benchmarks, ranging from various real world programs to\nsynthetic benchmarks that see how the allocator behaves under more\nextreme circumstances. In our benchmark suite, _mimalloc_ outperforms other leading\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 1,
                  "endLine": 411,
                  "endColumn": 6,
                  "snippet": {
                    "text": "library so all calls to the standard `malloc` interface are\nresolved to the _mimalloc_ library.\n```\n> env DYLD_INSERT_LIBRARIES=/usr/lib/libmimalloc.dylib myprogram\n```\n\nNote that certain security restrictions may apply when doing this from\n",
                    "rendered": {
                      "text": "library so all calls to the standard `malloc` interface are\nresolved to the _mimalloc_ library.\n```\n> env DYLD_INSERT_LIBRARIES=/usr/lib/libmimalloc.dylib myprogram\n```\n\nNote that certain security restrictions may apply when doing this from\n",
                      "markdown": "`library so all calls to the standard `malloc` interface are\nresolved to the _mimalloc_ library.\n```\n> env DYLD_INSERT_LIBRARIES=/usr/lib/libmimalloc.dylib myprogram\n```\n\nNote that certain security restrictions may apply when doing this from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 1,
                  "endLine": 402,
                  "endColumn": 6,
                  "snippet": {
                    "text": "```\nor run with the debug version to get detailed statistics:\n```\n> env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram\n```\n\n### Dynamic Override on MacOS\n",
                    "rendered": {
                      "text": "```\nor run with the debug version to get detailed statistics:\n```\n> env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram\n```\n\n### Dynamic Override on MacOS\n",
                      "markdown": "````\nor run with the debug version to get detailed statistics:\n```\n> env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram\n```\n\n### Dynamic Override on MacOS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 398,
                  "startColumn": 1,
                  "endLine": 398,
                  "endColumn": 6,
                  "snippet": {
                    "text": "You can set extra environment variables to check that mimalloc is running,\nlike:\n```\n> env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram\n```\nor run with the debug version to get detailed statistics:\n```\n",
                    "rendered": {
                      "text": "You can set extra environment variables to check that mimalloc is running,\nlike:\n```\n> env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram\n```\nor run with the debug version to get detailed statistics:\n```\n",
                      "markdown": "`You can set extra environment variables to check that mimalloc is running,\nlike:\n```\n> env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram\n```\nor run with the debug version to get detailed statistics:\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 1,
                  "endLine": 392,
                  "endColumn": 6,
                  "snippet": {
                    "text": "library so all calls to the standard `malloc` interface are\nresolved to the _mimalloc_ library.\n```\n> env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram\n```\n\nYou can set extra environment variables to check that mimalloc is running,\n",
                    "rendered": {
                      "text": "library so all calls to the standard `malloc` interface are\nresolved to the _mimalloc_ library.\n```\n> env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram\n```\n\nYou can set extra environment variables to check that mimalloc is running,\n",
                      "markdown": "`library so all calls to the standard `malloc` interface are\nresolved to the _mimalloc_ library.\n```\n> env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram\n```\n\nYou can set extra environment variables to check that mimalloc is running,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 36,
                  "endLine": 342,
                  "endColumn": 42,
                  "snippet": {
                    "text": "   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\nfor all pages in the original process including the huge OS pages. When any memory is now written in that area, the\n",
                    "rendered": {
                      "text": "   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\nfor all pages in the original process including the huge OS pages. When any memory is now written in that area, the\n",
                      "markdown": "`   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\nfor all pages in the original process including the huge OS pages. When any memory is now written in that area, the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 73,
                  "endLine": 341,
                  "endColumn": 79,
                  "snippet": {
                    "text": "   and allocate just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned\n   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\n",
                    "rendered": {
                      "text": "   and allocate just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned\n   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\n",
                      "markdown": "`   and allocate just a little to take up space in the huge OS page area (which cannot be purged as huge OS pages are pinned\n   to physical memory).\n   The huge pages are usually allocated evenly among NUMA nodes.\n   We can use `MIMALLOC_RESERVE_HUGE_OS_PAGES_AT=N` where `N` is the numa node (starting at 0) to allocate all\n   the huge pages at a specific numa node instead.\n\nUse caution when using `fork` in combination with either large or huge OS pages: on a fork, the OS uses copy-on-write\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 45,
                  "endLine": 332,
                  "endColumn": 51,
                  "snippet": {
                    "text": "   startup and sometimes this can give a large (latency) performance improvement on big workloads.\n   Usually it is better to not use `MIMALLOC_ALLOW_LARGE_OS_PAGES=1` in combination with this setting. Just like large \n   OS pages, use with care as reserving\n   contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at\n   startup only once).\n   Note that we usually need to explicitly give permission for huge OS pages (as on [Windows][windows-huge] and [Linux][linux-huge])).\n   With huge OS pages, it may be beneficial to set the setting\n",
                    "rendered": {
                      "text": "   startup and sometimes this can give a large (latency) performance improvement on big workloads.\n   Usually it is better to not use `MIMALLOC_ALLOW_LARGE_OS_PAGES=1` in combination with this setting. Just like large \n   OS pages, use with care as reserving\n   contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at\n   startup only once).\n   Note that we usually need to explicitly give permission for huge OS pages (as on [Windows][windows-huge] and [Linux][linux-huge])).\n   With huge OS pages, it may be beneficial to set the setting\n",
                      "markdown": "`   startup and sometimes this can give a large (latency) performance improvement on big workloads.\n   Usually it is better to not use `MIMALLOC_ALLOW_LARGE_OS_PAGES=1` in combination with this setting. Just like large \n   OS pages, use with care as reserving\n   contiguous physical memory can take a long time when memory is fragmented (but reserving the huge pages is done at\n   startup only once).\n   Note that we usually need to explicitly give permission for huge OS pages (as on [Windows][windows-huge] and [Linux][linux-huge])).\n   With huge OS pages, it may be beneficial to set the setting\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 1,
                  "endLine": 250,
                  "endColumn": 6,
                  "snippet": {
                    "text": "You can pass environment variables to print verbose messages (`MIMALLOC_VERBOSE=1`)\nand statistics (`MIMALLOC_SHOW_STATS=1`) (in the debug version):\n```\n> env MIMALLOC_SHOW_STATS=1 ./cfrac 175451865205073170563711388363\n\n175451865205073170563711388363 = 374456281610909315237213 * 468551\n\n",
                    "rendered": {
                      "text": "You can pass environment variables to print verbose messages (`MIMALLOC_VERBOSE=1`)\nand statistics (`MIMALLOC_SHOW_STATS=1`) (in the debug version):\n```\n> env MIMALLOC_SHOW_STATS=1 ./cfrac 175451865205073170563711388363\n\n175451865205073170563711388363 = 374456281610909315237213 * 468551\n\n",
                      "markdown": "`You can pass environment variables to print verbose messages (`MIMALLOC_VERBOSE=1`)\nand statistics (`MIMALLOC_SHOW_STATS=1`) (in the debug version):\n```\n> env MIMALLOC_SHOW_STATS=1 ./cfrac 175451865205073170563711388363\n\n175451865205073170563711388363 = 374456281610909315237213 * 468551\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 27,
                  "endLine": 231,
                  "endColumn": 33,
                  "snippet": {
                    "text": "```\nfind_package(mimalloc 1.4 REQUIRED)\n```\nin your `CMakeLists.txt` to find a locally installed mimalloc. Then use either:\n```\ntarget_link_libraries(myapp PUBLIC mimalloc)\n```\n",
                    "rendered": {
                      "text": "```\nfind_package(mimalloc 1.4 REQUIRED)\n```\nin your `CMakeLists.txt` to find a locally installed mimalloc. Then use either:\n```\ntarget_link_libraries(myapp PUBLIC mimalloc)\n```\n",
                      "markdown": "````\nfind_package(mimalloc 1.4 REQUIRED)\n```\nin your `CMakeLists.txt` to find a locally installed mimalloc. Then use either:\n```\ntarget_link_libraries(myapp PUBLIC mimalloc)\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 24,
                  "endLine": 208,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\nNotes:\n1. Install CMake: `sudo apt-get install cmake`\n2. Install CCMake: `sudo apt-get install cmake-curses-gui`\n\n\n## Single source\n",
                    "rendered": {
                      "text": "\nNotes:\n1. Install CMake: `sudo apt-get install cmake`\n2. Install CCMake: `sudo apt-get install cmake-curses-gui`\n\n\n## Single source\n",
                      "markdown": "`\nNotes:\n1. Install CMake: `sudo apt-get install cmake`\n2. Install CCMake: `sudo apt-get install cmake-curses-gui`\n\n\n## Single source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 23,
                  "endLine": 207,
                  "endColumn": 32,
                  "snippet": {
                    "text": "to see and customize all the available build options.\n\nNotes:\n1. Install CMake: `sudo apt-get install cmake`\n2. Install CCMake: `sudo apt-get install cmake-curses-gui`\n\n\n",
                    "rendered": {
                      "text": "to see and customize all the available build options.\n\nNotes:\n1. Install CMake: `sudo apt-get install cmake`\n2. Install CCMake: `sudo apt-get install cmake-curses-gui`\n\n\n",
                      "markdown": "`to see and customize all the available build options.\n\nNotes:\n1. Install CMake: `sudo apt-get install cmake`\n2. Install CCMake: `sudo apt-get install cmake-curses-gui`\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 75,
                  "endLine": 111,
                  "endColumn": 81,
                  "snippet": {
                    "text": "* 2022-12-23, `v1.7.9`, `v2.0.9`: Supports building with [asan](#asan) and improved [Valgrind](#valgrind) support.\n  Support arbitrary large alignments (in particular for `std::pmr` pools). \n  Added C++ STL allocators attached to a specific heap (thanks @vmarkovtsev). \n  Heap walks now visit all object (including huge objects). Support Windows nano server containers (by Johannes Schindelin,@dscho). \n  Various small bug fixes.\n\n* 2022-11-03, `v1.7.7`, `v2.0.7`: Initial support for [Valgrind](#valgrind) for leak testing and heap block overflow\n",
                    "rendered": {
                      "text": "* 2022-12-23, `v1.7.9`, `v2.0.9`: Supports building with [asan](#asan) and improved [Valgrind](#valgrind) support.\n  Support arbitrary large alignments (in particular for `std::pmr` pools). \n  Added C++ STL allocators attached to a specific heap (thanks @vmarkovtsev). \n  Heap walks now visit all object (including huge objects). Support Windows nano server containers (by Johannes Schindelin,@dscho). \n  Various small bug fixes.\n\n* 2022-11-03, `v1.7.7`, `v2.0.7`: Initial support for [Valgrind](#valgrind) for leak testing and heap block overflow\n",
                      "markdown": "`* 2022-12-23, `v1.7.9`, `v2.0.9`: Supports building with [asan](#asan) and improved [Valgrind](#valgrind) support.\n  Support arbitrary large alignments (in particular for `std::pmr` pools). \n  Added C++ STL allocators attached to a specific heap (thanks @vmarkovtsev). \n  Heap walks now visit all object (including huge objects). Support Windows nano server containers (by Johannes Schindelin,@dscho). \n  Various small bug fixes.\n\n* 2022-11-03, `v1.7.7`, `v2.0.7`: Initial support for [Valgrind](#valgrind) for leak testing and heap block overflow\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 31,
                  "endLine": 63,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  internal fragmentation), and has no internal points of contention using only atomic operations.\n- __fast__: In our benchmarks (see [below](#performance)),\n  _mimalloc_ outperforms other leading allocators (_jemalloc_, _tcmalloc_, _Hoard_, etc),\n  and often uses less memory. A nice property is that it does consistently well over a wide range\n  of benchmarks. There is also good huge OS page support for larger server programs.\n\nThe [documentation](https://microsoft.github.io/mimalloc) gives a full overview of the API.\n",
                    "rendered": {
                      "text": "  internal fragmentation), and has no internal points of contention using only atomic operations.\n- __fast__: In our benchmarks (see [below](#performance)),\n  _mimalloc_ outperforms other leading allocators (_jemalloc_, _tcmalloc_, _Hoard_, etc),\n  and often uses less memory. A nice property is that it does consistently well over a wide range\n  of benchmarks. There is also good huge OS page support for larger server programs.\n\nThe [documentation](https://microsoft.github.io/mimalloc) gives a full overview of the API.\n",
                      "markdown": "`  internal fragmentation), and has no internal points of contention using only atomic operations.\n- __fast__: In our benchmarks (see [below](#performance)),\n  _mimalloc_ outperforms other leading allocators (_jemalloc_, _tcmalloc_, _Hoard_, etc),\n  and often uses less memory. A nice property is that it does consistently well over a wide range\n  of benchmarks. There is also good huge OS page support for larger server programs.\n\nThe [documentation](https://microsoft.github.io/mimalloc) gives a full overview of the API.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mimalloc2.zip/readme.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 36,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "- __free list sharding__: instead of one big free list (per size class) we have\n  many smaller lists per \"mimalloc page\" which reduces fragmentation and\n  increases locality --\n  things that are allocated close in time get allocated close in memory.\n  (A mimalloc page contains blocks of one size class and is usually 64KiB on a 64-bit system).\n- __free list multi-sharding__: the big idea! Not only do we shard the free list\n  per mimalloc page, but for each page we have multiple free lists. In particular, there\n",
                    "rendered": {
                      "text": "- __free list sharding__: instead of one big free list (per size class) we have\n  many smaller lists per \"mimalloc page\" which reduces fragmentation and\n  increases locality --\n  things that are allocated close in time get allocated close in memory.\n  (A mimalloc page contains blocks of one size class and is usually 64KiB on a 64-bit system).\n- __free list multi-sharding__: the big idea! Not only do we shard the free list\n  per mimalloc page, but for each page we have multiple free lists. In particular, there\n",
                      "markdown": "`- __free list sharding__: instead of one big free list (per size class) we have\n  many smaller lists per \"mimalloc page\" which reduces fragmentation and\n  increases locality --\n  things that are allocated close in time get allocated close in memory.\n  (A mimalloc page contains blocks of one size class and is usually 64KiB on a 64-bit system).\n- __free list multi-sharding__: the big idea! Not only do we shard the free list\n  per mimalloc page, but for each page we have multiple free lists. In particular, there\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}