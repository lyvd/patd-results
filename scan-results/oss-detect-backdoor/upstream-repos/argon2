{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2id_v16"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Argon2id version number 16\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                    "rendered": {
                      "text": "Argon2id version number 16\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                      "markdown": "`Argon2id version number 16\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/bench.c"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 42,
                  "endLine": 48,
                  "endColumn": 50,
                  "snippet": {
                    "text": "}\n\n/*\n * Benchmarks Argon2 with salt length 16, password length 16, t_cost 3,\n   and different m_cost and threads\n */\nstatic void benchmark() {\n",
                    "rendered": {
                      "text": "}\n\n/*\n * Benchmarks Argon2 with salt length 16, password length 16, t_cost 3,\n   and different m_cost and threads\n */\nstatic void benchmark() {\n",
                      "markdown": "`}\n\n/*\n * Benchmarks Argon2 with salt length 16, password length 16, t_cost 3,\n   and different m_cost and threads\n */\nstatic void benchmark() {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 57,
                  "endLine": 283,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    assert(ret == ARGON2_PWD_PTR_MISMATCH);\n    printf(\"Fail on invalid null pointer: PASS\\n\");\n\n    ret = argon2_hash(2, 1 << 12, 1, \"password\", strlen(\"password\"), \"s\", 1,\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Fail on salt too short: PASS\\n\");\n",
                    "rendered": {
                      "text": "    assert(ret == ARGON2_PWD_PTR_MISMATCH);\n    printf(\"Fail on invalid null pointer: PASS\\n\");\n\n    ret = argon2_hash(2, 1 << 12, 1, \"password\", strlen(\"password\"), \"s\", 1,\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Fail on salt too short: PASS\\n\");\n",
                      "markdown": "`    assert(ret == ARGON2_PWD_PTR_MISMATCH);\n    printf(\"Fail on invalid null pointer: PASS\\n\");\n\n    ret = argon2_hash(2, 1 << 12, 1, \"password\", strlen(\"password\"), \"s\", 1,\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Fail on salt too short: PASS\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 38,
                  "endLine": 283,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    assert(ret == ARGON2_PWD_PTR_MISMATCH);\n    printf(\"Fail on invalid null pointer: PASS\\n\");\n\n    ret = argon2_hash(2, 1 << 12, 1, \"password\", strlen(\"password\"), \"s\", 1,\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Fail on salt too short: PASS\\n\");\n",
                    "rendered": {
                      "text": "    assert(ret == ARGON2_PWD_PTR_MISMATCH);\n    printf(\"Fail on invalid null pointer: PASS\\n\");\n\n    ret = argon2_hash(2, 1 << 12, 1, \"password\", strlen(\"password\"), \"s\", 1,\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Fail on salt too short: PASS\\n\");\n",
                      "markdown": "`    assert(ret == ARGON2_PWD_PTR_MISMATCH);\n    printf(\"Fail on invalid null pointer: PASS\\n\");\n\n    ret = argon2_hash(2, 1 << 12, 1, \"password\", strlen(\"password\"), \"s\", 1,\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Fail on salt too short: PASS\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 51,
                  "endLine": 277,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    assert(ret == ARGON2_MEMORY_TOO_LITTLE);\n    printf(\"Fail on invalid memory: PASS\\n\");\n\n    ret = argon2_hash(2, 1 << 12, 1, NULL, strlen(\"password\"),\n                      \"diffsalt\", strlen(\"diffsalt\"),\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_PWD_PTR_MISMATCH);\n",
                    "rendered": {
                      "text": "    assert(ret == ARGON2_MEMORY_TOO_LITTLE);\n    printf(\"Fail on invalid memory: PASS\\n\");\n\n    ret = argon2_hash(2, 1 << 12, 1, NULL, strlen(\"password\"),\n                      \"diffsalt\", strlen(\"diffsalt\"),\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_PWD_PTR_MISMATCH);\n",
                      "markdown": "`    assert(ret == ARGON2_MEMORY_TOO_LITTLE);\n    printf(\"Fail on invalid memory: PASS\\n\");\n\n    ret = argon2_hash(2, 1 << 12, 1, NULL, strlen(\"password\"),\n                      \"diffsalt\", strlen(\"diffsalt\"),\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_PWD_PTR_MISMATCH);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 51,
                  "endLine": 271,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    printf(\"\\n\");\n    printf(\"Common error state tests\\n\");\n\n    ret = argon2_hash(2, 1, 1, \"password\", strlen(\"password\"),\n                      \"diffsalt\", strlen(\"diffsalt\"),\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_MEMORY_TOO_LITTLE);\n",
                    "rendered": {
                      "text": "    printf(\"\\n\");\n    printf(\"Common error state tests\\n\");\n\n    ret = argon2_hash(2, 1, 1, \"password\", strlen(\"password\"),\n                      \"diffsalt\", strlen(\"diffsalt\"),\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_MEMORY_TOO_LITTLE);\n",
                      "markdown": "`    printf(\"\\n\");\n    printf(\"Common error state tests\\n\");\n\n    ret = argon2_hash(2, 1, 1, \"password\", strlen(\"password\"),\n                      \"diffsalt\", strlen(\"diffsalt\"),\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_MEMORY_TOO_LITTLE);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 32,
                  "endLine": 271,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    printf(\"\\n\");\n    printf(\"Common error state tests\\n\");\n\n    ret = argon2_hash(2, 1, 1, \"password\", strlen(\"password\"),\n                      \"diffsalt\", strlen(\"diffsalt\"),\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_MEMORY_TOO_LITTLE);\n",
                    "rendered": {
                      "text": "    printf(\"\\n\");\n    printf(\"Common error state tests\\n\");\n\n    ret = argon2_hash(2, 1, 1, \"password\", strlen(\"password\"),\n                      \"diffsalt\", strlen(\"diffsalt\"),\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_MEMORY_TOO_LITTLE);\n",
                      "markdown": "`    printf(\"\\n\");\n    printf(\"Common error state tests\\n\");\n\n    ret = argon2_hash(2, 1, 1, \"password\", strlen(\"password\"),\n                      \"diffsalt\", strlen(\"diffsalt\"),\n                      out, OUT_LEN, NULL, 0, Argon2_id, version);\n    assert(ret == ARGON2_MEMORY_TOO_LITTLE);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 33,
                  "endLine": 261,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"0b84d652cf6b0c4beaef0dfe278ba6a80df6696281d7e0d2891b817d8c458fde\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"bdf32b05ccc42eb15d58fd19b1f856b113da1e9a5874fdcc544308565aa8141c\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$vfMrBczELrFdWP0ZsfhWsRPaHppYdP3MVEMIVlqoFBw\", Argon2_id);\n",
                    "rendered": {
                      "text": "             \"0b84d652cf6b0c4beaef0dfe278ba6a80df6696281d7e0d2891b817d8c458fde\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"bdf32b05ccc42eb15d58fd19b1f856b113da1e9a5874fdcc544308565aa8141c\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$vfMrBczELrFdWP0ZsfhWsRPaHppYdP3MVEMIVlqoFBw\", Argon2_id);\n",
                      "markdown": "`             \"0b84d652cf6b0c4beaef0dfe278ba6a80df6696281d7e0d2891b817d8c458fde\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"bdf32b05ccc42eb15d58fd19b1f856b113da1e9a5874fdcc544308565aa8141c\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$vfMrBczELrFdWP0ZsfhWsRPaHppYdP3MVEMIVlqoFBw\", Argon2_id);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 42,
                  "endLine": 257,
                  "endColumn": 50,
                  "snippet": {
                    "text": "             \"9025d48e68ef7395cca9079da4c4ec3affb3c8911fe4f86d1a2520856f63172c\",\n             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"0b84d652cf6b0c4beaef0dfe278ba6a80df6696281d7e0d2891b817d8c458fde\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n",
                    "rendered": {
                      "text": "             \"9025d48e68ef7395cca9079da4c4ec3affb3c8911fe4f86d1a2520856f63172c\",\n             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"0b84d652cf6b0c4beaef0dfe278ba6a80df6696281d7e0d2891b817d8c458fde\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n",
                      "markdown": "`             \"9025d48e68ef7395cca9079da4c4ec3affb3c8911fe4f86d1a2520856f63172c\",\n             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"0b84d652cf6b0c4beaef0dfe278ba6a80df6696281d7e0d2891b817d8c458fde\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 33,
                  "endLine": 253,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"f6a5adc1ba723dddef9b5ac1d464e180fcd9dffc9d1cbf76cca2fed795d9ca98\",\n             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"9025d48e68ef7395cca9079da4c4ec3affb3c8911fe4f86d1a2520856f63172c\",\n             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n",
                    "rendered": {
                      "text": "             \"f6a5adc1ba723dddef9b5ac1d464e180fcd9dffc9d1cbf76cca2fed795d9ca98\",\n             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"9025d48e68ef7395cca9079da4c4ec3affb3c8911fe4f86d1a2520856f63172c\",\n             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n",
                      "markdown": "`             \"f6a5adc1ba723dddef9b5ac1d464e180fcd9dffc9d1cbf76cca2fed795d9ca98\",\n             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"9025d48e68ef7395cca9079da4c4ec3affb3c8911fe4f86d1a2520856f63172c\",\n             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 33,
                  "endLine": 249,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"6d093c501fd5999645e0ea3bf620d7b8be7fd2db59c20d9fff9539da2bf57037\",\n             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"f6a5adc1ba723dddef9b5ac1d464e180fcd9dffc9d1cbf76cca2fed795d9ca98\",\n             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n",
                    "rendered": {
                      "text": "             \"6d093c501fd5999645e0ea3bf620d7b8be7fd2db59c20d9fff9539da2bf57037\",\n             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"f6a5adc1ba723dddef9b5ac1d464e180fcd9dffc9d1cbf76cca2fed795d9ca98\",\n             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n",
                      "markdown": "`             \"6d093c501fd5999645e0ea3bf620d7b8be7fd2db59c20d9fff9539da2bf57037\",\n             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"f6a5adc1ba723dddef9b5ac1d464e180fcd9dffc9d1cbf76cca2fed795d9ca98\",\n             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 32,
                  "endLine": 245,
                  "endColumn": 40,
                  "snippet": {
                    "text": "             \"9dfeb910e80bad0311fee20f9c0e2b12c17987b4cac90c2ef54d5b3021c68bfe\",\n             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"6d093c501fd5999645e0ea3bf620d7b8be7fd2db59c20d9fff9539da2bf57037\",\n             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n",
                    "rendered": {
                      "text": "             \"9dfeb910e80bad0311fee20f9c0e2b12c17987b4cac90c2ef54d5b3021c68bfe\",\n             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"6d093c501fd5999645e0ea3bf620d7b8be7fd2db59c20d9fff9539da2bf57037\",\n             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n",
                      "markdown": "`             \"9dfeb910e80bad0311fee20f9c0e2b12c17987b4cac90c2ef54d5b3021c68bfe\",\n             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"6d093c501fd5999645e0ea3bf620d7b8be7fd2db59c20d9fff9539da2bf57037\",\n             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 32,
                  "endLine": 241,
                  "endColumn": 40,
                  "snippet": {
                    "text": "             \"78fe1ec91fb3aa5657d72e710854e4c3d9b9198c742f9616c2f085bed95b2e8c\",\n             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"9dfeb910e80bad0311fee20f9c0e2b12c17987b4cac90c2ef54d5b3021c68bfe\",\n             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n",
                    "rendered": {
                      "text": "             \"78fe1ec91fb3aa5657d72e710854e4c3d9b9198c742f9616c2f085bed95b2e8c\",\n             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"9dfeb910e80bad0311fee20f9c0e2b12c17987b4cac90c2ef54d5b3021c68bfe\",\n             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n",
                      "markdown": "`             \"78fe1ec91fb3aa5657d72e710854e4c3d9b9198c742f9616c2f085bed95b2e8c\",\n             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"9dfeb910e80bad0311fee20f9c0e2b12c17987b4cac90c2ef54d5b3021c68bfe\",\n             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 33,
                  "endLine": 237,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"09316115d5cf24ed5a15a31a3ba326e5cf32edc24702987c02b6566f61913cf7\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"78fe1ec91fb3aa5657d72e710854e4c3d9b9198c742f9616c2f085bed95b2e8c\",\n             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n",
                    "rendered": {
                      "text": "             \"09316115d5cf24ed5a15a31a3ba326e5cf32edc24702987c02b6566f61913cf7\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"78fe1ec91fb3aa5657d72e710854e4c3d9b9198c742f9616c2f085bed95b2e8c\",\n             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n",
                      "markdown": "`             \"09316115d5cf24ed5a15a31a3ba326e5cf32edc24702987c02b6566f61913cf7\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"78fe1ec91fb3aa5657d72e710854e4c3d9b9198c742f9616c2f085bed95b2e8c\",\n             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 33,
                  "endLine": 233,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    printf(\"Test Argon2id version number: %02x\\n\", version);\n\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"09316115d5cf24ed5a15a31a3ba326e5cf32edc24702987c02b6566f61913cf7\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n",
                    "rendered": {
                      "text": "    printf(\"Test Argon2id version number: %02x\\n\", version);\n\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"09316115d5cf24ed5a15a31a3ba326e5cf32edc24702987c02b6566f61913cf7\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n",
                      "markdown": "`    printf(\"Test Argon2id version number: %02x\\n\", version);\n\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"09316115d5cf24ed5a15a31a3ba326e5cf32edc24702987c02b6566f61913cf7\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 35,
                  "endLine": 224,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n    msg = argon2_error_message(ARGON2_DECODING_FAIL);\n    assert(strcmp(msg, \"Decoding failed\") == 0);\n",
                    "rendered": {
                      "text": "                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n    msg = argon2_error_message(ARGON2_DECODING_FAIL);\n    assert(strcmp(msg, \"Decoding failed\") == 0);\n",
                      "markdown": "`                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n    msg = argon2_error_message(ARGON2_DECODING_FAIL);\n    assert(strcmp(msg, \"Decoding failed\") == 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 44,
                  "endLine": 222,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 25,
                  "endLine": 222,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 47,
                  "endLine": 219,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n",
                    "rendered": {
                      "text": "    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n",
                      "markdown": "`    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 44,
                  "endLine": 215,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 25,
                  "endLine": 215,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 44,
                  "endLine": 208,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 25,
                  "endLine": 208,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 44,
                  "endLine": 201,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 25,
                  "endLine": 201,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 33,
                  "endLine": 190,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"14ae8da01afea8700c2358dcef7c5358d9021282bd88663a4562f59fb74d22ee\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"b0357cccfbef91f3860b0dba447b2348cbefecadaf990abfe9cc40726c521271\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$sDV8zPvvkfOGCw26RHsjSMvv7K2vmQq/6cxAcmxSEnE\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"14ae8da01afea8700c2358dcef7c5358d9021282bd88663a4562f59fb74d22ee\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"b0357cccfbef91f3860b0dba447b2348cbefecadaf990abfe9cc40726c521271\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$sDV8zPvvkfOGCw26RHsjSMvv7K2vmQq/6cxAcmxSEnE\", Argon2_i);\n",
                      "markdown": "`             \"14ae8da01afea8700c2358dcef7c5358d9021282bd88663a4562f59fb74d22ee\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"b0357cccfbef91f3860b0dba447b2348cbefecadaf990abfe9cc40726c521271\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$sDV8zPvvkfOGCw26RHsjSMvv7K2vmQq/6cxAcmxSEnE\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 42,
                  "endLine": 186,
                  "endColumn": 50,
                  "snippet": {
                    "text": "             \"aaa953d58af3706ce3df1aefd4a64a84e31d7f54175231f1285259f88174ce5b\",\n             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"14ae8da01afea8700c2358dcef7c5358d9021282bd88663a4562f59fb74d22ee\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"aaa953d58af3706ce3df1aefd4a64a84e31d7f54175231f1285259f88174ce5b\",\n             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"14ae8da01afea8700c2358dcef7c5358d9021282bd88663a4562f59fb74d22ee\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n",
                      "markdown": "`             \"aaa953d58af3706ce3df1aefd4a64a84e31d7f54175231f1285259f88174ce5b\",\n             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"14ae8da01afea8700c2358dcef7c5358d9021282bd88663a4562f59fb74d22ee\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 33,
                  "endLine": 182,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"d168075c4d985e13ebeae560cf8b94c3b5d8a16c51916b6f4ac2da3ac11bbecf\",\n             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"aaa953d58af3706ce3df1aefd4a64a84e31d7f54175231f1285259f88174ce5b\",\n             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"d168075c4d985e13ebeae560cf8b94c3b5d8a16c51916b6f4ac2da3ac11bbecf\",\n             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"aaa953d58af3706ce3df1aefd4a64a84e31d7f54175231f1285259f88174ce5b\",\n             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n",
                      "markdown": "`             \"d168075c4d985e13ebeae560cf8b94c3b5d8a16c51916b6f4ac2da3ac11bbecf\",\n             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"aaa953d58af3706ce3df1aefd4a64a84e31d7f54175231f1285259f88174ce5b\",\n             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 33,
                  "endLine": 178,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"4ff5ce2769a1d7f4c8a491df09d41a9fbe90e5eb02155a13e4c01e20cd4eab61\",\n             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"d168075c4d985e13ebeae560cf8b94c3b5d8a16c51916b6f4ac2da3ac11bbecf\",\n             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"4ff5ce2769a1d7f4c8a491df09d41a9fbe90e5eb02155a13e4c01e20cd4eab61\",\n             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"d168075c4d985e13ebeae560cf8b94c3b5d8a16c51916b6f4ac2da3ac11bbecf\",\n             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n",
                      "markdown": "`             \"4ff5ce2769a1d7f4c8a491df09d41a9fbe90e5eb02155a13e4c01e20cd4eab61\",\n             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"d168075c4d985e13ebeae560cf8b94c3b5d8a16c51916b6f4ac2da3ac11bbecf\",\n             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 32,
                  "endLine": 174,
                  "endColumn": 40,
                  "snippet": {
                    "text": "             \"89e9029f4637b295beb027056a7336c414fadd43f6b208645281cb214a56452f\",\n             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"4ff5ce2769a1d7f4c8a491df09d41a9fbe90e5eb02155a13e4c01e20cd4eab61\",\n             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"89e9029f4637b295beb027056a7336c414fadd43f6b208645281cb214a56452f\",\n             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"4ff5ce2769a1d7f4c8a491df09d41a9fbe90e5eb02155a13e4c01e20cd4eab61\",\n             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n",
                      "markdown": "`             \"89e9029f4637b295beb027056a7336c414fadd43f6b208645281cb214a56452f\",\n             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"4ff5ce2769a1d7f4c8a491df09d41a9fbe90e5eb02155a13e4c01e20cd4eab61\",\n             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 32,
                  "endLine": 170,
                  "endColumn": 40,
                  "snippet": {
                    "text": "             \"296dbae80b807cdceaad44ae741b506f14db0959267b183b118f9b24229bc7cb\",\n             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"89e9029f4637b295beb027056a7336c414fadd43f6b208645281cb214a56452f\",\n             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"296dbae80b807cdceaad44ae741b506f14db0959267b183b118f9b24229bc7cb\",\n             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"89e9029f4637b295beb027056a7336c414fadd43f6b208645281cb214a56452f\",\n             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n",
                      "markdown": "`             \"296dbae80b807cdceaad44ae741b506f14db0959267b183b118f9b24229bc7cb\",\n             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"89e9029f4637b295beb027056a7336c414fadd43f6b208645281cb214a56452f\",\n             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 33,
                  "endLine": 166,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"$argon2i$v=19$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"296dbae80b807cdceaad44ae741b506f14db0959267b183b118f9b24229bc7cb\",\n             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"$argon2i$v=19$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"296dbae80b807cdceaad44ae741b506f14db0959267b183b118f9b24229bc7cb\",\n             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n",
                      "markdown": "`             \"$argon2i$v=19$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"296dbae80b807cdceaad44ae741b506f14db0959267b183b118f9b24229bc7cb\",\n             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 33,
                  "endLine": 161,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n             \"d1587aca0922c3b5d6a83edab31bee3c4ebaef342ed6127a55d19b2351ad1f41\",\n             \"$argon2i$v=19$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n             \"d1587aca0922c3b5d6a83edab31bee3c4ebaef342ed6127a55d19b2351ad1f41\",\n             \"$argon2i$v=19$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n",
                      "markdown": "`             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n             \"d1587aca0922c3b5d6a83edab31bee3c4ebaef342ed6127a55d19b2351ad1f41\",\n             \"$argon2i$v=19$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 33,
                  "endLine": 156,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    printf(\"Test Argon2i version number: %02x\\n\", version);\n\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"c1628832147d9720c5bd1cfd61367078729f6dfb6f8fea9ff98158e0d7816ed0\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n",
                    "rendered": {
                      "text": "    printf(\"Test Argon2i version number: %02x\\n\", version);\n\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"c1628832147d9720c5bd1cfd61367078729f6dfb6f8fea9ff98158e0d7816ed0\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n",
                      "markdown": "`    printf(\"Test Argon2i version number: %02x\\n\", version);\n\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"c1628832147d9720c5bd1cfd61367078729f6dfb6f8fea9ff98158e0d7816ed0\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 35,
                  "endLine": 144,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n    msg = argon2_error_message(ARGON2_DECODING_FAIL);\n    assert(strcmp(msg, \"Decoding failed\") == 0);\n",
                    "rendered": {
                      "text": "                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n    msg = argon2_error_message(ARGON2_DECODING_FAIL);\n    assert(strcmp(msg, \"Decoding failed\") == 0);\n",
                      "markdown": "`                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n    msg = argon2_error_message(ARGON2_DECODING_FAIL);\n    assert(strcmp(msg, \"Decoding failed\") == 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 44,
                  "endLine": 142,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 25,
                  "endLine": 142,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_VERIFY_MISMATCH);\n    printf(\"Verify with mismatched password: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 47,
                  "endLine": 139,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n",
                    "rendered": {
                      "text": "    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n",
                      "markdown": "`    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n    /* Handle an mismatching hash (the encoded password is \"passwore\") */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 44,
                  "endLine": 135,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 25,
                  "endLine": 135,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (salt is too short) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_SALT_TOO_SHORT);\n    printf(\"Recognise an invalid salt in encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 44,
                  "endLine": 128,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 25,
                  "endLine": 128,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 44,
                  "endLine": 121,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 25,
                  "endLine": 121,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                    "rendered": {
                      "text": "    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n",
                      "markdown": "`    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n                        \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 33,
                  "endLine": 111,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"e9c902074b6754531a3a0be519e5baf404b30ce69b3f01ac3bf21229960109a3\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"79a103b90fe8aef8570cb31fc8b22259778916f8336b7bdac3892569d4f1c497\",\n             \"$argon2i$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$eaEDuQ/orvhXDLMfyLIiWXeJFvgza3vaw4kladTxxJc\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"e9c902074b6754531a3a0be519e5baf404b30ce69b3f01ac3bf21229960109a3\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"79a103b90fe8aef8570cb31fc8b22259778916f8336b7bdac3892569d4f1c497\",\n             \"$argon2i$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$eaEDuQ/orvhXDLMfyLIiWXeJFvgza3vaw4kladTxxJc\", Argon2_i);\n",
                      "markdown": "`             \"e9c902074b6754531a3a0be519e5baf404b30ce69b3f01ac3bf21229960109a3\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"79a103b90fe8aef8570cb31fc8b22259778916f8336b7bdac3892569d4f1c497\",\n             \"$argon2i$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$eaEDuQ/orvhXDLMfyLIiWXeJFvgza3vaw4kladTxxJc\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 42,
                  "endLine": 107,
                  "endColumn": 50,
                  "snippet": {
                    "text": "             \"f212f01615e6eb5d74734dc3ef40ade2d51d052468d8c69440a3a1f2c1c2847b\",\n             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"e9c902074b6754531a3a0be519e5baf404b30ce69b3f01ac3bf21229960109a3\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"f212f01615e6eb5d74734dc3ef40ade2d51d052468d8c69440a3a1f2c1c2847b\",\n             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"e9c902074b6754531a3a0be519e5baf404b30ce69b3f01ac3bf21229960109a3\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n",
                      "markdown": "`             \"f212f01615e6eb5d74734dc3ef40ade2d51d052468d8c69440a3a1f2c1c2847b\",\n             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"e9c902074b6754531a3a0be519e5baf404b30ce69b3f01ac3bf21229960109a3\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 33,
                  "endLine": 103,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"81630552b8f3b1f48cdb1992c4c678643d490b2b5eb4ff6c4b3438b5621724b2\",\n             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"f212f01615e6eb5d74734dc3ef40ade2d51d052468d8c69440a3a1f2c1c2847b\",\n             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"81630552b8f3b1f48cdb1992c4c678643d490b2b5eb4ff6c4b3438b5621724b2\",\n             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"f212f01615e6eb5d74734dc3ef40ade2d51d052468d8c69440a3a1f2c1c2847b\",\n             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n",
                      "markdown": "`             \"81630552b8f3b1f48cdb1992c4c678643d490b2b5eb4ff6c4b3438b5621724b2\",\n             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"f212f01615e6eb5d74734dc3ef40ade2d51d052468d8c69440a3a1f2c1c2847b\",\n             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 33,
                  "endLine": 99,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"b6c11560a6a9d61eac706b79a2f97d68b4463aa3ad87e00c07e2b01e90c564fb\",\n             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"81630552b8f3b1f48cdb1992c4c678643d490b2b5eb4ff6c4b3438b5621724b2\",\n             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"b6c11560a6a9d61eac706b79a2f97d68b4463aa3ad87e00c07e2b01e90c564fb\",\n             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"81630552b8f3b1f48cdb1992c4c678643d490b2b5eb4ff6c4b3438b5621724b2\",\n             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n",
                      "markdown": "`             \"b6c11560a6a9d61eac706b79a2f97d68b4463aa3ad87e00c07e2b01e90c564fb\",\n             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"81630552b8f3b1f48cdb1992c4c678643d490b2b5eb4ff6c4b3438b5621724b2\",\n             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 32,
                  "endLine": 95,
                  "endColumn": 40,
                  "snippet": {
                    "text": "             \"fd4dd83d762c49bdeaf57c47bdcd0c2f1babf863fdeb490df63ede9975fccf06\",\n             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"b6c11560a6a9d61eac706b79a2f97d68b4463aa3ad87e00c07e2b01e90c564fb\",\n             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"fd4dd83d762c49bdeaf57c47bdcd0c2f1babf863fdeb490df63ede9975fccf06\",\n             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"b6c11560a6a9d61eac706b79a2f97d68b4463aa3ad87e00c07e2b01e90c564fb\",\n             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n",
                      "markdown": "`             \"fd4dd83d762c49bdeaf57c47bdcd0c2f1babf863fdeb490df63ede9975fccf06\",\n             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"b6c11560a6a9d61eac706b79a2f97d68b4463aa3ad87e00c07e2b01e90c564fb\",\n             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 32,
                  "endLine": 91,
                  "endColumn": 40,
                  "snippet": {
                    "text": "             \"3e689aaa3d28a77cf2bc72a51ac53166761751182f1ee292e3f677a7da4c2467\",\n             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"fd4dd83d762c49bdeaf57c47bdcd0c2f1babf863fdeb490df63ede9975fccf06\",\n             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"3e689aaa3d28a77cf2bc72a51ac53166761751182f1ee292e3f677a7da4c2467\",\n             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"fd4dd83d762c49bdeaf57c47bdcd0c2f1babf863fdeb490df63ede9975fccf06\",\n             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n",
                      "markdown": "`             \"3e689aaa3d28a77cf2bc72a51ac53166761751182f1ee292e3f677a7da4c2467\",\n             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"fd4dd83d762c49bdeaf57c47bdcd0c2f1babf863fdeb490df63ede9975fccf06\",\n             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 33,
                  "endLine": 87,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            \"$argon2i$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"3e689aaa3d28a77cf2bc72a51ac53166761751182f1ee292e3f677a7da4c2467\",\n             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n",
                    "rendered": {
                      "text": "            \"$argon2i$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"3e689aaa3d28a77cf2bc72a51ac53166761751182f1ee292e3f677a7da4c2467\",\n             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n",
                      "markdown": "`            \"$argon2i$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"3e689aaa3d28a77cf2bc72a51ac53166761751182f1ee292e3f677a7da4c2467\",\n             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 33,
                  "endLine": 82,
                  "endColumn": 41,
                  "snippet": {
                    "text": "             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n            \"9690ec55d28d3ed32562f2e73ea62b02b018757643a2ae6e79528459de8106e9\",\n            \"$argon2i$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n",
                    "rendered": {
                      "text": "             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n            \"9690ec55d28d3ed32562f2e73ea62b02b018757643a2ae6e79528459de8106e9\",\n            \"$argon2i$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n",
                      "markdown": "`             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n            \"9690ec55d28d3ed32562f2e73ea62b02b018757643a2ae6e79528459de8106e9\",\n            \"$argon2i$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 33,
                  "endLine": 77,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    printf(\"Test Argon2i version number: %02x\\n\", version);\n\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"f6c4db4a54e2a370627aff3db6176b94a2a209a62c8e36152711802f7b30c694\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n",
                    "rendered": {
                      "text": "    printf(\"Test Argon2i version number: %02x\\n\", version);\n\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"f6c4db4a54e2a370627aff3db6176b94a2a209a62c8e36152711802f7b30c694\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n",
                      "markdown": "`    printf(\"Test Argon2i version number: %02x\\n\", version);\n\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"f6c4db4a54e2a370627aff3db6176b94a2a209a62c8e36152711802f7b30c694\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 13,
                  "endLine": 262,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"bdf32b05ccc42eb15d58fd19b1f856b113da1e9a5874fdcc544308565aa8141c\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$vfMrBczELrFdWP0ZsfhWsRPaHppYdP3MVEMIVlqoFBw\", Argon2_id);\n\n",
                    "rendered": {
                      "text": "             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"bdf32b05ccc42eb15d58fd19b1f856b113da1e9a5874fdcc544308565aa8141c\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$vfMrBczELrFdWP0ZsfhWsRPaHppYdP3MVEMIVlqoFBw\", Argon2_id);\n\n",
                      "markdown": "`             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"bdf32b05ccc42eb15d58fd19b1f856b113da1e9a5874fdcc544308565aa8141c\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$vfMrBczELrFdWP0ZsfhWsRPaHppYdP3MVEMIVlqoFBw\", Argon2_id);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 13,
                  "endLine": 258,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"0b84d652cf6b0c4beaef0dfe278ba6a80df6696281d7e0d2891b817d8c458fde\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"0b84d652cf6b0c4beaef0dfe278ba6a80df6696281d7e0d2891b817d8c458fde\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n",
                      "markdown": "`             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"0b84d652cf6b0c4beaef0dfe278ba6a80df6696281d7e0d2891b817d8c458fde\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$C4TWUs9rDEvq7w3+J4umqA32aWKB1+DSiRuBfYxFj94\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 13,
                  "endLine": 254,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"9025d48e68ef7395cca9079da4c4ec3affb3c8911fe4f86d1a2520856f63172c\",\n             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"9025d48e68ef7395cca9079da4c4ec3affb3c8911fe4f86d1a2520856f63172c\",\n             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"9025d48e68ef7395cca9079da4c4ec3affb3c8911fe4f86d1a2520856f63172c\",\n             \"$argon2id$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$kCXUjmjvc5XMqQedpMTsOv+zyJEf5PhtGiUghW9jFyw\", Argon2_id);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 13,
                  "endLine": 250,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"f6a5adc1ba723dddef9b5ac1d464e180fcd9dffc9d1cbf76cca2fed795d9ca98\",\n             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"f6a5adc1ba723dddef9b5ac1d464e180fcd9dffc9d1cbf76cca2fed795d9ca98\",\n             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"f6a5adc1ba723dddef9b5ac1d464e180fcd9dffc9d1cbf76cca2fed795d9ca98\",\n             \"$argon2id$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$9qWtwbpyPd3vm1rB1GThgPzZ3/ydHL92zKL+15XZypg\", Argon2_id);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 13,
                  "endLine": 246,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"6d093c501fd5999645e0ea3bf620d7b8be7fd2db59c20d9fff9539da2bf57037\",\n             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"6d093c501fd5999645e0ea3bf620d7b8be7fd2db59c20d9fff9539da2bf57037\",\n             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"6d093c501fd5999645e0ea3bf620d7b8be7fd2db59c20d9fff9539da2bf57037\",\n             \"$argon2id$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$bQk8UB/VmZZF4Oo79iDXuL5/0ttZwg2f/5U52iv1cDc\", Argon2_id);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 13,
                  "endLine": 242,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"9dfeb910e80bad0311fee20f9c0e2b12c17987b4cac90c2ef54d5b3021c68bfe\",\n             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"9dfeb910e80bad0311fee20f9c0e2b12c17987b4cac90c2ef54d5b3021c68bfe\",\n             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"9dfeb910e80bad0311fee20f9c0e2b12c17987b4cac90c2ef54d5b3021c68bfe\",\n             \"$argon2id$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$nf65EOgLrQMR/uIPnA4rEsF5h7TKyQwu9U1bMCHGi/4\", Argon2_id);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 13,
                  "endLine": 238,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"78fe1ec91fb3aa5657d72e710854e4c3d9b9198c742f9616c2f085bed95b2e8c\",\n             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"78fe1ec91fb3aa5657d72e710854e4c3d9b9198c742f9616c2f085bed95b2e8c\",\n             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"78fe1ec91fb3aa5657d72e710854e4c3d9b9198c742f9616c2f085bed95b2e8c\",\n             \"$argon2id$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$eP4eyR+zqlZX1y5xCFTkw9m5GYx0L5YWwvCFvtlbLow\", Argon2_id);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 13,
                  "endLine": 234,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"09316115d5cf24ed5a15a31a3ba326e5cf32edc24702987c02b6566f61913cf7\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"09316115d5cf24ed5a15a31a3ba326e5cf32edc24702987c02b6566f61913cf7\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"09316115d5cf24ed5a15a31a3ba326e5cf32edc24702987c02b6566f61913cf7\",\n             \"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$CTFhFdXPJO1aFaMaO6Mm5c8y7cJHAph8ArZWb2GRPPc\", Argon2_id);\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 13,
                  "endLine": 191,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"b0357cccfbef91f3860b0dba447b2348cbefecadaf990abfe9cc40726c521271\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$sDV8zPvvkfOGCw26RHsjSMvv7K2vmQq/6cxAcmxSEnE\", Argon2_i);\n\n",
                    "rendered": {
                      "text": "             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"b0357cccfbef91f3860b0dba447b2348cbefecadaf990abfe9cc40726c521271\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$sDV8zPvvkfOGCw26RHsjSMvv7K2vmQq/6cxAcmxSEnE\", Argon2_i);\n\n",
                      "markdown": "`             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"b0357cccfbef91f3860b0dba447b2348cbefecadaf990abfe9cc40726c521271\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$sDV8zPvvkfOGCw26RHsjSMvv7K2vmQq/6cxAcmxSEnE\", Argon2_i);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 13,
                  "endLine": 187,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"14ae8da01afea8700c2358dcef7c5358d9021282bd88663a4562f59fb74d22ee\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"14ae8da01afea8700c2358dcef7c5358d9021282bd88663a4562f59fb74d22ee\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n",
                      "markdown": "`             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"14ae8da01afea8700c2358dcef7c5358d9021282bd88663a4562f59fb74d22ee\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$FK6NoBr+qHAMI1jc73xTWNkCEoK9iGY6RWL1n7dNIu4\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 13,
                  "endLine": 183,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"aaa953d58af3706ce3df1aefd4a64a84e31d7f54175231f1285259f88174ce5b\",\n             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"aaa953d58af3706ce3df1aefd4a64a84e31d7f54175231f1285259f88174ce5b\",\n             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"aaa953d58af3706ce3df1aefd4a64a84e31d7f54175231f1285259f88174ce5b\",\n             \"$argon2i$v=19$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$qqlT1YrzcGzj3xrv1KZKhOMdf1QXUjHxKFJZ+IF0zls\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 13,
                  "endLine": 179,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"d168075c4d985e13ebeae560cf8b94c3b5d8a16c51916b6f4ac2da3ac11bbecf\",\n             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"d168075c4d985e13ebeae560cf8b94c3b5d8a16c51916b6f4ac2da3ac11bbecf\",\n             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"d168075c4d985e13ebeae560cf8b94c3b5d8a16c51916b6f4ac2da3ac11bbecf\",\n             \"$argon2i$v=19$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$0WgHXE2YXhPr6uVgz4uUw7XYoWxRkWtvSsLaOsEbvs8\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 13,
                  "endLine": 175,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"4ff5ce2769a1d7f4c8a491df09d41a9fbe90e5eb02155a13e4c01e20cd4eab61\",\n             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"4ff5ce2769a1d7f4c8a491df09d41a9fbe90e5eb02155a13e4c01e20cd4eab61\",\n             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"4ff5ce2769a1d7f4c8a491df09d41a9fbe90e5eb02155a13e4c01e20cd4eab61\",\n             \"$argon2i$v=19$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$T/XOJ2mh1/TIpJHfCdQan76Q5esCFVoT5MAeIM1Oq2E\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 13,
                  "endLine": 171,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"89e9029f4637b295beb027056a7336c414fadd43f6b208645281cb214a56452f\",\n             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"89e9029f4637b295beb027056a7336c414fadd43f6b208645281cb214a56452f\",\n             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"89e9029f4637b295beb027056a7336c414fadd43f6b208645281cb214a56452f\",\n             \"$argon2i$v=19$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$iekCn0Y3spW+sCcFanM2xBT63UP2sghkUoHLIUpWRS8\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 13,
                  "endLine": 167,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"296dbae80b807cdceaad44ae741b506f14db0959267b183b118f9b24229bc7cb\",\n             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"296dbae80b807cdceaad44ae741b506f14db0959267b183b118f9b24229bc7cb\",\n             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"296dbae80b807cdceaad44ae741b506f14db0959267b183b118f9b24229bc7cb\",\n             \"$argon2i$v=19$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$KW266AuAfNzqrUSudBtQbxTbCVkmexg7EY+bJCKbx8s\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 13,
                  "endLine": 162,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n             \"d1587aca0922c3b5d6a83edab31bee3c4ebaef342ed6127a55d19b2351ad1f41\",\n             \"$argon2i$v=19$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n#endif\n",
                    "rendered": {
                      "text": "             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n             \"d1587aca0922c3b5d6a83edab31bee3c4ebaef342ed6127a55d19b2351ad1f41\",\n             \"$argon2i$v=19$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n#endif\n",
                      "markdown": "`             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n             \"d1587aca0922c3b5d6a83edab31bee3c4ebaef342ed6127a55d19b2351ad1f41\",\n             \"$argon2i$v=19$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n             \"$0Vh6ygkiw7XWqD7asxvuPE667zQu1hJ6VdGbI1GtH0E\", Argon2_i);\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 13,
                  "endLine": 157,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"c1628832147d9720c5bd1cfd61367078729f6dfb6f8fea9ff98158e0d7816ed0\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n",
                    "rendered": {
                      "text": "\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"c1628832147d9720c5bd1cfd61367078729f6dfb6f8fea9ff98158e0d7816ed0\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n",
                      "markdown": "`\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"c1628832147d9720c5bd1cfd61367078729f6dfb6f8fea9ff98158e0d7816ed0\",\n             \"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 24,
                  "endLine": 127,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n",
                    "rendered": {
                      "text": "\n    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n",
                      "markdown": "`\n    /* Handle an invalid encoding correctly (it is missing a $) */\n    ret = argon2_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n                        \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n                        \"password\", strlen(\"password\"), Argon2_i);\n    assert(ret == ARGON2_DECODING_FAIL);\n    printf(\"Recognise an invalid encoding: PASS\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 13,
                  "endLine": 112,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"79a103b90fe8aef8570cb31fc8b22259778916f8336b7bdac3892569d4f1c497\",\n             \"$argon2i$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$eaEDuQ/orvhXDLMfyLIiWXeJFvgza3vaw4kladTxxJc\", Argon2_i);\n\n",
                    "rendered": {
                      "text": "             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"79a103b90fe8aef8570cb31fc8b22259778916f8336b7bdac3892569d4f1c497\",\n             \"$argon2i$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$eaEDuQ/orvhXDLMfyLIiWXeJFvgza3vaw4kladTxxJc\", Argon2_i);\n\n",
                      "markdown": "`             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n             \"79a103b90fe8aef8570cb31fc8b22259778916f8336b7bdac3892569d4f1c497\",\n             \"$argon2i$m=65536,t=2,p=1$ZGlmZnNhbHQ\"\n             \"$eaEDuQ/orvhXDLMfyLIiWXeJFvgza3vaw4kladTxxJc\", Argon2_i);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 13,
                  "endLine": 108,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"e9c902074b6754531a3a0be519e5baf404b30ce69b3f01ac3bf21229960109a3\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"e9c902074b6754531a3a0be519e5baf404b30ce69b3f01ac3bf21229960109a3\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n",
                      "markdown": "`             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n             \"e9c902074b6754531a3a0be519e5baf404b30ce69b3f01ac3bf21229960109a3\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$6ckCB0tnVFMaOgvlGeW69ASzDOabPwGsO/ISKZYBCaM\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"password\", \"diffsalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 13,
                  "endLine": 104,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"f212f01615e6eb5d74734dc3ef40ade2d51d052468d8c69440a3a1f2c1c2847b\",\n             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"f212f01615e6eb5d74734dc3ef40ade2d51d052468d8c69440a3a1f2c1c2847b\",\n             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n             \"f212f01615e6eb5d74734dc3ef40ade2d51d052468d8c69440a3a1f2c1c2847b\",\n             \"$argon2i$m=65536,t=4,p=1$c29tZXNhbHQ\"\n             \"$8hLwFhXm6110c03D70Ct4tUdBSRo2MaUQKOh8sHChHs\", Argon2_i);\n    hashtest(version, 2, 16, 1, \"differentpassword\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"81630552b8f3b1f48cdb1992c4c678643d490b2b5eb4ff6c4b3438b5621724b2\",\n             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"81630552b8f3b1f48cdb1992c4c678643d490b2b5eb4ff6c4b3438b5621724b2\",\n             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n             \"81630552b8f3b1f48cdb1992c4c678643d490b2b5eb4ff6c4b3438b5621724b2\",\n             \"$argon2i$m=65536,t=1,p=1$c29tZXNhbHQ\"\n             \"$gWMFUrjzsfSM2xmSxMZ4ZD1JCytetP9sSzQ4tWIXJLI\", Argon2_i);\n    hashtest(version, 4, 16, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 96,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"b6c11560a6a9d61eac706b79a2f97d68b4463aa3ad87e00c07e2b01e90c564fb\",\n             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"b6c11560a6a9d61eac706b79a2f97d68b4463aa3ad87e00c07e2b01e90c564fb\",\n             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n             \"b6c11560a6a9d61eac706b79a2f97d68b4463aa3ad87e00c07e2b01e90c564fb\",\n             \"$argon2i$m=256,t=2,p=2$c29tZXNhbHQ\"\n             \"$tsEVYKap1h6scGt5ovl9aLRGOqOth+AMB+KwHpDFZPs\", Argon2_i);\n    hashtest(version, 1, 16, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 13,
                  "endLine": 92,
                  "endColumn": 79,
                  "snippet": {
                    "text": "             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"fd4dd83d762c49bdeaf57c47bdcd0c2f1babf863fdeb490df63ede9975fccf06\",\n             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"fd4dd83d762c49bdeaf57c47bdcd0c2f1babf863fdeb490df63ede9975fccf06\",\n             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n",
                      "markdown": "`             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n             \"fd4dd83d762c49bdeaf57c47bdcd0c2f1babf863fdeb490df63ede9975fccf06\",\n             \"$argon2i$m=256,t=2,p=1$c29tZXNhbHQ\"\n             \"$/U3YPXYsSb3q9XxHvc0MLxur+GP960kN9j7emXX8zwY\", Argon2_i);\n    hashtest(version, 2, 8, 2, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 13,
                  "endLine": 88,
                  "endColumn": 79,
                  "snippet": {
                    "text": "            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"3e689aaa3d28a77cf2bc72a51ac53166761751182f1ee292e3f677a7da4c2467\",\n             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n",
                    "rendered": {
                      "text": "            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"3e689aaa3d28a77cf2bc72a51ac53166761751182f1ee292e3f677a7da4c2467\",\n             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n",
                      "markdown": "`            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n#endif\n    hashtest(version, 2, 18, 1, \"password\", \"somesalt\",\n             \"3e689aaa3d28a77cf2bc72a51ac53166761751182f1ee292e3f677a7da4c2467\",\n             \"$argon2i$m=262144,t=2,p=1$c29tZXNhbHQ\"\n             \"$Pmiaqj0op3zyvHKlGsUxZnYXURgvHuKS4/Z3p9pMJGc\", Argon2_i);\n    hashtest(version, 2, 8, 1, \"password\", \"somesalt\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 12,
                  "endLine": 83,
                  "endColumn": 78,
                  "snippet": {
                    "text": "             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n            \"9690ec55d28d3ed32562f2e73ea62b02b018757643a2ae6e79528459de8106e9\",\n            \"$argon2i$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n#endif\n",
                    "rendered": {
                      "text": "             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n            \"9690ec55d28d3ed32562f2e73ea62b02b018757643a2ae6e79528459de8106e9\",\n            \"$argon2i$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n#endif\n",
                      "markdown": "`             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n    hashtest(version, 2, 20, 1, \"password\", \"somesalt\",\n            \"9690ec55d28d3ed32562f2e73ea62b02b018757643a2ae6e79528459de8106e9\",\n            \"$argon2i$m=1048576,t=2,p=1$c29tZXNhbHQ\"\n            \"$lpDsVdKNPtMlYvLnPqYrArAYdXZDoq5ueVKEWd6BBuk\", Argon2_i);\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/test.c"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"f6c4db4a54e2a370627aff3db6176b94a2a209a62c8e36152711802f7b30c694\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n",
                    "rendered": {
                      "text": "\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"f6c4db4a54e2a370627aff3db6176b94a2a209a62c8e36152711802f7b30c694\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n",
                      "markdown": "`\n    /* Multiple test cases for various input values */\n    hashtest(version, 2, 16, 1, \"password\", \"somesalt\",\n             \"f6c4db4a54e2a370627aff3db6176b94a2a209a62c8e36152711802f7b30c694\",\n             \"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n             \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\", Argon2_i);\n#ifdef TEST_LARGE_RAM\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/encoding.h"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 62,
                  "endLine": 42,
                  "endColumn": 70,
                  "snippet": {
                    "text": "* The only fields that must be set prior to this call are ctx.saltlen and\n* ctx.outlen (which must be the maximal salt and out length values that are\n* allowed), ctx.salt and ctx.out (which must be buffers of the specified\n* length), and ctx.pwd and ctx.pwdlen which must hold a valid password.\n*\n* Invalid input string causes an error. On success, the ctx is valid and all\n* fields have been initialized.\n",
                    "rendered": {
                      "text": "* The only fields that must be set prior to this call are ctx.saltlen and\n* ctx.outlen (which must be the maximal salt and out length values that are\n* allowed), ctx.salt and ctx.out (which must be buffers of the specified\n* length), and ctx.pwd and ctx.pwdlen which must hold a valid password.\n*\n* Invalid input string causes an error. On success, the ctx is valid and all\n* fields have been initialized.\n",
                      "markdown": "`* The only fields that must be set prior to this call are ctx.saltlen and\n* ctx.outlen (which must be the maximal salt and out length values that are\n* allowed), ctx.salt and ctx.out (which must be buffers of the specified\n* length), and ctx.pwd and ctx.pwdlen which must hold a valid password.\n*\n* Invalid input string causes an error. On success, the ctx is valid and all\n* fields have been initialized.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 796,
                  "startColumn": 20,
                  "endLine": 796,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n@misc{cryptoeprint:2015:136,\n    author = {Marcos A. Simplicio Jr. and Leonardo C. Almeida and Ewerton R. Andrade and Paulo C. F. dos Santos and Paulo S. L. M. Barreto},\n    title = {Lyra2: Password Hashing Scheme with improved security against time-memory trade-offs},\n    howpublished = {Cryptology ePrint Archive, Report 2015/136},\n    year = {2015},\n    note = {\\url{http://eprint.iacr.org/}},\n",
                    "rendered": {
                      "text": "\n@misc{cryptoeprint:2015:136,\n    author = {Marcos A. Simplicio Jr. and Leonardo C. Almeida and Ewerton R. Andrade and Paulo C. F. dos Santos and Paulo S. L. M. Barreto},\n    title = {Lyra2: Password Hashing Scheme with improved security against time-memory trade-offs},\n    howpublished = {Cryptology ePrint Archive, Report 2015/136},\n    year = {2015},\n    note = {\\url{http://eprint.iacr.org/}},\n",
                      "markdown": "`\n@misc{cryptoeprint:2015:136,\n    author = {Marcos A. Simplicio Jr. and Leonardo C. Almeida and Ewerton R. Andrade and Paulo C. F. dos Santos and Paulo S. L. M. Barreto},\n    title = {Lyra2: Password Hashing Scheme with improved security against time-memory trade-offs},\n    howpublished = {Cryptology ePrint Archive, Report 2015/136},\n    year = {2015},\n    note = {\\url{http://eprint.iacr.org/}},\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 759,
                  "startColumn": 61,
                  "endLine": 759,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n@inproceedings{Rig,\n  author    = {Donghoon Chang and Arpan Jati and Sweta Mishra and Somitra Sanadhya},\n  title     = {Rig: A simple, secure and flexible design for Password Hashing},\n  booktitle = {Inscrypt'14},\n  series    = {Lecture Notes in Computer Science, to appear},\n  publisher = {Springer},\n",
                    "rendered": {
                      "text": "\n@inproceedings{Rig,\n  author    = {Donghoon Chang and Arpan Jati and Sweta Mishra and Somitra Sanadhya},\n  title     = {Rig: A simple, secure and flexible design for Password Hashing},\n  booktitle = {Inscrypt'14},\n  series    = {Lecture Notes in Computer Science, to appear},\n  publisher = {Springer},\n",
                      "markdown": "`\n@inproceedings{Rig,\n  author    = {Donghoon Chang and Arpan Jati and Sweta Mishra and Somitra Sanadhya},\n  title     = {Rig: A simple, secure and flexible design for Password Hashing},\n  booktitle = {Inscrypt'14},\n  series    = {Lecture Notes in Computer Science, to appear},\n  publisher = {Springer},\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 711,
                  "startColumn": 50,
                  "endLine": 711,
                  "endColumn": 58,
                  "snippet": {
                    "text": "               Eik List and\n               Stefan Lucks and\n               Jakob Wenzel},\n  title     = {Overview of the Candidates for the Password Hashing Competition -\n               And their Resistance against Garbage-Collector Attacks},\n  journal   = {{IACR} Cryptology ePrint Archive},\n  volume    = {2014},\n",
                    "rendered": {
                      "text": "               Eik List and\n               Stefan Lucks and\n               Jakob Wenzel},\n  title     = {Overview of the Candidates for the Password Hashing Competition -\n               And their Resistance against Garbage-Collector Attacks},\n  journal   = {{IACR} Cryptology ePrint Archive},\n  volume    = {2014},\n",
                      "markdown": "`               Eik List and\n               Stefan Lucks and\n               Jakob Wenzel},\n  title     = {Overview of the Candidates for the Password Hashing Competition -\n               And their Resistance against Garbage-Collector Attacks},\n  journal   = {{IACR} Cryptology ePrint Archive},\n  volume    = {2014},\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 651,
                  "startColumn": 39,
                  "endLine": 651,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n@inproceedings{SprengerB12,\n  author    = {Martijn Sprengers and Lejla Batina},\n  title     = {Speeding up {GPU-based} password cracking},\n  booktitle   = {SHARCS'12},\n  year      = {2012},\n  note = {available at \\url{http://2012.sharcs.org/record.pdf}}\n",
                    "rendered": {
                      "text": "\n@inproceedings{SprengerB12,\n  author    = {Martijn Sprengers and Lejla Batina},\n  title     = {Speeding up {GPU-based} password cracking},\n  booktitle   = {SHARCS'12},\n  year      = {2012},\n  note = {available at \\url{http://2012.sharcs.org/record.pdf}}\n",
                      "markdown": "`\n@inproceedings{SprengerB12,\n  author    = {Martijn Sprengers and Lejla Batina},\n  title     = {Speeding up {GPU-based} password cracking},\n  booktitle   = {SHARCS'12},\n  year      = {2012},\n  note = {available at \\url{http://2012.sharcs.org/record.pdf}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 607,
                  "startColumn": 51,
                  "endLine": 607,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n\n@MISC{ripper,\n  title =        {Software tool: {John the Ripper} password cracker},\n  note =         {\\url{http://www.openwall.com/john/}}\n}\n\n",
                    "rendered": {
                      "text": "\n\n@MISC{ripper,\n  title =        {Software tool: {John the Ripper} password cracker},\n  note =         {\\url{http://www.openwall.com/john/}}\n}\n\n",
                      "markdown": "`\n\n@MISC{ripper,\n  title =        {Software tool: {John the Ripper} password cracker},\n  note =         {\\url{http://www.openwall.com/john/}}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 99,
                  "endLine": 602,
                  "endColumn": 107,
                  "snippet": {
                    "text": "@MISC{fpga,\n  title =        {Energy-efficient bcrypt cracking},\nauthor={Katja Malvoni},\n  note =         {Passwords'14 conference, available at \\url{http://www.openwall.com/presentations/Passwords14-Energy-Efficient-Cracking/}}\n}\n\n\n",
                    "rendered": {
                      "text": "@MISC{fpga,\n  title =        {Energy-efficient bcrypt cracking},\nauthor={Katja Malvoni},\n  note =         {Passwords'14 conference, available at \\url{http://www.openwall.com/presentations/Passwords14-Energy-Efficient-Cracking/}}\n}\n\n\n",
                      "markdown": "`@MISC{fpga,\n  title =        {Energy-efficient bcrypt cracking},\nauthor={Katja Malvoni},\n  note =         {Passwords'14 conference, available at \\url{http://www.openwall.com/presentations/Passwords14-Energy-Efficient-Cracking/}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 18,
                  "endLine": 602,
                  "endColumn": 26,
                  "snippet": {
                    "text": "@MISC{fpga,\n  title =        {Energy-efficient bcrypt cracking},\nauthor={Katja Malvoni},\n  note =         {Passwords'14 conference, available at \\url{http://www.openwall.com/presentations/Passwords14-Energy-Efficient-Cracking/}}\n}\n\n\n",
                    "rendered": {
                      "text": "@MISC{fpga,\n  title =        {Energy-efficient bcrypt cracking},\nauthor={Katja Malvoni},\n  note =         {Passwords'14 conference, available at \\url{http://www.openwall.com/presentations/Passwords14-Energy-Efficient-Cracking/}}\n}\n\n\n",
                      "markdown": "`@MISC{fpga,\n  title =        {Energy-efficient bcrypt cracking},\nauthor={Katja Malvoni},\n  note =         {Passwords'14 conference, available at \\url{http://www.openwall.com/presentations/Passwords14-Energy-Efficient-Cracking/}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 586,
                  "startColumn": 44,
                  "endLine": 586,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  title =        {{POMELO}:\nA Password Hashing Algorithm},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/POMELO-v1.pdf}},\n}\n\n\n",
                    "rendered": {
                      "text": "  title =        {{POMELO}:\nA Password Hashing Algorithm},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/POMELO-v1.pdf}},\n}\n\n\n",
                      "markdown": "`  title =        {{POMELO}:\nA Password Hashing Algorithm},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/POMELO-v1.pdf}},\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 584,
                  "startColumn": 2,
                  "endLine": 584,
                  "endColumn": 10,
                  "snippet": {
                    "text": "@TECHREPORT{pomelo,\n  author =       {Hongjun Wu},\n  title =        {{POMELO}:\nA Password Hashing Algorithm},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/POMELO-v1.pdf}},\n}\n",
                    "rendered": {
                      "text": "@TECHREPORT{pomelo,\n  author =       {Hongjun Wu},\n  title =        {{POMELO}:\nA Password Hashing Algorithm},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/POMELO-v1.pdf}},\n}\n",
                      "markdown": "`@TECHREPORT{pomelo,\n  author =       {Hongjun Wu},\n  title =        {{POMELO}:\nA Password Hashing Algorithm},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/POMELO-v1.pdf}},\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 466,
                  "startColumn": 32,
                  "endLine": 466,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  author    = {Christian Forler and\n               Stefan Lucks and\n               Jakob Wenzel},\n  title     = {Memory-Demanding Password Scrambling},\n  booktitle = {{ASIACRYPT}'14},\n   series    = {Lecture Notes in Computer Science},\n  volume    = {8874},\n",
                    "rendered": {
                      "text": "  author    = {Christian Forler and\n               Stefan Lucks and\n               Jakob Wenzel},\n  title     = {Memory-Demanding Password Scrambling},\n  booktitle = {{ASIACRYPT}'14},\n   series    = {Lecture Notes in Computer Science},\n  volume    = {8874},\n",
                      "markdown": "`  author    = {Christian Forler and\n               Stefan Lucks and\n               Jakob Wenzel},\n  title     = {Memory-Demanding Password Scrambling},\n  booktitle = {{ASIACRYPT}'14},\n   series    = {Lecture Notes in Computer Science},\n  volume    = {8874},\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 42,
                  "endLine": 449,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  author    = {Christian Forler and\n               Stefan Lucks and\n               Jakob Wenzel},\n  title     = {Catena: A Memory-Consuming Password Scrambler},\n  journal   = {IACR Cryptology ePrint Archive, Report 2013/525},\n  year = {2013},\n  note = {non-tweaked version \\url{http://eprint.iacr.org/2013/525/20140105:194859}}\n",
                    "rendered": {
                      "text": "  author    = {Christian Forler and\n               Stefan Lucks and\n               Jakob Wenzel},\n  title     = {Catena: A Memory-Consuming Password Scrambler},\n  journal   = {IACR Cryptology ePrint Archive, Report 2013/525},\n  year = {2013},\n  note = {non-tweaked version \\url{http://eprint.iacr.org/2013/525/20140105:194859}}\n",
                      "markdown": "`  author    = {Christian Forler and\n               Stefan Lucks and\n               Jakob Wenzel},\n  title     = {Catena: A Memory-Consuming Password Scrambler},\n  journal   = {IACR Cryptology ePrint Archive, Report 2013/525},\n  year = {2013},\n  note = {non-tweaked version \\url{http://eprint.iacr.org/2013/525/20140105:194859}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 48,
                  "endLine": 274,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n@misc{cryptoeprint:2014:881,\n    author = {Christian Forler and Eik List and Stefan Lucks and Jakob Wenzel},\n    title = {Overview of the Candidates for the Password Hashing Competition - And Their Resistance Against Garbage-Collector Attacks},\n    howpublished = {Cryptology ePrint Archive, Report 2014/881},\n    year = {2014},\n    note = {\\url{http://eprint.iacr.org/}},\n",
                    "rendered": {
                      "text": "\n@misc{cryptoeprint:2014:881,\n    author = {Christian Forler and Eik List and Stefan Lucks and Jakob Wenzel},\n    title = {Overview of the Candidates for the Password Hashing Competition - And Their Resistance Against Garbage-Collector Attacks},\n    howpublished = {Cryptology ePrint Archive, Report 2014/881},\n    year = {2014},\n    note = {\\url{http://eprint.iacr.org/}},\n",
                      "markdown": "`\n@misc{cryptoeprint:2014:881,\n    author = {Christian Forler and Eik List and Stefan Lucks and Jakob Wenzel},\n    title = {Overview of the Candidates for the Password Hashing Competition - And Their Resistance Against Garbage-Collector Attacks},\n    howpublished = {Cryptology ePrint Archive, Report 2014/881},\n    year = {2014},\n    note = {\\url{http://eprint.iacr.org/}},\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 73,
                  "endLine": 252,
                  "endColumn": 81,
                  "snippet": {
                    "text": "  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n}\n\n\n",
                    "rendered": {
                      "text": "  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n}\n\n\n",
                      "markdown": "`  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 33,
                  "endLine": 252,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n}\n\n\n",
                    "rendered": {
                      "text": "  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n}\n\n\n",
                      "markdown": "`  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 33,
                  "endLine": 249,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  author    = {Donghoon Chang and Arpan Jati and Sweta Mishra and Somitra Kumar Sanadhya},\n  title     = {Time Memory Tradeoff Analysis of Graphs in Password\nHashing Constructions},\n  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n",
                    "rendered": {
                      "text": "  author    = {Donghoon Chang and Arpan Jati and Sweta Mishra and Somitra Kumar Sanadhya},\n  title     = {Time Memory Tradeoff Analysis of Graphs in Password\nHashing Constructions},\n  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n",
                      "markdown": "`  author    = {Donghoon Chang and Arpan Jati and Sweta Mishra and Somitra Kumar Sanadhya},\n  title     = {Time Memory Tradeoff Analysis of Graphs in Password\nHashing Constructions},\n  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 58,
                  "endLine": 247,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n@inproceedings{norwayTrade,\n  author    = {Donghoon Chang and Arpan Jati and Sweta Mishra and Somitra Kumar Sanadhya},\n  title     = {Time Memory Tradeoff Analysis of Graphs in Password\nHashing Constructions},\n  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n",
                    "rendered": {
                      "text": "\n@inproceedings{norwayTrade,\n  author    = {Donghoon Chang and Arpan Jati and Sweta Mishra and Somitra Kumar Sanadhya},\n  title     = {Time Memory Tradeoff Analysis of Graphs in Password\nHashing Constructions},\n  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n",
                      "markdown": "`\n@inproceedings{norwayTrade,\n  author    = {Donghoon Chang and Arpan Jati and Sweta Mishra and Somitra Kumar Sanadhya},\n  title     = {Time Memory Tradeoff Analysis of Graphs in Password\nHashing Constructions},\n  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 31,
                  "endLine": 211,
                  "endColumn": 39,
                  "snippet": {
                    "text": "@MISC{comp,\n  title =        {{Password Hashing Competition}},\n  year = 2015,\n  note =         {\\url{https://password-hashing.net/}}\n}\n\n\n",
                    "rendered": {
                      "text": "@MISC{comp,\n  title =        {{Password Hashing Competition}},\n  year = 2015,\n  note =         {\\url{https://password-hashing.net/}}\n}\n\n\n",
                      "markdown": "`@MISC{comp,\n  title =        {{Password Hashing Competition}},\n  year = 2015,\n  note =         {\\url{https://password-hashing.net/}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 19,
                  "endLine": 209,
                  "endColumn": 27,
                  "snippet": {
                    "text": "}\n\n@MISC{comp,\n  title =        {{Password Hashing Competition}},\n  year = 2015,\n  note =         {\\url{https://password-hashing.net/}}\n}\n",
                    "rendered": {
                      "text": "}\n\n@MISC{comp,\n  title =        {{Password Hashing Competition}},\n  year = 2015,\n  note =         {\\url{https://password-hashing.net/}}\n}\n",
                      "markdown": "`}\n\n@MISC{comp,\n  title =        {{Password Hashing Competition}},\n  year = 2015,\n  note =         {\\url{https://password-hashing.net/}}\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 44,
                  "endLine": 194,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  author =       {Alexander Peslyak },\n  title =        {Yescrypt - a Password Hashing Competition submission},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/yescrypt-v0.pdf}}\n}\n\n\n",
                    "rendered": {
                      "text": "  author =       {Alexander Peslyak },\n  title =        {Yescrypt - a Password Hashing Competition submission},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/yescrypt-v0.pdf}}\n}\n\n\n",
                      "markdown": "`  author =       {Alexander Peslyak },\n  title =        {Yescrypt - a Password Hashing Competition submission},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/yescrypt-v0.pdf}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 31,
                  "endLine": 192,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n@TECHREPORT{yescrypt,\n  author =       {Alexander Peslyak },\n  title =        {Yescrypt - a Password Hashing Competition submission},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/yescrypt-v0.pdf}}\n}\n",
                    "rendered": {
                      "text": "\n@TECHREPORT{yescrypt,\n  author =       {Alexander Peslyak },\n  title =        {Yescrypt - a Password Hashing Competition submission},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/yescrypt-v0.pdf}}\n}\n",
                      "markdown": "`\n@TECHREPORT{yescrypt,\n  author =       {Alexander Peslyak },\n  title =        {Yescrypt - a Password Hashing Competition submission},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/yescrypt-v0.pdf}}\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 86,
                  "endLine": 187,
                  "endColumn": 94,
                  "snippet": {
                    "text": "@MISC{ebay,\n  year = {2014},\n  title =        {{eBay} hacked, requests all users change passwords},\n  note =         {\\url{http://www.cnet.com/news/ebay-hacked-requests-all-users-change-passwords/}}\n}\n\n@TECHREPORT{yescrypt,\n",
                    "rendered": {
                      "text": "@MISC{ebay,\n  year = {2014},\n  title =        {{eBay} hacked, requests all users change passwords},\n  note =         {\\url{http://www.cnet.com/news/ebay-hacked-requests-all-users-change-passwords/}}\n}\n\n@TECHREPORT{yescrypt,\n",
                      "markdown": "`@MISC{ebay,\n  year = {2014},\n  title =        {{eBay} hacked, requests all users change passwords},\n  note =         {\\url{http://www.cnet.com/news/ebay-hacked-requests-all-users-change-passwords/}}\n}\n\n@TECHREPORT{yescrypt,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 59,
                  "endLine": 186,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n@MISC{ebay,\n  year = {2014},\n  title =        {{eBay} hacked, requests all users change passwords},\n  note =         {\\url{http://www.cnet.com/news/ebay-hacked-requests-all-users-change-passwords/}}\n}\n\n",
                    "rendered": {
                      "text": "\n@MISC{ebay,\n  year = {2014},\n  title =        {{eBay} hacked, requests all users change passwords},\n  note =         {\\url{http://www.cnet.com/news/ebay-hacked-requests-all-users-change-passwords/}}\n}\n\n",
                      "markdown": "`\n@MISC{ebay,\n  year = {2014},\n  title =        {{eBay} hacked, requests all users change passwords},\n  note =         {\\url{http://www.cnet.com/news/ebay-hacked-requests-all-users-change-passwords/}}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 61,
                  "endLine": 164,
                  "endColumn": 69,
                  "snippet": {
                    "text": "@MISC{story,\n year=2012,\n  title =        {Password security: past, present, future},\n  note =         {\\url{http://www.openwall.com/presentations/Passwords12-The-Future-Of-Hashing/}}\n  }\n  \n  @article{DziembowskiFKP13,\n",
                    "rendered": {
                      "text": "@MISC{story,\n year=2012,\n  title =        {Password security: past, present, future},\n  note =         {\\url{http://www.openwall.com/presentations/Passwords12-The-Future-Of-Hashing/}}\n  }\n  \n  @article{DziembowskiFKP13,\n",
                      "markdown": "`@MISC{story,\n year=2012,\n  title =        {Password security: past, present, future},\n  note =         {\\url{http://www.openwall.com/presentations/Passwords12-The-Future-Of-Hashing/}}\n  }\n  \n  @article{DziembowskiFKP13,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 18,
                  "endLine": 163,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n@MISC{story,\n year=2012,\n  title =        {Password security: past, present, future},\n  note =         {\\url{http://www.openwall.com/presentations/Passwords12-The-Future-Of-Hashing/}}\n  }\n  \n",
                    "rendered": {
                      "text": "\n@MISC{story,\n year=2012,\n  title =        {Password security: past, present, future},\n  note =         {\\url{http://www.openwall.com/presentations/Passwords12-The-Future-Of-Hashing/}}\n  }\n  \n",
                      "markdown": "`\n@MISC{story,\n year=2012,\n  title =        {Password security: past, present, future},\n  note =         {\\url{http://www.openwall.com/presentations/Passwords12-The-Future-Of-Hashing/}}\n  }\n  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 41,
                  "endLine": 154,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n\n@MANUAL{ietf-scrypt,\n  title =        {IETF Draft: The scrypt Password-Based Key Derivation Function},\n  year =         {2012},\n  note =         {\\url{\nhttps://tools.ietf.org/html/draft-josefsson-scrypt-kdf-02}}\n",
                    "rendered": {
                      "text": "\n\n@MANUAL{ietf-scrypt,\n  title =        {IETF Draft: The scrypt Password-Based Key Derivation Function},\n  year =         {2012},\n  note =         {\\url{\nhttps://tools.ietf.org/html/draft-josefsson-scrypt-kdf-02}}\n",
                      "markdown": "`\n\n@MANUAL{ietf-scrypt,\n  title =        {IETF Draft: The scrypt Password-Based Key Derivation Function},\n  year =         {2012},\n  note =         {\\url{\nhttps://tools.ietf.org/html/draft-josefsson-scrypt-kdf-02}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 771,
                  "startColumn": 18,
                  "endLine": 771,
                  "endColumn": 22,
                  "snippet": {
                    "text": "               Ivan Pustogarov},\n  title     = {Proof-of-Work as Anonymous Micropayment: Rewarding a {Tor} Relay},\n  journal   = {{IACR} Cryptology ePrint Archive 2014/1011},\n  note= {to appear at Financial Cryptography 2015},\n  url       = {http://eprint.iacr.org/2014/1011},\n  timestamp = {Mon, 19 Jan 2015 11:11:51 +0100},\n  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/iacr/BiryukovP14},\n",
                    "rendered": {
                      "text": "               Ivan Pustogarov},\n  title     = {Proof-of-Work as Anonymous Micropayment: Rewarding a {Tor} Relay},\n  journal   = {{IACR} Cryptology ePrint Archive 2014/1011},\n  note= {to appear at Financial Cryptography 2015},\n  url       = {http://eprint.iacr.org/2014/1011},\n  timestamp = {Mon, 19 Jan 2015 11:11:51 +0100},\n  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/iacr/BiryukovP14},\n",
                      "markdown": "`               Ivan Pustogarov},\n  title     = {Proof-of-Work as Anonymous Micropayment: Rewarding a {Tor} Relay},\n  journal   = {{IACR} Cryptology ePrint Archive 2014/1011},\n  note= {to appear at Financial Cryptography 2015},\n  url       = {http://eprint.iacr.org/2014/1011},\n  timestamp = {Mon, 19 Jan 2015 11:11:51 +0100},\n  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/iacr/BiryukovP14},\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 654,
                  "startColumn": 19,
                  "endLine": 654,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  title     = {Speeding up {GPU-based} password cracking},\n  booktitle   = {SHARCS'12},\n  year      = {2012},\n  note = {available at \\url{http://2012.sharcs.org/record.pdf}}\n}\n\n@article{nakamoto2012bitcoin,\n",
                    "rendered": {
                      "text": "  title     = {Speeding up {GPU-based} password cracking},\n  booktitle   = {SHARCS'12},\n  year      = {2012},\n  note = {available at \\url{http://2012.sharcs.org/record.pdf}}\n}\n\n@article{nakamoto2012bitcoin,\n",
                      "markdown": "`  title     = {Speeding up {GPU-based} password cracking},\n  booktitle   = {SHARCS'12},\n  year      = {2012},\n  note = {available at \\url{http://2012.sharcs.org/record.pdf}}\n}\n\n@article{nakamoto2012bitcoin,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 52,
                  "endLine": 602,
                  "endColumn": 56,
                  "snippet": {
                    "text": "@MISC{fpga,\n  title =        {Energy-efficient bcrypt cracking},\nauthor={Katja Malvoni},\n  note =         {Passwords'14 conference, available at \\url{http://www.openwall.com/presentations/Passwords14-Energy-Efficient-Cracking/}}\n}\n\n\n",
                    "rendered": {
                      "text": "@MISC{fpga,\n  title =        {Energy-efficient bcrypt cracking},\nauthor={Katja Malvoni},\n  note =         {Passwords'14 conference, available at \\url{http://www.openwall.com/presentations/Passwords14-Energy-Efficient-Cracking/}}\n}\n\n\n",
                      "markdown": "`@MISC{fpga,\n  title =        {Energy-efficient bcrypt cracking},\nauthor={Katja Malvoni},\n  note =         {Passwords'14 conference, available at \\url{http://www.openwall.com/presentations/Passwords14-Energy-Efficient-Cracking/}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 586,
                  "startColumn": 27,
                  "endLine": 586,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  title =        {{POMELO}:\nA Password Hashing Algorithm},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/POMELO-v1.pdf}},\n}\n\n\n",
                    "rendered": {
                      "text": "  title =        {{POMELO}:\nA Password Hashing Algorithm},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/POMELO-v1.pdf}},\n}\n\n\n",
                      "markdown": "`  title =        {{POMELO}:\nA Password Hashing Algorithm},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/POMELO-v1.pdf}},\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 27,
                  "endLine": 568,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  title =        {The {Lyra2} reference guide, version 2.3.2},\n  year =         {2014},\n  month = {april},\n  note =         {available at  \\url{http://lyra-kdf.net/Lyra2ReferenceGuide_v1.pdf}},\n}\n\n\n",
                    "rendered": {
                      "text": "  title =        {The {Lyra2} reference guide, version 2.3.2},\n  year =         {2014},\n  month = {april},\n  note =         {available at  \\url{http://lyra-kdf.net/Lyra2ReferenceGuide_v1.pdf}},\n}\n\n\n",
                      "markdown": "`  title =        {The {Lyra2} reference guide, version 2.3.2},\n  year =         {2014},\n  month = {april},\n  note =         {available at  \\url{http://lyra-kdf.net/Lyra2ReferenceGuide_v1.pdf}},\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 27,
                  "endLine": 520,
                  "endColumn": 31,
                  "snippet": {
                    "text": "@MISC{bitcoin,\n  title =        {Bitcoin: Mining hardware comparison},\n  year={2014},\n  note =         {available at \\url{https://en.bitcoin.it/wiki/Mining_hardware_comparison}. We compare $2^{32}$ hashes per joule on the best ASICs with $2^{17}$ hashes per joule on the most efficient x86-laptops.}\n}\n\n\n",
                    "rendered": {
                      "text": "@MISC{bitcoin,\n  title =        {Bitcoin: Mining hardware comparison},\n  year={2014},\n  note =         {available at \\url{https://en.bitcoin.it/wiki/Mining_hardware_comparison}. We compare $2^{32}$ hashes per joule on the best ASICs with $2^{17}$ hashes per joule on the most efficient x86-laptops.}\n}\n\n\n",
                      "markdown": "`@MISC{bitcoin,\n  title =        {Bitcoin: Mining hardware comparison},\n  year={2014},\n  note =         {available at \\url{https://en.bitcoin.it/wiki/Mining_hardware_comparison}. We compare $2^{32}$ hashes per joule on the best ASICs with $2^{17}$ hashes per joule on the most efficient x86-laptops.}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 17,
                  "endLine": 252,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n}\n\n\n",
                    "rendered": {
                      "text": "  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n}\n\n\n",
                      "markdown": "`  booktitle = {Preproceedings of PASSWORDS'14},\n  year      = {2014},\n  pages     = {256-266},\n  note={available at \\url{http://passwords14.item.ntnu.no/Preproceedings_Passwords14.pdf}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 15,
                  "endLine": 228,
                  "endColumn": 19,
                  "snippet": {
                    "text": "@MANUAL{FIPS-180-4,\nTITLE = {{FIPS}-180-4: {Secure Hash Standard}},\norganization = {{N}ational {I}nstitute of {S}tandards and {T}echnology ({NIST})},\nnote={available at \\url{http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf}},\nmonth = {March},\nyear = {2012},\n}\n",
                    "rendered": {
                      "text": "@MANUAL{FIPS-180-4,\nTITLE = {{FIPS}-180-4: {Secure Hash Standard}},\norganization = {{N}ational {I}nstitute of {S}tandards and {T}echnology ({NIST})},\nnote={available at \\url{http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf}},\nmonth = {March},\nyear = {2012},\n}\n",
                      "markdown": "`@MANUAL{FIPS-180-4,\nTITLE = {{FIPS}-180-4: {Secure Hash Standard}},\norganization = {{N}ational {I}nstitute of {S}tandards and {T}echnology ({NIST})},\nnote={available at \\url{http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf}},\nmonth = {March},\nyear = {2012},\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 27,
                  "endLine": 194,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  author =       {Alexander Peslyak },\n  title =        {Yescrypt - a Password Hashing Competition submission},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/yescrypt-v0.pdf}}\n}\n\n\n",
                    "rendered": {
                      "text": "  author =       {Alexander Peslyak },\n  title =        {Yescrypt - a Password Hashing Competition submission},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/yescrypt-v0.pdf}}\n}\n\n\n",
                      "markdown": "`  author =       {Alexander Peslyak },\n  title =        {Yescrypt - a Password Hashing Competition submission},\n  year =         {2014},\n  note =         {available at \\url{https://password-hashing.net/submissions/specs/yescrypt-v0.pdf}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 19,
                  "endLine": 174,
                  "endColumn": 23,
                  "snippet": {
                    "text": "               Krzysztof Pietrzak},\n  title     = {Proofs of Space},\n  journal   = {IACR Cryptology ePrint Archive 2013/796},\n  note = {to appear at Crypto'15}\n}\n\n@MISC{momentum,\n",
                    "rendered": {
                      "text": "               Krzysztof Pietrzak},\n  title     = {Proofs of Space},\n  journal   = {IACR Cryptology ePrint Archive 2013/796},\n  note = {to appear at Crypto'15}\n}\n\n@MISC{momentum,\n",
                      "markdown": "`               Krzysztof Pietrzak},\n  title     = {Proofs of Space},\n  journal   = {IACR Cryptology ePrint Archive 2013/796},\n  note = {to appear at Crypto'15}\n}\n\n@MISC{momentum,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 18,
                  "endLine": 100,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  title={Hashcash -- a denial of service counter-measure},\n  author={Back, Adam},\n  year={2002},\n  note ={available at \\url{http://www.hashcash.org/papers/hashcash.pdf}}\n}\n\n\n",
                    "rendered": {
                      "text": "  title={Hashcash -- a denial of service counter-measure},\n  author={Back, Adam},\n  year={2002},\n  note ={available at \\url{http://www.hashcash.org/papers/hashcash.pdf}}\n}\n\n\n",
                      "markdown": "`  title={Hashcash -- a denial of service counter-measure},\n  author={Back, Adam},\n  year={2002},\n  note ={available at \\url{http://www.hashcash.org/papers/hashcash.pdf}}\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 90,
                  "endLine": 81,
                  "endColumn": 94,
                  "snippet": {
                    "text": "\n@MANUAL{FIPS-197,\nTITLE = {{FIPS}-197: {Advanced Encryption Standard}},\norganization = {{N}ational {I}nstitute of {S}tandards and {T}echnology ({NIST}), available at \\url{http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf}},\nmonth = {November},\nyear = {2001},\n}\n",
                    "rendered": {
                      "text": "\n@MANUAL{FIPS-197,\nTITLE = {{FIPS}-197: {Advanced Encryption Standard}},\norganization = {{N}ational {I}nstitute of {S}tandards and {T}echnology ({NIST}), available at \\url{http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf}},\nmonth = {November},\nyear = {2001},\n}\n",
                      "markdown": "`\n@MANUAL{FIPS-197,\nTITLE = {{FIPS}-197: {Advanced Encryption Standard}},\norganization = {{N}ational {I}nstitute of {S}tandards and {T}echnology ({NIST}), available at \\url{http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf}},\nmonth = {November},\nyear = {2001},\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 17,
                  "endLine": 365,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  author    = {John E. Hopcroft and\n               Wolfgang J. Paul and\n               Leslie G. Valiant},\n  title     = {On Time Versus Space},\n  journal   = {J. ACM},\n  volume    = {24},\n  number    = {2},\n",
                    "rendered": {
                      "text": "  author    = {John E. Hopcroft and\n               Wolfgang J. Paul and\n               Leslie G. Valiant},\n  title     = {On Time Versus Space},\n  journal   = {J. ACM},\n  volume    = {24},\n  number    = {2},\n",
                      "markdown": "`  author    = {John E. Hopcroft and\n               Wolfgang J. Paul and\n               Leslie G. Valiant},\n  title     = {On Time Versus Space},\n  journal   = {J. ACM},\n  volume    = {24},\n  number    = {2},\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/tradeoff.bib"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 32,
                  "endLine": 97,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n\n@misc{back2002hashcash,\n  title={Hashcash -- a denial of service counter-measure},\n  author={Back, Adam},\n  year={2002},\n  note ={available at \\url{http://www.hashcash.org/papers/hashcash.pdf}}\n",
                    "rendered": {
                      "text": "\n\n@misc{back2002hashcash,\n  title={Hashcash -- a denial of service counter-measure},\n  author={Back, Adam},\n  year={2002},\n  note ={available at \\url{http://www.hashcash.org/papers/hashcash.pdf}}\n",
                      "markdown": "`\n\n@misc{back2002hashcash,\n  title={Hashcash -- a denial of service counter-measure},\n  author={Back, Adam},\n  year={2002},\n  note ={available at \\url{http://www.hashcash.org/papers/hashcash.pdf}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 807,
                  "startColumn": 19,
                  "endLine": 807,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\\item Select the tag length. 128 bits is sufficient for most applications, including key derivation. If longer keys are needed, select longer tags.\n\\item If side-channel attacks is a viable threat, enable the memory wiping option in the library call.\n\\item Run the scheme of type $y$, memory $m$ and $h$ lanes and threads, using different number of passes $t$. Figure out the maximum $t$ such that the running time does not exceed $x$. If it exceeds $x$ even for $t=1$, reduce $m$ accordingly.\n\\item Hash all the passwords with the just determined values $m$, $h$, and $t$.\n\\end{enumerate}\n\n\n",
                    "rendered": {
                      "text": "\\item Select the tag length. 128 bits is sufficient for most applications, including key derivation. If longer keys are needed, select longer tags.\n\\item If side-channel attacks is a viable threat, enable the memory wiping option in the library call.\n\\item Run the scheme of type $y$, memory $m$ and $h$ lanes and threads, using different number of passes $t$. Figure out the maximum $t$ such that the running time does not exceed $x$. If it exceeds $x$ even for $t=1$, reduce $m$ accordingly.\n\\item Hash all the passwords with the just determined values $m$, $h$, and $t$.\n\\end{enumerate}\n\n\n",
                      "markdown": "`\\item Select the tag length. 128 bits is sufficient for most applications, including key derivation. If longer keys are needed, select longer tags.\n\\item If side-channel attacks is a viable threat, enable the memory wiping option in the library call.\n\\item Run the scheme of type $y$, memory $m$ and $h$ lanes and threads, using different number of passes $t$. Figure out the maximum $t$ such that the running time does not exceed $x$. If it exceeds $x$ even for $t=1$, reduce $m$ accordingly.\n\\item Hash all the passwords with the just determined values $m$, $h$, and $t$.\n\\end{enumerate}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 789,
                  "startColumn": 204,
                  "endLine": 789,
                  "endColumn": 212,
                  "snippet": {
                    "text": " on a 2 GHz CPU using 4 cores --- \\textsf{Argon2d} with 8 lanes and 4 GB of RAM.\n\\end{itemize}\n\n\\textsf{Argon2i} is optimized for more dangerous settings, where the adversary possibly can access the same machine, use its CPU or mount cold-boot attacks. We use three passes to get rid entirely of the password in the memory. We suggest the following settings:\n\\begin{itemize}\n  \\item Key derivation for hard-drive encryption, that takes 3 seconds on a 2 GHz CPU using 2 cores --- \\textsf{Argon2i} with 4 lanes and 6 GB of RAM;\n  \\item Frontend server authentication, that takes 0.5 seconds on a 2 GHz CPU usin",
                    "rendered": {
                      "text": " on a 2 GHz CPU using 4 cores --- \\textsf{Argon2d} with 8 lanes and 4 GB of RAM.\n\\end{itemize}\n\n\\textsf{Argon2i} is optimized for more dangerous settings, where the adversary possibly can access the same machine, use its CPU or mount cold-boot attacks. We use three passes to get rid entirely of the password in the memory. We suggest the following settings:\n\\begin{itemize}\n  \\item Key derivation for hard-drive encryption, that takes 3 seconds on a 2 GHz CPU using 2 cores --- \\textsf{Argon2i} with 4 lanes and 6 GB of RAM;\n  \\item Frontend server authentication, that takes 0.5 seconds on a 2 GHz CPU usin",
                      "markdown": "` on a 2 GHz CPU using 4 cores --- \\textsf{Argon2d} with 8 lanes and 4 GB of RAM.\n\\end{itemize}\n\n\\textsf{Argon2i} is optimized for more dangerous settings, where the adversary possibly can access the same machine, use its CPU or mount cold-boot attacks. We use three passes to get rid entirely of the password in the memory. We suggest the following settings:\n\\begin{itemize}\n  \\item Key derivation for hard-drive encryption, that takes 3 seconds on a 2 GHz CPU using 2 cores --- \\textsf{Argon2i} with 4 lanes and 6 GB of RAM;\n  \\item Frontend server authentication, that takes 0.5 seconds on a 2 GHz CPU usin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 783,
                  "startColumn": 16,
                  "endLine": 783,
                  "endColumn": 24,
                  "snippet": {
                    "text": "GHz, 4 cores}\n\\label{table:cycle_per_byte_results}\n\\end{table}\n\n\\section{Applications}\n\\textsf{Argon2d} is optimized for settings where the adversary does not get regular access to system memory or CPU, i.e. he can not run side-channel attacks based on the timing information, nor he\ncan recover the password much faster using garbage collection~\\cite{cryptoeprint:2014:881}. These settings are more typical for backend servers and cryptocurrency minings. For practice we suggest the following settings:\n\\begin{itemize}\n  \\item Cryptocurrency mining, that takes 0.1 seconds on a 2 Ghz CPU using 1 core --- \\t",
                    "rendered": {
                      "text": "GHz, 4 cores}\n\\label{table:cycle_per_byte_results}\n\\end{table}\n\n\\section{Applications}\n\\textsf{Argon2d} is optimized for settings where the adversary does not get regular access to system memory or CPU, i.e. he can not run side-channel attacks based on the timing information, nor he\ncan recover the password much faster using garbage collection~\\cite{cryptoeprint:2014:881}. These settings are more typical for backend servers and cryptocurrency minings. For practice we suggest the following settings:\n\\begin{itemize}\n  \\item Cryptocurrency mining, that takes 0.1 seconds on a 2 Ghz CPU using 1 core --- \\t",
                      "markdown": "`GHz, 4 cores}\n\\label{table:cycle_per_byte_results}\n\\end{table}\n\n\\section{Applications}\n\\textsf{Argon2d} is optimized for settings where the adversary does not get regular access to system memory or CPU, i.e. he can not run side-channel attacks based on the timing information, nor he\ncan recover the password much faster using garbage collection~\\cite{cryptoeprint:2014:881}. These settings are more typical for backend servers and cryptocurrency minings. For practice we suggest the following settings:\n\\begin{itemize}\n  \\item Cryptocurrency mining, that takes 0.1 seconds on a 2 Ghz CPU using 1 core --- \\t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 741,
                  "startColumn": 18,
                  "endLine": 741,
                  "endColumn": 26,
                  "snippet": {
                    "text": ". This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is restricted by a number of CPU cores (or half-cores) that can be devoted to the hash function, and chooses $d$ accordingly (double the number of cores).\n  \\item Length of password/message, salt/nonce, and tag (except for some low, insecure values for salt and tag lengths).\n\\end{itemize}\n\nWe allow to choose another compression function $G$, hash function $H$, block size $b$, and number of slices $l$. However, we do not provide this flexibility in a reference implementation as",
                    "rendered": {
                      "text": ". This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is restricted by a number of CPU cores (or half-cores) that can be devoted to the hash function, and chooses $d$ accordingly (double the number of cores).\n  \\item Length of password/message, salt/nonce, and tag (except for some low, insecure values for salt and tag lengths).\n\\end{itemize}\n\nWe allow to choose another compression function $G$, hash function $H$, block size $b$, and number of slices $l$. However, we do not provide this flexibility in a reference implementation as",
                      "markdown": "`. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is restricted by a number of CPU cores (or half-cores) that can be devoted to the hash function, and chooses $d$ accordingly (double the number of cores).\n  \\item Length of password/message, salt/nonce, and tag (except for some low, insecure values for salt and tag lengths).\n\\end{itemize}\n\nWe allow to choose another compression function $G$, hash function $H$, block size $b$, and number of slices $l$. However, we do not provide this flexibility in a reference implementation as`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 500,
                  "startColumn": 463,
                  "endLine": 500,
                  "endColumn": 471,
                  "snippet": {
                    "text": "where these threats are possible. \\textsf{Argon2i} with 3 passes overwrites the memory twice, thus thwarting the memory-leak attacks. Even if the entire working memory of \\textsf{Argon2i} is leaked after the hash is computed, the adversary would have to compute two passes over the memory to try the password.\n\n\n\n\\subsection{Security of Argon2 to ranking tradeoff attacks}\n\nTime and computational penalties for 1-pass \\textsf{Argon2d} are given in Table~\\ref{tab:generic3}. It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n\\textsf{Ar",
                    "rendered": {
                      "text": "where these threats are possible. \\textsf{Argon2i} with 3 passes overwrites the memory twice, thus thwarting the memory-leak attacks. Even if the entire working memory of \\textsf{Argon2i} is leaked after the hash is computed, the adversary would have to compute two passes over the memory to try the password.\n\n\n\n\\subsection{Security of Argon2 to ranking tradeoff attacks}\n\nTime and computational penalties for 1-pass \\textsf{Argon2d} are given in Table~\\ref{tab:generic3}. It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n\\textsf{Ar",
                      "markdown": "`where these threats are possible. \\textsf{Argon2i} with 3 passes overwrites the memory twice, thus thwarting the memory-leak attacks. Even if the entire working memory of \\textsf{Argon2i} is leaked after the hash is computed, the adversary would have to compute two passes over the memory to try the password.\n\n\n\n\\subsection{Security of Argon2 to ranking tradeoff attacks}\n\nTime and computational penalties for 1-pass \\textsf{Argon2d} are given in Table~\\ref{tab:generic3}. It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n\\textsf{Ar`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 85,
                  "endLine": 334,
                  "endColumn": 93,
                  "snippet": {
                    "text": "{figure}[ht]\n  \\ifpdf\n\\begin{center}\n  \\includegraphics[scale=0.6]{pics/compression.pdf}\n  \\caption{Argon2 compression function $G$. }\\label{fig:compression}\n\\end{center}\n\\fi\n  \\end{figure}\n  \n  \\section{Features}\n\n\\textsf{Argon2} is a multi-purpose family of  hashing schemes, which is suitable for password hashing, key derivation, cryptocurrencies and other applications that require provably high memory use. \\textsf{Argon2} is optimized for the x86 architecture, but it does not slow much on older processors. The key feature of \\textsf{Argon2} is its performance and the ability to use multiple computa",
                    "rendered": {
                      "text": "{figure}[ht]\n  \\ifpdf\n\\begin{center}\n  \\includegraphics[scale=0.6]{pics/compression.pdf}\n  \\caption{Argon2 compression function $G$. }\\label{fig:compression}\n\\end{center}\n\\fi\n  \\end{figure}\n  \n  \\section{Features}\n\n\\textsf{Argon2} is a multi-purpose family of  hashing schemes, which is suitable for password hashing, key derivation, cryptocurrencies and other applications that require provably high memory use. \\textsf{Argon2} is optimized for the x86 architecture, but it does not slow much on older processors. The key feature of \\textsf{Argon2} is its performance and the ability to use multiple computa",
                      "markdown": "`{figure}[ht]\n  \\ifpdf\n\\begin{center}\n  \\includegraphics[scale=0.6]{pics/compression.pdf}\n  \\caption{Argon2 compression function $G$. }\\label{fig:compression}\n\\end{center}\n\\fi\n  \\end{figure}\n  \n  \\section{Features}\n\n\\textsf{Argon2} is a multi-purpose family of  hashing schemes, which is suitable for password hashing, key derivation, cryptocurrencies and other applications that require provably high memory use. \\textsf{Argon2} is optimized for the x86 architecture, but it does not slow much on older processors. The key feature of \\textsf{Argon2} is its performance and the ability to use multiple computa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 96,
                  "endLine": 169,
                  "endColumn": 104,
                  "snippet": {
                    "text": "\\textsf{Argon2}\\ has two types of inputs: primary inputs and secondary inputs, or parameters. Primary inputs are message $P$ and nonce $S$, which are password and salt, respectively, for the password hashing. Primary inputs must always be given by the user such that\n\\begin{itemize}\n  \\item Message $P$ may have any length from $0$ to $2^{32}-1$ bytes;\n  \\item Nonce $S$ may have any length from $8$ to $2^{32}-1$ bytes (16 bytes is recommended for password hashing).\n\\end{itemize}\n Secondary inputs have the following restrictions:\n\\begin{itemize}\n",
                    "rendered": {
                      "text": "\\textsf{Argon2}\\ has two types of inputs: primary inputs and secondary inputs, or parameters. Primary inputs are message $P$ and nonce $S$, which are password and salt, respectively, for the password hashing. Primary inputs must always be given by the user such that\n\\begin{itemize}\n  \\item Message $P$ may have any length from $0$ to $2^{32}-1$ bytes;\n  \\item Nonce $S$ may have any length from $8$ to $2^{32}-1$ bytes (16 bytes is recommended for password hashing).\n\\end{itemize}\n Secondary inputs have the following restrictions:\n\\begin{itemize}\n",
                      "markdown": "`\\textsf{Argon2}\\ has two types of inputs: primary inputs and secondary inputs, or parameters. Primary inputs are message $P$ and nonce $S$, which are password and salt, respectively, for the password hashing. Primary inputs must always be given by the user such that\n\\begin{itemize}\n  \\item Message $P$ may have any length from $0$ to $2^{32}-1$ bytes;\n  \\item Nonce $S$ may have any length from $8$ to $2^{32}-1$ bytes (16 bytes is recommended for password hashing).\n\\end{itemize}\n Secondary inputs have the following restrictions:\n\\begin{itemize}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 191,
                  "endLine": 166,
                  "endColumn": 199,
                  "snippet": {
                    "text": "\n\\subsection{Inputs}\n\n\\textsf{Argon2}\\ has two types of inputs: primary inputs and secondary inputs, or parameters. Primary inputs are message $P$ and nonce $S$, which are password and salt, respectively, for the password hashing. Primary inputs must always be given by the user such that\n\\begin{itemize}\n  \\item Message $P$ may have any length from $0$ to $2^{32}-1$ bytes;\n  \\item Nonce $S$ may have any length from $8$ to $2^{32}-1$ bytes (16 bytes is recommended for password hashing).\n",
                    "rendered": {
                      "text": "\n\\subsection{Inputs}\n\n\\textsf{Argon2}\\ has two types of inputs: primary inputs and secondary inputs, or parameters. Primary inputs are message $P$ and nonce $S$, which are password and salt, respectively, for the password hashing. Primary inputs must always be given by the user such that\n\\begin{itemize}\n  \\item Message $P$ may have any length from $0$ to $2^{32}-1$ bytes;\n  \\item Nonce $S$ may have any length from $8$ to $2^{32}-1$ bytes (16 bytes is recommended for password hashing).\n",
                      "markdown": "`\n\\subsection{Inputs}\n\n\\textsf{Argon2}\\ has two types of inputs: primary inputs and secondary inputs, or parameters. Primary inputs are message $P$ and nonce $S$, which are password and salt, respectively, for the password hashing. Primary inputs must always be given by the user such that\n\\begin{itemize}\n  \\item Message $P$ may have any length from $0$ to $2^{32}-1$ bytes;\n  \\item Nonce $S$ may have any length from $8$ to $2^{32}-1$ bytes (16 bytes is recommended for password hashing).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 150,
                  "endLine": 166,
                  "endColumn": 158,
                  "snippet": {
                    "text": "\n\\subsection{Inputs}\n\n\\textsf{Argon2}\\ has two types of inputs: primary inputs and secondary inputs, or parameters. Primary inputs are message $P$ and nonce $S$, which are password and salt, respectively, for the password hashing. Primary inputs must always be given by the user such that\n\\begin{itemize}\n  \\item Message $P$ may have any length from $0$ to $2^{32}-1$ bytes;\n  \\item Nonce $S$ may have any length from $8$ to $2^{32}-1$ bytes (16 bytes is recommended for password hashing).\n",
                    "rendered": {
                      "text": "\n\\subsection{Inputs}\n\n\\textsf{Argon2}\\ has two types of inputs: primary inputs and secondary inputs, or parameters. Primary inputs are message $P$ and nonce $S$, which are password and salt, respectively, for the password hashing. Primary inputs must always be given by the user such that\n\\begin{itemize}\n  \\item Message $P$ may have any length from $0$ to $2^{32}-1$ bytes;\n  \\item Nonce $S$ may have any length from $8$ to $2^{32}-1$ bytes (16 bytes is recommended for password hashing).\n",
                      "markdown": "`\n\\subsection{Inputs}\n\n\\textsf{Argon2}\\ has two types of inputs: primary inputs and secondary inputs, or parameters. Primary inputs are message $P$ and nonce $S$, which are password and salt, respectively, for the password hashing. Primary inputs must always be given by the user such that\n\\begin{itemize}\n  \\item Message $P$ may have any length from $0$ to $2^{32}-1$ bytes;\n  \\item Nonce $S$ may have any length from $8$ to $2^{32}-1$ bytes (16 bytes is recommended for password hashing).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 408,
                  "endLine": 162,
                  "endColumn": 416,
                  "snippet": {
                    "text": "\n\\section{Specification of Argon2}\n\nThere are two flavors of \\textsf{Argon2}\\ -- \\textsf{Argon2d} and \\textsf{Argon2i}. The former one uses data-dependent memory access to thwart tradeoff attacks. However, this makes it vulnerable for side-channel attacks, so \\textsf{Argon2d} is recommended primarily for cryptocurrencies and backend servers. \\textsf{Argon2i} uses data-independent memory access, which is recommended for password hashing and password-based key derivation.\n\n\\subsection{Inputs}\n\n",
                    "rendered": {
                      "text": "\n\\section{Specification of Argon2}\n\nThere are two flavors of \\textsf{Argon2}\\ -- \\textsf{Argon2d} and \\textsf{Argon2i}. The former one uses data-dependent memory access to thwart tradeoff attacks. However, this makes it vulnerable for side-channel attacks, so \\textsf{Argon2d} is recommended primarily for cryptocurrencies and backend servers. \\textsf{Argon2i} uses data-independent memory access, which is recommended for password hashing and password-based key derivation.\n\n\\subsection{Inputs}\n\n",
                      "markdown": "`\n\\section{Specification of Argon2}\n\nThere are two flavors of \\textsf{Argon2}\\ -- \\textsf{Argon2d} and \\textsf{Argon2i}. The former one uses data-dependent memory access to thwart tradeoff attacks. However, this makes it vulnerable for side-channel attacks, so \\textsf{Argon2d} is recommended primarily for cryptocurrencies and backend servers. \\textsf{Argon2i} uses data-independent memory access, which is recommended for password hashing and password-based key derivation.\n\n\\subsection{Inputs}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 387,
                  "endLine": 162,
                  "endColumn": 395,
                  "snippet": {
                    "text": "\n\\section{Specification of Argon2}\n\nThere are two flavors of \\textsf{Argon2}\\ -- \\textsf{Argon2d} and \\textsf{Argon2i}. The former one uses data-dependent memory access to thwart tradeoff attacks. However, this makes it vulnerable for side-channel attacks, so \\textsf{Argon2d} is recommended primarily for cryptocurrencies and backend servers. \\textsf{Argon2i} uses data-independent memory access, which is recommended for password hashing and password-based key derivation.\n\n\\subsection{Inputs}\n\n",
                    "rendered": {
                      "text": "\n\\section{Specification of Argon2}\n\nThere are two flavors of \\textsf{Argon2}\\ -- \\textsf{Argon2d} and \\textsf{Argon2i}. The former one uses data-dependent memory access to thwart tradeoff attacks. However, this makes it vulnerable for side-channel attacks, so \\textsf{Argon2d} is recommended primarily for cryptocurrencies and backend servers. \\textsf{Argon2i} uses data-independent memory access, which is recommended for password hashing and password-based key derivation.\n\n\\subsection{Inputs}\n\n",
                      "markdown": "`\n\\section{Specification of Argon2}\n\nThere are two flavors of \\textsf{Argon2}\\ -- \\textsf{Argon2d} and \\textsf{Argon2i}. The former one uses data-dependent memory access to thwart tradeoff attacks. However, this makes it vulnerable for side-channel attacks, so \\textsf{Argon2d} is recommended primarily for cryptocurrencies and backend servers. \\textsf{Argon2i} uses data-independent memory access, which is recommended for password hashing and password-based key derivation.\n\n\\subsection{Inputs}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 25,
                  "endLine": 141,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n",
                    "rendered": {
                      "text": "  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n",
                      "markdown": "`  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 27,
                  "endLine": 137,
                  "endColumn": 35,
                  "snippet": {
                    "text": " H(P,S);\\\\\n\\text{for $j$ }&\\text{from 1  to } t\\\\\n  &B[j] = G \\bigl(B[\\phi_1(j)] ,  B[\\phi_2(j)] ,\\cdots , B[\\phi_k(j)]\\bigr),\n\\end{array}\n\\end{equation}\nwhere $\\phi_i()$ are some \\emph{indexing functions}.\n\n\nWe distinguish two types of indexing functions:\n\\begin{itemize}\n  \\item Independent of the password and salt, but possibly dependent on other public parameters (thus called \\emph{data-independent}). The addresses can be calculated by the memory-saving adversaries. We suppose that the dedicated hardware can handle parallel memory access, so that the  cracker can prefetch the data from the memory. ",
                    "rendered": {
                      "text": " H(P,S);\\\\\n\\text{for $j$ }&\\text{from 1  to } t\\\\\n  &B[j] = G \\bigl(B[\\phi_1(j)] ,  B[\\phi_2(j)] ,\\cdots , B[\\phi_k(j)]\\bigr),\n\\end{array}\n\\end{equation}\nwhere $\\phi_i()$ are some \\emph{indexing functions}.\n\n\nWe distinguish two types of indexing functions:\n\\begin{itemize}\n  \\item Independent of the password and salt, but possibly dependent on other public parameters (thus called \\emph{data-independent}). The addresses can be calculated by the memory-saving adversaries. We suppose that the dedicated hardware can handle parallel memory access, so that the  cracker can prefetch the data from the memory. ",
                      "markdown": "` H(P,S);\\\\\n\\text{for $j$ }&\\text{from 1  to } t\\\\\n  &B[j] = G \\bigl(B[\\phi_1(j)] ,  B[\\phi_2(j)] ,\\cdots , B[\\phi_k(j)]\\bigr),\n\\end{array}\n\\end{equation}\nwhere $\\phi_i()$ are some \\emph{indexing functions}.\n\n\nWe distinguish two types of indexing functions:\n\\begin{itemize}\n  \\item Independent of the password and salt, but possibly dependent on other public parameters (thus called \\emph{data-independent}). The addresses can be calculated by the memory-saving adversaries. We suppose that the dedicated hardware can handle parallel memory access, so that the  cracker can prefetch the data from the memory. `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 199,
                  "endLine": 101,
                  "endColumn": 207,
                  "snippet": {
                    "text": "tarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by the ASIC memory latency.\nTherefore, we maximize the value $AT$. The other usecases follow a similar procedure",
                    "rendered": {
                      "text": "tarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by the ASIC memory latency.\nTherefore, we maximize the value $AT$. The other usecases follow a similar procedure",
                      "markdown": "`tarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by the ASIC memory latency.\nTherefore, we maximize the value $AT$. The other usecases follow a similar procedure`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 120,
                  "endLine": 101,
                  "endColumn": 128,
                  "snippet": {
                    "text": "k to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by the ASIC memory latency.\nThere",
                    "rendered": {
                      "text": "k to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by the ASIC memory latency.\nThere",
                      "markdown": "`k to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by the ASIC memory latency.\nThere`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 19,
                  "endLine": 101,
                  "endColumn": 27,
                  "snippet": {
                    "text": " assume that the password $P$ is hashed with salt $S$ but without secret keys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$",
                    "rendered": {
                      "text": " assume that the password $P$ is hashed with salt $S$ but without secret keys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$",
                      "markdown": "` assume that the password $P$ is hashed with salt $S$ but without secret keys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 230,
                  "endLine": 93,
                  "endColumn": 238,
                  "snippet": {
                    "text": "\\section{Definitions}\n\n\\subsection{Motivation}\\label{sec:costs}\nWe aim to maximize the cost of password cracking on ASICs. There can be different approaches to measure this cost, but we turn to one of the most popular -- the time-area product~\\cite{Thompson79,BernsteinL13}. We assume that the password $P$ is hashed with salt $S$ but without secret keys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n",
                    "rendered": {
                      "text": "\\section{Definitions}\n\n\\subsection{Motivation}\\label{sec:costs}\nWe aim to maximize the cost of password cracking on ASICs. There can be different approaches to measure this cost, but we turn to one of the most popular -- the time-area product~\\cite{Thompson79,BernsteinL13}. We assume that the password $P$ is hashed with salt $S$ but without secret keys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n",
                      "markdown": "`\\section{Definitions}\n\n\\subsection{Motivation}\\label{sec:costs}\nWe aim to maximize the cost of password cracking on ASICs. There can be different approaches to measure this cost, but we turn to one of the most popular -- the time-area product~\\cite{Thompson79,BernsteinL13}. We assume that the password $P$ is hashed with salt $S$ but without secret keys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 31,
                  "endLine": 93,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\\section{Definitions}\n\n\\subsection{Motivation}\\label{sec:costs}\nWe aim to maximize the cost of password cracking on ASICs. There can be different approaches to measure this cost, but we turn to one of the most popular -- the time-area product~\\cite{Thompson79,BernsteinL13}. We assume that the password $P$ is hashed with salt $S$ but without secret keys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n",
                    "rendered": {
                      "text": "\\section{Definitions}\n\n\\subsection{Motivation}\\label{sec:costs}\nWe aim to maximize the cost of password cracking on ASICs. There can be different approaches to measure this cost, but we turn to one of the most popular -- the time-area product~\\cite{Thompson79,BernsteinL13}. We assume that the password $P$ is hashed with salt $S$ but without secret keys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n",
                      "markdown": "`\\section{Definitions}\n\n\\subsection{Motivation}\\label{sec:costs}\nWe aim to maximize the cost of password cracking on ASICs. There can be different approaches to measure this cost, but we turn to one of the most popular -- the time-area product~\\cite{Thompson79,BernsteinL13}. We assume that the password $P$ is hashed with salt $S$ but without secret keys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 534,
                  "endLine": 83,
                  "endColumn": 542,
                  "snippet": {
                    "text": "} and \\textsf{Argon2i}. \\textsf{Argon2d} is faster and uses data-depending memory access, which makes it suitable for cryptocurrencies and applications with no threats from side-channel timing attacks. \\textsf{Argon2i} uses data-independent memory access, which is preferred for password hashing and password-based key derivation. \\textsf{Argon2i} is slower as it makes more passes over the memory to protect from tradeoff attacks.\n\n\nWe recommend \\textsf{Argon2} for the applications that aim for high performance. Both versions of \\textsf{Argon2} allow to fill 1 GB of RAM in a fraction of second, and small",
                    "rendered": {
                      "text": "} and \\textsf{Argon2i}. \\textsf{Argon2d} is faster and uses data-depending memory access, which makes it suitable for cryptocurrencies and applications with no threats from side-channel timing attacks. \\textsf{Argon2i} uses data-independent memory access, which is preferred for password hashing and password-based key derivation. \\textsf{Argon2i} is slower as it makes more passes over the memory to protect from tradeoff attacks.\n\n\nWe recommend \\textsf{Argon2} for the applications that aim for high performance. Both versions of \\textsf{Argon2} allow to fill 1 GB of RAM in a fraction of second, and small",
                      "markdown": "`} and \\textsf{Argon2i}. \\textsf{Argon2d} is faster and uses data-depending memory access, which makes it suitable for cryptocurrencies and applications with no threats from side-channel timing attacks. \\textsf{Argon2i} uses data-independent memory access, which is preferred for password hashing and password-based key derivation. \\textsf{Argon2i} is slower as it makes more passes over the memory to protect from tradeoff attacks.\n\n\nWe recommend \\textsf{Argon2} for the applications that aim for high performance. Both versions of \\textsf{Argon2} allow to fill 1 GB of RAM in a fraction of second, and small`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 513,
                  "endLine": 83,
                  "endColumn": 521,
                  "snippet": {
                    "text": "ants: \\textsf{Argon2d} and \\textsf{Argon2i}. \\textsf{Argon2d} is faster and uses data-depending memory access, which makes it suitable for cryptocurrencies and applications with no threats from side-channel timing attacks. \\textsf{Argon2i} uses data-independent memory access, which is preferred for password hashing and password-based key derivation. \\textsf{Argon2i} is slower as it makes more passes over the memory to protect from tradeoff attacks.\n\n\nWe recommend \\textsf{Argon2} for the applications that aim for high performance. Both versions of \\textsf{Argon2} allow to fill 1 GB of RAM in a fraction",
                    "rendered": {
                      "text": "ants: \\textsf{Argon2d} and \\textsf{Argon2i}. \\textsf{Argon2d} is faster and uses data-depending memory access, which makes it suitable for cryptocurrencies and applications with no threats from side-channel timing attacks. \\textsf{Argon2i} uses data-independent memory access, which is preferred for password hashing and password-based key derivation. \\textsf{Argon2i} is slower as it makes more passes over the memory to protect from tradeoff attacks.\n\n\nWe recommend \\textsf{Argon2} for the applications that aim for high performance. Both versions of \\textsf{Argon2} allow to fill 1 GB of RAM in a fraction",
                      "markdown": "`ants: \\textsf{Argon2d} and \\textsf{Argon2i}. \\textsf{Argon2d} is faster and uses data-depending memory access, which makes it suitable for cryptocurrencies and applications with no threats from side-channel timing attacks. \\textsf{Argon2i} uses data-independent memory access, which is preferred for password hashing and password-based key derivation. \\textsf{Argon2i} is slower as it makes more passes over the memory to protect from tradeoff attacks.\n\n\nWe recommend \\textsf{Argon2} for the applications that aim for high performance. Both versions of \\textsf{Argon2} allow to fill 1 GB of RAM in a fraction`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 245,
                  "endLine": 71,
                  "endColumn": 253,
                  "snippet": {
                    "text": "immediately vulnerable to time-space tradeoff attacks,\n since an adversary can precompute the missing block by the time it is needed~\\cite{trade-att}. In turn, the input-dependent schemes are vulnerable to side-channel attacks~\\cite{RistenpartTSS09}, as the timing information allows for much faster password search.\n  \\item Is it better to fill more memory but suffer from time-space tradeoffs, or make more passes over the memory to be more robust? This question was quite difficult to answer due to absence of generic tradeoff tools, which would analyze the security against tradeoff attacks, and the abse",
                    "rendered": {
                      "text": "immediately vulnerable to time-space tradeoff attacks,\n since an adversary can precompute the missing block by the time it is needed~\\cite{trade-att}. In turn, the input-dependent schemes are vulnerable to side-channel attacks~\\cite{RistenpartTSS09}, as the timing information allows for much faster password search.\n  \\item Is it better to fill more memory but suffer from time-space tradeoffs, or make more passes over the memory to be more robust? This question was quite difficult to answer due to absence of generic tradeoff tools, which would analyze the security against tradeoff attacks, and the abse",
                      "markdown": "`immediately vulnerable to time-space tradeoff attacks,\n since an adversary can precompute the missing block by the time it is needed~\\cite{trade-att}. In turn, the input-dependent schemes are vulnerable to side-channel attacks~\\cite{RistenpartTSS09}, as the timing information allows for much faster password search.\n  \\item Is it better to fill more memory but suffer from time-space tradeoffs, or make more passes over the memory to be more robust? This question was quite difficult to answer due to absence of generic tradeoff tools, which would analyze the security against tradeoff attacks, and the abse`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 5,
                  "endLine": 68,
                  "endColumn": 13,
                  "snippet": {
                    "text": "flexible in separating time and memory costs. \nAt the same time, the story of cryptographic competitions~\\cite{robshaw2008new,sha3} has demonstrated that\nthe most secure designs come with simplicity, where every element is well motivated and a cryptanalyst has as few entry points as possible.\n\nThe  Password Hashing Competition, which started in 2014,  highlighted the following problems:\n\\begin{itemize}\n  \\item Should the memory addressing (indexing functions) be input-independent or input-dependent, or hybrid? The first type of schemes, where the memory read location are known in advance, is immediate",
                    "rendered": {
                      "text": "flexible in separating time and memory costs. \nAt the same time, the story of cryptographic competitions~\\cite{robshaw2008new,sha3} has demonstrated that\nthe most secure designs come with simplicity, where every element is well motivated and a cryptanalyst has as few entry points as possible.\n\nThe  Password Hashing Competition, which started in 2014,  highlighted the following problems:\n\\begin{itemize}\n  \\item Should the memory addressing (indexing functions) be input-independent or input-dependent, or hybrid? The first type of schemes, where the memory read location are known in advance, is immediate",
                      "markdown": "`flexible in separating time and memory costs. \nAt the same time, the story of cryptographic competitions~\\cite{robshaw2008new,sha3} has demonstrated that\nthe most secure designs come with simplicity, where every element is well motivated and a cryptanalyst has as few entry points as possible.\n\nThe  Password Hashing Competition, which started in 2014,  highlighted the following problems:\n\\begin{itemize}\n  \\item Should the memory addressing (indexing functions) be input-independent or input-dependent, or hybrid? The first type of schemes, where the memory read location are known in advance, is immediate`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 49,
                  "endLine": 62,
                  "endColumn": 57,
                  "snippet": {
                    "text": "t many cryptographic problems that seemingly require large memory actually allow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{scrypt} calls a stack of subprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SM",
                    "rendered": {
                      "text": "t many cryptographic problems that seemingly require large memory actually allow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{scrypt} calls a stack of subprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SM",
                      "markdown": "`t many cryptographic problems that seemingly require large memory actually allow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{scrypt} calls a stack of subprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SM`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "endLine": 62,
                  "endColumn": 11,
                  "snippet": {
                    "text": "roblem. Since early 80's it has been known that many cryptographic problems that seemingly require large memory actually allow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{scrypt} calls a stack of subprocedures, whose design rationale has not been ",
                    "rendered": {
                      "text": "roblem. Since early 80's it has been known that many cryptographic problems that seemingly require large memory actually allow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{scrypt} calls a stack of subprocedures, whose design rationale has not been ",
                      "markdown": "`roblem. Since early 80's it has been known that many cryptographic problems that seemingly require large memory actually allow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{scrypt} calls a stack of subprocedures, whose design rationale has not been `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 64,
                  "endLine": 58,
                  "endColumn": 72,
                  "snippet": {
                    "text": "or key derivation from low-entropy sources. Memory-hard schemes are also welcome in cryptocurrency designs~\\cite{litecoin} if a creator wants to demotivate the use of GPUs and ASICs for mining and promote the use of standard desktops.\n\n\\paragraph{Problems of existing schemes} A trivial solution for password hashing is a keyed hash function such as HMAC. If the protocol designer prefers hashing without secret keys to avoid all the problems with key generation, storage, and update, then he has few alternatives: the generic mode PBKDF2, the Blowfish-based \\textsf{bcrypt}, and \\textsf{scrypt}. Among those",
                    "rendered": {
                      "text": "or key derivation from low-entropy sources. Memory-hard schemes are also welcome in cryptocurrency designs~\\cite{litecoin} if a creator wants to demotivate the use of GPUs and ASICs for mining and promote the use of standard desktops.\n\n\\paragraph{Problems of existing schemes} A trivial solution for password hashing is a keyed hash function such as HMAC. If the protocol designer prefers hashing without secret keys to avoid all the problems with key generation, storage, and update, then he has few alternatives: the generic mode PBKDF2, the Blowfish-based \\textsf{bcrypt}, and \\textsf{scrypt}. Among those",
                      "markdown": "`or key derivation from low-entropy sources. Memory-hard schemes are also welcome in cryptocurrency designs~\\cite{litecoin} if a creator wants to demotivate the use of GPUs and ASICs for mining and promote the use of standard desktops.\n\n\\paragraph{Problems of existing schemes} A trivial solution for password hashing is a keyed hash function such as HMAC. If the protocol designer prefers hashing without secret keys to avoid all the problems with key generation, storage, and update, then he has few alternatives: the generic mode PBKDF2, the Blowfish-based \\textsf{bcrypt}, and \\textsf{scrypt}. Among those`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 576,
                  "endLine": 54,
                  "endColumn": 584,
                  "snippet": {
                    "text": "he computation is almost memoryless, but they experience difficulties when  operating on a large amount of memory. The defenders responded by designing \\emph{memory-hard} functions, which require a large amount of memory to be computed, and impose computational penalties if less memory is used. The password hashing scheme \\textsf{scrypt}~\\cite{percival2009stronger} is an instance of such function.\n\nMemory-hard schemes also have other applications. They can be used for key derivation from low-entropy sources. Memory-hard schemes are also welcome in cryptocurrency designs~\\cite{litecoin} if a creator wa",
                    "rendered": {
                      "text": "he computation is almost memoryless, but they experience difficulties when  operating on a large amount of memory. The defenders responded by designing \\emph{memory-hard} functions, which require a large amount of memory to be computed, and impose computational penalties if less memory is used. The password hashing scheme \\textsf{scrypt}~\\cite{percival2009stronger} is an instance of such function.\n\nMemory-hard schemes also have other applications. They can be used for key derivation from low-entropy sources. Memory-hard schemes are also welcome in cryptocurrency designs~\\cite{litecoin} if a creator wa",
                      "markdown": "`he computation is almost memoryless, but they experience difficulties when  operating on a large amount of memory. The defenders responded by designing \\emph{memory-hard} functions, which require a large amount of memory to be computed, and impose computational penalties if less memory is used. The password hashing scheme \\textsf{scrypt}~\\cite{percival2009stronger} is an instance of such function.\n\nMemory-hard schemes also have other applications. They can be used for key derivation from low-entropy sources. Memory-hard schemes are also welcome in cryptocurrency designs~\\cite{litecoin} if a creator wa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 23,
                  "endLine": 54,
                  "endColumn": 31,
                  "snippet": {
                    "text": "andom \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attacker.\n\n In the meanwhile, the password crackers migrated to new architectures, such as FPGAs, multiple-core GPUs and dedicated ASIC modules, where the amortized cost of a multiple-iterated hash function is much lower. It was quickly noted that these new environments are great when the computation is almost memoryless, but they experienc",
                    "rendered": {
                      "text": "andom \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attacker.\n\n In the meanwhile, the password crackers migrated to new architectures, such as FPGAs, multiple-core GPUs and dedicated ASIC modules, where the amortized cost of a multiple-iterated hash function is much lower. It was quickly noted that these new environments are great when the computation is almost memoryless, but they experienc",
                      "markdown": "`andom \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attacker.\n\n In the meanwhile, the password crackers migrated to new architectures, such as FPGAs, multiple-core GPUs and dedicated ASIC modules, where the amortized cost of a multiple-iterated hash function is much lower. It was quickly noted that these new environments are great when the computation is almost memoryless, but they experienc`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 693,
                  "endLine": 52,
                  "endColumn": 701,
                  "snippet": {
                    "text": "rom the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attacker.\n\n In the meanwhile, the password crackers migrated to new architectures, such as FPGAs, multiple-core GPUs and dedicated ASIC modules, where the amortized cost of a multiple-iterated hash function is much lower. It was quickly noted that these new environments are great when",
                    "rendered": {
                      "text": "rom the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attacker.\n\n In the meanwhile, the password crackers migrated to new architectures, such as FPGAs, multiple-core GPUs and dedicated ASIC modules, where the amortized cost of a multiple-iterated hash function is much lower. It was quickly noted that these new environments are great when",
                      "markdown": "`rom the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attacker.\n\n In the meanwhile, the password crackers migrated to new architectures, such as FPGAs, multiple-core GPUs and dedicated ASIC modules, where the amortized cost of a multiple-iterated hash function is much lower. It was quickly noted that these new environments are great when`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 508,
                  "endLine": 52,
                  "endColumn": 516,
                  "snippet": {
                    "text": " captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attacker.\n\n In the meanwhile, the password crackers migrated to new architectures, such as FPGAs, mu",
                    "rendered": {
                      "text": " captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attacker.\n\n In the meanwhile, the password crackers migrated to new architectures, such as FPGAs, mu",
                      "markdown": "` captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attacker.\n\n In the meanwhile, the password crackers migrated to new architectures, such as FPGAs, mu`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 414,
                  "endLine": 52,
                  "endColumn": 422,
                  "snippet": {
                    "text": "ds are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attack",
                    "rendered": {
                      "text": "ds are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attack",
                      "markdown": "`ds are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, which became faster and faster due to Moore's law have been called multiple times to increase the cost of password trial for the attack`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 279,
                  "endLine": 52,
                  "endColumn": 287,
                  "snippet": {
                    "text": "ction{Introduction}\n\nPasswords, despite all their drawbacks, remain the primary form of authentication on various web-services. Passwords are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, ",
                    "rendered": {
                      "text": "ction{Introduction}\n\nPasswords, despite all their drawbacks, remain the primary form of authentication on various web-services. Passwords are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, ",
                      "markdown": "`ction{Introduction}\n\nPasswords, despite all their drawbacks, remain the primary form of authentication on various web-services. Passwords are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a password is hashed together with a random \\emph{salt} value to prevent detection of identical passwords across different users and services. The hash function computations, `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 107,
                  "endLine": 52,
                  "endColumn": 115,
                  "snippet": {
                    "text": "rl{https://github.com/P-H-C/phc-winner-argon2}\\\\\n\\url{https://github.com/khovratovich/Argon2}\\\\[10pt]\nVersion 1.3 of Argon2: PHC release}\n\n\\maketitle\n\n\\tableofcontents\n\n\\section{Introduction}\n\nPasswords, despite all their drawbacks, remain the primary form of authentication on various web-services. Passwords are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a p",
                    "rendered": {
                      "text": "rl{https://github.com/P-H-C/phc-winner-argon2}\\\\\n\\url{https://github.com/khovratovich/Argon2}\\\\[10pt]\nVersion 1.3 of Argon2: PHC release}\n\n\\maketitle\n\n\\tableofcontents\n\n\\section{Introduction}\n\nPasswords, despite all their drawbacks, remain the primary form of authentication on various web-services. Passwords are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a p",
                      "markdown": "`rl{https://github.com/P-H-C/phc-winner-argon2}\\\\\n\\url{https://github.com/khovratovich/Argon2}\\\\[10pt]\nVersion 1.3 of Argon2: PHC release}\n\n\\maketitle\n\n\\tableofcontents\n\n\\section{Introduction}\n\nPasswords, despite all their drawbacks, remain the primary form of authentication on various web-services. Passwords are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low entropy. Protocol designers use a number of tricks to mitigate these issues. Starting from the late 70's, a p`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "endColumn": 8,
                  "snippet": {
                    "text": "-daniel.dinu@uni.lu, khovratovich@gmail.com}\\\\[10 pt]\n\\url{https://www.cryptolux.org/index.php/Argon2}\\\\\n\\url{https://github.com/P-H-C/phc-winner-argon2}\\\\\n\\url{https://github.com/khovratovich/Argon2}\\\\[10pt]\nVersion 1.3 of Argon2: PHC release}\n\n\\maketitle\n\n\\tableofcontents\n\n\\section{Introduction}\n\nPasswords, despite all their drawbacks, remain the primary form of authentication on various web-services. Passwords are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low en",
                    "rendered": {
                      "text": "-daniel.dinu@uni.lu, khovratovich@gmail.com}\\\\[10 pt]\n\\url{https://www.cryptolux.org/index.php/Argon2}\\\\\n\\url{https://github.com/P-H-C/phc-winner-argon2}\\\\\n\\url{https://github.com/khovratovich/Argon2}\\\\[10pt]\nVersion 1.3 of Argon2: PHC release}\n\n\\maketitle\n\n\\tableofcontents\n\n\\section{Introduction}\n\nPasswords, despite all their drawbacks, remain the primary form of authentication on various web-services. Passwords are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low en",
                      "markdown": "`-daniel.dinu@uni.lu, khovratovich@gmail.com}\\\\[10 pt]\n\\url{https://www.cryptolux.org/index.php/Argon2}\\\\\n\\url{https://github.com/P-H-C/phc-winner-argon2}\\\\\n\\url{https://github.com/khovratovich/Argon2}\\\\[10pt]\nVersion 1.3 of Argon2: PHC release}\n\n\\maketitle\n\n\\tableofcontents\n\n\\section{Introduction}\n\nPasswords, despite all their drawbacks, remain the primary form of authentication on various web-services. Passwords are usually stored in a hashed form in a server's database. These databases are quite often captured by the adversaries,  who then apply dictionary attacks since passwords tend to have low en`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 52,
                  "endLine": 34,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n%FINISHED\n\n\\title{\\textsf{Argon2: the memory-hard function for password hashing and other applications}}\n\n\\author{Designers: Alex Biryukov, Daniel Dinu,  and Dmitry Khovratovich\\\\University of Luxembourg, Luxembourg\n\\\\[10pt]\n",
                    "rendered": {
                      "text": "\n%FINISHED\n\n\\title{\\textsf{Argon2: the memory-hard function for password hashing and other applications}}\n\n\\author{Designers: Alex Biryukov, Daniel Dinu,  and Dmitry Khovratovich\\\\University of Luxembourg, Luxembourg\n\\\\[10pt]\n",
                      "markdown": "`\n%FINISHED\n\n\\title{\\textsf{Argon2: the memory-hard function for password hashing and other applications}}\n\n\\author{Designers: Alex Biryukov, Daniel Dinu,  and Dmitry Khovratovich\\\\University of Luxembourg, Luxembourg\n\\\\[10pt]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 736,
                  "startColumn": 179,
                  "endLine": 736,
                  "endColumn": 188,
                  "snippet": {
                    "text": " (e.g, from $v_0$  to $v_0$) consists of 12 MULs, 12 XORs, and 12 rotations.\n\n\n\n\\subsection{User-controlled parameters}\n\nWe have made a number of design choices, which we consider optimal for a wide range of applications. Some parameters can be altered, some should be kept as is. We give a user full control over:\n\\begin{itemize}\n  \\item Amount $M$ of memory filled by algorithm. This value, evidently, depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time d",
                    "rendered": {
                      "text": " (e.g, from $v_0$  to $v_0$) consists of 12 MULs, 12 XORs, and 12 rotations.\n\n\n\n\\subsection{User-controlled parameters}\n\nWe have made a number of design choices, which we consider optimal for a wide range of applications. Some parameters can be altered, some should be kept as is. We give a user full control over:\n\\begin{itemize}\n  \\item Amount $M$ of memory filled by algorithm. This value, evidently, depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time d",
                      "markdown": "` (e.g, from $v_0$  to $v_0$) consists of 12 MULs, 12 XORs, and 12 rotations.\n\n\n\n\\subsection{User-controlled parameters}\n\nWe have made a number of design choices, which we consider optimal for a wide range of applications. Some parameters can be altered, some should be kept as is. We give a user full control over:\n\\begin{itemize}\n  \\item Amount $M$ of memory filled by algorithm. This value, evidently, depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 722,
                  "startColumn": 217,
                  "endLine": 722,
                  "endColumn": 221,
                  "snippet": {
                    "text": "t) linear functions of input bits, as otherwise the function tree would collapse.\n\nWe have not found any generic design strategy for such large-block compression functions. It is difficult to maintain diffusion on large memory blocks due to the lack of CPU instructions that interleave many registers at once. A naive approach would be to apply a linear transformation with certain branch number. However, even if we operate on 16-byte registers, a 1024-byte block would consist of 64 elements. A $64\\times 64$-matrix would require 32 XORs per register to implement, which gives a penalty about 2 cycles ",
                    "rendered": {
                      "text": "t) linear functions of input bits, as otherwise the function tree would collapse.\n\nWe have not found any generic design strategy for such large-block compression functions. It is difficult to maintain diffusion on large memory blocks due to the lack of CPU instructions that interleave many registers at once. A naive approach would be to apply a linear transformation with certain branch number. However, even if we operate on 16-byte registers, a 1024-byte block would consist of 64 elements. A $64\\times 64$-matrix would require 32 XORs per register to implement, which gives a penalty about 2 cycles ",
                      "markdown": "`t) linear functions of input bits, as otherwise the function tree would collapse.\n\nWe have not found any generic design strategy for such large-block compression functions. It is difficult to maintain diffusion on large memory blocks due to the lack of CPU instructions that interleave many registers at once. A naive approach would be to apply a linear transformation with certain branch number. However, even if we operate on 16-byte registers, a 1024-byte block would consist of 64 elements. A $64\\times 64$-matrix would require 32 XORs per register to implement, which gives a penalty about 2 cycles `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 707,
                  "startColumn": 210,
                  "endLine": 707,
                  "endColumn": 214,
                  "snippet": {
                    "text": " ciphers or hash functions, but we might not need strong properties of those primitives.\n\nHowever, we first have to determine the optimal block size. When we request a block from a random location in the memory, we most likely get a cache miss. The first bytes would arrive at the CPU from RAM within at best 10 ns, which accounts for 30 cycles. In practice, the latency of a single load instruction may reach 100 cycles and more. However, this number can be amortized if we request a large block of sequentially stored bytes. When the first bytes are requested, the CPU stores the next ones in the L1 ca",
                    "rendered": {
                      "text": " ciphers or hash functions, but we might not need strong properties of those primitives.\n\nHowever, we first have to determine the optimal block size. When we request a block from a random location in the memory, we most likely get a cache miss. The first bytes would arrive at the CPU from RAM within at best 10 ns, which accounts for 30 cycles. In practice, the latency of a single load instruction may reach 100 cycles and more. However, this number can be amortized if we request a large block of sequentially stored bytes. When the first bytes are requested, the CPU stores the next ones in the L1 ca",
                      "markdown": "` ciphers or hash functions, but we might not need strong properties of those primitives.\n\nHowever, we first have to determine the optimal block size. When we request a block from a random location in the memory, we most likely get a cache miss. The first bytes would arrive at the CPU from RAM within at best 10 ns, which accounts for 30 cycles. In practice, the latency of a single load instruction may reach 100 cycles and more. However, this number can be amortized if we request a large block of sequentially stored bytes. When the first bytes are requested, the CPU stores the next ones in the L1 ca`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 707,
                  "startColumn": 183,
                  "endLine": 707,
                  "endColumn": 187,
                  "snippet": {
                    "text": "faster than ordinary stream ciphers or hash functions, but we might not need strong properties of those primitives.\n\nHowever, we first have to determine the optimal block size. When we request a block from a random location in the memory, we most likely get a cache miss. The first bytes would arrive at the CPU from RAM within at best 10 ns, which accounts for 30 cycles. In practice, the latency of a single load instruction may reach 100 cycles and more. However, this number can be amortized if we request a large block of sequentially stored bytes. When the first bytes are requested, the CPU stores",
                    "rendered": {
                      "text": "faster than ordinary stream ciphers or hash functions, but we might not need strong properties of those primitives.\n\nHowever, we first have to determine the optimal block size. When we request a block from a random location in the memory, we most likely get a cache miss. The first bytes would arrive at the CPU from RAM within at best 10 ns, which accounts for 30 cycles. In practice, the latency of a single load instruction may reach 100 cycles and more. However, this number can be amortized if we request a large block of sequentially stored bytes. When the first bytes are requested, the CPU stores",
                      "markdown": "`faster than ordinary stream ciphers or hash functions, but we might not need strong properties of those primitives.\n\nHowever, we first have to determine the optimal block size. When we request a block from a random location in the memory, we most likely get a cache miss. The first bytes would arrive at the CPU from RAM within at best 10 ns, which accounts for 30 cycles. In practice, the latency of a single load instruction may reach 100 cycles and more. However, this number can be amortized if we request a large block of sequentially stored bytes. When the first bytes are requested, the CPU stores`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 705,
                  "startColumn": 416,
                  "endLine": 705,
                  "endColumn": 420,
                  "snippet": {
                    "text": "$G$ in our scheme. Intuitively, this should relax the cryptographic properties required from the compression function and allow for a faster primitive. To avoid being the bottleneck, the compression function ideally should be on par with the performance of memcpy() or similar function, which may run at 0.1 cycle per byte or even faster. This much faster than ordinary stream ciphers or hash functions, but we might not need strong properties of those primitives.\n\nHowever, we first have to determine the optimal block size. When we request a block from a random location in the memory, we most likely g",
                    "rendered": {
                      "text": "$G$ in our scheme. Intuitively, this should relax the cryptographic properties required from the compression function and allow for a faster primitive. To avoid being the bottleneck, the compression function ideally should be on par with the performance of memcpy() or similar function, which may run at 0.1 cycle per byte or even faster. This much faster than ordinary stream ciphers or hash functions, but we might not need strong properties of those primitives.\n\nHowever, we first have to determine the optimal block size. When we request a block from a random location in the memory, we most likely g",
                      "markdown": "`$G$ in our scheme. Intuitively, this should relax the cryptographic properties required from the compression function and allow for a faster primitive. To avoid being the bottleneck, the compression function ideally should be on par with the performance of memcpy() or similar function, which may run at 0.1 cycle per byte or even faster. This much faster than ordinary stream ciphers or hash functions, but we might not need strong properties of those primitives.\n\nHowever, we first have to determine the optimal block size. When we request a block from a random location in the memory, we most likely g`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 705,
                  "startColumn": 72,
                  "endLine": 705,
                  "endColumn": 81,
                  "snippet": {
                    "text": "s slice.\n\\end{itemize}\nWe prove that block collisions are unlikely under reasonable conditions on $F$ in Section~\\ref{sec:generic}.\n\n  \\subsection{Compression function design}\\label{sec:compression}\n\n  \\subsubsection{Overview}\n\nIn contrast to attacks on regular hash functions, the adversary does not control inputs to the compression function $G$ in our scheme. Intuitively, this should relax the cryptographic properties required from the compression function and allow for a faster primitive. To avoid being the bottleneck, the compression function ideally should be on par with the performance of memcpy()",
                    "rendered": {
                      "text": "s slice.\n\\end{itemize}\nWe prove that block collisions are unlikely under reasonable conditions on $F$ in Section~\\ref{sec:generic}.\n\n  \\subsection{Compression function design}\\label{sec:compression}\n\n  \\subsubsection{Overview}\n\nIn contrast to attacks on regular hash functions, the adversary does not control inputs to the compression function $G$ in our scheme. Intuitively, this should relax the cryptographic properties required from the compression function and allow for a faster primitive. To avoid being the bottleneck, the compression function ideally should be on par with the performance of memcpy()",
                      "markdown": "`s slice.\n\\end{itemize}\nWe prove that block collisions are unlikely under reasonable conditions on $F$ in Section~\\ref{sec:generic}.\n\n  \\subsection{Compression function design}\\label{sec:compression}\n\n  \\subsubsection{Overview}\n\nIn contrast to attacks on regular hash functions, the adversary does not control inputs to the compression function $G$ in our scheme. Intuitively, this should relax the cryptographic properties required from the compression function and allow for a faster primitive. To avoid being the bottleneck, the compression function ideally should be on par with the performance of memcpy()`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 687,
                  "startColumn": 10,
                  "endLine": 687,
                  "endColumn": 14,
                  "snippet": {
                    "text": "computing the last column, for instance\nby computing the slices sequentially and storing only the slice which is currently computed. Then his time is multiplied by $(1+\\frac{p-1}{l})$, whereas the memory use is multiplied\nby $(1-\\frac{p-1}{pl})$, so the time-area product is modified as\n$$\nAT_{new} = AT \\left(1-\\frac{p-1}{pl}\\right)\\left(1+\\frac{p-1}{l}\\right).\n$$\nFor $2 \\leq p,l \\leq 10$ this value is always between $1.05$ and $3$. We have selected $l=4$ as this value gives low synchronisation overhead while imposing time-area penalties on the adversary who reduces the memory even by the factor 3/",
                    "rendered": {
                      "text": "computing the last column, for instance\nby computing the slices sequentially and storing only the slice which is currently computed. Then his time is multiplied by $(1+\\frac{p-1}{l})$, whereas the memory use is multiplied\nby $(1-\\frac{p-1}{pl})$, so the time-area product is modified as\n$$\nAT_{new} = AT \\left(1-\\frac{p-1}{pl}\\right)\\left(1+\\frac{p-1}{l}\\right).\n$$\nFor $2 \\leq p,l \\leq 10$ this value is always between $1.05$ and $3$. We have selected $l=4$ as this value gives low synchronisation overhead while imposing time-area penalties on the adversary who reduces the memory even by the factor 3/",
                      "markdown": "`computing the last column, for instance\nby computing the slices sequentially and storing only the slice which is currently computed. Then his time is multiplied by $(1+\\frac{p-1}{l})$, whereas the memory use is multiplied\nby $(1-\\frac{p-1}{pl})$, so the time-area product is modified as\n$$\nAT_{new} = AT \\left(1-\\frac{p-1}{pl}\\right)\\left(1+\\frac{p-1}{l}\\right).\n$$\nFor $2 \\leq p,l \\leq 10$ this value is always between $1.05$ and $3$. We have selected $l=4$ as this value gives low synchronisation overhead while imposing time-area penalties on the adversary who reduces the memory even by the factor 3/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 623,
                  "startColumn": 174,
                  "endLine": 623,
                  "endColumn": 178,
                  "snippet": {
                    "text": "ate 40\\% of all reference hits for $\\gamma=2$ and 32\\% for $\\gamma=3$ (23.8\\% vs  19.3\\% hit for the first 10\\% of blocks). \n\nTo summarize, $\\gamma=2$ and $\\gamma=3$ both are better against one specific attacker and slightly worse against the other. We take $\\gamma=2$ as the value that minimizes the AT gain, as we consider this metric more important. \n\n \\begin{table}[ht]\n\\renewcommand{\\arraystretch}{1.3}\n$$\n\\begin{array}{|c||c|c|c|c|c|}\n\\hline\n\\text{Memory fraction ($1/q$) } &\\frac{1}{2} &\\frac{1}{3} &\\frac{1}{4}&\\frac{1}{5} &\\frac{1}{6}\\\\\n\\hline\n\\gamma=1 & 1.6 & 2.9 & 7.3 & 16.4 & 59\\\\\n\\gamma=2 &",
                    "rendered": {
                      "text": "ate 40\\% of all reference hits for $\\gamma=2$ and 32\\% for $\\gamma=3$ (23.8\\% vs  19.3\\% hit for the first 10\\% of blocks). \n\nTo summarize, $\\gamma=2$ and $\\gamma=3$ both are better against one specific attacker and slightly worse against the other. We take $\\gamma=2$ as the value that minimizes the AT gain, as we consider this metric more important. \n\n \\begin{table}[ht]\n\\renewcommand{\\arraystretch}{1.3}\n$$\n\\begin{array}{|c||c|c|c|c|c|}\n\\hline\n\\text{Memory fraction ($1/q$) } &\\frac{1}{2} &\\frac{1}{3} &\\frac{1}{4}&\\frac{1}{5} &\\frac{1}{6}\\\\\n\\hline\n\\gamma=1 & 1.6 & 2.9 & 7.3 & 16.4 & 59\\\\\n\\gamma=2 &",
                      "markdown": "`ate 40\\% of all reference hits for $\\gamma=2$ and 32\\% for $\\gamma=3$ (23.8\\% vs  19.3\\% hit for the first 10\\% of blocks). \n\nTo summarize, $\\gamma=2$ and $\\gamma=3$ both are better against one specific attacker and slightly worse against the other. We take $\\gamma=2$ as the value that minimizes the AT gain, as we consider this metric more important. \n\n \\begin{table}[ht]\n\\renewcommand{\\arraystretch}{1.3}\n$$\n\\begin{array}{|c||c|c|c|c|c|}\n\\hline\n\\text{Memory fraction ($1/q$) } &\\frac{1}{2} &\\frac{1}{3} &\\frac{1}{4}&\\frac{1}{5} &\\frac{1}{6}\\\\\n\\hline\n\\gamma=1 & 1.6 & 2.9 & 7.3 & 16.4 & 59\\\\\n\\gamma=2 &`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 538,
                  "startColumn": 365,
                  "endLine": 538,
                  "endColumn": 373,
                  "snippet": {
                    "text": "\\mathcal{E} = \\frac{AT}{AT_{new}} = \\frac{T^{1/4}}{2t(5+(\\ln t)/2+\\frac{\\ln T}{8})}\\leq\n\\frac{M^{1/4}}{2t^{3/4}(5+0.625\\ln t + 0.125 \\ln M)}.\n$$\nFor $t\\geq 3$ we get that $\\mathcal{E} \\leq M^{1/4}/36$. Therefore, for $M$ up to $2^{20}$ (1 GB) the advantage is smaller than 1 (i.e. the attack is not beneficial to the adversary at all), and for $M$ up to $2^{24}$ (16 GB) it is smaller than 2. Therefore, this approach is not better than the ranking attack. However, it is a subject of active research and we'll update this documents if improvements appear.\n\n\\subsection{Summary of tradeoff attacks}\n\n",
                    "rendered": {
                      "text": "\\mathcal{E} = \\frac{AT}{AT_{new}} = \\frac{T^{1/4}}{2t(5+(\\ln t)/2+\\frac{\\ln T}{8})}\\leq\n\\frac{M^{1/4}}{2t^{3/4}(5+0.625\\ln t + 0.125 \\ln M)}.\n$$\nFor $t\\geq 3$ we get that $\\mathcal{E} \\leq M^{1/4}/36$. Therefore, for $M$ up to $2^{20}$ (1 GB) the advantage is smaller than 1 (i.e. the attack is not beneficial to the adversary at all), and for $M$ up to $2^{24}$ (16 GB) it is smaller than 2. Therefore, this approach is not better than the ranking attack. However, it is a subject of active research and we'll update this documents if improvements appear.\n\n\\subsection{Summary of tradeoff attacks}\n\n",
                      "markdown": "`\\mathcal{E} = \\frac{AT}{AT_{new}} = \\frac{T^{1/4}}{2t(5+(\\ln t)/2+\\frac{\\ln T}{8})}\\leq\n\\frac{M^{1/4}}{2t^{3/4}(5+0.625\\ln t + 0.125 \\ln M)}.\n$$\nFor $t\\geq 3$ we get that $\\mathcal{E} \\leq M^{1/4}/36$. Therefore, for $M$ up to $2^{20}$ (1 GB) the advantage is smaller than 1 (i.e. the attack is not beneficial to the adversary at all), and for $M$ up to $2^{24}$ (16 GB) it is smaller than 2. Therefore, this approach is not better than the ranking attack. However, it is a subject of active research and we'll update this documents if improvements appear.\n\n\\subsection{Summary of tradeoff attacks}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 538,
                  "startColumn": 181,
                  "endLine": 538,
                  "endColumn": 185,
                  "snippet": {
                    "text": "\\mathcal{E} = \\frac{AT}{AT_{new}} = \\frac{T^{1/4}}{2t(5+(\\ln t)/2+\\frac{\\ln T}{8})}\\leq\n\\frac{M^{1/4}}{2t^{3/4}(5+0.625\\ln t + 0.125 \\ln M)}.\n$$\nFor $t\\geq 3$ we get that $\\mathcal{E} \\leq M^{1/4}/36$. Therefore, for $M$ up to $2^{20}$ (1 GB) the advantage is smaller than 1 (i.e. the attack is not beneficial to the adversary at all), and for $M$ up to $2^{24}$ (16 GB) it is smaller than 2. Therefore, this approach is not better than the ranking attack. However, it is a subject of active research and we'll update this documents if improvements appear.\n\n\\subsection{Summary of tradeoff attacks}\n\n",
                    "rendered": {
                      "text": "\\mathcal{E} = \\frac{AT}{AT_{new}} = \\frac{T^{1/4}}{2t(5+(\\ln t)/2+\\frac{\\ln T}{8})}\\leq\n\\frac{M^{1/4}}{2t^{3/4}(5+0.625\\ln t + 0.125 \\ln M)}.\n$$\nFor $t\\geq 3$ we get that $\\mathcal{E} \\leq M^{1/4}/36$. Therefore, for $M$ up to $2^{20}$ (1 GB) the advantage is smaller than 1 (i.e. the attack is not beneficial to the adversary at all), and for $M$ up to $2^{24}$ (16 GB) it is smaller than 2. Therefore, this approach is not better than the ranking attack. However, it is a subject of active research and we'll update this documents if improvements appear.\n\n\\subsection{Summary of tradeoff attacks}\n\n",
                      "markdown": "`\\mathcal{E} = \\frac{AT}{AT_{new}} = \\frac{T^{1/4}}{2t(5+(\\ln t)/2+\\frac{\\ln T}{8})}\\leq\n\\frac{M^{1/4}}{2t^{3/4}(5+0.625\\ln t + 0.125 \\ln M)}.\n$$\nFor $t\\geq 3$ we get that $\\mathcal{E} \\leq M^{1/4}/36$. Therefore, for $M$ up to $2^{20}$ (1 GB) the advantage is smaller than 1 (i.e. the attack is not beneficial to the adversary at all), and for $M$ up to $2^{24}$ (16 GB) it is smaller than 2. Therefore, this approach is not better than the ranking attack. However, it is a subject of active research and we'll update this documents if improvements appear.\n\n\\subsection{Summary of tradeoff attacks}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 533,
                  "startColumn": 84,
                  "endLine": 533,
                  "endColumn": 88,
                  "snippet": {
                    "text": "$$\nAT_{new}= 2 T^{7/4}\\left(5+ t + \\frac{\\ln T}{8} \\right),\n$$\nSince the memory consumption in the standard implementation is $M=T/t$, the standard AT value is $T^2/t$ and the time-area advantage of the Alwen-Blocki attack is  \n$$\n\\mathcal{E} = \\frac{AT}{AT_{new}} = \\frac{T^{1/4}}{2t(5+(\\ln t)/2+\\frac{\\ln T}{8})}\\leq\n\\frac{M^{1/4}}{2t^{3/4}(5+0.625\\ln t + 0.125 \\ln M)}.\n",
                    "rendered": {
                      "text": "$$\nAT_{new}= 2 T^{7/4}\\left(5+ t + \\frac{\\ln T}{8} \\right),\n$$\nSince the memory consumption in the standard implementation is $M=T/t$, the standard AT value is $T^2/t$ and the time-area advantage of the Alwen-Blocki attack is  \n$$\n\\mathcal{E} = \\frac{AT}{AT_{new}} = \\frac{T^{1/4}}{2t(5+(\\ln t)/2+\\frac{\\ln T}{8})}\\leq\n\\frac{M^{1/4}}{2t^{3/4}(5+0.625\\ln t + 0.125 \\ln M)}.\n",
                      "markdown": "`$$\nAT_{new}= 2 T^{7/4}\\left(5+ t + \\frac{\\ln T}{8} \\right),\n$$\nSince the memory consumption in the standard implementation is $M=T/t$, the standard AT value is $T^2/t$ and the time-area advantage of the Alwen-Blocki attack is  \n$$\n\\mathcal{E} = \\frac{AT}{AT_{new}} = \\frac{T^{1/4}}{2t(5+(\\ln t)/2+\\frac{\\ln T}{8})}\\leq\n\\frac{M^{1/4}}{2t^{3/4}(5+0.625\\ln t + 0.125 \\ln M)}.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 578,
                  "endLine": 510,
                  "endColumn": 582,
                  "snippet": {
                    "text": "ives the computational penalty of around $2^{14}$.  The $2^{14}$ Blake2b cores would take more area than 1 GB of RAM (Section~\\ref{sec:costs}), thus prohibiting the adversary to further reduce the time-area product. We conclude that the time-area product cost for \\textsf{Argon2i} can be reduced by 3 at best.\n\n\\subsection{Security of Argon2i to generic tradeoff attacks on random graphs}\n\nThe recent paper by Alwen and Blocki~\\cite{AB16} reports an improved attack on Argon2i (all versions)  as an instance of\nhash functions based on random graphs. \n\n\nFor $t$-pass Argon2i, Alwen and Blocki  explicitly ",
                    "rendered": {
                      "text": "ives the computational penalty of around $2^{14}$.  The $2^{14}$ Blake2b cores would take more area than 1 GB of RAM (Section~\\ref{sec:costs}), thus prohibiting the adversary to further reduce the time-area product. We conclude that the time-area product cost for \\textsf{Argon2i} can be reduced by 3 at best.\n\n\\subsection{Security of Argon2i to generic tradeoff attacks on random graphs}\n\nThe recent paper by Alwen and Blocki~\\cite{AB16} reports an improved attack on Argon2i (all versions)  as an instance of\nhash functions based on random graphs. \n\n\nFor $t$-pass Argon2i, Alwen and Blocki  explicitly ",
                      "markdown": "`ives the computational penalty of around $2^{14}$.  The $2^{14}$ Blake2b cores would take more area than 1 GB of RAM (Section~\\ref{sec:costs}), thus prohibiting the adversary to further reduce the time-area product. We conclude that the time-area product cost for \\textsf{Argon2i} can be reduced by 3 at best.\n\n\\subsection{Security of Argon2i to generic tradeoff attacks on random graphs}\n\nThe recent paper by Alwen and Blocki~\\cite{AB16} reports an improved attack on Argon2i (all versions)  as an instance of\nhash functions based on random graphs. \n\n\nFor $t$-pass Argon2i, Alwen and Blocki  explicitly `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 506,
                  "startColumn": 167,
                  "endLine": 506,
                  "endColumn": 171,
                  "snippet": {
                    "text": "\n\\subsection{Security of Argon2 to ranking tradeoff attacks}\n\nTime and computational penalties for 1-pass \\textsf{Argon2d} are given in Table~\\ref{tab:generic3}. It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n",
                    "rendered": {
                      "text": "\n\\subsection{Security of Argon2 to ranking tradeoff attacks}\n\nTime and computational penalties for 1-pass \\textsf{Argon2d} are given in Table~\\ref{tab:generic3}. It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n",
                      "markdown": "`\n\\subsection{Security of Argon2 to ranking tradeoff attacks}\n\nTime and computational penalties for 1-pass \\textsf{Argon2d} are given in Table~\\ref{tab:generic3}. It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 126,
                  "endLine": 498,
                  "endColumn": 135,
                  "snippet": {
                    "text": "1$, which implies that $r_x \\geq x$. The latter is forbidden.\n    \\end{itemize}\n  \\end{itemize}\n  Thus we get a contradiction in all cases. This ends the proof.\n\\end{proof}\n\n The compression function $G$ is not claimed to be collision resistant nor preimage-resistant. However, as the attacker has no control over its input, the collisions are highly unlikely. We only take care that the starting blocks are not identical by producing the first two blocks with a counter and forbidding to reference from the memory the last block as (pseudo)random.\n\n\\textsf{Argon2d} does not overwrite the memory, hence it is",
                    "rendered": {
                      "text": "1$, which implies that $r_x \\geq x$. The latter is forbidden.\n    \\end{itemize}\n  \\end{itemize}\n  Thus we get a contradiction in all cases. This ends the proof.\n\\end{proof}\n\n The compression function $G$ is not claimed to be collision resistant nor preimage-resistant. However, as the attacker has no control over its input, the collisions are highly unlikely. We only take care that the starting blocks are not identical by producing the first two blocks with a counter and forbidding to reference from the memory the last block as (pseudo)random.\n\n\\textsf{Argon2d} does not overwrite the memory, hence it is",
                      "markdown": "`1$, which implies that $r_x \\geq x$. The latter is forbidden.\n    \\end{itemize}\n  \\end{itemize}\n  Thus we get a contradiction in all cases. This ends the proof.\n\\end{proof}\n\n The compression function $G$ is not claimed to be collision resistant nor preimage-resistant. However, as the attacker has no control over its input, the collisions are highly unlikely. We only take care that the starting blocks are not identical by producing the first two blocks with a counter and forbidding to reference from the memory the last block as (pseudo)random.\n\n\\textsf{Argon2d} does not overwrite the memory, hence it is`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 457,
                  "startColumn": 121,
                  "endLine": 457,
                  "endColumn": 125,
                  "snippet": {
                    "text": "\\subsection{Security of Argon2 to generic attacks}\\label{sec:generic}\n\nNow we consider preimage and collision resistance of both versions of \\textsf{Argon2}. Variable-length inputs are prepended with their lengths, which shall ensure\n the absence of equal input strings. Inputs are processed by a cryptographic hash function, so no collisions should occur at this stage.\n \n \\paragraph{Internal collision resistance.} The compression function $G$ is not claimed to be collision resistant, so it may happen that distinct inputs produce identical outputs. Recall\nthat $G$ works as follows:\n",
                    "rendered": {
                      "text": "\\subsection{Security of Argon2 to generic attacks}\\label{sec:generic}\n\nNow we consider preimage and collision resistance of both versions of \\textsf{Argon2}. Variable-length inputs are prepended with their lengths, which shall ensure\n the absence of equal input strings. Inputs are processed by a cryptographic hash function, so no collisions should occur at this stage.\n \n \\paragraph{Internal collision resistance.} The compression function $G$ is not claimed to be collision resistant, so it may happen that distinct inputs produce identical outputs. Recall\nthat $G$ works as follows:\n",
                      "markdown": "`\\subsection{Security of Argon2 to generic attacks}\\label{sec:generic}\n\nNow we consider preimage and collision resistance of both versions of \\textsf{Argon2}. Variable-length inputs are prepended with their lengths, which shall ensure\n the absence of equal input strings. Inputs are processed by a cryptographic hash function, so no collisions should occur at this stage.\n \n \\paragraph{Internal collision resistance.} The compression function $G$ is not claimed to be collision resistant, so it may happen that distinct inputs produce identical outputs. Recall\nthat $G$ works as follows:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 135,
                  "endLine": 404,
                  "endColumn": 139,
                  "snippet": {
                    "text": "\nSince \naddresses $l_i$ can be precomputed, an attacker can figure out for each block $B^r[i]$ when it can be discarded. \nA separate data structure will be needed though to keep the address of newly produced blocks as they land up at pseudo-random locations at the memory. \n\n\nThis  saving strategy uses the fraction\n",
                    "rendered": {
                      "text": "\nSince \naddresses $l_i$ can be precomputed, an attacker can figure out for each block $B^r[i]$ when it can be discarded. \nA separate data structure will be needed though to keep the address of newly produced blocks as they land up at pseudo-random locations at the memory. \n\n\nThis  saving strategy uses the fraction\n",
                      "markdown": "`\nSince \naddresses $l_i$ can be precomputed, an attacker can figure out for each block $B^r[i]$ when it can be discarded. \nA separate data structure will be needed though to keep the address of newly produced blocks as they land up at pseudo-random locations at the memory. \n\n\nThis  saving strategy uses the fraction\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 108,
                  "endLine": 404,
                  "endColumn": 112,
                  "snippet": {
                    "text": "\nSince \naddresses $l_i$ can be precomputed, an attacker can figure out for each block $B^r[i]$ when it can be discarded. \nA separate data structure will be needed though to keep the address of newly produced blocks as they land up at pseudo-random locations at the memory. \n\n\nThis  saving strategy uses the fraction\n",
                    "rendered": {
                      "text": "\nSince \naddresses $l_i$ can be precomputed, an attacker can figure out for each block $B^r[i]$ when it can be discarded. \nA separate data structure will be needed though to keep the address of newly produced blocks as they land up at pseudo-random locations at the memory. \n\n\nThis  saving strategy uses the fraction\n",
                      "markdown": "`\nSince \naddresses $l_i$ can be precomputed, an attacker can figure out for each block $B^r[i]$ when it can be discarded. \nA separate data structure will be needed though to keep the address of newly produced blocks as they land up at pseudo-random locations at the memory. \n\n\nThis  saving strategy uses the fraction\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 257,
                  "endLine": 392,
                  "endColumn": 261,
                  "snippet": {
                    "text": "\n\n\\subsection{Memory optimization attack}\n\nAs reported in~\\cite{Corrigan-GibbsB16}, it is possible to optimize the memory use in the earlier version 1.2.1 of Argon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We formalize this issue as follows. Let us denote by $\\phi^r(i)$",
                    "rendered": {
                      "text": "\n\n\\subsection{Memory optimization attack}\n\nAs reported in~\\cite{Corrigan-GibbsB16}, it is possible to optimize the memory use in the earlier version 1.2.1 of Argon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We formalize this issue as follows. Let us denote by $\\phi^r(i)$",
                      "markdown": "`\n\n\\subsection{Memory optimization attack}\n\nAs reported in~\\cite{Corrigan-GibbsB16}, it is possible to optimize the memory use in the earlier version 1.2.1 of Argon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We formalize this issue as follows. Let us denote by $\\phi^r(i)$`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 195,
                  "endLine": 392,
                  "endColumn": 199,
                  "snippet": {
                    "text": "the Argon2 indexing function.}\\label{tab:generic3}\n\\end{table}\n\n\\subsection{Memory optimization attack}\n\nAs reported in~\\cite{Corrigan-GibbsB16}, it is possible to optimize the memory use in the earlier version 1.2.1 of Argon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We",
                    "rendered": {
                      "text": "the Argon2 indexing function.}\\label{tab:generic3}\n\\end{table}\n\n\\subsection{Memory optimization attack}\n\nAs reported in~\\cite{Corrigan-GibbsB16}, it is possible to optimize the memory use in the earlier version 1.2.1 of Argon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We",
                      "markdown": "`the Argon2 indexing function.}\\label{tab:generic3}\n\\end{table}\n\n\\subsection{Memory optimization attack}\n\nAs reported in~\\cite{Corrigan-GibbsB16}, it is possible to optimize the memory use in the earlier version 1.2.1 of Argon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 355,
                  "endLine": 183,
                  "endColumn": 359,
                  "snippet": {
                    "text": "}$ with two 1024-byte inputs and a 1024-byte output, and internal hash function ${H}$. Here ${H}$ is the Blake2b hash function, and ${G}$ is based on  its internal permutation. The mode of operation of \\textsf{Argon2} is quite simple when no parallelism is used: function ${G}$ is iterated $m$ times. At step $i$ a block with index $\\phi(i)<i$ is taken from the memory (Figure~\\ref{fig:generic}), where $\\phi(i)$ is either determined by the previous block in \\textsf{Argon2d}, or is a fixed value in \\textsf{Argon2i}.\n\n\n\n\\begin{figure}[ht]\n  \\ifpdf\n\\begin{center}\n  \\includegraphics[scale=0.6]{pics/gener",
                    "rendered": {
                      "text": "}$ with two 1024-byte inputs and a 1024-byte output, and internal hash function ${H}$. Here ${H}$ is the Blake2b hash function, and ${G}$ is based on  its internal permutation. The mode of operation of \\textsf{Argon2} is quite simple when no parallelism is used: function ${G}$ is iterated $m$ times. At step $i$ a block with index $\\phi(i)<i$ is taken from the memory (Figure~\\ref{fig:generic}), where $\\phi(i)$ is either determined by the previous block in \\textsf{Argon2d}, or is a fixed value in \\textsf{Argon2i}.\n\n\n\n\\begin{figure}[ht]\n  \\ifpdf\n\\begin{center}\n  \\includegraphics[scale=0.6]{pics/gener",
                      "markdown": "`}$ with two 1024-byte inputs and a 1024-byte output, and internal hash function ${H}$. Here ${H}$ is the Blake2b hash function, and ${G}$ is based on  its internal permutation. The mode of operation of \\textsf{Argon2} is quite simple when no parallelism is used: function ${G}$ is iterated $m$ times. At step $i$ a block with index $\\phi(i)<i$ is taken from the memory (Figure~\\ref{fig:generic}), where $\\phi(i)$ is either determined by the previous block in \\textsf{Argon2d}, or is a fixed value in \\textsf{Argon2i}.\n\n\n\n\\begin{figure}[ht]\n  \\ifpdf\n\\begin{center}\n  \\includegraphics[scale=0.6]{pics/gener`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 233,
                  "endLine": 141,
                  "endColumn": 237,
                  "snippet": {
                    "text": "  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n",
                    "rendered": {
                      "text": "  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n",
                      "markdown": "`  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 295,
                  "endLine": 104,
                  "endColumn": 299,
                  "snippet": {
                    "text": "e. \n\nSuppose that an ASIC designer that wants to reduce the memory and thus the area wants to compute $\\mathcal{H}$ using $\\alpha M$ memory only for some $\\alpha<1$. Using some tradeoff specific to $\\mathcal{H}$, he has to spend $C(\\alpha)$ times as much computation and his running time increases by at least the factor $D(\\alpha)$. Therefore, the maximum possible gain $\\mathcal{E}$ in the time-area product is \n$$\n\\mathcal{E}_{max}= \\max_{\\alpha}\\frac{1}{\\alpha D(\\alpha)}.\n$$\nThe hash function is called \\emph{memory-hard} if $D(\\alpha) >1/\\alpha$ as $\\alpha\\rightarrow 0$. Clearly, in this case the ",
                    "rendered": {
                      "text": "e. \n\nSuppose that an ASIC designer that wants to reduce the memory and thus the area wants to compute $\\mathcal{H}$ using $\\alpha M$ memory only for some $\\alpha<1$. Using some tradeoff specific to $\\mathcal{H}$, he has to spend $C(\\alpha)$ times as much computation and his running time increases by at least the factor $D(\\alpha)$. Therefore, the maximum possible gain $\\mathcal{E}$ in the time-area product is \n$$\n\\mathcal{E}_{max}= \\max_{\\alpha}\\frac{1}{\\alpha D(\\alpha)}.\n$$\nThe hash function is called \\emph{memory-hard} if $D(\\alpha) >1/\\alpha$ as $\\alpha\\rightarrow 0$. Clearly, in this case the ",
                      "markdown": "`e. \n\nSuppose that an ASIC designer that wants to reduce the memory and thus the area wants to compute $\\mathcal{H}$ using $\\alpha M$ memory only for some $\\alpha<1$. Using some tradeoff specific to $\\mathcal{H}$, he has to spend $C(\\alpha)$ times as much computation and his running time increases by at least the factor $D(\\alpha)$. Therefore, the maximum possible gain $\\mathcal{E}$ in the time-area product is \n$$\n\\mathcal{E}_{max}= \\max_{\\alpha}\\frac{1}{\\alpha D(\\alpha)}.\n$$\nThe hash function is called \\emph{memory-hard} if $D(\\alpha) >1/\\alpha$ as $\\alpha\\rightarrow 0$. Clearly, in this case the `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 135,
                  "endLine": 82,
                  "endColumn": 139,
                  "snippet": {
                    "text": " function without any interaction is subject  to simple tradeoff attacks.\n\\end{itemize}\n\n\\paragraph{Our solution} We offer a hashing scheme called  \\textsf{Argon2}.\n \\textsf{Argon2} summarizes the state of the art in the design of memory-hard functions. It is a streamlined and simple design. It aims at the highest memory filling rate and effective use of multiple computing units, while still\nproviding defense against tradeoff attacks. \\textsf{Argon2} is optimized for the x86 architecture and exploits the cache and memory organization of the recent Intel and AMD processors. \\textsf{Argon2} has two ",
                    "rendered": {
                      "text": " function without any interaction is subject  to simple tradeoff attacks.\n\\end{itemize}\n\n\\paragraph{Our solution} We offer a hashing scheme called  \\textsf{Argon2}.\n \\textsf{Argon2} summarizes the state of the art in the design of memory-hard functions. It is a streamlined and simple design. It aims at the highest memory filling rate and effective use of multiple computing units, while still\nproviding defense against tradeoff attacks. \\textsf{Argon2} is optimized for the x86 architecture and exploits the cache and memory organization of the recent Intel and AMD processors. \\textsf{Argon2} has two ",
                      "markdown": "` function without any interaction is subject  to simple tradeoff attacks.\n\\end{itemize}\n\n\\paragraph{Our solution} We offer a hashing scheme called  \\textsf{Argon2}.\n \\textsf{Argon2} summarizes the state of the art in the design of memory-hard functions. It is a streamlined and simple design. It aims at the highest memory filling rate and effective use of multiple computing units, while still\nproviding defense against tradeoff attacks. \\textsf{Argon2} is optimized for the x86 architecture and exploits the cache and memory organization of the recent Intel and AMD processors. \\textsf{Argon2} has two `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 407,
                  "endLine": 65,
                  "endColumn": 3,
                  "snippet": {
                    "text": "bprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SMix, which calls ROMix, which calls BlockMix, which calls Salsa20/8 etc.).  It is hard to analyze and, moreover, hard to achieve confidence. Finally, it is not flexible in separating time and memory costs. \nAt the same time, the story of cryptographic competitions~\\cite{robshaw2008new,sha3} has demonstrated that\nthe most secure designs come with simplicity, where every element is well motivated and a cryptanalyst has as few entry points as possible.\n\nThe  Password Hashing Competition, which started in 201",
                    "rendered": {
                      "text": "bprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SMix, which calls ROMix, which calls BlockMix, which calls Salsa20/8 etc.).  It is hard to analyze and, moreover, hard to achieve confidence. Finally, it is not flexible in separating time and memory costs. \nAt the same time, the story of cryptographic competitions~\\cite{robshaw2008new,sha3} has demonstrated that\nthe most secure designs come with simplicity, where every element is well motivated and a cryptanalyst has as few entry points as possible.\n\nThe  Password Hashing Competition, which started in 201",
                      "markdown": "`bprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SMix, which calls ROMix, which calls BlockMix, which calls Salsa20/8 etc.).  It is hard to analyze and, moreover, hard to achieve confidence. Finally, it is not flexible in separating time and memory costs. \nAt the same time, the story of cryptographic competitions~\\cite{robshaw2008new,sha3} has demonstrated that\nthe most secure designs come with simplicity, where every element is well motivated and a cryptanalyst has as few entry points as possible.\n\nThe  Password Hashing Competition, which started in 201`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 127,
                  "endLine": 62,
                  "endColumn": 131,
                  "snippet": {
                    "text": "ow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{scrypt} calls a stack of subprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SMix, which calls ROMix, which calls BlockMix, which calls Salsa20/8 etc.). ",
                    "rendered": {
                      "text": "ow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{scrypt} calls a stack of subprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SMix, which calls ROMix, which calls BlockMix, which calls Salsa20/8 etc.). ",
                      "markdown": "`ow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{scrypt} calls a stack of subprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SMix, which calls ROMix, which calls BlockMix, which calls Salsa20/8 etc.). `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 858,
                  "startColumn": 174,
                  "endLine": 858,
                  "endColumn": 180,
                  "snippet": {
                    "text": "lar additions in $G$ are combined with 64-bit multiplications (that is the only difference to the original Blake2 design). \n\n\nOur motivation in adding multiplications is to increase the circuit depth (and thus the running time) of a potential ASIC implementation while having roughly the same running time on CPU thanks to parallelism and pipelining. Extra multiplications in the scheme serve well, as the best addition-based circuits for multiplication have latency about 4-5 times the addition latency for 32-bit multiplication (or roughly $\\log_n$ for $n$-bit multiplication).\n\nAs a result, any output 6",
                    "rendered": {
                      "text": "lar additions in $G$ are combined with 64-bit multiplications (that is the only difference to the original Blake2 design). \n\n\nOur motivation in adding multiplications is to increase the circuit depth (and thus the running time) of a potential ASIC implementation while having roughly the same running time on CPU thanks to parallelism and pipelining. Extra multiplications in the scheme serve well, as the best addition-based circuits for multiplication have latency about 4-5 times the addition latency for 32-bit multiplication (or roughly $\\log_n$ for $n$-bit multiplication).\n\nAs a result, any output 6",
                      "markdown": "`lar additions in $G$ are combined with 64-bit multiplications (that is the only difference to the original Blake2 design). \n\n\nOur motivation in adding multiplications is to increase the circuit depth (and thus the running time) of a potential ASIC implementation while having roughly the same running time on CPU thanks to parallelism and pipelining. Extra multiplications in the scheme serve well, as the best addition-based circuits for multiplication have latency about 4-5 times the addition latency for 32-bit multiplication (or roughly $\\log_n$ for $n$-bit multiplication).\n\nAs a result, any output 6`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 806,
                  "startColumn": 158,
                  "endLine": 806,
                  "endColumn": 164,
                  "snippet": {
                    "text": "r keys are needed, select longer tags.\n\\item If side-channel attacks is a viable threat, enable the memory wiping option in the library call.\n\\item Run the scheme of type $y$, memory $m$ and $h$ lanes and threads, using different number of passes $t$. Figure out the maximum $t$ such that the running time does not exceed $x$. If it exceeds $x$ even for $t=1$, reduce $m$ accordingly.\n\\item Hash all the passwords with the just determined values $m$, $h$, and $t$.\n\\end{enumerate}\n\n\n\\section{Conclusion}\n\nWe presented  the memory-hard function \\textsf{Argon2}, which maximizes the ASIC implementation costs",
                    "rendered": {
                      "text": "r keys are needed, select longer tags.\n\\item If side-channel attacks is a viable threat, enable the memory wiping option in the library call.\n\\item Run the scheme of type $y$, memory $m$ and $h$ lanes and threads, using different number of passes $t$. Figure out the maximum $t$ such that the running time does not exceed $x$. If it exceeds $x$ even for $t=1$, reduce $m$ accordingly.\n\\item Hash all the passwords with the just determined values $m$, $h$, and $t$.\n\\end{enumerate}\n\n\n\\section{Conclusion}\n\nWe presented  the memory-hard function \\textsf{Argon2}, which maximizes the ASIC implementation costs",
                      "markdown": "`r keys are needed, select longer tags.\n\\item If side-channel attacks is a viable threat, enable the memory wiping option in the library call.\n\\item Run the scheme of type $y$, memory $m$ and $h$ lanes and threads, using different number of passes $t$. Figure out the maximum $t$ such that the running time does not exceed $x$. If it exceeds $x$ even for $t=1$, reduce $m$ accordingly.\n\\item Hash all the passwords with the just determined values $m$, $h$, and $t$.\n\\end{enumerate}\n\n\n\\section{Conclusion}\n\nWe presented  the memory-hard function \\textsf{Argon2}, which maximizes the ASIC implementation costs`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 802,
                  "startColumn": 42,
                  "endLine": 802,
                  "endColumn": 48,
                  "snippet": {
                    "text": "extsf{Argon2i}. Otherwise any choice is fine, including optional types.\n\\item Figure out the maximum number $h$ of threads that can be initiated by each call to  \\textsf{Argon2}. \n\\item Figure out the maximum amount $m$ of memory that each call can afford. \n\\item Figure out the maximum amount $x$ of time (in seconds) that each call can afford.\n\\item Select the salt length. 128 bits is sufficient for all applications, but can be reduced to 64 bits in the case of space constraints.\n\\item Select the tag length. 128 bits is sufficient for most applications, including key derivation. If longer keys are n",
                    "rendered": {
                      "text": "extsf{Argon2i}. Otherwise any choice is fine, including optional types.\n\\item Figure out the maximum number $h$ of threads that can be initiated by each call to  \\textsf{Argon2}. \n\\item Figure out the maximum amount $m$ of memory that each call can afford. \n\\item Figure out the maximum amount $x$ of time (in seconds) that each call can afford.\n\\item Select the salt length. 128 bits is sufficient for all applications, but can be reduced to 64 bits in the case of space constraints.\n\\item Select the tag length. 128 bits is sufficient for most applications, including key derivation. If longer keys are n",
                      "markdown": "`extsf{Argon2i}. Otherwise any choice is fine, including optional types.\n\\item Figure out the maximum number $h$ of threads that can be initiated by each call to  \\textsf{Argon2}. \n\\item Figure out the maximum amount $m$ of memory that each call can afford. \n\\item Figure out the maximum amount $x$ of time (in seconds) that each call can afford.\n\\item Select the salt length. 128 bits is sufficient for all applications, but can be reduced to 64 bits in the case of space constraints.\n\\item Select the tag length. 128 bits is sufficient for most applications, including key derivation. If longer keys are n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 789,
                  "startColumn": 131,
                  "endLine": 789,
                  "endColumn": 138,
                  "snippet": {
                    "text": " MB of RAM;\n  \\item Backend server authentication, that takes 0.5 seconds on a 2 GHz CPU using 4 cores --- \\textsf{Argon2d} with 8 lanes and 4 GB of RAM.\n\\end{itemize}\n\n\\textsf{Argon2i} is optimized for more dangerous settings, where the adversary possibly can access the same machine, use its CPU or mount cold-boot attacks. We use three passes to get rid entirely of the password in the memory. We suggest the following settings:\n\\begin{itemize}\n  \\item Key derivation for hard-drive encryption, that takes 3 seconds on a 2 GHz CPU using 2 cores --- \\textsf{Argon2i} with 4 lanes and 6 GB of RAM;\n  \\item ",
                    "rendered": {
                      "text": " MB of RAM;\n  \\item Backend server authentication, that takes 0.5 seconds on a 2 GHz CPU using 4 cores --- \\textsf{Argon2d} with 8 lanes and 4 GB of RAM.\n\\end{itemize}\n\n\\textsf{Argon2i} is optimized for more dangerous settings, where the adversary possibly can access the same machine, use its CPU or mount cold-boot attacks. We use three passes to get rid entirely of the password in the memory. We suggest the following settings:\n\\begin{itemize}\n  \\item Key derivation for hard-drive encryption, that takes 3 seconds on a 2 GHz CPU using 2 cores --- \\textsf{Argon2i} with 4 lanes and 6 GB of RAM;\n  \\item ",
                      "markdown": "` MB of RAM;\n  \\item Backend server authentication, that takes 0.5 seconds on a 2 GHz CPU using 4 cores --- \\textsf{Argon2d} with 8 lanes and 4 GB of RAM.\n\\end{itemize}\n\n\\textsf{Argon2i} is optimized for more dangerous settings, where the adversary possibly can access the same machine, use its CPU or mount cold-boot attacks. We use three passes to get rid entirely of the password in the memory. We suggest the following settings:\n\\begin{itemize}\n  \\item Key derivation for hard-drive encryption, that takes 3 seconds on a 2 GHz CPU using 2 cores --- \\textsf{Argon2i} with 4 lanes and 6 GB of RAM;\n  \\item `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 756,
                  "startColumn": 472,
                  "endLine": 756,
                  "endColumn": 478,
                  "snippet": {
                    "text": "Time Stamp Counter (TSC) value. The instruction waits for prevoius instruction to finish and then is executed, but meanwhile the next instructions may begin before the value is read. Although this shortcoming, we used this method because it is the most realiable handy method to measure the execution time and also it is widely used in other cryptographic operations benchmarking.\n\n\\begin{table}\n\\begin{center}\n\\begin{tabular}{|cc||cc|cc|}\n\\hline\n& & \\multicolumn{2}{c|}{\\textsf{Argon2d} (1 pass)} & \\multicolumn{2}{|c|}{\\textsf{Argon2i} (3 passes)}  \\\\\n\\cline{3-6}\nProcessor & Threads & Cycles/Byte & Band",
                    "rendered": {
                      "text": "Time Stamp Counter (TSC) value. The instruction waits for prevoius instruction to finish and then is executed, but meanwhile the next instructions may begin before the value is read. Although this shortcoming, we used this method because it is the most realiable handy method to measure the execution time and also it is widely used in other cryptographic operations benchmarking.\n\n\\begin{table}\n\\begin{center}\n\\begin{tabular}{|cc||cc|cc|}\n\\hline\n& & \\multicolumn{2}{c|}{\\textsf{Argon2d} (1 pass)} & \\multicolumn{2}{|c|}{\\textsf{Argon2i} (3 passes)}  \\\\\n\\cline{3-6}\nProcessor & Threads & Cycles/Byte & Band",
                      "markdown": "`Time Stamp Counter (TSC) value. The instruction waits for prevoius instruction to finish and then is executed, but meanwhile the next instructions may begin before the value is read. Although this shortcoming, we used this method because it is the most realiable handy method to measure the execution time and also it is widely used in other cryptographic operations benchmarking.\n\n\\begin{table}\n\\begin{center}\n\\begin{tabular}{|cc||cc|cc|}\n\\hline\n& & \\multicolumn{2}{c|}{\\textsf{Argon2d} (1 pass)} & \\multicolumn{2}{|c|}{\\textsf{Argon2i} (3 passes)}  \\\\\n\\cline{3-6}\nProcessor & Threads & Cycles/Byte & Band`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 756,
                  "startColumn": 171,
                  "endLine": 756,
                  "endColumn": 177,
                  "snippet": {
                    "text": "ted are obtained using the \\texttt{gcc 4.8.2} compiler  with the following options: \\texttt{-m64 -mavx -std=c++11 -pthread -O3}.\nThe cycle count value was measured using the \\texttt{\\_\\_rdtscp} Intel intrinsics C function which inlines the \\texttt{RDTSCP} assembly instruction that returns the 64-bit Time Stamp Counter (TSC) value. The instruction waits for prevoius instruction to finish and then is executed, but meanwhile the next instructions may begin before the value is read. Although this shortcoming, we used this method because it is the most realiable handy method to measure the execution time",
                    "rendered": {
                      "text": "ted are obtained using the \\texttt{gcc 4.8.2} compiler  with the following options: \\texttt{-m64 -mavx -std=c++11 -pthread -O3}.\nThe cycle count value was measured using the \\texttt{\\_\\_rdtscp} Intel intrinsics C function which inlines the \\texttt{RDTSCP} assembly instruction that returns the 64-bit Time Stamp Counter (TSC) value. The instruction waits for prevoius instruction to finish and then is executed, but meanwhile the next instructions may begin before the value is read. Although this shortcoming, we used this method because it is the most realiable handy method to measure the execution time",
                      "markdown": "`ted are obtained using the \\texttt{gcc 4.8.2} compiler  with the following options: \\texttt{-m64 -mavx -std=c++11 -pthread -O3}.\nThe cycle count value was measured using the \\texttt{\\_\\_rdtscp} Intel intrinsics C function which inlines the \\texttt{RDTSCP} assembly instruction that returns the 64-bit Time Stamp Counter (TSC) value. The instruction waits for prevoius instruction to finish and then is executed, but meanwhile the next instructions may begin before the value is read. Although this shortcoming, we used this method because it is the most realiable handy method to measure the execution time`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 138,
                  "endLine": 740,
                  "endColumn": 146,
                  "snippet": {
                    "text": "on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is restricted by a number of CPU cores (or half-cores) that can be devoted to the hash function, and chooses $d$ accordingly (double the number of cores).\n  \\item Length of password/message, salt/nonce, and tag (except for some low, insecure values for salt and tag lengths).\n\\end{itemi",
                    "rendered": {
                      "text": "on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is restricted by a number of CPU cores (or half-cores) that can be devoted to the hash function, and chooses $d$ accordingly (double the number of cores).\n  \\item Length of password/message, salt/nonce, and tag (except for some low, insecure values for salt and tag lengths).\n\\end{itemi",
                      "markdown": "`on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is restricted by a number of CPU cores (or half-cores) that can be devoted to the hash function, and chooses $d$ accordingly (double the number of cores).\n  \\item Length of password/message, salt/nonce, and tag (except for some low, insecure values for salt and tag lengths).\n\\end{itemi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 739,
                  "startColumn": 160,
                  "endLine": 739,
                  "endColumn": 166,
                  "snippet": {
                    "text": "depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time depends linearly on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is restricted by a number of CPU cores (or half-cores) that can",
                    "rendered": {
                      "text": "depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time depends linearly on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is restricted by a number of CPU cores (or half-cores) that can",
                      "markdown": "`depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time depends linearly on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is restricted by a number of CPU cores (or half-cores) that can`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 739,
                  "startColumn": 102,
                  "endLine": 739,
                  "endColumn": 110,
                  "snippet": {
                    "text": "$M$ of memory filled by algorithm. This value, evidently, depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time depends linearly on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is rest",
                    "rendered": {
                      "text": "$M$ of memory filled by algorithm. This value, evidently, depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time depends linearly on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is rest",
                      "markdown": "`$M$ of memory filled by algorithm. This value, evidently, depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time depends linearly on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\textsf{Argon2}. We expect that the user is rest`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 739,
                  "startColumn": 58,
                  "endLine": 739,
                  "endColumn": 64,
                  "snippet": {
                    "text": "ontrol over:\n\\begin{itemize}\n  \\item Amount $M$ of memory filled by algorithm. This value, evidently, depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time depends linearly on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\t",
                    "rendered": {
                      "text": "ontrol over:\n\\begin{itemize}\n  \\item Amount $M$ of memory filled by algorithm. This value, evidently, depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time depends linearly on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\t",
                      "markdown": "`ontrol over:\n\\begin{itemize}\n  \\item Amount $M$ of memory filled by algorithm. This value, evidently, depends on the application and the environment. There is no \"insecure\" value for this parameter, though clearly the more memory the better.\n  \\item Number $T$ of passes over the memory. The running  time depends linearly on this parameter. We expect that the user chooses this number according to the time constraints on the application. Again, there is no \"insecure value\" for $T$.\n  \\item Degree $d$ of parallelism. This number determines the number of threads used by an optimized implementation of \\t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 728,
                  "startColumn": 285,
                  "endLine": 728,
                  "endColumn": 291,
                  "snippet": {
                    "text": "ound function \nwith its modification BlaMka~\\cite{cryptoeprint:2015:136}, where the modular additions in $G$ are combined with 32-bit multiplications. Our motivation was to increase the circuit depth (and thus the running time) of a potential ASIC implementation while having roughly the same running time on CPU thanks to parallelism and pipelining. Extra multiplications in the scheme serve well, as the best addition-based circuits for multiplication have latency about 4-5 times the addition latency for 32-bit multiplication (or roughly $\\log_n$ for $n$-bit multiplication).\n\nAs a result, any output 6",
                    "rendered": {
                      "text": "ound function \nwith its modification BlaMka~\\cite{cryptoeprint:2015:136}, where the modular additions in $G$ are combined with 32-bit multiplications. Our motivation was to increase the circuit depth (and thus the running time) of a potential ASIC implementation while having roughly the same running time on CPU thanks to parallelism and pipelining. Extra multiplications in the scheme serve well, as the best addition-based circuits for multiplication have latency about 4-5 times the addition latency for 32-bit multiplication (or roughly $\\log_n$ for $n$-bit multiplication).\n\nAs a result, any output 6",
                      "markdown": "`ound function \nwith its modification BlaMka~\\cite{cryptoeprint:2015:136}, where the modular additions in $G$ are combined with 32-bit multiplications. Our motivation was to increase the circuit depth (and thus the running time) of a potential ASIC implementation while having roughly the same running time on CPU thanks to parallelism and pipelining. Extra multiplications in the scheme serve well, as the best addition-based circuits for multiplication have latency about 4-5 times the addition latency for 32-bit multiplication (or roughly $\\log_n$ for $n$-bit multiplication).\n\nAs a result, any output 6`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 724,
                  "startColumn": 60,
                  "endLine": 724,
                  "endColumn": 65,
                  "snippet": {
                    "text": "ertain branch number. However, even if we operate on 16-byte registers, a 1024-byte block would consist of 64 elements. A $64\\times 64$-matrix would require 32 XORs per register to implement, which gives a penalty about 2 cycles per byte.\n\nInstead, we propose to build the compression function on the top of a transformation $P$ that already mixes several registers. We apply $P$ in parallel (having a P-box), then shuffle the output registers and apply it again. If $P$ handles $p$ registers, then the compression function may transform a block of $p^2$ registers with 2 rounds of P-boxes. We do not have",
                    "rendered": {
                      "text": "ertain branch number. However, even if we operate on 16-byte registers, a 1024-byte block would consist of 64 elements. A $64\\times 64$-matrix would require 32 XORs per register to implement, which gives a penalty about 2 cycles per byte.\n\nInstead, we propose to build the compression function on the top of a transformation $P$ that already mixes several registers. We apply $P$ in parallel (having a P-box), then shuffle the output registers and apply it again. If $P$ handles $p$ registers, then the compression function may transform a block of $p^2$ registers with 2 rounds of P-boxes. We do not have",
                      "markdown": "`ertain branch number. However, even if we operate on 16-byte registers, a 1024-byte block would consist of 64 elements. A $64\\times 64$-matrix would require 32 XORs per register to implement, which gives a penalty about 2 cycles per byte.\n\nInstead, we propose to build the compression function on the top of a transformation $P$ that already mixes several registers. We apply $P$ in parallel (having a P-box), then shuffle the output registers and apply it again. If $P$ handles $p$ registers, then the compression function may transform a block of $p^2$ registers with 2 rounds of P-boxes. We do not have`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 684,
                  "startColumn": 101,
                  "endLine": 684,
                  "endColumn": 107,
                  "snippet": {
                    "text": "  \\item The last blocks produced in each slice of the last column are XORed.\n\\end{itemize}\nThis idea is easily implemented in software with $p$ threads and $l$ joining points. It is easy to see that the adversary can use less memory when computing the last column, for instance\nby computing the slices sequentially and storing only the slice which is currently computed. Then his time is multiplied by $(1+\\frac{p-1}{l})$, whereas the memory use is multiplied\nby $(1-\\frac{p-1}{pl})$, so the time-area product is modified as\n$$\nAT_{new} = AT \\left(1-\\frac{p-1}{pl}\\right)\\left(1+\\frac{p-1}{l}\\right).\n",
                    "rendered": {
                      "text": "  \\item The last blocks produced in each slice of the last column are XORed.\n\\end{itemize}\nThis idea is easily implemented in software with $p$ threads and $l$ joining points. It is easy to see that the adversary can use less memory when computing the last column, for instance\nby computing the slices sequentially and storing only the slice which is currently computed. Then his time is multiplied by $(1+\\frac{p-1}{l})$, whereas the memory use is multiplied\nby $(1-\\frac{p-1}{pl})$, so the time-area product is modified as\n$$\nAT_{new} = AT \\left(1-\\frac{p-1}{pl}\\right)\\left(1+\\frac{p-1}{l}\\right).\n",
                      "markdown": "`  \\item The last blocks produced in each slice of the last column are XORed.\n\\end{itemize}\nThis idea is easily implemented in software with $p$ threads and $l$ joining points. It is easy to see that the adversary can use less memory when computing the last column, for instance\nby computing the slices sequentially and storing only the slice which is currently computed. Then his time is multiplied by $(1+\\frac{p-1}{l})$, whereas the memory use is multiplied\nby $(1-\\frac{p-1}{pl})$, so the time-area product is modified as\n$$\nAT_{new} = AT \\left(1-\\frac{p-1}{pl}\\right)\\left(1+\\frac{p-1}{l}\\right).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 589,
                  "startColumn": 159,
                  "endLine": 589,
                  "endColumn": 165,
                  "snippet": {
                    "text": " also attempted to make the reference block distribution close to uniform, so that each memory block is referenced similar number of times.\n\nFor each $1\\leq \\gamma\\leq 5$ with step $0.1$ we applied the ranking method with sliding window and selected the best available tradeoffs. We obtained a set of time penalties $\\{D_{\\gamma}(\\alpha)\\}$ and computational penalties $\\{C_{\\gamma}(\\alpha)\\}$ for $0.01<\\alpha<1$. We also calculated the reference block distribution for all possible $\\gamma$. We considered two possible metrics:\n\\begin{enumerate}\n\\item Minimum time-area product $$AT_{\\gamma} = \\min_{\\alp",
                    "rendered": {
                      "text": " also attempted to make the reference block distribution close to uniform, so that each memory block is referenced similar number of times.\n\nFor each $1\\leq \\gamma\\leq 5$ with step $0.1$ we applied the ranking method with sliding window and selected the best available tradeoffs. We obtained a set of time penalties $\\{D_{\\gamma}(\\alpha)\\}$ and computational penalties $\\{C_{\\gamma}(\\alpha)\\}$ for $0.01<\\alpha<1$. We also calculated the reference block distribution for all possible $\\gamma$. We considered two possible metrics:\n\\begin{enumerate}\n\\item Minimum time-area product $$AT_{\\gamma} = \\min_{\\alp",
                      "markdown": "` also attempted to make the reference block distribution close to uniform, so that each memory block is referenced similar number of times.\n\nFor each $1\\leq \\gamma\\leq 5$ with step $0.1$ we applied the ranking method with sliding window and selected the best available tradeoffs. We obtained a set of time penalties $\\{D_{\\gamma}(\\alpha)\\}$ and computational penalties $\\{C_{\\gamma}(\\alpha)\\}$ for $0.01<\\alpha<1$. We also calculated the reference block distribution for all possible $\\gamma$. We considered two possible metrics:\n\\begin{enumerate}\n\\item Minimum time-area product $$AT_{\\gamma} = \\min_{\\alp`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 527,
                  "startColumn": 87,
                  "endLine": 527,
                  "endColumn": 93,
                  "snippet": {
                    "text": "egin{itemize}\n        \\item Compute the reference blocks of the segment blocks in parallel.\n        \\item Compute the segment blocks consecutively, store blocks that needs storing.\n    \\end{itemize}\n\\end{itemize}\nUsing $O(T^{1/2})$ cores, the segment computation takes time $O(T^{3/4})$ and the total time is $O(T)$. The cores are used only for $O(T^{1/2})$ time, so it is possible to amortize costs  computing $O(T^{1/4})$ instances using these cores in the round-robin fashion. The memory complexity of each step is about to $T\\log T$.\n\nA  precise formula for the time-area complexity using this tradeoff",
                    "rendered": {
                      "text": "egin{itemize}\n        \\item Compute the reference blocks of the segment blocks in parallel.\n        \\item Compute the segment blocks consecutively, store blocks that needs storing.\n    \\end{itemize}\n\\end{itemize}\nUsing $O(T^{1/2})$ cores, the segment computation takes time $O(T^{3/4})$ and the total time is $O(T)$. The cores are used only for $O(T^{1/2})$ time, so it is possible to amortize costs  computing $O(T^{1/4})$ instances using these cores in the round-robin fashion. The memory complexity of each step is about to $T\\log T$.\n\nA  precise formula for the time-area complexity using this tradeoff",
                      "markdown": "`egin{itemize}\n        \\item Compute the reference blocks of the segment blocks in parallel.\n        \\item Compute the segment blocks consecutively, store blocks that needs storing.\n    \\end{itemize}\n\\end{itemize}\nUsing $O(T^{1/2})$ cores, the segment computation takes time $O(T^{3/4})$ and the total time is $O(T)$. The cores are used only for $O(T^{1/2})$ time, so it is possible to amortize costs  computing $O(T^{1/4})$ instances using these cores in the round-robin fashion. The memory complexity of each step is about to $T\\log T$.\n\nA  precise formula for the time-area complexity using this tradeoff`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 527,
                  "startColumn": 55,
                  "endLine": 527,
                  "endColumn": 61,
                  "snippet": {
                    "text": "ment of length $T^{3/4}$:\n    \\begin{itemize}\n        \\item Compute the reference blocks of the segment blocks in parallel.\n        \\item Compute the segment blocks consecutively, store blocks that needs storing.\n    \\end{itemize}\n\\end{itemize}\nUsing $O(T^{1/2})$ cores, the segment computation takes time $O(T^{3/4})$ and the total time is $O(T)$. The cores are used only for $O(T^{1/2})$ time, so it is possible to amortize costs  computing $O(T^{1/4})$ instances using these cores in the round-robin fashion. The memory complexity of each step is about to $T\\log T$.\n\nA  precise formula for the time-are",
                    "rendered": {
                      "text": "ment of length $T^{3/4}$:\n    \\begin{itemize}\n        \\item Compute the reference blocks of the segment blocks in parallel.\n        \\item Compute the segment blocks consecutively, store blocks that needs storing.\n    \\end{itemize}\n\\end{itemize}\nUsing $O(T^{1/2})$ cores, the segment computation takes time $O(T^{3/4})$ and the total time is $O(T)$. The cores are used only for $O(T^{1/2})$ time, so it is possible to amortize costs  computing $O(T^{1/4})$ instances using these cores in the round-robin fashion. The memory complexity of each step is about to $T\\log T$.\n\nA  precise formula for the time-are",
                      "markdown": "`ment of length $T^{3/4}$:\n    \\begin{itemize}\n        \\item Compute the reference blocks of the segment blocks in parallel.\n        \\item Compute the segment blocks consecutively, store blocks that needs storing.\n    \\end{itemize}\n\\end{itemize}\nUsing $O(T^{1/2})$ cores, the segment computation takes time $O(T^{3/4})$ and the total time is $O(T)$. The cores are used only for $O(T^{1/2})$ time, so it is possible to amortize costs  computing $O(T^{1/4})$ instances using these cores in the round-robin fashion. The memory complexity of each step is about to $T\\log T$.\n\nA  precise formula for the time-are`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 175,
                  "endLine": 510,
                  "endColumn": 181,
                  "snippet": {
                    "text": " It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n\\textsf{Argon2i} is more vulnerable to tradeoff attacks due to its data-independent addressing scheme. We applied the ranking algorithm to 3-pass \\textsf{Argon2i} to calculate time and computational penalties. We found out  that the memory reduction by the factor of 3 already gives the computational penalty of around $2^{14}$.  The $2^{14}$ Blake2b cores would take more area than 1 GB of RAM (Section~\\ref{sec:costs}), thus prohibiting the adversary to further reduce the time-a",
                    "rendered": {
                      "text": " It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n\\textsf{Argon2i} is more vulnerable to tradeoff attacks due to its data-independent addressing scheme. We applied the ranking algorithm to 3-pass \\textsf{Argon2i} to calculate time and computational penalties. We found out  that the memory reduction by the factor of 3 already gives the computational penalty of around $2^{14}$.  The $2^{14}$ Blake2b cores would take more area than 1 GB of RAM (Section~\\ref{sec:costs}), thus prohibiting the adversary to further reduce the time-a",
                      "markdown": "` It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n\\textsf{Argon2i} is more vulnerable to tradeoff attacks due to its data-independent addressing scheme. We applied the ranking algorithm to 3-pass \\textsf{Argon2i} to calculate time and computational penalties. We found out  that the memory reduction by the factor of 3 already gives the computational penalty of around $2^{14}$.  The $2^{14}$ Blake2b cores would take more area than 1 GB of RAM (Section~\\ref{sec:costs}), thus prohibiting the adversary to further reduce the time-a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 505,
                  "endLine": 506,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\n\\subsection{Security of Argon2 to ranking tradeoff attacks}\n\nTime and computational penalties for 1-pass \\textsf{Argon2d} are given in Table~\\ref{tab:generic3}. It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n",
                    "rendered": {
                      "text": "\n\n\\subsection{Security of Argon2 to ranking tradeoff attacks}\n\nTime and computational penalties for 1-pass \\textsf{Argon2d} are given in Table~\\ref{tab:generic3}. It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n",
                      "markdown": "`\n\n\\subsection{Security of Argon2 to ranking tradeoff attacks}\n\nTime and computational penalties for 1-pass \\textsf{Argon2d} are given in Table~\\ref{tab:generic3}. It suggests that the adversary can reduce memory by the factor of 3 at most\nwhile keeping the time-area product the same.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 81,
                  "endLine": 469,
                  "endColumn": 87,
                  "snippet": {
                    "text": "  Let $\\Pi$ be \\textsf{Argon2d} or \\textsf{Argon2i} with $d$ lanes, $s$ slices, and $t$ passes over memory. Assume that\n   \\begin{itemize}\n     \\item $P(Z)\\oplus Z$ is collision-resistant, i.e. it is hard to find $a,b$ such that $P(a)\\oplus a = P(b)\\oplus b$.\n     \\item $P(Z)\\oplus Z$ is 4-generalized-birthday-resistant, i.e. it is hard to find distinct $a,b,c,d$ such that $P(a)\\oplus P(b)\\oplus P(c)\\oplus P(d) = a\\oplus b\\oplus c \\oplus d$.\n   \\end{itemize}Then all the blocks $B[i]$ generated in those $t$ passes are different.\n\\end{theorem}\n\\begin{proof}\n",
                    "rendered": {
                      "text": "  Let $\\Pi$ be \\textsf{Argon2d} or \\textsf{Argon2i} with $d$ lanes, $s$ slices, and $t$ passes over memory. Assume that\n   \\begin{itemize}\n     \\item $P(Z)\\oplus Z$ is collision-resistant, i.e. it is hard to find $a,b$ such that $P(a)\\oplus a = P(b)\\oplus b$.\n     \\item $P(Z)\\oplus Z$ is 4-generalized-birthday-resistant, i.e. it is hard to find distinct $a,b,c,d$ such that $P(a)\\oplus P(b)\\oplus P(c)\\oplus P(d) = a\\oplus b\\oplus c \\oplus d$.\n   \\end{itemize}Then all the blocks $B[i]$ generated in those $t$ passes are different.\n\\end{theorem}\n\\begin{proof}\n",
                      "markdown": "`  Let $\\Pi$ be \\textsf{Argon2d} or \\textsf{Argon2i} with $d$ lanes, $s$ slices, and $t$ passes over memory. Assume that\n   \\begin{itemize}\n     \\item $P(Z)\\oplus Z$ is collision-resistant, i.e. it is hard to find $a,b$ such that $P(a)\\oplus a = P(b)\\oplus b$.\n     \\item $P(Z)\\oplus Z$ is 4-generalized-birthday-resistant, i.e. it is hard to find distinct $a,b,c,d$ such that $P(a)\\oplus P(b)\\oplus P(c)\\oplus P(d) = a\\oplus b\\oplus c \\oplus d$.\n   \\end{itemize}Then all the blocks $B[i]$ generated in those $t$ passes are different.\n\\end{theorem}\n\\begin{proof}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 68,
                  "endLine": 468,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\\begin{theorem}\n  Let $\\Pi$ be \\textsf{Argon2d} or \\textsf{Argon2i} with $d$ lanes, $s$ slices, and $t$ passes over memory. Assume that\n   \\begin{itemize}\n     \\item $P(Z)\\oplus Z$ is collision-resistant, i.e. it is hard to find $a,b$ such that $P(a)\\oplus a = P(b)\\oplus b$.\n     \\item $P(Z)\\oplus Z$ is 4-generalized-birthday-resistant, i.e. it is hard to find distinct $a,b,c,d$ such that $P(a)\\oplus P(b)\\oplus P(c)\\oplus P(d) = a\\oplus b\\oplus c \\oplus d$.\n   \\end{itemize}Then all the blocks $B[i]$ generated in those $t$ passes are different.\n\\end{theorem}\n",
                    "rendered": {
                      "text": "\\begin{theorem}\n  Let $\\Pi$ be \\textsf{Argon2d} or \\textsf{Argon2i} with $d$ lanes, $s$ slices, and $t$ passes over memory. Assume that\n   \\begin{itemize}\n     \\item $P(Z)\\oplus Z$ is collision-resistant, i.e. it is hard to find $a,b$ such that $P(a)\\oplus a = P(b)\\oplus b$.\n     \\item $P(Z)\\oplus Z$ is 4-generalized-birthday-resistant, i.e. it is hard to find distinct $a,b,c,d$ such that $P(a)\\oplus P(b)\\oplus P(c)\\oplus P(d) = a\\oplus b\\oplus c \\oplus d$.\n   \\end{itemize}Then all the blocks $B[i]$ generated in those $t$ passes are different.\n\\end{theorem}\n",
                      "markdown": "`\\begin{theorem}\n  Let $\\Pi$ be \\textsf{Argon2d} or \\textsf{Argon2i} with $d$ lanes, $s$ slices, and $t$ passes over memory. Assume that\n   \\begin{itemize}\n     \\item $P(Z)\\oplus Z$ is collision-resistant, i.e. it is hard to find $a,b$ such that $P(a)\\oplus a = P(b)\\oplus b$.\n     \\item $P(Z)\\oplus Z$ is 4-generalized-birthday-resistant, i.e. it is hard to find distinct $a,b,c,d$ such that $P(a)\\oplus P(b)\\oplus P(c)\\oplus P(d) = a\\oplus b\\oplus c \\oplus d$.\n   \\end{itemize}Then all the blocks $B[i]$ generated in those $t$ passes are different.\n\\end{theorem}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 371,
                  "endLine": 439,
                  "snippet": {
                    "text": "ith the function $G$ instead of $F$. $Z_1$ is then a tree function of depth $D+1$, $Z_2$ of depth $D+2$, etc. In total, the recomputation takes $(D+s)L_G$ time, where $s$ is the number of subblocks and $L_G$ is the latency of $G$. This should be compared to the full-space implementation, which takes time\n$sL_G$. Therefore, if the memory is reduced by the factor $q$, then the time-area product is changed as\n$$\nAT_{new} = \\frac{D(q)+s}{sq}AT.\n$$\nTherefore, if\n\\begin{equation}\\label{att:iter}\nD(q) \\leq s(q-1),\n\\end{equation}\nthe adversary wins.\n\nOne may think of using the $Z_{m-1}[l-1]$ as input to com",
                    "rendered": {
                      "text": "ith the function $G$ instead of $F$. $Z_1$ is then a tree function of depth $D+1$, $Z_2$ of depth $D+2$, etc. In total, the recomputation takes $(D+s)L_G$ time, where $s$ is the number of subblocks and $L_G$ is the latency of $G$. This should be compared to the full-space implementation, which takes time\n$sL_G$. Therefore, if the memory is reduced by the factor $q$, then the time-area product is changed as\n$$\nAT_{new} = \\frac{D(q)+s}{sq}AT.\n$$\nTherefore, if\n\\begin{equation}\\label{att:iter}\nD(q) \\leq s(q-1),\n\\end{equation}\nthe adversary wins.\n\nOne may think of using the $Z_{m-1}[l-1]$ as input to com",
                      "markdown": "`ith the function $G$ instead of $F$. $Z_1$ is then a tree function of depth $D+1$, $Z_2$ of depth $D+2$, etc. In total, the recomputation takes $(D+s)L_G$ time, where $s$ is the number of subblocks and $L_G$ is the latency of $G$. This should be compared to the full-space implementation, which takes time\n$sL_G$. Therefore, if the memory is reduced by the factor $q$, then the time-area product is changed as\n$$\nAT_{new} = \\frac{D(q)+s}{sq}AT.\n$$\nTherefore, if\n\\begin{equation}\\label{att:iter}\nD(q) \\leq s(q-1),\n\\end{equation}\nthe adversary wins.\n\nOne may think of using the $Z_{m-1}[l-1]$ as input to com`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 416,
                  "endLine": 392,
                  "endColumn": 422,
                  "snippet": {
                    "text": "rgon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We formalize this issue as follows. Let us denote by $\\phi^r(i)$ the reference block index for block $B^r[i]$. \n\\begin{itemize}\n    \\item For $t$-pass Argon2i the block $B^r[i], r<t$ is not used between step\n    $l_i^r = \\max",
                    "rendered": {
                      "text": "rgon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We formalize this issue as follows. Let us denote by $\\phi^r(i)$ the reference block index for block $B^r[i]$. \n\\begin{itemize}\n    \\item For $t$-pass Argon2i the block $B^r[i], r<t$ is not used between step\n    $l_i^r = \\max",
                      "markdown": "`rgon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We formalize this issue as follows. Let us denote by $\\phi^r(i)$ the reference block index for block $B^r[i]$. \n\\begin{itemize}\n    \\item For $t$-pass Argon2i the block $B^r[i], r<t$ is not used between step\n    $l_i^r = \\max`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 320,
                  "endLine": 392,
                  "endColumn": 326,
                  "snippet": {
                    "text": "{Corrigan-GibbsB16}, it is possible to optimize the memory use in the earlier version 1.2.1 of Argon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We formalize this issue as follows. Let us denote by $\\phi^r(i)$ the reference block index for block $B^r[i]$. \n\\begin{itemize}\n ",
                    "rendered": {
                      "text": "{Corrigan-GibbsB16}, it is possible to optimize the memory use in the earlier version 1.2.1 of Argon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We formalize this issue as follows. Let us denote by $\\phi^r(i)$ the reference block index for block $B^r[i]$. \n\\begin{itemize}\n ",
                      "markdown": "`{Corrigan-GibbsB16}, it is possible to optimize the memory use in the earlier version 1.2.1 of Argon2, concretely for Argon2i. The memory blocks produced in the version 1.2.1  at second and later passes replaced, not overwrote the blocks at earlier passes. Therefore, for each block $B[i]$ there is a time gap (let us call it a \\emph{no-use gap}) between the moment the block is used for the last time (as a reference or as a fresh new block) and the moment it is overwritten. We formalize this issue as follows. Let us denote by $\\phi^r(i)$ the reference block index for block $B^r[i]$. \n\\begin{itemize}\n `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 166,
                  "endLine": 343,
                  "endColumn": 172,
                  "snippet": {
                    "text": "a product if the memory is reduced by the factor of 4 or more. Much higher penalties apply if more passes over the memory are made. \n\n\\textbf{Scalability}.  \\textsf{Argon2} is scalable both in time and memory dimensions.  Both parameters can be changed independently provided that a certain amount of time is always needed to fill the memory. \n\n\\textbf{Parallelism}. \\textsf{Argon2}  may use up to $2^{24}$ threads in parallel,  although in our experiments 8 threads already exhaust the available bandwidth and computing power of the machine.\n\n\\textbf{GPU/FPGA/ASIC-unfriendly}. \\textsf{Argon2} is heavily ",
                    "rendered": {
                      "text": "a product if the memory is reduced by the factor of 4 or more. Much higher penalties apply if more passes over the memory are made. \n\n\\textbf{Scalability}.  \\textsf{Argon2} is scalable both in time and memory dimensions.  Both parameters can be changed independently provided that a certain amount of time is always needed to fill the memory. \n\n\\textbf{Parallelism}. \\textsf{Argon2}  may use up to $2^{24}$ threads in parallel,  although in our experiments 8 threads already exhaust the available bandwidth and computing power of the machine.\n\n\\textbf{GPU/FPGA/ASIC-unfriendly}. \\textsf{Argon2} is heavily ",
                      "markdown": "`a product if the memory is reduced by the factor of 4 or more. Much higher penalties apply if more passes over the memory are made. \n\n\\textbf{Scalability}.  \\textsf{Argon2} is scalable both in time and memory dimensions.  Both parameters can be changed independently provided that a certain amount of time is always needed to fill the memory. \n\n\\textbf{Parallelism}. \\textsf{Argon2}  may use up to $2^{24}$ threads in parallel,  although in our experiments 8 threads already exhaust the available bandwidth and computing power of the machine.\n\n\\textbf{GPU/FPGA/ASIC-unfriendly}. \\textsf{Argon2} is heavily `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 58,
                  "endLine": 343,
                  "endColumn": 64,
                  "snippet": {
                    "text": "ry (1 for \\textsf{Argon2d}, 3 for \\textsf{Argon2i}, an ASIC-equipped adversary can not decrease the time-area product if the memory is reduced by the factor of 4 or more. Much higher penalties apply if more passes over the memory are made. \n\n\\textbf{Scalability}.  \\textsf{Argon2} is scalable both in time and memory dimensions.  Both parameters can be changed independently provided that a certain amount of time is always needed to fill the memory. \n\n\\textbf{Parallelism}. \\textsf{Argon2}  may use up to $2^{24}$ threads in parallel,  although in our experiments 8 threads already exhaust the available b",
                    "rendered": {
                      "text": "ry (1 for \\textsf{Argon2d}, 3 for \\textsf{Argon2i}, an ASIC-equipped adversary can not decrease the time-area product if the memory is reduced by the factor of 4 or more. Much higher penalties apply if more passes over the memory are made. \n\n\\textbf{Scalability}.  \\textsf{Argon2} is scalable both in time and memory dimensions.  Both parameters can be changed independently provided that a certain amount of time is always needed to fill the memory. \n\n\\textbf{Parallelism}. \\textsf{Argon2}  may use up to $2^{24}$ threads in parallel,  although in our experiments 8 threads already exhaust the available b",
                      "markdown": "`ry (1 for \\textsf{Argon2d}, 3 for \\textsf{Argon2i}, an ASIC-equipped adversary can not decrease the time-area product if the memory is reduced by the factor of 4 or more. Much higher penalties apply if more passes over the memory are made. \n\n\\textbf{Scalability}.  \\textsf{Argon2} is scalable both in time and memory dimensions.  Both parameters can be changed independently provided that a certain amount of time is always needed to fill the memory. \n\n\\textbf{Parallelism}. \\textsf{Argon2}  may use up to $2^{24}$ threads in parallel,  although in our experiments 8 threads already exhaust the available b`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 58,
                  "endLine": 176,
                  "endColumn": 64,
                  "snippet": {
                    "text": "may be any integer number of bytes from 4 to $2^{32}-1$.\n  \\item Memory size $m$ can be any integer number of kilobytes from $8p$ to $2^{32}-1$. The actual number of blocks is $m'$, which is $m$ rounded down to the nearest multiple of $4p$. \n  \\item Number of iterations $t$ (used to tune the running time independently of the memory size) can be any integer number from 1 to $2^{32}-1$;\n  \\item Version number $v$ is one byte $0x13$;\n  \\item Secret value $K$ (serves as key if necessary, but we do not assume any key use by default) may have any length from $0$ to $2^{32}-1$ bytes.\n  \\item Associated dat",
                    "rendered": {
                      "text": "may be any integer number of bytes from 4 to $2^{32}-1$.\n  \\item Memory size $m$ can be any integer number of kilobytes from $8p$ to $2^{32}-1$. The actual number of blocks is $m'$, which is $m$ rounded down to the nearest multiple of $4p$. \n  \\item Number of iterations $t$ (used to tune the running time independently of the memory size) can be any integer number from 1 to $2^{32}-1$;\n  \\item Version number $v$ is one byte $0x13$;\n  \\item Secret value $K$ (serves as key if necessary, but we do not assume any key use by default) may have any length from $0$ to $2^{32}-1$ bytes.\n  \\item Associated dat",
                      "markdown": "`may be any integer number of bytes from 4 to $2^{32}-1$.\n  \\item Memory size $m$ can be any integer number of kilobytes from $8p$ to $2^{32}-1$. The actual number of blocks is $m'$, which is $m$ rounded down to the nearest multiple of $4p$. \n  \\item Number of iterations $t$ (used to tune the running time independently of the memory size) can be any integer number from 1 to $2^{32}-1$;\n  \\item Version number $v$ is one byte $0x13$;\n  \\item Secret value $K$ (serves as key if necessary, but we do not assume any key use by default) may have any length from $0$ to $2^{32}-1$ bytes.\n  \\item Associated dat`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 97,
                  "endLine": 149,
                  "endColumn": 103,
                  "snippet": {
                    "text": "\n\n The maximum bandwidth $Bw_{max}$ is a hypothetical upper bound on the memory bandwidth on the adversary's architecture. Suppose that for each call to $G$ an adversary has to load\n  $R(\\alpha)$ blocks from the memory on average. Therefore,  the adversary can keep the execution time the same as long as\n $$\n R(\\alpha) Bw \\leq Bw_{max},\n $$\n",
                    "rendered": {
                      "text": "\n\n The maximum bandwidth $Bw_{max}$ is a hypothetical upper bound on the memory bandwidth on the adversary's architecture. Suppose that for each call to $G$ an adversary has to load\n  $R(\\alpha)$ blocks from the memory on average. Therefore,  the adversary can keep the execution time the same as long as\n $$\n R(\\alpha) Bw \\leq Bw_{max},\n $$\n",
                      "markdown": "`\n\n The maximum bandwidth $Bw_{max}$ is a hypothetical upper bound on the memory bandwidth on the adversary's architecture. Suppose that for each call to $G$ an adversary has to load\n  $R(\\alpha)$ blocks from the memory on average. Therefore,  the adversary can keep the execution time the same as long as\n $$\n R(\\alpha) Bw \\leq Bw_{max},\n $$\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 367,
                  "endLine": 141,
                  "endColumn": 373,
                  "snippet": {
                    "text": "  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n",
                    "rendered": {
                      "text": "  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n",
                      "markdown": "`  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 240,
                  "endLine": 141,
                  "endColumn": 246,
                  "snippet": {
                    "text": "  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n",
                    "rendered": {
                      "text": "  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n",
                      "markdown": "`  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{\\alpha + C(\\alpha)\\beta}.\n  $$\n  \\item Dependent on the password (\\emph{data-dependent}), in our case: $\\phi(j) = g(B[j-1])$. This choice prevents the adversary from prefetching and precomputing missing data. The adversary figures out what he has to recompute only at the time the element is needed. If an element is recomputed as a tree of $F$ calls of average depth $D$, then the total processing time is multiplied by $D$. The   gain in the time-area product is\n  $$\n  \\mathcal{E}(\\alpha) = \\frac{1}{(\\alpha + C(\\alpha)\\beta)D(\\alpha)}.\n  $$\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 56,
                  "endLine": 114,
                  "endColumn": 62,
                  "snippet": {
                    "text": "ement the $C(\\alpha)$ penalty may occupy significant area.\n\\item If the tradeoff requires significant communication between the computing cores, the memory bandwidth limits may impose additional restrictions on the running time.\n\\end{itemize}\n\nIn the following text, we will not attempt to  estimate  time and area with large precision. However, an interested reader may use the following implementations as reference:\n \\begin{itemize}\n   \\item The 50-nm DRAM implementation~\\cite{giridhar2013dram} takes 550 mm${}^2$ per GByte;\n   \\item The Blake2b implementation in the 65-nm process should take about 0.",
                    "rendered": {
                      "text": "ement the $C(\\alpha)$ penalty may occupy significant area.\n\\item If the tradeoff requires significant communication between the computing cores, the memory bandwidth limits may impose additional restrictions on the running time.\n\\end{itemize}\n\nIn the following text, we will not attempt to  estimate  time and area with large precision. However, an interested reader may use the following implementations as reference:\n \\begin{itemize}\n   \\item The 50-nm DRAM implementation~\\cite{giridhar2013dram} takes 550 mm${}^2$ per GByte;\n   \\item The Blake2b implementation in the 65-nm process should take about 0.",
                      "markdown": "`ement the $C(\\alpha)$ penalty may occupy significant area.\n\\item If the tradeoff requires significant communication between the computing cores, the memory bandwidth limits may impose additional restrictions on the running time.\n\\end{itemize}\n\nIn the following text, we will not attempt to  estimate  time and area with large precision. However, an interested reader may use the following implementations as reference:\n \\begin{itemize}\n   \\item The 50-nm DRAM implementation~\\cite{giridhar2013dram} takes 550 mm${}^2$ per GByte;\n   \\item The Blake2b implementation in the 65-nm process should take about 0.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 277,
                  "endLine": 104,
                  "endColumn": 283,
                  "snippet": {
                    "text": "a similar procedure. \n\nSuppose that an ASIC designer that wants to reduce the memory and thus the area wants to compute $\\mathcal{H}$ using $\\alpha M$ memory only for some $\\alpha<1$. Using some tradeoff specific to $\\mathcal{H}$, he has to spend $C(\\alpha)$ times as much computation and his running time increases by at least the factor $D(\\alpha)$. Therefore, the maximum possible gain $\\mathcal{E}$ in the time-area product is \n$$\n\\mathcal{E}_{max}= \\max_{\\alpha}\\frac{1}{\\alpha D(\\alpha)}.\n$$\nThe hash function is called \\emph{memory-hard} if $D(\\alpha) >1/\\alpha$ as $\\alpha\\rightarrow 0$. Clearly, i",
                    "rendered": {
                      "text": "a similar procedure. \n\nSuppose that an ASIC designer that wants to reduce the memory and thus the area wants to compute $\\mathcal{H}$ using $\\alpha M$ memory only for some $\\alpha<1$. Using some tradeoff specific to $\\mathcal{H}$, he has to spend $C(\\alpha)$ times as much computation and his running time increases by at least the factor $D(\\alpha)$. Therefore, the maximum possible gain $\\mathcal{E}$ in the time-area product is \n$$\n\\mathcal{E}_{max}= \\max_{\\alpha}\\frac{1}{\\alpha D(\\alpha)}.\n$$\nThe hash function is called \\emph{memory-hard} if $D(\\alpha) >1/\\alpha$ as $\\alpha\\rightarrow 0$. Clearly, i",
                      "markdown": "`a similar procedure. \n\nSuppose that an ASIC designer that wants to reduce the memory and thus the area wants to compute $\\mathcal{H}$ using $\\alpha M$ memory only for some $\\alpha<1$. Using some tradeoff specific to $\\mathcal{H}$, he has to spend $C(\\alpha)$ times as much computation and his running time increases by at least the factor $D(\\alpha)$. Therefore, the maximum possible gain $\\mathcal{E}$ in the time-area product is \n$$\n\\mathcal{E}_{max}= \\max_{\\alpha}\\frac{1}{\\alpha D(\\alpha)}.\n$$\nThe hash function is called \\emph{memory-hard} if $D(\\alpha) >1/\\alpha$ as $\\alpha\\rightarrow 0$. Clearly, i`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 318,
                  "endLine": 101,
                  "endColumn": 324,
                  "snippet": {
                    "text": " password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by the ASIC memory latency.\nTherefore, we maximize the value $AT$. The other usecases follow a similar procedure. \n\nSuppose that an ASIC designer that wants to reduce the memory and thus the area wants to compute $\\mathcal{H}$ us",
                    "rendered": {
                      "text": " password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by the ASIC memory latency.\nTherefore, we maximize the value $AT$. The other usecases follow a similar procedure. \n\nSuppose that an ASIC designer that wants to reduce the memory and thus the area wants to compute $\\mathcal{H}$ us",
                      "markdown": "` password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by the ASIC memory latency.\nTherefore, we maximize the value $AT$. The other usecases follow a similar procedure. \n\nSuppose that an ASIC designer that wants to reduce the memory and thus the area wants to compute $\\mathcal{H}$ us`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 93,
                  "endLine": 101,
                  "endColumn": 99,
                  "snippet": {
                    "text": "eys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by t",
                    "rendered": {
                      "text": "eys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by t",
                      "markdown": "`eys, and the hashes may leak to the adversaries together with salts:\n$$\n\\begin{aligned}\n\\mathrm{Tag} &\\leftarrow \\mathcal{H}(P,S);\\\\\n\\mathrm{Cracker} &\\leftarrow \\{(\\mathrm{Tag}_i, S_i)\\}.\n\\end{aligned}\n$$\n\nIn the case of the password hashing, we suppose that the defender allocates certain amount of time (e.g., 1 second) per password and a certain number of CPU cores (e.g., 4 cores). Then he hashes the password using the maximum amount $M$ of memory. This memory size translates to certain ASIC area $A$. The running ASIC time $T$ is determined by the length of the longest computational chain and by t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 59,
                  "endLine": 71,
                  "endColumn": 65,
                  "snippet": {
                    "text": " Should the memory addressing (indexing functions) be input-independent or input-dependent, or hybrid? The first type of schemes, where the memory read location are known in advance, is immediately vulnerable to time-space tradeoff attacks,\n since an adversary can precompute the missing block by the time it is needed~\\cite{trade-att}. In turn, the input-dependent schemes are vulnerable to side-channel attacks~\\cite{RistenpartTSS09}, as the timing information allows for much faster password search.\n  \\item Is it better to fill more memory but suffer from time-space tradeoffs, or make more passes over",
                    "rendered": {
                      "text": " Should the memory addressing (indexing functions) be input-independent or input-dependent, or hybrid? The first type of schemes, where the memory read location are known in advance, is immediately vulnerable to time-space tradeoff attacks,\n since an adversary can precompute the missing block by the time it is needed~\\cite{trade-att}. In turn, the input-dependent schemes are vulnerable to side-channel attacks~\\cite{RistenpartTSS09}, as the timing information allows for much faster password search.\n  \\item Is it better to fill more memory but suffer from time-space tradeoffs, or make more passes over",
                      "markdown": "` Should the memory addressing (indexing functions) be input-independent or input-dependent, or hybrid? The first type of schemes, where the memory read location are known in advance, is immediately vulnerable to time-space tradeoff attacks,\n since an adversary can precompute the missing block by the time it is needed~\\cite{trade-att}. In turn, the input-dependent schemes are vulnerable to side-channel attacks~\\cite{RistenpartTSS09}, as the timing information allows for much faster password search.\n  \\item Is it better to fill more memory but suffer from time-space tradeoffs, or make more passes over`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 383,
                  "endLine": 64,
                  "endColumn": 389,
                  "snippet": {
                    "text": "ypt} calls a stack of subprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SMix, which calls ROMix, which calls BlockMix, which calls Salsa20/8 etc.).  It is hard to analyze and, moreover, hard to achieve confidence. Finally, it is not flexible in separating time and memory costs. \nAt the same time, the story of cryptographic competitions~\\cite{robshaw2008new,sha3} has demonstrated that\nthe most secure designs come with simplicity, where every element is well motivated and a cryptanalyst has as few entry points as possible.\n\nThe  Password Hashing Competition",
                    "rendered": {
                      "text": "ypt} calls a stack of subprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SMix, which calls ROMix, which calls BlockMix, which calls Salsa20/8 etc.).  It is hard to analyze and, moreover, hard to achieve confidence. Finally, it is not flexible in separating time and memory costs. \nAt the same time, the story of cryptographic competitions~\\cite{robshaw2008new,sha3} has demonstrated that\nthe most secure designs come with simplicity, where every element is well motivated and a cryptanalyst has as few entry points as possible.\n\nThe  Password Hashing Competition",
                      "markdown": "`ypt} calls a stack of subprocedures, whose design rationale has not been fully motivated (e.g, \\textsf{scrypt} calls SMix, which calls ROMix, which calls BlockMix, which calls Salsa20/8 etc.).  It is hard to analyze and, moreover, hard to achieve confidence. Finally, it is not flexible in separating time and memory costs. \nAt the same time, the story of cryptographic competitions~\\cite{robshaw2008new,sha3} has demonstrated that\nthe most secure designs come with simplicity, where every element is well motivated and a cryptanalyst has as few entry points as possible.\n\nThe  Password Hashing Competition`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/argon2-specs.tex"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 282,
                  "endLine": 61,
                  "endColumn": 288,
                  "snippet": {
                    "text": "ame energy cost.\n\nDesign of a memory-hard function proved to be a tough problem. Since early 80's it has been known that many cryptographic problems that seemingly require large memory actually allow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{s",
                    "rendered": {
                      "text": "ame energy cost.\n\nDesign of a memory-hard function proved to be a tough problem. Since early 80's it has been known that many cryptographic problems that seemingly require large memory actually allow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{s",
                      "markdown": "`ame energy cost.\n\nDesign of a memory-hard function proved to be a tough problem. Since early 80's it has been known that many cryptographic problems that seemingly require large memory actually allow for a time-memory tradeoff~\\cite{hellman1980cryptanalytic}, where the adversary can trade memory for time and do his job on fast hardware with low memory. In application\nto password-hashing schemes, this means that the password crackers can still be implemented on a dedicated hardware even though at some additional cost. \n\nAnother problem with the existing schemes is their complexity. The same \\textsf{s`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/man/argon2.1"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 12,
                  "endLine": 18,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nBy default, this uses Argon2i variant (where memory access is\nindependent of secret data) which is the preferred one for password\nhashing and password-based key derivation.\n\n.SH OPTIONS\n.TP\n",
                    "rendered": {
                      "text": "\nBy default, this uses Argon2i variant (where memory access is\nindependent of secret data) which is the preferred one for password\nhashing and password-based key derivation.\n\n.SH OPTIONS\n.TP\n",
                      "markdown": "`\nBy default, this uses Argon2i variant (where memory access is\nindependent of secret data) which is the preferred one for password\nhashing and password-based key derivation.\n\n.SH OPTIONS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/man/argon2.1"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 59,
                  "endLine": 17,
                  "endColumn": 67,
                  "snippet": {
                    "text": "8 octets in length, and the password is supplied on standard input.\n\nBy default, this uses Argon2i variant (where memory access is\nindependent of secret data) which is the preferred one for password\nhashing and password-based key derivation.\n\n.SH OPTIONS\n",
                    "rendered": {
                      "text": "8 octets in length, and the password is supplied on standard input.\n\nBy default, this uses Argon2i variant (where memory access is\nindependent of secret data) which is the preferred one for password\nhashing and password-based key derivation.\n\n.SH OPTIONS\n",
                      "markdown": "`8 octets in length, and the password is supplied on standard input.\n\nBy default, this uses Argon2i variant (where memory access is\nindependent of secret data) which is the preferred one for password\nhashing and password-based key derivation.\n\n.SH OPTIONS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/man/argon2.1"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 28,
                  "endLine": 14,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Generate Argon2 hashes from the command line.\n\nThe supplied salt (the first argument to the command) must be at least\n8 octets in length, and the password is supplied on standard input.\n\nBy default, this uses Argon2i variant (where memory access is\nindependent of secret data) which is the preferred one for password\n",
                    "rendered": {
                      "text": "Generate Argon2 hashes from the command line.\n\nThe supplied salt (the first argument to the command) must be at least\n8 octets in length, and the password is supplied on standard input.\n\nBy default, this uses Argon2i variant (where memory access is\nindependent of secret data) which is the preferred one for password\n",
                      "markdown": "`Generate Argon2 hashes from the command line.\n\nThe supplied salt (the first argument to the command) must be at least\n8 octets in length, and the password is supplied on standard input.\n\nBy default, this uses Argon2i variant (where memory access is\nindependent of secret data) which is the preferred one for password\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/man/argon2.1"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 19,
                  "endLine": 57,
                  "endColumn": 23,
                  "snippet": {
                    "text": "distribution (but may be used by others).  It is released, like the\nrest of this Argon2 implementation, under a dual license. You may use this work\nunder the terms of a Creative Commons CC0 1.0 License/Waiver or the Apache\nPublic License 2.0, at your option.\n",
                    "rendered": {
                      "text": "distribution (but may be used by others).  It is released, like the\nrest of this Argon2 implementation, under a dual license. You may use this work\nunder the terms of a Creative Commons CC0 1.0 License/Waiver or the Apache\nPublic License 2.0, at your option.\n",
                      "markdown": "`distribution (but may be used by others).  It is released, like the\nrest of this Argon2 implementation, under a dual license. You may use this work\nunder the terms of a Creative Commons CC0 1.0 License/Waiver or the Apache\nPublic License 2.0, at your option.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/man/argon2.1"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 61,
                  "endLine": 13,
                  "endColumn": 65,
                  "snippet": {
                    "text": ".SH DESCRIPTION\nGenerate Argon2 hashes from the command line.\n\nThe supplied salt (the first argument to the command) must be at least\n8 octets in length, and the password is supplied on standard input.\n\nBy default, this uses Argon2i variant (where memory access is\n",
                    "rendered": {
                      "text": ".SH DESCRIPTION\nGenerate Argon2 hashes from the command line.\n\nThe supplied salt (the first argument to the command) must be at least\n8 octets in length, and the password is supplied on standard input.\n\nBy default, this uses Argon2i variant (where memory access is\n",
                      "markdown": "`.SH DESCRIPTION\nGenerate Argon2 hashes from the command line.\n\nThe supplied salt (the first argument to the command) must be at least\n8 octets in length, and the password is supplied on standard input.\n\nBy default, this uses Argon2i variant (where memory access is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 19,
                  "endLine": 165,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        hash2,  /* output array, at least HASHLEN in size */\n        HASHLEN, /* digest length */\n        pwd, /* password array */\n        pwdlen, /* password length */\n        salt,  /* salt array */\n        SALTLEN, /* salt length */\n        NULL, 0, /* optional secret data */\n",
                    "rendered": {
                      "text": "        hash2,  /* output array, at least HASHLEN in size */\n        HASHLEN, /* digest length */\n        pwd, /* password array */\n        pwdlen, /* password length */\n        salt,  /* salt array */\n        SALTLEN, /* salt length */\n        NULL, 0, /* optional secret data */\n",
                      "markdown": "`        hash2,  /* output array, at least HASHLEN in size */\n        HASHLEN, /* digest length */\n        pwd, /* password array */\n        pwdlen, /* password length */\n        salt,  /* salt array */\n        SALTLEN, /* salt length */\n        NULL, 0, /* optional secret data */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 16,
                  "endLine": 164,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    argon2_context context = {\n        hash2,  /* output array, at least HASHLEN in size */\n        HASHLEN, /* digest length */\n        pwd, /* password array */\n        pwdlen, /* password length */\n        salt,  /* salt array */\n        SALTLEN, /* salt length */\n",
                    "rendered": {
                      "text": "    argon2_context context = {\n        hash2,  /* output array, at least HASHLEN in size */\n        HASHLEN, /* digest length */\n        pwd, /* password array */\n        pwdlen, /* password length */\n        salt,  /* salt array */\n        SALTLEN, /* salt length */\n",
                      "markdown": "`    argon2_context context = {\n        hash2,  /* output array, at least HASHLEN in size */\n        HASHLEN, /* digest length */\n        pwd, /* password array */\n        pwdlen, /* password length */\n        salt,  /* salt array */\n        SALTLEN, /* salt length */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 13,
                  "endLine": 140,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n#define HASHLEN 32\n#define SALTLEN 16\n#define PWD \"password\"\n\nint main(void)\n{\n",
                    "rendered": {
                      "text": "\n#define HASHLEN 32\n#define SALTLEN 16\n#define PWD \"password\"\n\nint main(void)\n{\n",
                      "markdown": "`\n#define HASHLEN 32\n#define SALTLEN 16\n#define PWD \"password\"\n\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 22,
                  "endLine": 121,
                  "endColumn": 30,
                  "snippet": {
                    "text": "3. The `flags` parameter, which determines which memory should be securely\n   erased. This is useful if you want to securely delete the `pwd` or `secret`\n   fields right after they are used. To do this set `flags` to either\n   `ARGON2_FLAG_CLEAR_PASSWORD` or `ARGON2_FLAG_CLEAR_SECRET`. To change how\n   internal memory is cleared, change the global flag\n   `FLAG_clear_internal_memory` (defaults to clearing internal memory).\n\n",
                    "rendered": {
                      "text": "3. The `flags` parameter, which determines which memory should be securely\n   erased. This is useful if you want to securely delete the `pwd` or `secret`\n   fields right after they are used. To do this set `flags` to either\n   `ARGON2_FLAG_CLEAR_PASSWORD` or `ARGON2_FLAG_CLEAR_SECRET`. To change how\n   internal memory is cleared, change the global flag\n   `FLAG_clear_internal_memory` (defaults to clearing internal memory).\n\n",
                      "markdown": "`3. The `flags` parameter, which determines which memory should be securely\n   erased. This is useful if you want to securely delete the `pwd` or `secret`\n   fields right after they are used. To do this set `flags` to either\n   `ARGON2_FLAG_CLEAR_PASSWORD` or `ARGON2_FLAG_CLEAR_SECRET`. To change how\n   internal memory is cleared, change the global flag\n   `FLAG_clear_internal_memory` (defaults to clearing internal memory).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 39,
                  "endLine": 115,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   value. Functionally, this behaves almost exactly like the `secret` or `salt`\n   parameters; the `ad` parameter is folding into the value of the hash.\n   However, this parameter is used for different data. The `salt` should be a\n   random string stored alongside your password. The `secret` should be a random\n   key only usable at hashing time. The `ad` is for any other data.\n\n3. The `flags` parameter, which determines which memory should be securely\n",
                    "rendered": {
                      "text": "   value. Functionally, this behaves almost exactly like the `secret` or `salt`\n   parameters; the `ad` parameter is folding into the value of the hash.\n   However, this parameter is used for different data. The `salt` should be a\n   random string stored alongside your password. The `secret` should be a random\n   key only usable at hashing time. The `ad` is for any other data.\n\n3. The `flags` parameter, which determines which memory should be securely\n",
                      "markdown": "`   value. Functionally, this behaves almost exactly like the `secret` or `salt`\n   parameters; the `ad` parameter is folding into the value of the hash.\n   However, this parameter is used for different data. The `salt` should be a\n   random string stored alongside your password. The `secret` should be a random\n   key only usable at hashing time. The `ad` is for any other data.\n\n3. The `flags` parameter, which determines which memory should be securely\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 7,
                  "endLine": 109,
                  "endColumn": 15,
                  "snippet": {
                    "text": "   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n\n2. The `ad` parameter, which is used to fold any additional data into the hash\n   value. Functionally, this behaves almost exactly like the `secret` or `salt`\n",
                    "rendered": {
                      "text": "   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n\n2. The `ad` parameter, which is used to fold any additional data into the hash\n   value. Functionally, this behaves almost exactly like the `secret` or `salt`\n",
                      "markdown": "`   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n\n2. The `ad` parameter, which is used to fold any additional data into the hash\n   value. Functionally, this behaves almost exactly like the `secret` or `salt`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 18,
                  "endLine": 98,
                  "endColumn": 26,
                  "snippet": {
                    "text": "The example program below hashes the string \"password\" with Argon2i\nusing the high-level API and then using the low-level API. While the\nhigh-level API takes the three cost parameters (time, memory, and\nparallelism), the password input buffer, the salt input buffer, and the\noutput buffers, the low-level API takes in these and additional parameters\n, as defined in [`include/argon2.h`](include/argon2.h).\n\n",
                    "rendered": {
                      "text": "The example program below hashes the string \"password\" with Argon2i\nusing the high-level API and then using the low-level API. While the\nhigh-level API takes the three cost parameters (time, memory, and\nparallelism), the password input buffer, the salt input buffer, and the\noutput buffers, the low-level API takes in these and additional parameters\n, as defined in [`include/argon2.h`](include/argon2.h).\n\n",
                      "markdown": "`The example program below hashes the string \"password\" with Argon2i\nusing the high-level API and then using the low-level API. While the\nhigh-level API takes the three cost parameters (time, memory, and\nparallelism), the password input buffer, the salt input buffer, and the\noutput buffers, the low-level API takes in these and additional parameters\n, as defined in [`include/argon2.h`](include/argon2.h).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 45,
                  "endLine": 95,
                  "endColumn": 53,
                  "snippet": {
                    "text": "`libargon2` provides an API to both low-level and high-level functions\nfor using Argon2.\n\nThe example program below hashes the string \"password\" with Argon2i\nusing the high-level API and then using the low-level API. While the\nhigh-level API takes the three cost parameters (time, memory, and\nparallelism), the password input buffer, the salt input buffer, and the\n",
                    "rendered": {
                      "text": "`libargon2` provides an API to both low-level and high-level functions\nfor using Argon2.\n\nThe example program below hashes the string \"password\" with Argon2i\nusing the high-level API and then using the low-level API. While the\nhigh-level API takes the three cost parameters (time, memory, and\nparallelism), the password input buffer, the salt input buffer, and the\n",
                      "markdown": "``libargon2` provides an API to both low-level and high-level functions\nfor using Argon2.\n\nThe example program below hashes the string \"password\" with Argon2i\nusing the high-level API and then using the low-level API. While the\nhigh-level API takes the three cost parameters (time, memory, and\nparallelism), the password input buffer, the salt input buffer, and the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 11,
                  "endLine": 79,
                  "endColumn": 19,
                  "snippet": {
                    "text": "iterations, consuming 64 MiB, using four parallel threads and an output hash\nof 24 bytes\n```\n$ echo -n \"password\" | ./argon2 somesalt -t 2 -m 16 -p 4 -l 24\nType:           Argon2i\nIterations:     2\nMemory:         65536 KiB\n",
                    "rendered": {
                      "text": "iterations, consuming 64 MiB, using four parallel threads and an output hash\nof 24 bytes\n```\n$ echo -n \"password\" | ./argon2 somesalt -t 2 -m 16 -p 4 -l 24\nType:           Argon2i\nIterations:     2\nMemory:         65536 KiB\n",
                      "markdown": "`iterations, consuming 64 MiB, using four parallel threads and an output hash\nof 24 bytes\n```\n$ echo -n \"password\" | ./argon2 somesalt -t 2 -m 16 -p 4 -l 24\nType:           Argon2i\nIterations:     2\nMemory:         65536 KiB\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 22,
                  "endLine": 75,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        -v (10|13)      Argon2 version (defaults to the most recent version, currently 13)\n        -h              Print argon2 usage\n```\nFor example, to hash \"password\" using \"somesalt\" as a salt and doing 2\niterations, consuming 64 MiB, using four parallel threads and an output hash\nof 24 bytes\n```\n",
                    "rendered": {
                      "text": "        -v (10|13)      Argon2 version (defaults to the most recent version, currently 13)\n        -h              Print argon2 usage\n```\nFor example, to hash \"password\" using \"somesalt\" as a salt and doing 2\niterations, consuming 64 MiB, using four parallel threads and an output hash\nof 24 bytes\n```\n",
                      "markdown": "`        -v (10|13)      Argon2 version (defaults to the most recent version, currently 13)\n        -h              Print argon2 usage\n```\nFor example, to hash \"password\" using \"somesalt\" as a salt and doing 2\niterations, consuming 64 MiB, using four parallel threads and an output hash\nof 24 bytes\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 8,
                  "endLine": 60,
                  "endColumn": 16,
                  "snippet": {
                    "text": "`./argon2 -h` as\n```\nUsage:  ./argon2 [-h] salt [-i|-d|-id] [-t iterations] [-m memory] [-p parallelism] [-l hash length] [-e|-r] [-v (10|13)]\n        Password is read from stdin\nParameters:\n        salt            The salt to use, at least 8 characters\n        -i              Use Argon2i (this is the default)\n",
                    "rendered": {
                      "text": "`./argon2 -h` as\n```\nUsage:  ./argon2 [-h] salt [-i|-d|-id] [-t iterations] [-m memory] [-p parallelism] [-l hash length] [-e|-r] [-v (10|13)]\n        Password is read from stdin\nParameters:\n        salt            The salt to use, at least 8 characters\n        -i              Use Argon2i (this is the default)\n",
                      "markdown": "``./argon2 -h` as\n```\nUsage:  ./argon2 [-h] salt [-i|-d|-id] [-t iterations] [-m memory] [-p parallelism] [-l hash length] [-e|-r] [-v (10|13)]\n        Password is read from stdin\nParameters:\n        salt            The salt to use, at least 8 characters\n        -i              Use Argon2i (this is the default)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 12,
                  "endLine": 25,
                  "endColumn": 20,
                  "snippet": {
                    "text": "against GPU cracking attacks and suitable for applications with no threats\nfrom side-channel timing attacks (eg. cryptocurrencies). Argon2i instead\nuses data-independent memory access, which is preferred for password\nhashing and password-based key derivation, but it is slower as it makes\nmore passes over the memory to protect from tradeoff attacks. Argon2id is a\nhybrid of Argon2i and Argon2d, using a combination of data-depending and\ndata-independent memory accesses, which gives some of Argon2i's resistance to\n",
                    "rendered": {
                      "text": "against GPU cracking attacks and suitable for applications with no threats\nfrom side-channel timing attacks (eg. cryptocurrencies). Argon2i instead\nuses data-independent memory access, which is preferred for password\nhashing and password-based key derivation, but it is slower as it makes\nmore passes over the memory to protect from tradeoff attacks. Argon2id is a\nhybrid of Argon2i and Argon2d, using a combination of data-depending and\ndata-independent memory accesses, which gives some of Argon2i's resistance to\n",
                      "markdown": "`against GPU cracking attacks and suitable for applications with no threats\nfrom side-channel timing attacks (eg. cryptocurrencies). Argon2i instead\nuses data-independent memory access, which is preferred for password\nhashing and password-based key derivation, but it is slower as it makes\nmore passes over the memory to protect from tradeoff attacks. Argon2id is a\nhybrid of Argon2i and Argon2d, using a combination of data-depending and\ndata-independent memory accesses, which gives some of Argon2i's resistance to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 60,
                  "endLine": 24,
                  "endColumn": 68,
                  "snippet": {
                    "text": "and uses data-depending memory access, which makes it highly resistant\nagainst GPU cracking attacks and suitable for applications with no threats\nfrom side-channel timing attacks (eg. cryptocurrencies). Argon2i instead\nuses data-independent memory access, which is preferred for password\nhashing and password-based key derivation, but it is slower as it makes\nmore passes over the memory to protect from tradeoff attacks. Argon2id is a\nhybrid of Argon2i and Argon2d, using a combination of data-depending and\n",
                    "rendered": {
                      "text": "and uses data-depending memory access, which makes it highly resistant\nagainst GPU cracking attacks and suitable for applications with no threats\nfrom side-channel timing attacks (eg. cryptocurrencies). Argon2i instead\nuses data-independent memory access, which is preferred for password\nhashing and password-based key derivation, but it is slower as it makes\nmore passes over the memory to protect from tradeoff attacks. Argon2id is a\nhybrid of Argon2i and Argon2d, using a combination of data-depending and\n",
                      "markdown": "`and uses data-depending memory access, which makes it highly resistant\nagainst GPU cracking attacks and suitable for applications with no threats\nfrom side-channel timing attacks (eg. cryptocurrencies). Argon2i instead\nuses data-independent memory access, which is preferred for password\nhashing and password-based key derivation, but it is slower as it makes\nmore passes over the memory to protect from tradeoff attacks. Argon2id is a\nhybrid of Argon2i and Argon2d, using a combination of data-depending and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nArgon2 is a password-hashing function that summarizes the state of the\nart in the design of memory-hard functions and can be used to hash\npasswords for credential storage, key derivation, or other applications.\n\nIt has a simple design aimed at the highest memory filling rate and\neffective use of multiple computing units, while still providing defense\n",
                    "rendered": {
                      "text": "\nArgon2 is a password-hashing function that summarizes the state of the\nart in the design of memory-hard functions and can be used to hash\npasswords for credential storage, key derivation, or other applications.\n\nIt has a simple design aimed at the highest memory filling rate and\neffective use of multiple computing units, while still providing defense\n",
                      "markdown": "`\nArgon2 is a password-hashing function that summarizes the state of the\nart in the design of memory-hard functions and can be used to hash\npasswords for credential storage, key derivation, or other applications.\n\nIt has a simple design aimed at the highest memory filling rate and\neffective use of multiple computing units, while still providing defense\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 20,
                  "snippet": {
                    "text": "function that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\nArgon2 is a password-hashing function that summarizes the state of the\nart in the design of memory-hard functions and can be used to hash\npasswords for credential storage, key derivation, or other applications.\n\n",
                    "rendered": {
                      "text": "function that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\nArgon2 is a password-hashing function that summarizes the state of the\nart in the design of memory-hard functions and can be used to hash\npasswords for credential storage, key derivation, or other applications.\n\n",
                      "markdown": "`function that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\nArgon2 is a password-hashing function that summarizes the state of the\nart in the design of memory-hard functions and can be used to hash\npasswords for credential storage, key derivation, or other applications.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 15,
                  "endLine": 9,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nThis is the reference C implementation of Argon2, the password-hashing\nfunction that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\nArgon2 is a password-hashing function that summarizes the state of the\nart in the design of memory-hard functions and can be used to hash\n",
                    "rendered": {
                      "text": "\nThis is the reference C implementation of Argon2, the password-hashing\nfunction that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\nArgon2 is a password-hashing function that summarizes the state of the\nart in the design of memory-hard functions and can be used to hash\n",
                      "markdown": "`\nThis is the reference C implementation of Argon2, the password-hashing\nfunction that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\nArgon2 is a password-hashing function that summarizes the state of the\nart in the design of memory-hard functions and can be used to hash\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 31,
                  "snippet": {
                    "text": "[![codecov.io](https://codecov.io/github/P-H-C/phc-winner-argon2/coverage.svg?branch=master)](https://codecov.io/github/P-H-C/phc-winner-argon2?branch=master)\n\nThis is the reference C implementation of Argon2, the password-hashing\nfunction that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\nArgon2 is a password-hashing function that summarizes the state of the\n",
                    "rendered": {
                      "text": "[![codecov.io](https://codecov.io/github/P-H-C/phc-winner-argon2/coverage.svg?branch=master)](https://codecov.io/github/P-H-C/phc-winner-argon2?branch=master)\n\nThis is the reference C implementation of Argon2, the password-hashing\nfunction that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\nArgon2 is a password-hashing function that summarizes the state of the\n",
                      "markdown": "`[![codecov.io](https://codecov.io/github/P-H-C/phc-winner-argon2/coverage.svg?branch=master)](https://codecov.io/github/P-H-C/phc-winner-argon2?branch=master)\n\nThis is the reference C implementation of Argon2, the password-hashing\nfunction that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\nArgon2 is a password-hashing function that summarizes the state of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 7,
                  "endColumn": 62,
                  "snippet": {
                    "text": "[![Build status](https://ci.appveyor.com/api/projects/status/8nfwuwq55sgfkele?svg=true)](https://ci.appveyor.com/project/P-H-C/phc-winner-argon2)\n[![codecov.io](https://codecov.io/github/P-H-C/phc-winner-argon2/coverage.svg?branch=master)](https://codecov.io/github/P-H-C/phc-winner-argon2?branch=master)\n\nThis is the reference C implementation of Argon2, the password-hashing\nfunction that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\n",
                    "rendered": {
                      "text": "[![Build status](https://ci.appveyor.com/api/projects/status/8nfwuwq55sgfkele?svg=true)](https://ci.appveyor.com/project/P-H-C/phc-winner-argon2)\n[![codecov.io](https://codecov.io/github/P-H-C/phc-winner-argon2/coverage.svg?branch=master)](https://codecov.io/github/P-H-C/phc-winner-argon2?branch=master)\n\nThis is the reference C implementation of Argon2, the password-hashing\nfunction that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\n",
                      "markdown": "`[![Build status](https://ci.appveyor.com/api/projects/status/8nfwuwq55sgfkele?svg=true)](https://ci.appveyor.com/project/P-H-C/phc-winner-argon2)\n[![codecov.io](https://codecov.io/github/P-H-C/phc-winner-argon2/coverage.svg?branch=master)](https://codecov.io/github/P-H-C/phc-winner-argon2?branch=master)\n\nThis is the reference C implementation of Argon2, the password-hashing\nfunction that won the [Password Hashing Competition\n(PHC)](https://password-hashing.net).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 32,
                  "endLine": 162,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n    // low-level API\n    argon2_context context = {\n        hash2,  /* output array, at least HASHLEN in size */\n        HASHLEN, /* digest length */\n        pwd, /* password array */\n        pwdlen, /* password length */\n",
                    "rendered": {
                      "text": "\n    // low-level API\n    argon2_context context = {\n        hash2,  /* output array, at least HASHLEN in size */\n        HASHLEN, /* digest length */\n        pwd, /* password array */\n        pwdlen, /* password length */\n",
                      "markdown": "`\n    // low-level API\n    argon2_context context = {\n        hash2,  /* output array, at least HASHLEN in size */\n        HASHLEN, /* digest length */\n        pwd, /* password array */\n        pwdlen, /* password length */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 18,
                  "endLine": 116,
                  "endColumn": 22,
                  "snippet": {
                    "text": "   parameters; the `ad` parameter is folding into the value of the hash.\n   However, this parameter is used for different data. The `salt` should be a\n   random string stored alongside your password. The `secret` should be a random\n   key only usable at hashing time. The `ad` is for any other data.\n\n3. The `flags` parameter, which determines which memory should be securely\n   erased. This is useful if you want to securely delete the `pwd` or `secret`\n",
                    "rendered": {
                      "text": "   parameters; the `ad` parameter is folding into the value of the hash.\n   However, this parameter is used for different data. The `salt` should be a\n   random string stored alongside your password. The `secret` should be a random\n   key only usable at hashing time. The `ad` is for any other data.\n\n3. The `flags` parameter, which determines which memory should be securely\n   erased. This is useful if you want to securely delete the `pwd` or `secret`\n",
                      "markdown": "`   parameters; the `ad` parameter is folding into the value of the hash.\n   However, this parameter is used for different data. The `salt` should be a\n   random string stored alongside your password. The `secret` should be a random\n   key only usable at hashing time. The `ad` is for any other data.\n\n3. The `flags` parameter, which determines which memory should be securely\n   erased. This is useful if you want to securely delete the `pwd` or `secret`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 39,
                  "endLine": 106,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n1. The `secret` parameter, which is used for [keyed hashing](\n   https://en.wikipedia.org/wiki/Hash-based_message_authentication_code).\n   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n",
                    "rendered": {
                      "text": "\n1. The `secret` parameter, which is used for [keyed hashing](\n   https://en.wikipedia.org/wiki/Hash-based_message_authentication_code).\n   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n",
                      "markdown": "`\n1. The `secret` parameter, which is used for [keyed hashing](\n   https://en.wikipedia.org/wiki/Hash-based_message_authentication_code).\n   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 40,
                  "endLine": 62,
                  "endColumn": 44,
                  "snippet": {
                    "text": "Usage:  ./argon2 [-h] salt [-i|-d|-id] [-t iterations] [-m memory] [-p parallelism] [-l hash length] [-e|-r] [-v (10|13)]\n        Password is read from stdin\nParameters:\n        salt            The salt to use, at least 8 characters\n        -i              Use Argon2i (this is the default)\n        -d              Use Argon2d instead of Argon2i\n        -id             Use Argon2id instead of Argon2i\n",
                    "rendered": {
                      "text": "Usage:  ./argon2 [-h] salt [-i|-d|-id] [-t iterations] [-m memory] [-p parallelism] [-l hash length] [-e|-r] [-v (10|13)]\n        Password is read from stdin\nParameters:\n        salt            The salt to use, at least 8 characters\n        -i              Use Argon2i (this is the default)\n        -d              Use Argon2d instead of Argon2i\n        -id             Use Argon2id instead of Argon2i\n",
                      "markdown": "`Usage:  ./argon2 [-h] salt [-i|-d|-id] [-t iterations] [-m memory] [-p parallelism] [-l hash length] [-e|-r] [-v (10|13)]\n        Password is read from stdin\nParameters:\n        salt            The salt to use, at least 8 characters\n        -i              Use Argon2i (this is the default)\n        -d              Use Argon2d instead of Argon2i\n        -id             Use Argon2id instead of Argon2i\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 28,
                  "endLine": 15,
                  "endColumn": 32,
                  "snippet": {
                    "text": "art in the design of memory-hard functions and can be used to hash\npasswords for credential storage, key derivation, or other applications.\n\nIt has a simple design aimed at the highest memory filling rate and\neffective use of multiple computing units, while still providing defense\nagainst tradeoff attacks (by exploiting the cache and memory organization\nof the recent processors).\n",
                    "rendered": {
                      "text": "art in the design of memory-hard functions and can be used to hash\npasswords for credential storage, key derivation, or other applications.\n\nIt has a simple design aimed at the highest memory filling rate and\neffective use of multiple computing units, while still providing defense\nagainst tradeoff attacks (by exploiting the cache and memory organization\nof the recent processors).\n",
                      "markdown": "`art in the design of memory-hard functions and can be used to hash\npasswords for credential storage, key derivation, or other applications.\n\nIt has a simple design aimed at the highest memory filling rate and\neffective use of multiple computing units, while still providing defense\nagainst tradeoff attacks (by exploiting the cache and memory organization\nof the recent processors).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 73,
                  "endLine": 214,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n### Benchmarks\n\n`make bench` creates the executable `bench`, which measures the execution\ntime of various Argon2 instances:\n\n```\n$ ./bench\n",
                    "rendered": {
                      "text": "\n### Benchmarks\n\n`make bench` creates the executable `bench`, which measures the execution\ntime of various Argon2 instances:\n\n```\n$ ./bench\n",
                      "markdown": "`\n### Benchmarks\n\n`make bench` creates the executable `bench`, which measures the execution\ntime of various Argon2 instances:\n\n```\n$ ./bench\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 8,
                  "endLine": 125,
                  "endColumn": 14,
                  "snippet": {
                    "text": "   internal memory is cleared, change the global flag\n   `FLAG_clear_internal_memory` (defaults to clearing internal memory).\n\nHere the time cost `t_cost` is set to 2 iterations, the\nmemory cost `m_cost` is set to 2<sup>16</sup> kibibytes (64 mebibytes),\nand parallelism is set to 1 (single-thread).\n\n",
                    "rendered": {
                      "text": "   internal memory is cleared, change the global flag\n   `FLAG_clear_internal_memory` (defaults to clearing internal memory).\n\nHere the time cost `t_cost` is set to 2 iterations, the\nmemory cost `m_cost` is set to 2<sup>16</sup> kibibytes (64 mebibytes),\nand parallelism is set to 1 (single-thread).\n\n",
                      "markdown": "`   internal memory is cleared, change the global flag\n   `FLAG_clear_internal_memory` (defaults to clearing internal memory).\n\nHere the time cost `t_cost` is set to 2 iterations, the\nmemory cost `m_cost` is set to 2<sup>16</sup> kibibytes (64 mebibytes),\nand parallelism is set to 1 (single-thread).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 75,
                  "endLine": 109,
                  "snippet": {
                    "text": "   https://en.wikipedia.org/wiki/Hash-based_message_authentication_code).\n   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n\n2. The `ad` parameter, which is used to fold any additional data into the hash\n   value. Functionally, this behaves almost exactly like the `secret` or `salt`\n",
                    "rendered": {
                      "text": "   https://en.wikipedia.org/wiki/Hash-based_message_authentication_code).\n   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n\n2. The `ad` parameter, which is used to fold any additional data into the hash\n   value. Functionally, this behaves almost exactly like the `secret` or `salt`\n",
                      "markdown": "`   https://en.wikipedia.org/wiki/Hash-based_message_authentication_code).\n   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n\n2. The `ad` parameter, which is used to fold any additional data into the hash\n   value. Functionally, this behaves almost exactly like the `secret` or `salt`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/README.md"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 50,
                  "endLine": 106,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n1. The `secret` parameter, which is used for [keyed hashing](\n   https://en.wikipedia.org/wiki/Hash-based_message_authentication_code).\n   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n",
                    "rendered": {
                      "text": "\n1. The `secret` parameter, which is used for [keyed hashing](\n   https://en.wikipedia.org/wiki/Hash-based_message_authentication_code).\n   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n",
                      "markdown": "`\n1. The `secret` parameter, which is used for [keyed hashing](\n   https://en.wikipedia.org/wiki/Hash-based_message_authentication_code).\n   This allows a secret key to be input at hashing time (from some external\n   location) and be folded into the value of the hash. This means that even if\n   your salts and hashes are compromised, an attacker cannot brute-force to find\n   the password without the key.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2id"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Argon2id version number 19\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                    "rendered": {
                      "text": "Argon2id version number 19\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                      "markdown": "`Argon2id version number 19\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2i"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Argon2i version number 19\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                    "rendered": {
                      "text": "Argon2i version number 19\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                      "markdown": "`Argon2i version number 19\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2i"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 127,
                  "endLine": 9,
                  "endColumn": 131,
                  "snippet": {
                    "text": "Salt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \nPre-hashing digest: c4 60 65 81 52 76 a0 b3 e7 31 73 1c 90 2f 1f d8 0c f7 76 90 7f bb 7b 6a 5c a7 2e 7b 56 01 1f ee ca 44 6c 86 dd 75 b9 46 9a 5e 68 79 de c4 b7 2d 08 63 fb 93 9b 98 2e 5f 39 7c c7 d1 64 fd da a9 \n\n After pass 0:\nBlock 0000 [  0]: f8f9e84545db08f6\n",
                    "rendered": {
                      "text": "Salt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \nPre-hashing digest: c4 60 65 81 52 76 a0 b3 e7 31 73 1c 90 2f 1f d8 0c f7 76 90 7f bb 7b 6a 5c a7 2e 7b 56 01 1f ee ca 44 6c 86 dd 75 b9 46 9a 5e 68 79 de c4 b7 2d 08 63 fb 93 9b 98 2e 5f 39 7c c7 d1 64 fd da a9 \n\n After pass 0:\nBlock 0000 [  0]: f8f9e84545db08f6\n",
                      "markdown": "`Salt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \nPre-hashing digest: c4 60 65 81 52 76 a0 b3 e7 31 73 1c 90 2f 1f d8 0c f7 76 90 7f bb 7b 6a 5c a7 2e 7b 56 01 1f ee ca 44 6c 86 dd 75 b9 46 9a 5e 68 79 de c4 b7 2d 08 63 fb 93 9b 98 2e 5f 39 7c c7 d1 64 fd da a9 \n\n After pass 0:\nBlock 0000 [  0]: f8f9e84545db08f6\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2i_v16"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Argon2i version number 16\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                    "rendered": {
                      "text": "Argon2i version number 16\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                      "markdown": "`Argon2i version number 16\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2i_v16"
                },
                "region": {
                  "startLine": 12304,
                  "startColumn": 10,
                  "endLine": 12304,
                  "endColumn": 14,
                  "snippet": {
                    "text": "Block 0031 [125]: 0e6a8437f71591eb\nBlock 0031 [126]: 262f62ad801339fe\nBlock 0031 [127]: 5e74704b5c91286c\nTag: 87 ae ed d6 51 7a b8 30 cd 97 65 cd 82 31 ab b2 e6 47 a5 de e0 8f 7c 05 e0 2f cb 76 33 35 d0 fd \n",
                    "rendered": {
                      "text": "Block 0031 [125]: 0e6a8437f71591eb\nBlock 0031 [126]: 262f62ad801339fe\nBlock 0031 [127]: 5e74704b5c91286c\nTag: 87 ae ed d6 51 7a b8 30 cd 97 65 cd 82 31 ab b2 e6 47 a5 de e0 8f 7c 05 e0 2f cb 76 33 35 d0 fd \n",
                      "markdown": "`Block 0031 [125]: 0e6a8437f71591eb\nBlock 0031 [126]: 262f62ad801339fe\nBlock 0031 [127]: 5e74704b5c91286c\nTag: 87 ae ed d6 51 7a b8 30 cd 97 65 cd 82 31 ab b2 e6 47 a5 de e0 8f 7c 05 e0 2f cb 76 33 35 d0 fd \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/test.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 8,
                  "endLine": 35,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      fi\n\n      ./genkat $type $version > tmp\n      if diff tmp $kats\n      then\n        printf \"OK\"\n      else\n",
                    "rendered": {
                      "text": "      fi\n\n      ./genkat $type $version > tmp\n      if diff tmp $kats\n      then\n        printf \"OK\"\n      else\n",
                      "markdown": "`      fi\n\n      ./genkat $type $version > tmp\n      if diff tmp $kats\n      then\n        printf \"OK\"\n      else\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/check-sums.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#!/bin/sh\n\nfor file in `ls | grep '^[a-z2]*\\(_v\\)\\?[0-9]*$' | xargs`\ndo\n    new=`shasum -a 256 $file`\n    old=`cat $file.shasum`\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\nfor file in `ls | grep '^[a-z2]*\\(_v\\)\\?[0-9]*$' | xargs`\ndo\n    new=`shasum -a 256 $file`\n    old=`cat $file.shasum`\n",
                      "markdown": "`#!/bin/sh\n\nfor file in `ls | grep '^[a-z2]*\\(_v\\)\\?[0-9]*$' | xargs`\ndo\n    new=`shasum -a 256 $file`\n    old=`cat $file.shasum`\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/run.c"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 24,
                  "endLine": 200,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        fatal(\"no password read\");\n    }\n    if(pwdlen == MAX_PASS_LEN) {\n        fatal(\"Provided password longer than supported in command line utility\");\n    }\n\n    salt = argv[1];\n",
                    "rendered": {
                      "text": "        fatal(\"no password read\");\n    }\n    if(pwdlen == MAX_PASS_LEN) {\n        fatal(\"Provided password longer than supported in command line utility\");\n    }\n\n    salt = argv[1];\n",
                      "markdown": "`        fatal(\"no password read\");\n    }\n    if(pwdlen == MAX_PASS_LEN) {\n        fatal(\"Provided password longer than supported in command line utility\");\n    }\n\n    salt = argv[1];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/run.c"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 18,
                  "endLine": 197,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    /* get password from stdin */\n    pwdlen = fread(pwd, 1, sizeof pwd, stdin);\n    if(pwdlen < 1) {\n        fatal(\"no password read\");\n    }\n    if(pwdlen == MAX_PASS_LEN) {\n        fatal(\"Provided password longer than supported in command line utility\");\n",
                    "rendered": {
                      "text": "    /* get password from stdin */\n    pwdlen = fread(pwd, 1, sizeof pwd, stdin);\n    if(pwdlen < 1) {\n        fatal(\"no password read\");\n    }\n    if(pwdlen == MAX_PASS_LEN) {\n        fatal(\"Provided password longer than supported in command line utility\");\n",
                      "markdown": "`    /* get password from stdin */\n    pwdlen = fread(pwd, 1, sizeof pwd, stdin);\n    if(pwdlen < 1) {\n        fatal(\"no password read\");\n    }\n    if(pwdlen == MAX_PASS_LEN) {\n        fatal(\"Provided password longer than supported in command line utility\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/run.c"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 11,
                  "endLine": 194,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        return 1;\n    }\n\n    /* get password from stdin */\n    pwdlen = fread(pwd, 1, sizeof pwd, stdin);\n    if(pwdlen < 1) {\n        fatal(\"no password read\");\n",
                    "rendered": {
                      "text": "        return 1;\n    }\n\n    /* get password from stdin */\n    pwdlen = fread(pwd, 1, sizeof pwd, stdin);\n    if(pwdlen < 1) {\n        fatal(\"no password read\");\n",
                      "markdown": "`        return 1;\n    }\n\n    /* get password from stdin */\n    pwdlen = fread(pwd, 1, sizeof pwd, stdin);\n    if(pwdlen < 1) {\n        fatal(\"no password read\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/run.c"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 15,
                  "endLine": 106,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    start_time = clock();\n\n    if (!pwd) {\n        fatal(\"password missing\");\n    }\n\n    if (!salt) {\n",
                    "rendered": {
                      "text": "    start_time = clock();\n\n    if (!pwd) {\n        fatal(\"password missing\");\n    }\n\n    if (!salt) {\n",
                      "markdown": "`    start_time = clock();\n\n    if (!pwd) {\n        fatal(\"password missing\");\n    }\n\n    if (!salt) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/run.c"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 14,
                  "endLine": 43,
                  "endColumn": 22,
                  "snippet": {
                    "text": "           \"[-m log2(memory in KiB) | -k memory in KiB] [-p parallelism] \"\n           \"[-l hash length] [-e|-r] [-v (10|13)]\\n\",\n           cmd);\n    printf(\"\\tPassword is read from stdin\\n\");\n    printf(\"Parameters:\\n\");\n    printf(\"\\tsalt\\t\\tThe salt to use, at least 8 characters\\n\");\n    printf(\"\\t-i\\t\\tUse Argon2i (this is the default)\\n\");\n",
                    "rendered": {
                      "text": "           \"[-m log2(memory in KiB) | -k memory in KiB] [-p parallelism] \"\n           \"[-l hash length] [-e|-r] [-v (10|13)]\\n\",\n           cmd);\n    printf(\"\\tPassword is read from stdin\\n\");\n    printf(\"Parameters:\\n\");\n    printf(\"\\tsalt\\t\\tThe salt to use, at least 8 characters\\n\");\n    printf(\"\\t-i\\t\\tUse Argon2i (this is the default)\\n\");\n",
                      "markdown": "`           \"[-m log2(memory in KiB) | -k memory in KiB] [-p parallelism] \"\n           \"[-l hash length] [-e|-r] [-v (10|13)]\\n\",\n           cmd);\n    printf(\"\\tPassword is read from stdin\\n\");\n    printf(\"Parameters:\\n\");\n    printf(\"\\tsalt\\t\\tThe salt to use, at least 8 characters\\n\");\n    printf(\"\\t-i\\t\\tUse Argon2i (this is the default)\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/run.c"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 38,
                  "endLine": 45,
                  "endColumn": 42,
                  "snippet": {
                    "text": "           cmd);\n    printf(\"\\tPassword is read from stdin\\n\");\n    printf(\"Parameters:\\n\");\n    printf(\"\\tsalt\\t\\tThe salt to use, at least 8 characters\\n\");\n    printf(\"\\t-i\\t\\tUse Argon2i (this is the default)\\n\");\n    printf(\"\\t-d\\t\\tUse Argon2d instead of Argon2i\\n\");\n    printf(\"\\t-id\\t\\tUse Argon2id instead of Argon2i\\n\");\n",
                    "rendered": {
                      "text": "           cmd);\n    printf(\"\\tPassword is read from stdin\\n\");\n    printf(\"Parameters:\\n\");\n    printf(\"\\tsalt\\t\\tThe salt to use, at least 8 characters\\n\");\n    printf(\"\\t-i\\t\\tUse Argon2i (this is the default)\\n\");\n    printf(\"\\t-d\\t\\tUse Argon2d instead of Argon2i\\n\");\n    printf(\"\\t-id\\t\\tUse Argon2id instead of Argon2i\\n\");\n",
                      "markdown": "`           cmd);\n    printf(\"\\tPassword is read from stdin\\n\");\n    printf(\"Parameters:\\n\");\n    printf(\"\\tsalt\\t\\tThe salt to use, at least 8 characters\\n\");\n    printf(\"\\t-i\\t\\tUse Argon2i (this is the default)\\n\");\n    printf(\"\\t-d\\t\\tUse Argon2d instead of Argon2i\\n\");\n    printf(\"\\t-id\\t\\tUse Argon2id instead of Argon2i\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/genkat.c"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 47,
                  "endLine": 50,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n        printf(\"Password[%u]: \", context->pwdlen);\n\n        if (context->flags & ARGON2_FLAG_CLEAR_PASSWORD) {\n            printf(\"CLEARED\\n\");\n        } else {\n            for (i = 0; i < context->pwdlen; ++i) {\n",
                    "rendered": {
                      "text": "\n        printf(\"Password[%u]: \", context->pwdlen);\n\n        if (context->flags & ARGON2_FLAG_CLEAR_PASSWORD) {\n            printf(\"CLEARED\\n\");\n        } else {\n            for (i = 0; i < context->pwdlen; ++i) {\n",
                      "markdown": "`\n        printf(\"Password[%u]: \", context->pwdlen);\n\n        if (context->flags & ARGON2_FLAG_CLEAR_PASSWORD) {\n            printf(\"CLEARED\\n\");\n        } else {\n            for (i = 0; i < context->pwdlen; ++i) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/genkat.c"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 16,
                  "endLine": 48,
                  "endColumn": 24,
                  "snippet": {
                    "text": "               context->m_cost, context->t_cost, context->lanes,\n               context->outlen);\n\n        printf(\"Password[%u]: \", context->pwdlen);\n\n        if (context->flags & ARGON2_FLAG_CLEAR_PASSWORD) {\n            printf(\"CLEARED\\n\");\n",
                    "rendered": {
                      "text": "               context->m_cost, context->t_cost, context->lanes,\n               context->outlen);\n\n        printf(\"Password[%u]: \", context->pwdlen);\n\n        if (context->flags & ARGON2_FLAG_CLEAR_PASSWORD) {\n            printf(\"CLEARED\\n\");\n",
                      "markdown": "`               context->m_cost, context->t_cost, context->lanes,\n               context->outlen);\n\n        printf(\"Password[%u]: \", context->pwdlen);\n\n        if (context->flags & ARGON2_FLAG_CLEAR_PASSWORD) {\n            printf(\"CLEARED\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/core.h"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 3,
                  "endLine": 165,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n/*\n * Hashes all the inputs into @a blockhash[PREHASH_DIGEST_LENGTH], clears\n * password and secret if needed\n * @param  context  Pointer to the Argon2 internal structure containing memory\n * pointer, and parameters for time and space requirements.\n * @param  blockhash Buffer for pre-hashing digest\n",
                    "rendered": {
                      "text": "\n/*\n * Hashes all the inputs into @a blockhash[PREHASH_DIGEST_LENGTH], clears\n * password and secret if needed\n * @param  context  Pointer to the Argon2 internal structure containing memory\n * pointer, and parameters for time and space requirements.\n * @param  blockhash Buffer for pre-hashing digest\n",
                      "markdown": "`\n/*\n * Hashes all the inputs into @a blockhash[PREHASH_DIGEST_LENGTH], clears\n * password and secret if needed\n * @param  context  Pointer to the Argon2 internal structure containing memory\n * pointer, and parameters for time and space requirements.\n * @param  blockhash Buffer for pre-hashing digest\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/export.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 51,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "FILE=`date \"+%Y%m%d\"`\nBRANCH=master\n\ngit archive --format zip --output $FILE.zip $BRANCH\ngit archive --format tar.gz --output $FILE.tar.gz $BRANCH\n",
                    "rendered": {
                      "text": "FILE=`date \"+%Y%m%d\"`\nBRANCH=master\n\ngit archive --format zip --output $FILE.zip $BRANCH\ngit archive --format tar.gz --output $FILE.tar.gz $BRANCH\n",
                      "markdown": "`FILE=`date \"+%Y%m%d\"`\nBRANCH=master\n\ngit archive --format zip --output $FILE.zip $BRANCH\ngit archive --format tar.gz --output $FILE.tar.gz $BRANCH\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/export.sh"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 6,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nFILE=`date \"+%Y%m%d\"`\nBRANCH=master\n\ngit archive --format zip --output $FILE.zip $BRANCH\ngit archive --format tar.gz --output $FILE.tar.gz $BRANCH\n",
                    "rendered": {
                      "text": "\nFILE=`date \"+%Y%m%d\"`\nBRANCH=master\n\ngit archive --format zip --output $FILE.zip $BRANCH\ngit archive --format tar.gz --output $FILE.tar.gz $BRANCH\n",
                      "markdown": "`\nFILE=`date \"+%Y%m%d\"`\nBRANCH=master\n\ngit archive --format zip --output $FILE.zip $BRANCH\ngit archive --format tar.gz --output $FILE.tar.gz $BRANCH\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2d"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Argon2d version number 19\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                    "rendered": {
                      "text": "Argon2d version number 19\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                      "markdown": "`Argon2d version number 19\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2d_v16"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Argon2d version number 16\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                    "rendered": {
                      "text": "Argon2d version number 16\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n",
                      "markdown": "`Argon2d version number 16\n=======================================\nMemory: 32 KiB, Iterations: 3, Parallelism: 4 lanes, Tag length: 32 bytes\nPassword[32]: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 \nSalt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2d_v16"
                },
                "region": {
                  "startLine": 12304,
                  "startColumn": 55,
                  "endLine": 12304,
                  "endColumn": 59,
                  "snippet": {
                    "text": "Block 0031 [125]: db7e4b8f39c91c7d\nBlock 0031 [126]: 60b2676ff06a944a\nBlock 0031 [127]: 802b5b8358cf77b4\nTag: 96 a9 d4 e5 a1 73 40 92 c8 5e 29 f4 10 a4 59 14 a5 dd 1f 5c bf 08 b2 67 0d a6 8a 02 85 ab f3 2b \n",
                    "rendered": {
                      "text": "Block 0031 [125]: db7e4b8f39c91c7d\nBlock 0031 [126]: 60b2676ff06a944a\nBlock 0031 [127]: 802b5b8358cf77b4\nTag: 96 a9 d4 e5 a1 73 40 92 c8 5e 29 f4 10 a4 59 14 a5 dd 1f 5c bf 08 b2 67 0d a6 8a 02 85 ab f3 2b \n",
                      "markdown": "`Block 0031 [125]: db7e4b8f39c91c7d\nBlock 0031 [126]: 60b2676ff06a944a\nBlock 0031 [127]: 802b5b8358cf77b4\nTag: 96 a9 d4 e5 a1 73 40 92 c8 5e 29 f4 10 a4 59 14 a5 dd 1f 5c bf 08 b2 67 0d a6 8a 02 85 ab f3 2b \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2d_v16"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 70,
                  "endLine": 9,
                  "endColumn": 74,
                  "snippet": {
                    "text": "Salt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \nPre-hashing digest: ec dc 26 dc 6b dd 21 56 19 68 97 aa 8c c9 a0 4c 03 ed 07 cd 12 92 67 c5 3c a6 ae f7 76 a4 30 89 6a 09 80 54 e4 de c3 e0 2e cd 82 c4 7f 56 2c a2 73 d2 f6 97 8a 5c 05 41 1a 0c d0 9d 47 7b 7b 06 \n\n After pass 0:\nBlock 0000 [  0]: b0470f8400af9a3e\n",
                    "rendered": {
                      "text": "Salt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \nPre-hashing digest: ec dc 26 dc 6b dd 21 56 19 68 97 aa 8c c9 a0 4c 03 ed 07 cd 12 92 67 c5 3c a6 ae f7 76 a4 30 89 6a 09 80 54 e4 de c3 e0 2e cd 82 c4 7f 56 2c a2 73 d2 f6 97 8a 5c 05 41 1a 0c d0 9d 47 7b 7b 06 \n\n After pass 0:\nBlock 0000 [  0]: b0470f8400af9a3e\n",
                      "markdown": "`Salt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \nPre-hashing digest: ec dc 26 dc 6b dd 21 56 19 68 97 aa 8c c9 a0 4c 03 ed 07 cd 12 92 67 c5 3c a6 ae f7 76 a4 30 89 6a 09 80 54 e4 de c3 e0 2e cd 82 c4 7f 56 2c a2 73 d2 f6 97 8a 5c 05 41 1a 0c d0 9d 47 7b 7b 06 \n\n After pass 0:\nBlock 0000 [  0]: b0470f8400af9a3e\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/kats/argon2d_v16"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 34,
                  "endLine": 9,
                  "endColumn": 38,
                  "snippet": {
                    "text": "Salt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \nPre-hashing digest: ec dc 26 dc 6b dd 21 56 19 68 97 aa 8c c9 a0 4c 03 ed 07 cd 12 92 67 c5 3c a6 ae f7 76 a4 30 89 6a 09 80 54 e4 de c3 e0 2e cd 82 c4 7f 56 2c a2 73 d2 f6 97 8a 5c 05 41 1a 0c d0 9d 47 7b 7b 06 \n\n After pass 0:\nBlock 0000 [  0]: b0470f8400af9a3e\n",
                    "rendered": {
                      "text": "Salt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \nPre-hashing digest: ec dc 26 dc 6b dd 21 56 19 68 97 aa 8c c9 a0 4c 03 ed 07 cd 12 92 67 c5 3c a6 ae f7 76 a4 30 89 6a 09 80 54 e4 de c3 e0 2e cd 82 c4 7f 56 2c a2 73 d2 f6 97 8a 5c 05 41 1a 0c d0 9d 47 7b 7b 06 \n\n After pass 0:\nBlock 0000 [  0]: b0470f8400af9a3e\n",
                      "markdown": "`Salt[16]: 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 \nSecret[8]: 03 03 03 03 03 03 03 03 \nAssociated data[12]: 04 04 04 04 04 04 04 04 04 04 04 04 \nPre-hashing digest: ec dc 26 dc 6b dd 21 56 19 68 97 aa 8c c9 a0 4c 03 ed 07 cd 12 92 67 c5 3c a6 ae f7 76 a4 30 89 6a 09 80 54 e4 de c3 e0 2e cd 82 c4 7f 56 2c a2 73 d2 f6 97 8a 5c 05 41 1a 0c d0 9d 47 7b 7b 06 \n\n After pass 0:\nBlock 0000 [  0]: b0470f8400af9a3e\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/core.c"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 47,
                  "endLine": 574,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        blake2b_update(&BlakeHash, (const uint8_t *)context->pwd,\n                       context->pwdlen);\n\n        if (context->flags & ARGON2_FLAG_CLEAR_PASSWORD) {\n            secure_wipe_memory(context->pwd, context->pwdlen);\n            context->pwdlen = 0;\n        }\n",
                    "rendered": {
                      "text": "        blake2b_update(&BlakeHash, (const uint8_t *)context->pwd,\n                       context->pwdlen);\n\n        if (context->flags & ARGON2_FLAG_CLEAR_PASSWORD) {\n            secure_wipe_memory(context->pwd, context->pwdlen);\n            context->pwdlen = 0;\n        }\n",
                      "markdown": "`        blake2b_update(&BlakeHash, (const uint8_t *)context->pwd,\n                       context->pwdlen);\n\n        if (context->flags & ARGON2_FLAG_CLEAR_PASSWORD) {\n            secure_wipe_memory(context->pwd, context->pwdlen);\n            context->pwdlen = 0;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/core.c"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 16,
                  "endLine": 406,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        return ARGON2_OUTPUT_TOO_LONG;\n    }\n\n    /* Validate password (required param) */\n    if (NULL == context->pwd) {\n        if (0 != context->pwdlen) {\n            return ARGON2_PWD_PTR_MISMATCH;\n",
                    "rendered": {
                      "text": "        return ARGON2_OUTPUT_TOO_LONG;\n    }\n\n    /* Validate password (required param) */\n    if (NULL == context->pwd) {\n        if (0 != context->pwdlen) {\n            return ARGON2_PWD_PTR_MISMATCH;\n",
                      "markdown": "`        return ARGON2_OUTPUT_TOO_LONG;\n    }\n\n    /* Validate password (required param) */\n    if (NULL == context->pwd) {\n        if (0 != context->pwdlen) {\n            return ARGON2_PWD_PTR_MISMATCH;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/argon2.c"
                },
                "region": {
                  "startLine": 441,
                  "startColumn": 20,
                  "endLine": 441,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    case ARGON2_DECODING_LENGTH_FAIL:\n        return \"Some of encoded parameters are too long or too short\";\n    case ARGON2_VERIFY_MISMATCH:\n        return \"The password does not match the supplied hash\";\n    default:\n        return \"Unknown error code\";\n    }\n",
                    "rendered": {
                      "text": "    case ARGON2_DECODING_LENGTH_FAIL:\n        return \"Some of encoded parameters are too long or too short\";\n    case ARGON2_VERIFY_MISMATCH:\n        return \"The password does not match the supplied hash\";\n    default:\n        return \"Unknown error code\";\n    }\n",
                      "markdown": "`    case ARGON2_DECODING_LENGTH_FAIL:\n        return \"Some of encoded parameters are too long or too short\";\n    case ARGON2_VERIFY_MISMATCH:\n        return \"The password does not match the supplied hash\";\n    default:\n        return \"Unknown error code\";\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/argon2.c"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 46,
                  "endLine": 407,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    case ARGON2_LANES_TOO_MANY:\n        return \"Too many lanes\";\n    case ARGON2_PWD_PTR_MISMATCH:\n        return \"Password pointer is NULL, but password length is not 0\";\n    case ARGON2_SALT_PTR_MISMATCH:\n        return \"Salt pointer is NULL, but salt length is not 0\";\n    case ARGON2_SECRET_PTR_MISMATCH:\n",
                    "rendered": {
                      "text": "    case ARGON2_LANES_TOO_MANY:\n        return \"Too many lanes\";\n    case ARGON2_PWD_PTR_MISMATCH:\n        return \"Password pointer is NULL, but password length is not 0\";\n    case ARGON2_SALT_PTR_MISMATCH:\n        return \"Salt pointer is NULL, but salt length is not 0\";\n    case ARGON2_SECRET_PTR_MISMATCH:\n",
                      "markdown": "`    case ARGON2_LANES_TOO_MANY:\n        return \"Too many lanes\";\n    case ARGON2_PWD_PTR_MISMATCH:\n        return \"Password pointer is NULL, but password length is not 0\";\n    case ARGON2_SALT_PTR_MISMATCH:\n        return \"Salt pointer is NULL, but salt length is not 0\";\n    case ARGON2_SECRET_PTR_MISMATCH:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/argon2.c"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 16,
                  "endLine": 407,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    case ARGON2_LANES_TOO_MANY:\n        return \"Too many lanes\";\n    case ARGON2_PWD_PTR_MISMATCH:\n        return \"Password pointer is NULL, but password length is not 0\";\n    case ARGON2_SALT_PTR_MISMATCH:\n        return \"Salt pointer is NULL, but salt length is not 0\";\n    case ARGON2_SECRET_PTR_MISMATCH:\n",
                    "rendered": {
                      "text": "    case ARGON2_LANES_TOO_MANY:\n        return \"Too many lanes\";\n    case ARGON2_PWD_PTR_MISMATCH:\n        return \"Password pointer is NULL, but password length is not 0\";\n    case ARGON2_SALT_PTR_MISMATCH:\n        return \"Salt pointer is NULL, but salt length is not 0\";\n    case ARGON2_SECRET_PTR_MISMATCH:\n",
                      "markdown": "`    case ARGON2_LANES_TOO_MANY:\n        return \"Too many lanes\";\n    case ARGON2_PWD_PTR_MISMATCH:\n        return \"Password pointer is NULL, but password length is not 0\";\n    case ARGON2_SALT_PTR_MISMATCH:\n        return \"Salt pointer is NULL, but salt length is not 0\";\n    case ARGON2_SECRET_PTR_MISMATCH:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/argon2.c"
                },
                "region": {
                  "startLine": 381,
                  "startColumn": 16,
                  "endLine": 381,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    case ARGON2_PWD_TOO_SHORT:\n        return \"Password is too short\";\n    case ARGON2_PWD_TOO_LONG:\n        return \"Password is too long\";\n    case ARGON2_SALT_TOO_SHORT:\n        return \"Salt is too short\";\n    case ARGON2_SALT_TOO_LONG:\n",
                    "rendered": {
                      "text": "    case ARGON2_PWD_TOO_SHORT:\n        return \"Password is too short\";\n    case ARGON2_PWD_TOO_LONG:\n        return \"Password is too long\";\n    case ARGON2_SALT_TOO_SHORT:\n        return \"Salt is too short\";\n    case ARGON2_SALT_TOO_LONG:\n",
                      "markdown": "`    case ARGON2_PWD_TOO_SHORT:\n        return \"Password is too short\";\n    case ARGON2_PWD_TOO_LONG:\n        return \"Password is too long\";\n    case ARGON2_SALT_TOO_SHORT:\n        return \"Salt is too short\";\n    case ARGON2_SALT_TOO_LONG:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/src/argon2.c"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 16,
                  "endLine": 379,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    case ARGON2_OUTPUT_TOO_LONG:\n        return \"Output is too long\";\n    case ARGON2_PWD_TOO_SHORT:\n        return \"Password is too short\";\n    case ARGON2_PWD_TOO_LONG:\n        return \"Password is too long\";\n    case ARGON2_SALT_TOO_SHORT:\n",
                    "rendered": {
                      "text": "    case ARGON2_OUTPUT_TOO_LONG:\n        return \"Output is too long\";\n    case ARGON2_PWD_TOO_SHORT:\n        return \"Password is too short\";\n    case ARGON2_PWD_TOO_LONG:\n        return \"Password is too long\";\n    case ARGON2_SALT_TOO_SHORT:\n",
                      "markdown": "`    case ARGON2_OUTPUT_TOO_LONG:\n        return \"Output is too long\";\n    case ARGON2_PWD_TOO_SHORT:\n        return \"Password is too short\";\n    case ARGON2_PWD_TOO_LONG:\n        return \"Password is too long\";\n    case ARGON2_SALT_TOO_SHORT:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 17,
                  "endLine": 7,
                  "snippet": {
                    "text": "\nPROJECT = argon2-specs\n\n.PHONY: all clean update\n\nall:\n\t$(TEX) $(PROJECT).tex\n\t$(BIB) $(PROJECT).aux\n",
                    "rendered": {
                      "text": "\nPROJECT = argon2-specs\n\n.PHONY: all clean update\n\nall:\n\t$(TEX) $(PROJECT).tex\n\t$(BIB) $(PROJECT).aux\n",
                      "markdown": "`\nPROJECT = argon2-specs\n\n.PHONY: all clean update\n\nall:\n\t$(TEX) $(PROJECT).tex\n\t$(BIB) $(PROJECT).aux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/Makefile"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\trm -rf *.aux *.bbl *.blg *.log *.out *.pdf *.toc *~\n\nupdate:\n\tmv $(PROJECT).pdf ./../$(PROJECT).pdf\n",
                    "rendered": {
                      "text": "\trm -rf *.aux *.bbl *.blg *.log *.out *.pdf *.toc *~\n\nupdate:\n\tmv $(PROJECT).pdf ./../$(PROJECT).pdf\n",
                      "markdown": "`\trm -rf *.aux *.bbl *.blg *.log *.out *.pdf *.toc *~\n\nupdate:\n\tmv $(PROJECT).pdf ./../$(PROJECT).pdf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 21,
                  "endLine": 402,
                  "endColumn": 29,
                  "snippet": {
                    "text": "/**\n * Verify if a given password is correct for Argon2id hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n * @return  Zero if successful, a non zero error code otherwise\n */\n",
                    "rendered": {
                      "text": "/**\n * Verify if a given password is correct for Argon2id hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n * @return  Zero if successful, a non zero error code otherwise\n */\n",
                      "markdown": "`/**\n * Verify if a given password is correct for Argon2id hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n * @return  Zero if successful, a non zero error code otherwise\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 21,
                  "endLine": 400,
                  "endColumn": 29,
                  "snippet": {
                    "text": "ARGON2_PUBLIC int argon2i_verify_ctx(argon2_context *context, const char *hash);\n\n/**\n * Verify if a given password is correct for Argon2id hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n",
                    "rendered": {
                      "text": "ARGON2_PUBLIC int argon2i_verify_ctx(argon2_context *context, const char *hash);\n\n/**\n * Verify if a given password is correct for Argon2id hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n",
                      "markdown": "`ARGON2_PUBLIC int argon2i_verify_ctx(argon2_context *context, const char *hash);\n\n/**\n * Verify if a given password is correct for Argon2id hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 21,
                  "endLine": 393,
                  "endColumn": 29,
                  "snippet": {
                    "text": "/**\n * Verify if a given password is correct for Argon2i hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n * @return  Zero if successful, a non zero error code otherwise\n */\n",
                    "rendered": {
                      "text": "/**\n * Verify if a given password is correct for Argon2i hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n * @return  Zero if successful, a non zero error code otherwise\n */\n",
                      "markdown": "`/**\n * Verify if a given password is correct for Argon2i hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n * @return  Zero if successful, a non zero error code otherwise\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 21,
                  "endLine": 391,
                  "endColumn": 29,
                  "snippet": {
                    "text": "ARGON2_PUBLIC int argon2d_verify_ctx(argon2_context *context, const char *hash);\n\n/**\n * Verify if a given password is correct for Argon2i hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n",
                    "rendered": {
                      "text": "ARGON2_PUBLIC int argon2d_verify_ctx(argon2_context *context, const char *hash);\n\n/**\n * Verify if a given password is correct for Argon2i hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n",
                      "markdown": "`ARGON2_PUBLIC int argon2d_verify_ctx(argon2_context *context, const char *hash);\n\n/**\n * Verify if a given password is correct for Argon2i hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 21,
                  "endLine": 384,
                  "endColumn": 29,
                  "snippet": {
                    "text": "/**\n * Verify if a given password is correct for Argon2d hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n * @return  Zero if successful, a non zero error code otherwise\n */\n",
                    "rendered": {
                      "text": "/**\n * Verify if a given password is correct for Argon2d hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n * @return  Zero if successful, a non zero error code otherwise\n */\n",
                      "markdown": "`/**\n * Verify if a given password is correct for Argon2d hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n * @return  Zero if successful, a non zero error code otherwise\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 21,
                  "endLine": 382,
                  "endColumn": 29,
                  "snippet": {
                    "text": "ARGON2_PUBLIC int argon2id_ctx(argon2_context *context);\n\n/**\n * Verify if a given password is correct for Argon2d hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n",
                    "rendered": {
                      "text": "ARGON2_PUBLIC int argon2id_ctx(argon2_context *context);\n\n/**\n * Verify if a given password is correct for Argon2d hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n",
                      "markdown": "`ARGON2_PUBLIC int argon2id_ctx(argon2_context *context);\n\n/**\n * Verify if a given password is correct for Argon2d hashing\n * @param  context  Pointer to current Argon2 context\n * @param  hash  The password hash to verify. The length of the hash is\n * specified by the context outlen member\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 65,
                  "endLine": 372,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n/**\n * Argon2id: Version of Argon2 where the first half-pass over memory is\n * password-independent, the rest are password-dependent (on the password and\n * salt). OK against side channels (they reduce to 1/2-pass Argon2i), and\n * better with w.r.t. tradeoff attacks (similar to Argon2d).\n *****\n",
                    "rendered": {
                      "text": "\n/**\n * Argon2id: Version of Argon2 where the first half-pass over memory is\n * password-independent, the rest are password-dependent (on the password and\n * salt). OK against side channels (they reduce to 1/2-pass Argon2i), and\n * better with w.r.t. tradeoff attacks (similar to Argon2d).\n *****\n",
                      "markdown": "`\n/**\n * Argon2id: Version of Argon2 where the first half-pass over memory is\n * password-independent, the rest are password-dependent (on the password and\n * salt). OK against side channels (they reduce to 1/2-pass Argon2i), and\n * better with w.r.t. tradeoff attacks (similar to Argon2d).\n *****\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 38,
                  "endLine": 372,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n/**\n * Argon2id: Version of Argon2 where the first half-pass over memory is\n * password-independent, the rest are password-dependent (on the password and\n * salt). OK against side channels (they reduce to 1/2-pass Argon2i), and\n * better with w.r.t. tradeoff attacks (similar to Argon2d).\n *****\n",
                    "rendered": {
                      "text": "\n/**\n * Argon2id: Version of Argon2 where the first half-pass over memory is\n * password-independent, the rest are password-dependent (on the password and\n * salt). OK against side channels (they reduce to 1/2-pass Argon2i), and\n * better with w.r.t. tradeoff attacks (similar to Argon2d).\n *****\n",
                      "markdown": "`\n/**\n * Argon2id: Version of Argon2 where the first half-pass over memory is\n * password-independent, the rest are password-dependent (on the password and\n * salt). OK against side channels (they reduce to 1/2-pass Argon2i), and\n * better with w.r.t. tradeoff attacks (similar to Argon2d).\n *****\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 3,
                  "endLine": 372,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n/**\n * Argon2id: Version of Argon2 where the first half-pass over memory is\n * password-independent, the rest are password-dependent (on the password and\n * salt). OK against side channels (they reduce to 1/2-pass Argon2i), and\n * better with w.r.t. tradeoff attacks (similar to Argon2d).\n *****\n",
                    "rendered": {
                      "text": "\n/**\n * Argon2id: Version of Argon2 where the first half-pass over memory is\n * password-independent, the rest are password-dependent (on the password and\n * salt). OK against side channels (they reduce to 1/2-pass Argon2i), and\n * better with w.r.t. tradeoff attacks (similar to Argon2d).\n *****\n",
                      "markdown": "`\n/**\n * Argon2id: Version of Argon2 where the first half-pass over memory is\n * password-independent, the rest are password-dependent (on the password and\n * salt). OK against side channels (they reduce to 1/2-pass Argon2i), and\n * better with w.r.t. tradeoff attacks (similar to Argon2d).\n *****\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 22,
                  "endLine": 362,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n/**\n * Argon2i: Version of Argon2 that picks memory blocks\n * independent on the password and salt. Good for side-channels,\n * but worse w.r.t. tradeoff attacks if only one pass is used.\n *****\n * @param  context  Pointer to current Argon2 context\n",
                    "rendered": {
                      "text": "\n/**\n * Argon2i: Version of Argon2 that picks memory blocks\n * independent on the password and salt. Good for side-channels,\n * but worse w.r.t. tradeoff attacks if only one pass is used.\n *****\n * @param  context  Pointer to current Argon2 context\n",
                      "markdown": "`\n/**\n * Argon2i: Version of Argon2 that picks memory blocks\n * independent on the password and salt. Good for side-channels,\n * but worse w.r.t. tradeoff attacks if only one pass is used.\n *****\n * @param  context  Pointer to current Argon2 context\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 10,
                  "endLine": 352,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n/**\n * Argon2d: Version of Argon2 that picks memory blocks depending\n * on the password and salt. Only for side-channel-free\n * environment!!\n *****\n * @param  context  Pointer to current Argon2 context\n",
                    "rendered": {
                      "text": "\n/**\n * Argon2d: Version of Argon2 that picks memory blocks depending\n * on the password and salt. Only for side-channel-free\n * environment!!\n *****\n * @param  context  Pointer to current Argon2 context\n",
                      "markdown": "`\n/**\n * Argon2d: Version of Argon2 that picks memory blocks depending\n * on the password and salt. Only for side-channel-free\n * environment!!\n *****\n * @param  context  Pointer to current Argon2 context\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 25,
                  "endLine": 334,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * Verifies a password against an encoded string\n * Encoded string is restricted as in validate_inputs()\n * @param encoded String encoding parameters, salt, hash\n * @param pwd Pointer to password\n * @pre   Returns ARGON2_OK if successful\n */\nARGON2_PUBLIC int argon2i_verify(const char *encoded, const void *pwd,\n",
                    "rendered": {
                      "text": " * Verifies a password against an encoded string\n * Encoded string is restricted as in validate_inputs()\n * @param encoded String encoding parameters, salt, hash\n * @param pwd Pointer to password\n * @pre   Returns ARGON2_OK if successful\n */\nARGON2_PUBLIC int argon2i_verify(const char *encoded, const void *pwd,\n",
                      "markdown": "` * Verifies a password against an encoded string\n * Encoded string is restricted as in validate_inputs()\n * @param encoded String encoding parameters, salt, hash\n * @param pwd Pointer to password\n * @pre   Returns ARGON2_OK if successful\n */\nARGON2_PUBLIC int argon2i_verify(const char *encoded, const void *pwd,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 14,
                  "endLine": 331,
                  "endColumn": 22,
                  "snippet": {
                    "text": "                              const uint32_t version);\n\n/**\n * Verifies a password against an encoded string\n * Encoded string is restricted as in validate_inputs()\n * @param encoded String encoding parameters, salt, hash\n * @param pwd Pointer to password\n",
                    "rendered": {
                      "text": "                              const uint32_t version);\n\n/**\n * Verifies a password against an encoded string\n * Encoded string is restricted as in validate_inputs()\n * @param encoded String encoding parameters, salt, hash\n * @param pwd Pointer to password\n",
                      "markdown": "`                              const uint32_t version);\n\n/**\n * Verifies a password against an encoded string\n * Encoded string is restricted as in validate_inputs()\n * @param encoded String encoding parameters, salt, hash\n * @param pwd Pointer to password\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 17,
                  "endLine": 278,
                  "endColumn": 25,
                  "snippet": {
                    "text": " * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n * @param hash Buffer where to write the raw hash - updated by the function\n",
                    "rendered": {
                      "text": " * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n * @param hash Buffer where to write the raw hash - updated by the function\n",
                      "markdown": "` * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n * @param hash Buffer where to write the raw hash - updated by the function\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 25,
                  "endLine": 277,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n",
                    "rendered": {
                      "text": " * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n",
                      "markdown": "` * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 12,
                  "endLine": 273,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                                       const size_t encodedlen);\n\n/**\n * Hashes a password with Argon2i, producing a raw hash at @hash\n * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n",
                    "rendered": {
                      "text": "                                       const size_t encodedlen);\n\n/**\n * Hashes a password with Argon2i, producing a raw hash at @hash\n * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n",
                      "markdown": "`                                       const size_t encodedlen);\n\n/**\n * Hashes a password with Argon2i, producing a raw hash at @hash\n * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 17,
                  "endLine": 255,
                  "endColumn": 25,
                  "snippet": {
                    "text": " * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n * @param hashlen Desired length of the hash in bytes\n",
                    "rendered": {
                      "text": " * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n * @param hashlen Desired length of the hash in bytes\n",
                      "markdown": "` * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n * @param hashlen Desired length of the hash in bytes\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 25,
                  "endLine": 254,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n",
                    "rendered": {
                      "text": " * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n",
                      "markdown": "` * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n * @param pwd Pointer to password\n * @param pwdlen Password size in bytes\n * @param salt Pointer to salt\n * @param saltlen Salt size in bytes\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 12,
                  "endLine": 250,
                  "endColumn": 20,
                  "snippet": {
                    "text": "ARGON2_PUBLIC int argon2_ctx(argon2_context *context, argon2_type type);\n\n/**\n * Hashes a password with Argon2i, producing an encoded hash\n * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n",
                    "rendered": {
                      "text": "ARGON2_PUBLIC int argon2_ctx(argon2_context *context, argon2_type type);\n\n/**\n * Hashes a password with Argon2i, producing an encoded hash\n * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n",
                      "markdown": "`ARGON2_PUBLIC int argon2_ctx(argon2_context *context, argon2_type type);\n\n/**\n * Hashes a password with Argon2i, producing an encoded hash\n * @param t_cost Number of iterations\n * @param m_cost Sets memory usage to m_cost kibibytes\n * @param parallelism Number of threads and compute lanes\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 24,
                  "endLine": 196,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    uint32_t outlen; /* digest length */\n\n    uint8_t *pwd;    /* password array */\n    uint32_t pwdlen; /* password length */\n\n    uint8_t *salt;    /* salt array */\n    uint32_t saltlen; /* salt length */\n",
                    "rendered": {
                      "text": "    uint32_t outlen; /* digest length */\n\n    uint8_t *pwd;    /* password array */\n    uint32_t pwdlen; /* password length */\n\n    uint8_t *salt;    /* salt array */\n    uint32_t saltlen; /* salt length */\n",
                      "markdown": "`    uint32_t outlen; /* digest length */\n\n    uint8_t *pwd;    /* password array */\n    uint32_t pwdlen; /* password length */\n\n    uint8_t *salt;    /* salt array */\n    uint32_t saltlen; /* salt length */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 24,
                  "endLine": 195,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    uint8_t *out;    /* output array */\n    uint32_t outlen; /* digest length */\n\n    uint8_t *pwd;    /* password array */\n    uint32_t pwdlen; /* password length */\n\n    uint8_t *salt;    /* salt array */\n",
                    "rendered": {
                      "text": "    uint8_t *out;    /* output array */\n    uint32_t outlen; /* digest length */\n\n    uint8_t *pwd;    /* password array */\n    uint32_t pwdlen; /* password length */\n\n    uint8_t *salt;    /* salt array */\n",
                      "markdown": "`    uint8_t *out;    /* output array */\n    uint32_t outlen; /* digest length */\n\n    uint8_t *pwd;    /* password array */\n    uint32_t pwdlen; /* password length */\n\n    uint8_t *salt;    /* salt array */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 25,
                  "endLine": 186,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * pwd[32], salt is stored in salt[16], you do not have keys nor associated\n * data. You need to spend 1 GB of RAM and you run 5 passes of Argon2d with\n * 4 parallel lanes.\n * You want to erase the password, but you're OK with last pass not being\n * erased. You want to use the default memory allocator.\n * Then you initialize:\n Argon2_Context(out,8,pwd,32,salt,16,NULL,0,NULL,0,5,1<<20,4,4,NULL,NULL,true,false,false,false)\n",
                    "rendered": {
                      "text": " * pwd[32], salt is stored in salt[16], you do not have keys nor associated\n * data. You need to spend 1 GB of RAM and you run 5 passes of Argon2d with\n * 4 parallel lanes.\n * You want to erase the password, but you're OK with last pass not being\n * erased. You want to use the default memory allocator.\n * Then you initialize:\n Argon2_Context(out,8,pwd,32,salt,16,NULL,0,NULL,0,5,1<<20,4,4,NULL,NULL,true,false,false,false)\n",
                      "markdown": "` * pwd[32], salt is stored in salt[16], you do not have keys nor associated\n * data. You need to spend 1 GB of RAM and you run 5 passes of Argon2d with\n * 4 parallel lanes.\n * You want to erase the password, but you're OK with last pass not being\n * erased. You want to use the default memory allocator.\n * Then you initialize:\n Argon2_Context(out,8,pwd,32,salt,16,NULL,0,NULL,0,5,1<<20,4,4,NULL,NULL,true,false,false,false)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 53,
                  "endLine": 182,
                  "endColumn": 61,
                  "snippet": {
                    "text": " * Also, three flags indicate whether to erase password, secret as soon as they\n * are pre-hashed (and thus not needed anymore), and the entire memory\n *****\n * Simplest situation: you have output array out[8], password is stored in\n * pwd[32], salt is stored in salt[16], you do not have keys nor associated\n * data. You need to spend 1 GB of RAM and you run 5 passes of Argon2d with\n * 4 parallel lanes.\n",
                    "rendered": {
                      "text": " * Also, three flags indicate whether to erase password, secret as soon as they\n * are pre-hashed (and thus not needed anymore), and the entire memory\n *****\n * Simplest situation: you have output array out[8], password is stored in\n * pwd[32], salt is stored in salt[16], you do not have keys nor associated\n * data. You need to spend 1 GB of RAM and you run 5 passes of Argon2d with\n * 4 parallel lanes.\n",
                      "markdown": "` * Also, three flags indicate whether to erase password, secret as soon as they\n * are pre-hashed (and thus not needed anymore), and the entire memory\n *****\n * Simplest situation: you have output array out[8], password is stored in\n * pwd[32], salt is stored in salt[16], you do not have keys nor associated\n * data. You need to spend 1 GB of RAM and you run 5 passes of Argon2d with\n * 4 parallel lanes.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 47,
                  "endLine": 179,
                  "endColumn": 55,
                  "snippet": {
                    "text": " * All the parameters above affect the output hash value.\n * Additionally, two function pointers can be provided to allocate and\n * deallocate the memory (if NULL, memory will be allocated internally).\n * Also, three flags indicate whether to erase password, secret as soon as they\n * are pre-hashed (and thus not needed anymore), and the entire memory\n *****\n * Simplest situation: you have output array out[8], password is stored in\n",
                    "rendered": {
                      "text": " * All the parameters above affect the output hash value.\n * Additionally, two function pointers can be provided to allocate and\n * deallocate the memory (if NULL, memory will be allocated internally).\n * Also, three flags indicate whether to erase password, secret as soon as they\n * are pre-hashed (and thus not needed anymore), and the entire memory\n *****\n * Simplest situation: you have output array out[8], password is stored in\n",
                      "markdown": "` * All the parameters above affect the output hash value.\n * Additionally, two function pointers can be provided to allocate and\n * deallocate the memory (if NULL, memory will be allocated internally).\n * Also, three flags indicate whether to erase password, secret as soon as they\n * are pre-hashed (and thus not needed anymore), and the entire memory\n *****\n * Simplest situation: you have output array out[8], password is stored in\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 4,
                  "endLine": 170,
                  "endColumn": 12,
                  "snippet": {
                    "text": " *****\n * Context: structure to hold Argon2 inputs:\n *  output array and its length,\n *  password and its length,\n *  salt and its length,\n *  secret and its length,\n *  associated data and its length,\n",
                    "rendered": {
                      "text": " *****\n * Context: structure to hold Argon2 inputs:\n *  output array and its length,\n *  password and its length,\n *  salt and its length,\n *  secret and its length,\n *  associated data and its length,\n",
                      "markdown": "` *****\n * Context: structure to hold Argon2 inputs:\n *  output array and its length,\n *  password and its length,\n *  salt and its length,\n *  secret and its length,\n *  associated data and its length,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 26,
                  "endLine": 92,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n/* Flags to determine which fields are securely wiped (default = no wipe). */\n#define ARGON2_DEFAULT_FLAGS UINT32_C(0)\n#define ARGON2_FLAG_CLEAR_PASSWORD (UINT32_C(1) << 0)\n#define ARGON2_FLAG_CLEAR_SECRET (UINT32_C(1) << 1)\n\n/* Global flag to determine if we are wiping internal memory buffers. This flag\n",
                    "rendered": {
                      "text": "\n/* Flags to determine which fields are securely wiped (default = no wipe). */\n#define ARGON2_DEFAULT_FLAGS UINT32_C(0)\n#define ARGON2_FLAG_CLEAR_PASSWORD (UINT32_C(1) << 0)\n#define ARGON2_FLAG_CLEAR_SECRET (UINT32_C(1) << 1)\n\n/* Global flag to determine if we are wiping internal memory buffers. This flag\n",
                      "markdown": "`\n/* Flags to determine which fields are securely wiped (default = no wipe). */\n#define ARGON2_DEFAULT_FLAGS UINT32_C(0)\n#define ARGON2_FLAG_CLEAR_PASSWORD (UINT32_C(1) << 0)\n#define ARGON2_FLAG_CLEAR_SECRET (UINT32_C(1) << 1)\n\n/* Global flag to determine if we are wiping internal memory buffers. This flag\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/include/argon2.h"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 23,
                  "endLine": 74,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#define ARGON2_MIN_TIME UINT32_C(1)\n#define ARGON2_MAX_TIME UINT32_C(0xFFFFFFFF)\n\n/* Minimum and maximum password length in bytes */\n#define ARGON2_MIN_PWD_LENGTH UINT32_C(0)\n#define ARGON2_MAX_PWD_LENGTH UINT32_C(0xFFFFFFFF)\n\n",
                    "rendered": {
                      "text": "#define ARGON2_MIN_TIME UINT32_C(1)\n#define ARGON2_MAX_TIME UINT32_C(0xFFFFFFFF)\n\n/* Minimum and maximum password length in bytes */\n#define ARGON2_MIN_PWD_LENGTH UINT32_C(0)\n#define ARGON2_MAX_PWD_LENGTH UINT32_C(0xFFFFFFFF)\n\n",
                      "markdown": "`#define ARGON2_MIN_TIME UINT32_C(1)\n#define ARGON2_MAX_TIME UINT32_C(0xFFFFFFFF)\n\n/* Minimum and maximum password length in bytes */\n#define ARGON2_MIN_PWD_LENGTH UINT32_C(0)\n#define ARGON2_MAX_PWD_LENGTH UINT32_C(0xFFFFFFFF)\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 2,
                  "endLine": 29,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# 20151206\n\n* Python bindings\n* Password read from stdin, instead of being an argument\n* Compatibility FreeBSD, NetBSD, OpenBSD\n* Constant-time verification\n* Minor bug and warning fixes (no security issue)\n",
                    "rendered": {
                      "text": "# 20151206\n\n* Python bindings\n* Password read from stdin, instead of being an argument\n* Compatibility FreeBSD, NetBSD, OpenBSD\n* Constant-time verification\n* Minor bug and warning fixes (no security issue)\n",
                      "markdown": "`# 20151206\n\n* Python bindings\n* Password read from stdin, instead of being an argument\n* Compatibility FreeBSD, NetBSD, OpenBSD\n* Constant-time verification\n* Minor bug and warning fixes (no security issue)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 12,
                  "endLine": 20,
                  "endColumn": 21,
                  "snippet": {
                    "text": "* Version 1.3 of Argon2\n* Version number in encoded hash\n* Refactored low-level API\n* Visibility control for library symbols\n* Microsoft Visual Studio solution\n* New bindings\n* Minor bug and warning fixes (no security issue)\n",
                    "rendered": {
                      "text": "* Version 1.3 of Argon2\n* Version number in encoded hash\n* Refactored low-level API\n* Visibility control for library symbols\n* Microsoft Visual Studio solution\n* New bindings\n* Minor bug and warning fixes (no security issue)\n",
                      "markdown": "`* Version 1.3 of Argon2\n* Version number in encoded hash\n* Refactored low-level API\n* Visibility control for library symbols\n* Microsoft Visual Studio solution\n* New bindings\n* Minor bug and warning fixes (no security issue)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.travis.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 9,
                  "snippet": {
                    "text": "script: make && make testci\n\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n",
                    "rendered": {
                      "text": "script: make && make testci\n\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n",
                      "markdown": "`script: make && make testci\n\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.travis.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 9,
                  "snippet": {
                    "text": "script: make && make testci\n\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n",
                    "rendered": {
                      "text": "script: make && make testci\n\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n",
                      "markdown": "`script: make && make testci\n\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3028,
                  "startColumn": 46,
                  "endLine": 3028,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\\newif\\if@IEEEeqnarrayboxnojot% flag to indicate if the environment was called as the star form\n\\@IEEEeqnarrayboxnojotfalse\n\n\\newif\\if@advanceIEEEeqncolcnt% tracks if the environment should advance the col counter\n% allows a way to make an \\IEEEeqnarraybox that can be used within an \\IEEEeqnarray\n% used by IEEEeqnarraymulticol so that it can work properly in both\n\\@advanceIEEEeqncolcnttrue\n",
                    "rendered": {
                      "text": "\\newif\\if@IEEEeqnarrayboxnojot% flag to indicate if the environment was called as the star form\n\\@IEEEeqnarrayboxnojotfalse\n\n\\newif\\if@advanceIEEEeqncolcnt% tracks if the environment should advance the col counter\n% allows a way to make an \\IEEEeqnarraybox that can be used within an \\IEEEeqnarray\n% used by IEEEeqnarraymulticol so that it can work properly in both\n\\@advanceIEEEeqncolcnttrue\n",
                      "markdown": "`\\newif\\if@IEEEeqnarrayboxnojot% flag to indicate if the environment was called as the star form\n\\@IEEEeqnarrayboxnojotfalse\n\n\\newif\\if@advanceIEEEeqncolcnt% tracks if the environment should advance the col counter\n% allows a way to make an \\IEEEeqnarraybox that can be used within an \\IEEEeqnarray\n% used by IEEEeqnarraymulticol so that it can work properly in both\n\\@advanceIEEEeqncolcnttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 6219,
                  "startColumn": 1,
                  "endLine": 6219,
                  "endColumn": 5,
                  "snippet": {
                    "text": "% disable \\IEEEPARstart when in draft mode\n% This may have originally been done because the pre-V1.6 drop letter\n% algorithm had problems with a non-unity baselinestretch\n% At any rate, it seems too formal to have a drop letter in a draft\n% paper.\n\\ifCLASSOPTIONdraftcls\n\\def\\IEEEPARstart#1#2{#1#2\\if@IEEEWARNIEEEPARstart\\typeout{** ATTENTION: \\noexpand\\IEEEPARstart\n",
                    "rendered": {
                      "text": "% disable \\IEEEPARstart when in draft mode\n% This may have originally been done because the pre-V1.6 drop letter\n% algorithm had problems with a non-unity baselinestretch\n% At any rate, it seems too formal to have a drop letter in a draft\n% paper.\n\\ifCLASSOPTIONdraftcls\n\\def\\IEEEPARstart#1#2{#1#2\\if@IEEEWARNIEEEPARstart\\typeout{** ATTENTION: \\noexpand\\IEEEPARstart\n",
                      "markdown": "`% disable \\IEEEPARstart when in draft mode\n% This may have originally been done because the pre-V1.6 drop letter\n% algorithm had problems with a non-unity baselinestretch\n% At any rate, it seems too formal to have a drop letter in a draft\n% paper.\n\\ifCLASSOPTIONdraftcls\n\\def\\IEEEPARstart#1#2{#1#2\\if@IEEEWARNIEEEPARstart\\typeout{** ATTENTION: \\noexpand\\IEEEPARstart\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 6171,
                  "startColumn": 7,
                  "endLine": 6171,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\\if@twocolumn\\if@IEEEusingpubid\\enlargethispage{-\\@IEEEpubidpullup}\\fi\\fi\\fi\\fi}\n\n% Special thanks to Peter Wilson, Daniel Luecking, and the other\n% gurus at comp.text.tex, for helping me to understand how best to\n% implement the IEEEpubid command in LaTeX.\n\n\n",
                    "rendered": {
                      "text": "\\if@twocolumn\\if@IEEEusingpubid\\enlargethispage{-\\@IEEEpubidpullup}\\fi\\fi\\fi\\fi}\n\n% Special thanks to Peter Wilson, Daniel Luecking, and the other\n% gurus at comp.text.tex, for helping me to understand how best to\n% implement the IEEEpubid command in LaTeX.\n\n\n",
                      "markdown": "`\\if@twocolumn\\if@IEEEusingpubid\\enlargethispage{-\\@IEEEpubidpullup}\\fi\\fi\\fi\\fi}\n\n% Special thanks to Peter Wilson, Daniel Luecking, and the other\n% gurus at comp.text.tex, for helping me to understand how best to\n% implement the IEEEpubid command in LaTeX.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 6151,
                  "startColumn": 47,
                  "endLine": 6151,
                  "endColumn": 51,
                  "snippet": {
                    "text": "% flag so \\maketitle can tell if \\IEEEpubid was called\n\\newif\\if@IEEEusingpubid\n\\global\\@IEEEusingpubidfalse\n% issue this command in the page to have the ID at the bottom\n% V1.6 use before \\maketitle\n\\def\\IEEEpubid#1{\\def\\@IEEEpubid{#1}\\global\\@IEEEusingpubidtrue}\n\n",
                    "rendered": {
                      "text": "% flag so \\maketitle can tell if \\IEEEpubid was called\n\\newif\\if@IEEEusingpubid\n\\global\\@IEEEusingpubidfalse\n% issue this command in the page to have the ID at the bottom\n% V1.6 use before \\maketitle\n\\def\\IEEEpubid#1{\\def\\@IEEEpubid{#1}\\global\\@IEEEusingpubidtrue}\n\n",
                      "markdown": "`% flag so \\maketitle can tell if \\IEEEpubid was called\n\\newif\\if@IEEEusingpubid\n\\global\\@IEEEusingpubidfalse\n% issue this command in the page to have the ID at the bottom\n% V1.6 use before \\maketitle\n\\def\\IEEEpubid#1{\\def\\@IEEEpubid{#1}\\global\\@IEEEusingpubidtrue}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5914,
                  "startColumn": 58,
                  "endLine": 5914,
                  "endColumn": 62,
                  "snippet": {
                    "text": "% \\@IEEEPARstartfont is globaly set to the calculated font of the big letter\n% We need to carry this out of the local calculation area to to create the\n% big letter.\n\\global\\font\\@IEEEPARstartfont\\@IEEEPARstartFONTNAME\\space at \\@IEEEtrantmpdimenB%\n% Now set \\@IEEEtrantmpdimenA to the width of the big letter\n% We need to carry this out of the local calculation area to set the\n% hanging indent\n",
                    "rendered": {
                      "text": "% \\@IEEEPARstartfont is globaly set to the calculated font of the big letter\n% We need to carry this out of the local calculation area to to create the\n% big letter.\n\\global\\font\\@IEEEPARstartfont\\@IEEEPARstartFONTNAME\\space at \\@IEEEtrantmpdimenB%\n% Now set \\@IEEEtrantmpdimenA to the width of the big letter\n% We need to carry this out of the local calculation area to set the\n% hanging indent\n",
                      "markdown": "`% \\@IEEEPARstartfont is globaly set to the calculated font of the big letter\n% We need to carry this out of the local calculation area to to create the\n% big letter.\n\\global\\font\\@IEEEPARstartfont\\@IEEEPARstartFONTNAME\\space at \\@IEEEtrantmpdimenB%\n% Now set \\@IEEEtrantmpdimenA to the width of the big letter\n% We need to carry this out of the local calculation area to set the\n% hanging indent\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5882,
                  "startColumn": 54,
                  "endLine": 5882,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\\xdef\\@IEEEPARstartFONTNAME{\\expandafter\\@IEEEPARstartGETFIRSTWORD\\@IEEEPARstartFONTNAMESPACE\\relax}}}%\n% define a font based on this name with a point size equal to the desired\n% height of the drop letter\n\\font\\@IEEEPARstartsubfont\\@IEEEPARstartFONTNAME\\space at \\@IEEEtrantmpdimenA\\relax%\n% save this value as a counter (integer) value (sp points)\n\\@IEEEtrantmpcountA=\\@IEEEtrantmpdimenA%\n% now get the height of the actual letter produced by this font size\n",
                    "rendered": {
                      "text": "\\xdef\\@IEEEPARstartFONTNAME{\\expandafter\\@IEEEPARstartGETFIRSTWORD\\@IEEEPARstartFONTNAMESPACE\\relax}}}%\n% define a font based on this name with a point size equal to the desired\n% height of the drop letter\n\\font\\@IEEEPARstartsubfont\\@IEEEPARstartFONTNAME\\space at \\@IEEEtrantmpdimenA\\relax%\n% save this value as a counter (integer) value (sp points)\n\\@IEEEtrantmpcountA=\\@IEEEtrantmpdimenA%\n% now get the height of the actual letter produced by this font size\n",
                      "markdown": "`\\xdef\\@IEEEPARstartFONTNAME{\\expandafter\\@IEEEPARstartGETFIRSTWORD\\@IEEEPARstartFONTNAMESPACE\\relax}}}%\n% define a font based on this name with a point size equal to the desired\n% height of the drop letter\n\\font\\@IEEEPARstartsubfont\\@IEEEPARstartFONTNAME\\space at \\@IEEEtrantmpdimenA\\relax%\n% save this value as a counter (integer) value (sp points)\n\\@IEEEtrantmpcountA=\\@IEEEtrantmpdimenA%\n% now get the height of the actual letter produced by this font size\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5848,
                  "startColumn": 40,
                  "endLine": 5848,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\\providecommand{\\IEEEPARstartSEP}{0.15em}\n% V1.7 horizontal offset applied to the left of the drop cap.\n\\providecommand{\\IEEEPARstartHOFFSET}{0em}\n% V1.7 Italic correction command applied at the end of the drop cap.\n\\providecommand{\\IEEEPARstartITLCORRECT}{\\/}\n\n% width of the letter output, set globally. Can be used in \\IEEEPARstartSEP\n",
                    "rendered": {
                      "text": "\\providecommand{\\IEEEPARstartSEP}{0.15em}\n% V1.7 horizontal offset applied to the left of the drop cap.\n\\providecommand{\\IEEEPARstartHOFFSET}{0em}\n% V1.7 Italic correction command applied at the end of the drop cap.\n\\providecommand{\\IEEEPARstartITLCORRECT}{\\/}\n\n% width of the letter output, set globally. Can be used in \\IEEEPARstartSEP\n",
                      "markdown": "`\\providecommand{\\IEEEPARstartSEP}{0.15em}\n% V1.7 horizontal offset applied to the left of the drop cap.\n\\providecommand{\\IEEEPARstartHOFFSET}{0em}\n% V1.7 Italic correction command applied at the end of the drop cap.\n\\providecommand{\\IEEEPARstartITLCORRECT}{\\/}\n\n% width of the letter output, set globally. Can be used in \\IEEEPARstartSEP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5811,
                  "startColumn": 17,
                  "endLine": 5811,
                  "endColumn": 26,
                  "snippet": {
                    "text": "% \n% We generalize things via control macros - playing with these is fun too.\n% \n% V1.7 added more control macros to make it easy for IEEEtrantools.sty users\n% to change the font style.\n% \n% the number of lines that are indented to clear it\n",
                    "rendered": {
                      "text": "% \n% We generalize things via control macros - playing with these is fun too.\n% \n% V1.7 added more control macros to make it easy for IEEEtrantools.sty users\n% to change the font style.\n% \n% the number of lines that are indented to clear it\n",
                      "markdown": "`% \n% We generalize things via control macros - playing with these is fun too.\n% \n% V1.7 added more control macros to make it easy for IEEEtrantools.sty users\n% to change the font style.\n% \n% the number of lines that are indented to clear it\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5809,
                  "startColumn": 26,
                  "endLine": 5809,
                  "endColumn": 35,
                  "snippet": {
                    "text": "%    interword glue will now work as normal.\n% 4. produce correctly aligned edges for the (two) indented lines.\n% \n% We generalize things via control macros - playing with these is fun too.\n% \n% V1.7 added more control macros to make it easy for IEEEtrantools.sty users\n% to change the font style.\n",
                    "rendered": {
                      "text": "%    interword glue will now work as normal.\n% 4. produce correctly aligned edges for the (two) indented lines.\n% \n% We generalize things via control macros - playing with these is fun too.\n% \n% V1.7 added more control macros to make it easy for IEEEtrantools.sty users\n% to change the font style.\n",
                      "markdown": "`%    interword glue will now work as normal.\n% 4. produce correctly aligned edges for the (two) indented lines.\n% \n% We generalize things via control macros - playing with these is fun too.\n% \n% V1.7 added more control macros to make it easy for IEEEtrantools.sty users\n% to change the font style.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5805,
                  "startColumn": 33,
                  "endLine": 5805,
                  "endColumn": 37,
                  "snippet": {
                    "text": "% 1. no longer have problems when the user begins an environment\n%    within the paragraph that uses \\IEEEPARstart.\n% 2. auto-detect and use the current font family\n% 3. revise handling of the space at the end of the first word so that\n%    interword glue will now work as normal.\n% 4. produce correctly aligned edges for the (two) indented lines.\n% \n",
                    "rendered": {
                      "text": "% 1. no longer have problems when the user begins an environment\n%    within the paragraph that uses \\IEEEPARstart.\n% 2. auto-detect and use the current font family\n% 3. revise handling of the space at the end of the first word so that\n%    interword glue will now work as normal.\n% 4. produce correctly aligned edges for the (two) indented lines.\n% \n",
                      "markdown": "`% 1. no longer have problems when the user begins an environment\n%    within the paragraph that uses \\IEEEPARstart.\n% 2. auto-detect and use the current font family\n% 3. revise handling of the space at the end of the first word so that\n%    interword glue will now work as normal.\n% 4. produce correctly aligned edges for the (two) indented lines.\n% \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5796,
                  "startColumn": 49,
                  "endLine": 5796,
                  "endColumn": 53,
                  "snippet": {
                    "text": "%\n%\n% \\IEEEPARstart\n% Definition for the big two line drop cap letter at the beginning of the\n% first paragraph of journal papers. The first argument is the first letter\n% of the first word, the second argument is the remaining letters of the\n% first word which will be rendered in upper case.\n",
                    "rendered": {
                      "text": "%\n%\n% \\IEEEPARstart\n% Definition for the big two line drop cap letter at the beginning of the\n% first paragraph of journal papers. The first argument is the first letter\n% of the first word, the second argument is the remaining letters of the\n% first word which will be rendered in upper case.\n",
                      "markdown": "`%\n%\n% \\IEEEPARstart\n% Definition for the big two line drop cap letter at the beginning of the\n% first paragraph of journal papers. The first argument is the first letter\n% of the first word, the second argument is the remaining letters of the\n% first word which will be rendered in upper case.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5775,
                  "startColumn": 29,
                  "endLine": 5775,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    \\@IEEEcompsocconfonly{\\gdef\\thesectiondis{\\Alph{section}.}}%\n    \\gdef\\@IEEEthmcounterinsection##1{\\Alph{##1}}\n    \\fi%\n    \\refstepcounter{section}% update the \\ref counter\n    \\setcounter{section}{0}% NEXT \\section will be the FIRST appendix\n    % redefine \\section command for appendices\n    % leave \\section* as is\n",
                    "rendered": {
                      "text": "    \\@IEEEcompsocconfonly{\\gdef\\thesectiondis{\\Alph{section}.}}%\n    \\gdef\\@IEEEthmcounterinsection##1{\\Alph{##1}}\n    \\fi%\n    \\refstepcounter{section}% update the \\ref counter\n    \\setcounter{section}{0}% NEXT \\section will be the FIRST appendix\n    % redefine \\section command for appendices\n    % leave \\section* as is\n",
                      "markdown": "`    \\@IEEEcompsocconfonly{\\gdef\\thesectiondis{\\Alph{section}.}}%\n    \\gdef\\@IEEEthmcounterinsection##1{\\Alph{##1}}\n    \\fi%\n    \\refstepcounter{section}% update the \\ref counter\n    \\setcounter{section}{0}% NEXT \\section will be the FIRST appendix\n    % redefine \\section command for appendices\n    % leave \\section* as is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5738,
                  "startColumn": 29,
                  "endLine": 5738,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    \\gdef\\thesectiondis{}% \n    \\gdef\\thesubsection{\\Alph{subsection}}%\n    \\gdef\\@IEEEthmcounterinsection##1{A}\n    \\refstepcounter{section}% update the \\ref counter\n    \\@ifmtarg{#1}{\\@IEEEappendixsavesection*{\\appendixname}%\n                  \\addcontentsline{toc}{section}{\\appendixname}}{%\n             \\@IEEEappendixsavesection*{\\appendixname\\nobreakspace\\\\* #1}%\n",
                    "rendered": {
                      "text": "    \\gdef\\thesectiondis{}% \n    \\gdef\\thesubsection{\\Alph{subsection}}%\n    \\gdef\\@IEEEthmcounterinsection##1{A}\n    \\refstepcounter{section}% update the \\ref counter\n    \\@ifmtarg{#1}{\\@IEEEappendixsavesection*{\\appendixname}%\n                  \\addcontentsline{toc}{section}{\\appendixname}}{%\n             \\@IEEEappendixsavesection*{\\appendixname\\nobreakspace\\\\* #1}%\n",
                      "markdown": "`    \\gdef\\thesectiondis{}% \n    \\gdef\\thesubsection{\\Alph{subsection}}%\n    \\gdef\\@IEEEthmcounterinsection##1{A}\n    \\refstepcounter{section}% update the \\ref counter\n    \\@ifmtarg{#1}{\\@IEEEappendixsavesection*{\\appendixname}%\n                  \\addcontentsline{toc}{section}{\\appendixname}}{%\n             \\@IEEEappendixsavesection*{\\appendixname\\nobreakspace\\\\* #1}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5635,
                  "startColumn": 34,
                  "endLine": 5635,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\\pagestyle{headings}\n\\pagenumbering{arabic}\n\n% normally the page counter starts at 1\n\\setcounter{page}{1}\n% however, for peerreview the cover sheet is page 0 or page -1\n% (for duplex printing)\n",
                    "rendered": {
                      "text": "\\pagestyle{headings}\n\\pagenumbering{arabic}\n\n% normally the page counter starts at 1\n\\setcounter{page}{1}\n% however, for peerreview the cover sheet is page 0 or page -1\n% (for duplex printing)\n",
                      "markdown": "`\\pagestyle{headings}\n\\pagenumbering{arabic}\n\n% normally the page counter starts at 1\n\\setcounter{page}{1}\n% however, for peerreview the cover sheet is page 0 or page -1\n% (for duplex printing)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5555,
                  "startColumn": 24,
                  "endLine": 5555,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                    \\let\\veqno\\relax\\hbox{\\IEEEQED}}\n% IEEE style qedhere for IEEEeqnarray and other environments\n\\def\\IEEEQEDhere{\\global\\@IEEEQEDshowfalse\\IEEEQED}\n% command to disable QED at end of IEEEproof\n\\def\\IEEEQEDoff{\\global\\@IEEEQEDshowfalse}\n\n\n",
                    "rendered": {
                      "text": "                    \\let\\veqno\\relax\\hbox{\\IEEEQED}}\n% IEEE style qedhere for IEEEeqnarray and other environments\n\\def\\IEEEQEDhere{\\global\\@IEEEQEDshowfalse\\IEEEQED}\n% command to disable QED at end of IEEEproof\n\\def\\IEEEQEDoff{\\global\\@IEEEQEDshowfalse}\n\n\n",
                      "markdown": "`                    \\let\\veqno\\relax\\hbox{\\IEEEQED}}\n% IEEE style qedhere for IEEEeqnarray and other environments\n\\def\\IEEEQEDhere{\\global\\@IEEEQEDshowfalse\\IEEEQED}\n% command to disable QED at end of IEEEproof\n\\def\\IEEEQEDoff{\\global\\@IEEEQEDshowfalse}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5532,
                  "startColumn": 15,
                  "endLine": 5532,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n\n%% ENVIRONMENTS\n% \"box\" symbols at end of proofs\n\\def\\IEEEQEDclosed{\\mbox{\\rule[0pt]{1.3ex}{1.3ex}}} % for a filled box\n% V1.6 some journals use an open box instead that will just fit around a closed one\n\\def\\IEEEQEDopen{{\\setlength{\\fboxsep}{0pt}\\setlength{\\fboxrule}{0.2pt}\\fbox{\\rule[0pt]{0pt}{1.3ex}\\rule[0pt]{1.3ex}{0pt}}}}\n",
                    "rendered": {
                      "text": "\n\n%% ENVIRONMENTS\n% \"box\" symbols at end of proofs\n\\def\\IEEEQEDclosed{\\mbox{\\rule[0pt]{1.3ex}{1.3ex}}} % for a filled box\n% V1.6 some journals use an open box instead that will just fit around a closed one\n\\def\\IEEEQEDopen{{\\setlength{\\fboxsep}{0pt}\\setlength{\\fboxrule}{0.2pt}\\fbox{\\rule[0pt]{0pt}{1.3ex}\\rule[0pt]{1.3ex}{0pt}}}}\n",
                      "markdown": "`\n\n%% ENVIRONMENTS\n% \"box\" symbols at end of proofs\n\\def\\IEEEQEDclosed{\\mbox{\\rule[0pt]{1.3ex}{1.3ex}}} % for a filled box\n% V1.6 some journals use an open box instead that will just fit around a closed one\n\\def\\IEEEQEDopen{{\\setlength{\\fboxsep}{0pt}\\setlength{\\fboxrule}{0.2pt}\\fbox{\\rule[0pt]{0pt}{1.3ex}\\rule[0pt]{1.3ex}{0pt}}}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5525,
                  "startColumn": 63,
                  "endLine": 5525,
                  "endColumn": 67,
                  "snippet": {
                    "text": "% Society papers. We have to remove any spacing glue after the section\n% heading and then remove the blank line for the new paragraph after it.\n% LaTeX's section handler alters \\everypar and we need to propogate those\n% changes outside of the \\parbox lest there be spacing problems at the top\n% of the next section.\n\\def\\IEEEraisesectionheading#1{\\noindent\\raisebox{1.5\\baselineskip}[0pt][0pt]{\\parbox[b]{\\columnwidth}{#1\\unskip\\global\\everypar=\\everypar}}\\vspace{-1\\baselineskip}\\vspace{-\\parskip}\\par}\n\n",
                    "rendered": {
                      "text": "% Society papers. We have to remove any spacing glue after the section\n% heading and then remove the blank line for the new paragraph after it.\n% LaTeX's section handler alters \\everypar and we need to propogate those\n% changes outside of the \\parbox lest there be spacing problems at the top\n% of the next section.\n\\def\\IEEEraisesectionheading#1{\\noindent\\raisebox{1.5\\baselineskip}[0pt][0pt]{\\parbox[b]{\\columnwidth}{#1\\unskip\\global\\everypar=\\everypar}}\\vspace{-1\\baselineskip}\\vspace{-\\parskip}\\par}\n\n",
                      "markdown": "`% Society papers. We have to remove any spacing glue after the section\n% heading and then remove the blank line for the new paragraph after it.\n% LaTeX's section handler alters \\everypar and we need to propogate those\n% changes outside of the \\parbox lest there be spacing problems at the top\n% of the next section.\n\\def\\IEEEraisesectionheading#1{\\noindent\\raisebox{1.5\\baselineskip}[0pt][0pt]{\\parbox[b]{\\columnwidth}{#1\\unskip\\global\\everypar=\\everypar}}\\vspace{-1\\baselineskip}\\vspace{-\\parskip}\\par}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5458,
                  "startColumn": 26,
                  "endLine": 5459,
                  "snippet": {
                    "text": "%                #5 - (absolute value used) positive: bottom separation after heading,\n%                      negative: amount to indent main text after heading\n%                Both #4 and #5 negative means to indent main text and use negative top separation\n%                #6 - font control\n% You've got to have \\normalfont\\normalsize in the font specs below to prevent\n% trouble when you do something like:\n% \\section{Note}{\\ttfamily TT-TEXT} is known to ... \n% The IEEE sometimes REALLY stretches the area before a section\n",
                    "rendered": {
                      "text": "%                #5 - (absolute value used) positive: bottom separation after heading,\n%                      negative: amount to indent main text after heading\n%                Both #4 and #5 negative means to indent main text and use negative top separation\n%                #6 - font control\n% You've got to have \\normalfont\\normalsize in the font specs below to prevent\n% trouble when you do something like:\n% \\section{Note}{\\ttfamily TT-TEXT} is known to ... \n% The IEEE sometimes REALLY stretches the area before a section\n",
                      "markdown": "`%                #5 - (absolute value used) positive: bottom separation after heading,\n%                      negative: amount to indent main text after heading\n%                Both #4 and #5 negative means to indent main text and use negative top separation\n%                #6 - font control\n% You've got to have \\normalfont\\normalsize in the font specs below to prevent\n% trouble when you do something like:\n% \\section{Note}{\\ttfamily TT-TEXT} is known to ... \n% The IEEE sometimes REALLY stretches the area before a section\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5436,
                  "startColumn": 58,
                  "endLine": 5437,
                  "snippet": {
                    "text": "\n\n% section* handler\n%v1.7 put {} after #4 to allow for some types of user font control\n%and use \\@@par rather than \\par\n\\def\\@ssect#1#2#3#4#5{\\@tempskipa #3\\relax\n  \\ifdim \\@tempskipa>\\z@\n     %\\begingroup #4\\@hangfrom{\\hskip #1}{\\interlinepenalty \\@M #5\\par}\\endgroup\n",
                    "rendered": {
                      "text": "\n\n% section* handler\n%v1.7 put {} after #4 to allow for some types of user font control\n%and use \\@@par rather than \\par\n\\def\\@ssect#1#2#3#4#5{\\@tempskipa #3\\relax\n  \\ifdim \\@tempskipa>\\z@\n     %\\begingroup #4\\@hangfrom{\\hskip #1}{\\interlinepenalty \\@M #5\\par}\\endgroup\n",
                      "markdown": "`\n\n% section* handler\n%v1.7 put {} after #4 to allow for some types of user font control\n%and use \\@@par rather than \\par\n\\def\\@ssect#1#2#3#4#5{\\@tempskipa #3\\relax\n  \\ifdim \\@tempskipa>\\z@\n     %\\begingroup #4\\@hangfrom{\\hskip #1}{\\interlinepenalty \\@M #5\\par}\\endgroup\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5405,
                  "startColumn": 58,
                  "endLine": 5406,
                  "snippet": {
                    "text": "\\def\\@seccntformat#1{\\csname the#1dis\\endcsname\\hskip 1em\\relax}\n\\fi\\fi\n\n%v1.7 put {} after #6 to allow for some types of user font control\n%and use \\@@par rather than \\par\n\\def\\@sect#1#2#3#4#5#6[#7]#8{%\n  \\ifnum #2>\\c@secnumdepth\n     \\let\\@svsec\\@empty\n",
                    "rendered": {
                      "text": "\\def\\@seccntformat#1{\\csname the#1dis\\endcsname\\hskip 1em\\relax}\n\\fi\\fi\n\n%v1.7 put {} after #6 to allow for some types of user font control\n%and use \\@@par rather than \\par\n\\def\\@sect#1#2#3#4#5#6[#7]#8{%\n  \\ifnum #2>\\c@secnumdepth\n     \\let\\@svsec\\@empty\n",
                      "markdown": "`\\def\\@seccntformat#1{\\csname the#1dis\\endcsname\\hskip 1em\\relax}\n\\fi\\fi\n\n%v1.7 put {} after #6 to allow for some types of user font control\n%and use \\@@par rather than \\par\n\\def\\@sect#1#2#3#4#5#6[#7]#8{%\n  \\ifnum #2>\\c@secnumdepth\n     \\let\\@svsec\\@empty\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5372,
                  "startColumn": 3,
                  "endLine": 5372,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\\ifx\\@IEEEgobbleleadPARNLSPtoken\\@IEEEgobbleleadSPtoken%\n\\let\\@IEEEswallowthistoken=1%\n\\fi%\n% a control space will come in as a macro\n% when it is the last one on a line\n\\ifx\\@IEEEgobbleleadPARNLSPtoken\\@IEEEgobbleleadSPMACRO%\n\\let\\@IEEEswallowthistoken=1%\n",
                    "rendered": {
                      "text": "\\ifx\\@IEEEgobbleleadPARNLSPtoken\\@IEEEgobbleleadSPtoken%\n\\let\\@IEEEswallowthistoken=1%\n\\fi%\n% a control space will come in as a macro\n% when it is the last one on a line\n\\ifx\\@IEEEgobbleleadPARNLSPtoken\\@IEEEgobbleleadSPMACRO%\n\\let\\@IEEEswallowthistoken=1%\n",
                      "markdown": "`\\ifx\\@IEEEgobbleleadPARNLSPtoken\\@IEEEgobbleleadSPtoken%\n\\let\\@IEEEswallowthistoken=1%\n\\fi%\n% a control space will come in as a macro\n% when it is the last one on a line\n\\ifx\\@IEEEgobbleleadPARNLSPtoken\\@IEEEgobbleleadSPMACRO%\n\\let\\@IEEEswallowthistoken=1%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5127,
                  "startColumn": 95,
                  "endLine": 5127,
                  "endColumn": 99,
                  "snippet": {
                    "text": "antizeprevdepth>-1000pt\\relax % prevdepth > -1000pf means full baselineskip\\lineskip rules in effect\n% lineskip spacing rule takes effect if height of top line > baselineskip - prevdepth - lineskiplimit, \n% otherwise the baselineskip rule is in effect and the height of the first line does not matter at all.\n\\@IEEEquantizeheightC=\\@IEEEquantizetopbaselineskip\\relax\n\\advance\\@IEEEquantizeheightC-\\@IEEEquantizeprevdepth\\relax\n\\advance\\@IEEEquantizeheightC-\\@IEEEquantizelineskiplimit\\relax % this works even though \\@IEEEquantizelineskiplimit is a macro because TeX allows --10pt notation\n\\ifdim\\@IEEEqu",
                    "rendered": {
                      "text": "antizeprevdepth>-1000pt\\relax % prevdepth > -1000pf means full baselineskip\\lineskip rules in effect\n% lineskip spacing rule takes effect if height of top line > baselineskip - prevdepth - lineskiplimit, \n% otherwise the baselineskip rule is in effect and the height of the first line does not matter at all.\n\\@IEEEquantizeheightC=\\@IEEEquantizetopbaselineskip\\relax\n\\advance\\@IEEEquantizeheightC-\\@IEEEquantizeprevdepth\\relax\n\\advance\\@IEEEquantizeheightC-\\@IEEEquantizelineskiplimit\\relax % this works even though \\@IEEEquantizelineskiplimit is a macro because TeX allows --10pt notation\n\\ifdim\\@IEEEqu",
                      "markdown": "`antizeprevdepth>-1000pt\\relax % prevdepth > -1000pf means full baselineskip\\lineskip rules in effect\n% lineskip spacing rule takes effect if height of top line > baselineskip - prevdepth - lineskiplimit, \n% otherwise the baselineskip rule is in effect and the height of the first line does not matter at all.\n\\@IEEEquantizeheightC=\\@IEEEquantizetopbaselineskip\\relax\n\\advance\\@IEEEquantizeheightC-\\@IEEEquantizeprevdepth\\relax\n\\advance\\@IEEEquantizeheightC-\\@IEEEquantizelineskiplimit\\relax % this works even though \\@IEEEquantizelineskiplimit is a macro because TeX allows --10pt notation\n\\ifdim\\@IEEEqu`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5050,
                  "startColumn": 47,
                  "endLine": 5050,
                  "endColumn": 51,
                  "snippet": {
                    "text": "% Common combinations of these parameters include:\n%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n",
                    "rendered": {
                      "text": "% Common combinations of these parameters include:\n%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n",
                      "markdown": "`% Common combinations of these parameters include:\n%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5021,
                  "startColumn": 52,
                  "endLine": 5021,
                  "endColumn": 56,
                  "snippet": {
                    "text": "% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n%\n% However, as explained on page 78 of the TeXbook, interline spacing is more\n",
                    "rendered": {
                      "text": "% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n%\n% However, as explained on page 78 of the TeXbook, interline spacing is more\n",
                      "markdown": "`% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n%\n% However, as explained on page 78 of the TeXbook, interline spacing is more\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5004,
                  "startColumn": 65,
                  "endLine": 5004,
                  "endColumn": 69,
                  "snippet": {
                    "text": "% before the object's height is evaluated. Its intented purpose is to allow\n% for the alteration or disabling of code within the object during internal\n% height evaluation (e.g., \\long\\def\\thanks#1{\\relax} ).\n% This special code is not invoked if/when the object is rendered at the end.\n%\n% The nominal vspace is the target value of the added vspace and the minimum\n% vspace is the lower allowed limit. The vspacer will be the value that achieves\n",
                    "rendered": {
                      "text": "% before the object's height is evaluated. Its intented purpose is to allow\n% for the alteration or disabling of code within the object during internal\n% height evaluation (e.g., \\long\\def\\thanks#1{\\relax} ).\n% This special code is not invoked if/when the object is rendered at the end.\n%\n% The nominal vspace is the target value of the added vspace and the minimum\n% vspace is the lower allowed limit. The vspacer will be the value that achieves\n",
                      "markdown": "`% before the object's height is evaluated. Its intented purpose is to allow\n% for the alteration or disabling of code within the object during internal\n% height evaluation (e.g., \\long\\def\\thanks#1{\\relax} ).\n% This special code is not invoked if/when the object is rendered at the end.\n%\n% The nominal vspace is the target value of the added vspace and the minimum\n% vspace is the lower allowed limit. The vspacer will be the value that achieves\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4993,
                  "startColumn": 29,
                  "endLine": 4993,
                  "endColumn": 33,
                  "snippet": {
                    "text": "% the given object an integer multiple of the given unit height. This command\n% is more general than the older \\@IEEEdynamictitlevspace it replaces.\n%\n% The star form has no effect at present, but is reserved for future use.\n%\n% If the optional argument [output dimen register] is given, the calculated\n% vspace height is stored in the given output dimen (or skip) register\n",
                    "rendered": {
                      "text": "% the given object an integer multiple of the given unit height. This command\n% is more general than the older \\@IEEEdynamictitlevspace it replaces.\n%\n% The star form has no effect at present, but is reserved for future use.\n%\n% If the optional argument [output dimen register] is given, the calculated\n% vspace height is stored in the given output dimen (or skip) register\n",
                      "markdown": "`% the given object an integer multiple of the given unit height. This command\n% is more general than the older \\@IEEEdynamictitlevspace it replaces.\n%\n% The star form has no effect at present, but is reserved for future use.\n%\n% If the optional argument [output dimen register] is given, the calculated\n% vspace height is stored in the given output dimen (or skip) register\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4801,
                  "startColumn": 40,
                  "endLine": 4801,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n% formats the Title, authors names, affiliations and special paper notice\n% THIS IS A CONTROLLED SPACING COMMAND! Do not allow blank lines or unintentional\n% spaces to enter the definition - use % at the end of each line\n\\def\\@maketitle{\\newpage\n\\bgroup\\par\\vskip\\IEEEtitletopspace\\vskip\\IEEEtitletopspaceextra\\centering%\n\\ifCLASSOPTIONtechnote% technotes, V1.8a abstract and index terms are not treated differently for compsoc technotes\n",
                    "rendered": {
                      "text": "\n% formats the Title, authors names, affiliations and special paper notice\n% THIS IS A CONTROLLED SPACING COMMAND! Do not allow blank lines or unintentional\n% spaces to enter the definition - use % at the end of each line\n\\def\\@maketitle{\\newpage\n\\bgroup\\par\\vskip\\IEEEtitletopspace\\vskip\\IEEEtitletopspaceextra\\centering%\n\\ifCLASSOPTIONtechnote% technotes, V1.8a abstract and index terms are not treated differently for compsoc technotes\n",
                      "markdown": "`\n% formats the Title, authors names, affiliations and special paper notice\n% THIS IS A CONTROLLED SPACING COMMAND! Do not allow blank lines or unintentional\n% spaces to enter the definition - use % at the end of each line\n\\def\\@maketitle{\\newpage\n\\bgroup\\par\\vskip\\IEEEtitletopspace\\vskip\\IEEEtitletopspaceextra\\centering%\n\\ifCLASSOPTIONtechnote% technotes, V1.8a abstract and index terms are not treated differently for compsoc technotes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4624,
                  "startColumn": 18,
                  "endLine": 4624,
                  "endColumn": 22,
                  "snippet": {
                    "text": "% we use this technique to have complete manual control over the spacing of the lines\n% within the halign environment.\n% We set the below baseline portion at 30%, the above\n% baseline portion at 70% of the total length.\n% Responds to changes in the document's \\baselinestretch\n\\def\\@IEEEauthorstrutrule{\\@IEEEtrantmpdimenA\\@IEEEauthorblockXinterlinespace%\n\\@IEEEtrantmpdimenA=\\baselinestretch\\@IEEEtrantmpdimenA%\n",
                    "rendered": {
                      "text": "% we use this technique to have complete manual control over the spacing of the lines\n% within the halign environment.\n% We set the below baseline portion at 30%, the above\n% baseline portion at 70% of the total length.\n% Responds to changes in the document's \\baselinestretch\n\\def\\@IEEEauthorstrutrule{\\@IEEEtrantmpdimenA\\@IEEEauthorblockXinterlinespace%\n\\@IEEEtrantmpdimenA=\\baselinestretch\\@IEEEtrantmpdimenA%\n",
                      "markdown": "`% we use this technique to have complete manual control over the spacing of the lines\n% within the halign environment.\n% We set the below baseline portion at 30%, the above\n% baseline portion at 70% of the total length.\n% Responds to changes in the document's \\baselinestretch\n\\def\\@IEEEauthorstrutrule{\\@IEEEtrantmpdimenA\\@IEEEauthorblockXinterlinespace%\n\\@IEEEtrantmpdimenA=\\baselinestretch\\@IEEEtrantmpdimenA%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4623,
                  "startColumn": 35,
                  "endLine": 4623,
                  "endColumn": 39,
                  "snippet": {
                    "text": "% the command places a strut with height and depth = \\@IEEEauthorblockXinterlinespace\n% we use this technique to have complete manual control over the spacing of the lines\n% within the halign environment.\n% We set the below baseline portion at 30%, the above\n% baseline portion at 70% of the total length.\n% Responds to changes in the document's \\baselinestretch\n\\def\\@IEEEauthorstrutrule{\\@IEEEtrantmpdimenA\\@IEEEauthorblockXinterlinespace%\n",
                    "rendered": {
                      "text": "% the command places a strut with height and depth = \\@IEEEauthorblockXinterlinespace\n% we use this technique to have complete manual control over the spacing of the lines\n% within the halign environment.\n% We set the below baseline portion at 30%, the above\n% baseline portion at 70% of the total length.\n% Responds to changes in the document's \\baselinestretch\n\\def\\@IEEEauthorstrutrule{\\@IEEEtrantmpdimenA\\@IEEEauthorblockXinterlinespace%\n",
                      "markdown": "`% the command places a strut with height and depth = \\@IEEEauthorblockXinterlinespace\n% we use this technique to have complete manual control over the spacing of the lines\n% within the halign environment.\n% We set the below baseline portion at 30%, the above\n% baseline portion at 70% of the total length.\n% Responds to changes in the document's \\baselinestretch\n\\def\\@IEEEauthorstrutrule{\\@IEEEtrantmpdimenA\\@IEEEauthorblockXinterlinespace%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4621,
                  "startColumn": 47,
                  "endLine": 4621,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n\n% the command places a strut with height and depth = \\@IEEEauthorblockXinterlinespace\n% we use this technique to have complete manual control over the spacing of the lines\n% within the halign environment.\n% We set the below baseline portion at 30%, the above\n% baseline portion at 70% of the total length.\n",
                    "rendered": {
                      "text": "\n\n% the command places a strut with height and depth = \\@IEEEauthorblockXinterlinespace\n% we use this technique to have complete manual control over the spacing of the lines\n% within the halign environment.\n% We set the below baseline portion at 30%, the above\n% baseline portion at 70% of the total length.\n",
                      "markdown": "`\n\n% the command places a strut with height and depth = \\@IEEEauthorblockXinterlinespace\n% we use this technique to have complete manual control over the spacing of the lines\n% within the halign environment.\n% We set the below baseline portion at 30%, the above\n% baseline portion at 70% of the total length.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4472,
                  "startColumn": 17,
                  "endLine": 4472,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\\def\\IEEEtriggeratref#1{\\@IEEEtrantmpcountA=#1%\n\\edef\\@IEEEtriggerrefnum{\\the\\@IEEEtrantmpcountA}}%\n\n% trigger command at the given reference\n\\def\\@IEEEbibitemprefix{\\@IEEEtrantmpcountA=\\@IEEEtriggerrefnum\\relax%\n\\advance\\@IEEEtrantmpcountA by -1\\relax%\n\\ifnum\\c@enumiv=\\@IEEEtrantmpcountA\\relax\\@IEEEtriggercmd\\relax\\fi}\n",
                    "rendered": {
                      "text": "\\def\\IEEEtriggeratref#1{\\@IEEEtrantmpcountA=#1%\n\\edef\\@IEEEtriggerrefnum{\\the\\@IEEEtrantmpcountA}}%\n\n% trigger command at the given reference\n\\def\\@IEEEbibitemprefix{\\@IEEEtrantmpcountA=\\@IEEEtriggerrefnum\\relax%\n\\advance\\@IEEEtrantmpcountA by -1\\relax%\n\\ifnum\\c@enumiv=\\@IEEEtrantmpcountA\\relax\\@IEEEtriggercmd\\relax\\fi}\n",
                      "markdown": "`\\def\\IEEEtriggeratref#1{\\@IEEEtrantmpcountA=#1%\n\\edef\\@IEEEtriggerrefnum{\\the\\@IEEEtrantmpcountA}}%\n\n% trigger command at the given reference\n\\def\\@IEEEbibitemprefix{\\@IEEEtrantmpcountA=\\@IEEEtriggerrefnum\\relax%\n\\advance\\@IEEEtrantmpcountA by -1\\relax%\n\\ifnum\\c@enumiv=\\@IEEEtrantmpcountA\\relax\\@IEEEtriggercmd\\relax\\fi}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4433,
                  "startColumn": 25,
                  "endLine": 4433,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\n\n% Provide support for the control entries of IEEEtran.bst V1.00 and later.\n% V1.7 optional argument allows for a different aux file to be specified in\n% order to handle multiple bibliographies. For example, with multibib.sty:\n% \\newcites{sec}{Secondary Literature}\n",
                    "rendered": {
                      "text": "\n\n\n% Provide support for the control entries of IEEEtran.bst V1.00 and later.\n% V1.7 optional argument allows for a different aux file to be specified in\n% order to handle multiple bibliographies. For example, with multibib.sty:\n% \\newcites{sec}{Secondary Literature}\n",
                      "markdown": "`\n\n\n% Provide support for the control entries of IEEEtran.bst V1.00 and later.\n% V1.7 optional argument allows for a different aux file to be specified in\n% order to handle multiple bibliographies. For example, with multibib.sty:\n% \\newcites{sec}{Secondary Literature}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4345,
                  "startColumn": 40,
                  "endLine": 4345,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\ifCLASSOPTIONcompsoc\n      % for compsoc papers, the pubid is at the same vertical position as the normal footer\n      \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\fi\n",
                    "rendered": {
                      "text": "    \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\ifCLASSOPTIONcompsoc\n      % for compsoc papers, the pubid is at the same vertical position as the normal footer\n      \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\fi\n",
                      "markdown": "`    \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\ifCLASSOPTIONcompsoc\n      % for compsoc papers, the pubid is at the same vertical position as the normal footer\n      \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4341,
                  "startColumn": 8,
                  "endLine": 4341,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  \\if@IEEEusingpubid\n    % for peer review cover pages that are using a pubid\n    % for noncompsoc papers, the pubid uses footnotesize and\n    % is at the same vertical position as where the last baseline would normally be\n    \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\ifCLASSOPTIONcompsoc\n",
                    "rendered": {
                      "text": "  \\if@IEEEusingpubid\n    % for peer review cover pages that are using a pubid\n    % for noncompsoc papers, the pubid uses footnotesize and\n    % is at the same vertical position as where the last baseline would normally be\n    \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\ifCLASSOPTIONcompsoc\n",
                      "markdown": "`  \\if@IEEEusingpubid\n    % for peer review cover pages that are using a pubid\n    % for noncompsoc papers, the pubid uses footnotesize and\n    % is at the same vertical position as where the last baseline would normally be\n    \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n    \\ifCLASSOPTIONcompsoc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4308,
                  "startColumn": 42,
                  "endLine": 4308,
                  "endColumn": 46,
                  "snippet": {
                    "text": "      \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\ifCLASSOPTIONcompsoc\n        % for compsoc papers, the pubid is at the same vertical position as the normal footer\n        \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n        \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\fi\n",
                    "rendered": {
                      "text": "      \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\ifCLASSOPTIONcompsoc\n        % for compsoc papers, the pubid is at the same vertical position as the normal footer\n        \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n        \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\fi\n",
                      "markdown": "`      \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\ifCLASSOPTIONcompsoc\n        % for compsoc papers, the pubid is at the same vertical position as the normal footer\n        \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n        \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\raisebox{0pt}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4304,
                  "startColumn": 10,
                  "endLine": 4304,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    % do not repeat pubid on the title page if using a peer review cover page\n    \\ifCLASSOPTIONpeerreview\\else\n      % for noncompsoc papers, the pubid uses footnotesize and\n      % is at the same vertical position as where the last baseline would normally be\n      \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\ifCLASSOPTIONcompsoc\n",
                    "rendered": {
                      "text": "    % do not repeat pubid on the title page if using a peer review cover page\n    \\ifCLASSOPTIONpeerreview\\else\n      % for noncompsoc papers, the pubid uses footnotesize and\n      % is at the same vertical position as where the last baseline would normally be\n      \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\ifCLASSOPTIONcompsoc\n",
                      "markdown": "`    % do not repeat pubid on the title page if using a peer review cover page\n    \\ifCLASSOPTIONpeerreview\\else\n      % for noncompsoc papers, the pubid uses footnotesize and\n      % is at the same vertical position as where the last baseline would normally be\n      \\def\\@oddfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\def\\@evenfoot{\\hbox{}\\hss\\@IEEEfooterstyle\\footnotesize\\raisebox{\\footskip}[0pt][0pt]{\\@IEEEpubid}\\hss\\hbox{}}\\relax\n      \\ifCLASSOPTIONcompsoc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4205,
                  "startColumn": 70,
                  "endLine": 4206,
                  "snippet": {
                    "text": "\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column definition into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n\\@IEEEappendNOEXPANDtoksA{\\endcsname}%\n",
                    "rendered": {
                      "text": "\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column definition into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n\\@IEEEappendNOEXPANDtoksA{\\endcsname}%\n",
                      "markdown": "`\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column definition into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n\\@IEEEappendNOEXPANDtoksA{\\endcsname}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4167,
                  "startColumn": 69,
                  "endLine": 4168,
                  "snippet": {
                    "text": "\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column defintion into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendtoksA{\\tabskip=\\@IEEEBPcurglue}%\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n",
                    "rendered": {
                      "text": "\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column defintion into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendtoksA{\\tabskip=\\@IEEEBPcurglue}%\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n",
                      "markdown": "`\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column defintion into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendtoksA{\\tabskip=\\@IEEEBPcurglue}%\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4020,
                  "startColumn": 49,
                  "endLine": 4020,
                  "endColumn": 58,
                  "snippet": {
                    "text": "% \\@IEEEextractedtoken has the first token, the rest are discarded\n\\let#2=u\\relax% assume invalid until know otherwise\n\\ifx\\@IEEEextractedtoken\\ignorespaces\\let#2=e\\else\n\\ifcat\\@IEEEextractedtoken\\relax\\else% screen out control sequences\n\\if0\\@IEEEextractedtoken\\let#2=n\\else\n\\if1\\@IEEEextractedtoken\\let#2=n\\else\n\\if2\\@IEEEextractedtoken\\let#2=n\\else\n",
                    "rendered": {
                      "text": "% \\@IEEEextractedtoken has the first token, the rest are discarded\n\\let#2=u\\relax% assume invalid until know otherwise\n\\ifx\\@IEEEextractedtoken\\ignorespaces\\let#2=e\\else\n\\ifcat\\@IEEEextractedtoken\\relax\\else% screen out control sequences\n\\if0\\@IEEEextractedtoken\\let#2=n\\else\n\\if1\\@IEEEextractedtoken\\let#2=n\\else\n\\if2\\@IEEEextractedtoken\\let#2=n\\else\n",
                      "markdown": "`% \\@IEEEextractedtoken has the first token, the rest are discarded\n\\let#2=u\\relax% assume invalid until know otherwise\n\\ifx\\@IEEEextractedtoken\\ignorespaces\\let#2=e\\else\n\\ifcat\\@IEEEextractedtoken\\relax\\else% screen out control sequences\n\\if0\\@IEEEextractedtoken\\let#2=n\\else\n\\if1\\@IEEEextractedtoken\\let#2=n\\else\n\\if2\\@IEEEextractedtoken\\let#2=n\\else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3963,
                  "startColumn": 44,
                  "endLine": 3963,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\\edef\\@IEEEBPendglue{\\@IEEEeqnarraycolSEPdefaultend}%\n\\edef\\@IEEEedefMACRO{#1}\\relax% fully expand the preamble to support macro containers\n% now parse the user's column specifications\n% \\ignorespaces is used as a delimiter, need at least one trailing \\relax because\n% \\@@IEEEbuildpreamble looks into the future \n\\expandafter\\@@IEEEbuildpreamble\\@IEEEedefMACRO\\ignorespaces\\relax\\relax}\n\n",
                    "rendered": {
                      "text": "\\edef\\@IEEEBPendglue{\\@IEEEeqnarraycolSEPdefaultend}%\n\\edef\\@IEEEedefMACRO{#1}\\relax% fully expand the preamble to support macro containers\n% now parse the user's column specifications\n% \\ignorespaces is used as a delimiter, need at least one trailing \\relax because\n% \\@@IEEEbuildpreamble looks into the future \n\\expandafter\\@@IEEEbuildpreamble\\@IEEEedefMACRO\\ignorespaces\\relax\\relax}\n\n",
                      "markdown": "`\\edef\\@IEEEBPendglue{\\@IEEEeqnarraycolSEPdefaultend}%\n\\edef\\@IEEEedefMACRO{#1}\\relax% fully expand the preamble to support macro containers\n% now parse the user's column specifications\n% \\ignorespaces is used as a delimiter, need at least one trailing \\relax because\n% \\@@IEEEbuildpreamble looks into the future \n\\expandafter\\@@IEEEbuildpreamble\\@IEEEedefMACRO\\ignorespaces\\relax\\relax}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3961,
                  "startColumn": 37,
                  "endLine": 3961,
                  "endColumn": 45,
                  "snippet": {
                    "text": "% record the default end glues\n\\edef\\@IEEEBPstartglue{\\@IEEEeqnarraycolSEPdefaultstart}%\n\\edef\\@IEEEBPendglue{\\@IEEEeqnarraycolSEPdefaultend}%\n\\edef\\@IEEEedefMACRO{#1}\\relax% fully expand the preamble to support macro containers\n% now parse the user's column specifications\n% \\ignorespaces is used as a delimiter, need at least one trailing \\relax because\n% \\@@IEEEbuildpreamble looks into the future \n",
                    "rendered": {
                      "text": "% record the default end glues\n\\edef\\@IEEEBPstartglue{\\@IEEEeqnarraycolSEPdefaultstart}%\n\\edef\\@IEEEBPendglue{\\@IEEEeqnarraycolSEPdefaultend}%\n\\edef\\@IEEEedefMACRO{#1}\\relax% fully expand the preamble to support macro containers\n% now parse the user's column specifications\n% \\ignorespaces is used as a delimiter, need at least one trailing \\relax because\n% \\@@IEEEbuildpreamble looks into the future \n",
                      "markdown": "`% record the default end glues\n\\edef\\@IEEEBPstartglue{\\@IEEEeqnarraycolSEPdefaultstart}%\n\\edef\\@IEEEBPendglue{\\@IEEEeqnarraycolSEPdefaultend}%\n\\edef\\@IEEEedefMACRO{#1}\\relax% fully expand the preamble to support macro containers\n% now parse the user's column specifications\n% \\ignorespaces is used as a delimiter, need at least one trailing \\relax because\n% \\@@IEEEbuildpreamble looks into the future \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3743,
                  "startColumn": 39,
                  "endLine": 3743,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    \\loop% add cols if the user did not use them all\n    \\ifnum\\@IEEEeqncolcnt<\\@IEEEeqnnumcols\\relax\n    \\@IEEEappendtoksA{&}%\n    \\advance\\@IEEEeqncolcnt by 1\\relax% update the col count\n    \\repeat\n    % this number of &'s will take us the the isolation column\n    \\fi\n",
                    "rendered": {
                      "text": "    \\loop% add cols if the user did not use them all\n    \\ifnum\\@IEEEeqncolcnt<\\@IEEEeqnnumcols\\relax\n    \\@IEEEappendtoksA{&}%\n    \\advance\\@IEEEeqncolcnt by 1\\relax% update the col count\n    \\repeat\n    % this number of &'s will take us the the isolation column\n    \\fi\n",
                      "markdown": "`    \\loop% add cols if the user did not use them all\n    \\ifnum\\@IEEEeqncolcnt<\\@IEEEeqnnumcols\\relax\n    \\@IEEEappendtoksA{&}%\n    \\advance\\@IEEEeqncolcnt by 1\\relax% update the col count\n    \\repeat\n    % this number of &'s will take us the the isolation column\n    \\fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3629,
                  "startColumn": 56,
                  "endLine": 3629,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n\n% \\IEEEeqnarray is an enhanced \\eqnarray. \n% The star form defaults to not putting equation numbers at the end of each row.\n% usage: \\IEEEeqnarray[decl]{cols}\n\\def\\@IEEEeqnarray{\\relax\\@ifnextchar[{\\@@IEEEeqnarray}{\\@@IEEEeqnarray[\\relax]}}\n% We have to be careful here to normalize catcodes just before acquiring the\n",
                    "rendered": {
                      "text": "\n\n% \\IEEEeqnarray is an enhanced \\eqnarray. \n% The star form defaults to not putting equation numbers at the end of each row.\n% usage: \\IEEEeqnarray[decl]{cols}\n\\def\\@IEEEeqnarray{\\relax\\@ifnextchar[{\\@@IEEEeqnarray}{\\@@IEEEeqnarray[\\relax]}}\n% We have to be careful here to normalize catcodes just before acquiring the\n",
                      "markdown": "`\n\n% \\IEEEeqnarray is an enhanced \\eqnarray. \n% The star form defaults to not putting equation numbers at the end of each row.\n% usage: \\IEEEeqnarray[decl]{cols}\n\\def\\@IEEEeqnarray{\\relax\\@ifnextchar[{\\@@IEEEeqnarray}{\\@@IEEEeqnarray[\\relax]}}\n% We have to be careful here to normalize catcodes just before acquiring the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3543,
                  "startColumn": 1,
                  "endLine": 3543,
                  "endColumn": 9,
                  "snippet": {
                    "text": "% add it to the user supplied values\n\\advance\\dimen0 by \\skip0\\relax%\n\\advance\\dimen2 by \\skip2\\relax%\n% update the local and master strut sizes\n\\edef\\@IEEEeqnarrayTHEmasterstrutheight{\\the\\dimen0}%\n\\edef\\@IEEEeqnarrayTHEmasterstrutdepth{\\the\\dimen2}%\n\\edef\\@IEEEeqnarrayTHEstrutheight{\\the\\dimen0}%\n",
                    "rendered": {
                      "text": "% add it to the user supplied values\n\\advance\\dimen0 by \\skip0\\relax%\n\\advance\\dimen2 by \\skip2\\relax%\n% update the local and master strut sizes\n\\edef\\@IEEEeqnarrayTHEmasterstrutheight{\\the\\dimen0}%\n\\edef\\@IEEEeqnarrayTHEmasterstrutdepth{\\the\\dimen2}%\n\\edef\\@IEEEeqnarrayTHEstrutheight{\\the\\dimen0}%\n",
                      "markdown": "`% add it to the user supplied values\n\\advance\\dimen0 by \\skip0\\relax%\n\\advance\\dimen2 by \\skip2\\relax%\n% update the local and master strut sizes\n\\edef\\@IEEEeqnarrayTHEmasterstrutheight{\\the\\dimen0}%\n\\edef\\@IEEEeqnarrayTHEmasterstrutdepth{\\the\\dimen2}%\n\\edef\\@IEEEeqnarrayTHEstrutheight{\\the\\dimen0}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3532,
                  "startColumn": 1,
                  "endLine": 3532,
                  "endColumn": 9,
                  "snippet": {
                    "text": "% add it to the user supplied values\n\\advance\\dimen0 by \\skip0\\relax%\n\\advance\\dimen2 by \\skip2\\relax%\n% update the local strut size\n\\edef\\@IEEEeqnarrayTHEstrutheight{\\the\\dimen0}%\n\\edef\\@IEEEeqnarrayTHEstrutdepth{\\the\\dimen2}%\n\\@IEEEeqnarrayusemasterstrutfalse% do not use master\n",
                    "rendered": {
                      "text": "% add it to the user supplied values\n\\advance\\dimen0 by \\skip0\\relax%\n\\advance\\dimen2 by \\skip2\\relax%\n% update the local strut size\n\\edef\\@IEEEeqnarrayTHEstrutheight{\\the\\dimen0}%\n\\edef\\@IEEEeqnarrayTHEstrutdepth{\\the\\dimen2}%\n\\@IEEEeqnarrayusemasterstrutfalse% do not use master\n",
                      "markdown": "`% add it to the user supplied values\n\\advance\\dimen0 by \\skip0\\relax%\n\\advance\\dimen2 by \\skip2\\relax%\n% update the local strut size\n\\edef\\@IEEEeqnarrayTHEstrutheight{\\the\\dimen0}%\n\\edef\\@IEEEeqnarrayTHEstrutdepth{\\the\\dimen2}%\n\\@IEEEeqnarrayusemasterstrutfalse% do not use master\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3375,
                  "startColumn": 27,
                  "endLine": 3375,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\\loop% add cols if the user did not use them all\n\\ifnum\\count0<\\@IEEEeqnnumcols\\relax%\n\\@IEEEappendtoksA{&}%\n\\advance\\count0 by 1\\relax% update the col count\n\\repeat%\n\\the\\@IEEEtrantmptoksA%execute the &'s\n}\n",
                    "rendered": {
                      "text": "\\loop% add cols if the user did not use them all\n\\ifnum\\count0<\\@IEEEeqnnumcols\\relax%\n\\@IEEEappendtoksA{&}%\n\\advance\\count0 by 1\\relax% update the col count\n\\repeat%\n\\the\\@IEEEtrantmptoksA%execute the &'s\n}\n",
                      "markdown": "`\\loop% add cols if the user did not use them all\n\\ifnum\\count0<\\@IEEEeqnnumcols\\relax%\n\\@IEEEappendtoksA{&}%\n\\advance\\count0 by 1\\relax% update the col count\n\\repeat%\n\\the\\@IEEEtrantmptoksA%execute the &'s\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3229,
                  "startColumn": 45,
                  "endLine": 3229,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\\def\\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}\n\n% top level default tabskip glues for the start, end, and inter-column\n% may be reset within environments not always at the top level, e.g., \\IEEEeqnarraybox\n\\edef\\@IEEEeqnarraycolSEPdefaultstart{\\@IEEEeqnarraycolSEPcenter}% default start glue\n\\edef\\@IEEEeqnarraycolSEPdefaultend{\\@IEEEeqnarraycolSEPcenter}% default end glue\n\\edef\\@IEEEeqnarraycolSEPdefaultmid{\\@IEEEeqnarraycolSEPzero}% default inter-column glue\n",
                    "rendered": {
                      "text": "\\def\\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}\n\n% top level default tabskip glues for the start, end, and inter-column\n% may be reset within environments not always at the top level, e.g., \\IEEEeqnarraybox\n\\edef\\@IEEEeqnarraycolSEPdefaultstart{\\@IEEEeqnarraycolSEPcenter}% default start glue\n\\edef\\@IEEEeqnarraycolSEPdefaultend{\\@IEEEeqnarraycolSEPcenter}% default end glue\n\\edef\\@IEEEeqnarraycolSEPdefaultmid{\\@IEEEeqnarraycolSEPzero}% default inter-column glue\n",
                      "markdown": "`\\def\\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}\n\n% top level default tabskip glues for the start, end, and inter-column\n% may be reset within environments not always at the top level, e.g., \\IEEEeqnarraybox\n\\edef\\@IEEEeqnarraycolSEPdefaultstart{\\@IEEEeqnarraycolSEPcenter}% default start glue\n\\edef\\@IEEEeqnarraycolSEPdefaultend{\\@IEEEeqnarraycolSEPcenter}% default end glue\n\\edef\\@IEEEeqnarraycolSEPdefaultmid{\\@IEEEeqnarraycolSEPzero}% default inter-column glue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3185,
                  "startColumn": 50,
                  "endLine": 3185,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\\def\\@IEEEappendtoksA#1{\\edef\\@@IEEEappendtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA #1}}%\n\\@@IEEEappendtoksA}\n\n% also appends to \\@IEEEtrantmptoksA, but does not expand the argument\n% uses \\toks8 as a scratchpad register\n\\def\\@IEEEappendNOEXPANDtoksA#1{\\toks8={#1}%\n\\edef\\@@IEEEappendNOEXPANDtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA\\the\\toks8}}%\n",
                    "rendered": {
                      "text": "\\def\\@IEEEappendtoksA#1{\\edef\\@@IEEEappendtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA #1}}%\n\\@@IEEEappendtoksA}\n\n% also appends to \\@IEEEtrantmptoksA, but does not expand the argument\n% uses \\toks8 as a scratchpad register\n\\def\\@IEEEappendNOEXPANDtoksA#1{\\toks8={#1}%\n\\edef\\@@IEEEappendNOEXPANDtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA\\the\\toks8}}%\n",
                      "markdown": "`\\def\\@IEEEappendtoksA#1{\\edef\\@@IEEEappendtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA #1}}%\n\\@@IEEEappendtoksA}\n\n% also appends to \\@IEEEtrantmptoksA, but does not expand the argument\n% uses \\toks8 as a scratchpad register\n\\def\\@IEEEappendNOEXPANDtoksA#1{\\toks8={#1}%\n\\edef\\@@IEEEappendNOEXPANDtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA\\the\\toks8}}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3132,
                  "startColumn": 19,
                  "endLine": 3132,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\\long\\def\\IEEEeqnarraymulticol#1#2#3{\\multispan{#1}\\relax\n% check if column is defined for the precolumn definition\n% We have to be careful here because TeX scans for & even within an \\iffalse\n% where it does not expand macros. So, if we used only one \\ifx and a #3\n% appeared in the false branch and the user inserted another alignment\n% structure that uses & in the \\IEEEeqnarraymulticol{}, TeX will not see that\n% there is an inner alignment in the false branch yet still will see any &\n",
                    "rendered": {
                      "text": "\\long\\def\\IEEEeqnarraymulticol#1#2#3{\\multispan{#1}\\relax\n% check if column is defined for the precolumn definition\n% We have to be careful here because TeX scans for & even within an \\iffalse\n% where it does not expand macros. So, if we used only one \\ifx and a #3\n% appeared in the false branch and the user inserted another alignment\n% structure that uses & in the \\IEEEeqnarraymulticol{}, TeX will not see that\n% there is an inner alignment in the false branch yet still will see any &\n",
                      "markdown": "`\\long\\def\\IEEEeqnarraymulticol#1#2#3{\\multispan{#1}\\relax\n% check if column is defined for the precolumn definition\n% We have to be careful here because TeX scans for & even within an \\iffalse\n% where it does not expand macros. So, if we used only one \\ifx and a #3\n% appeared in the false branch and the user inserted another alignment\n% structure that uses & in the \\IEEEeqnarraymulticol{}, TeX will not see that\n% there is an inner alignment in the false branch yet still will see any &\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2980,
                  "startColumn": 54,
                  "endLine": 2980,
                  "endColumn": 62,
                  "snippet": {
                    "text": "% If given an empty argument, \\@IEEEextractedfirsttoken and\n% \\@IEEEextractednextfirsttoken will be set to \\relax\n% and all the macros will be empty.\n% the *-star form, \\@IEEEextracttokengroups*, does not expand its argument\n% contents during processing.\n%\n% Depends on: \\@IEEEextractgroup, \\@IEEEextracttoken\n",
                    "rendered": {
                      "text": "% If given an empty argument, \\@IEEEextractedfirsttoken and\n% \\@IEEEextractednextfirsttoken will be set to \\relax\n% and all the macros will be empty.\n% the *-star form, \\@IEEEextracttokengroups*, does not expand its argument\n% contents during processing.\n%\n% Depends on: \\@IEEEextractgroup, \\@IEEEextracttoken\n",
                      "markdown": "`% If given an empty argument, \\@IEEEextractedfirsttoken and\n% \\@IEEEextractednextfirsttoken will be set to \\relax\n% and all the macros will be empty.\n% the *-star form, \\@IEEEextracttokengroups*, does not expand its argument\n% contents during processing.\n%\n% Depends on: \\@IEEEextractgroup, \\@IEEEextracttoken\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2933,
                  "startColumn": 30,
                  "endLine": 2933,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\n\n% \\@IEEEextracttoken relocated at top because margin setting commands rely on it\n\n\n\n",
                    "rendered": {
                      "text": "\n\n\n% \\@IEEEextracttoken relocated at top because margin setting commands rely on it\n\n\n\n",
                      "markdown": "`\n\n\n% \\@IEEEextracttoken relocated at top because margin setting commands rely on it\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2916,
                  "startColumn": 49,
                  "endLine": 2916,
                  "endColumn": 53,
                  "snippet": {
                    "text": "  % whatever remains after the first group so that TeX's argument scanner\n  % will preserve any originally enclosing braces as well as provide an\n  % empty argument to acquire even if there isn't a second group.\n  % In this first of two dirty tricks, we put a } at the end of the structure\n  % we are going to extract from. The \\ifnum0=`{\\fi keeps TeX happy to allow\n  % what would otherwise be an unbalanced macro definition for\n  % \\@@IEEEextractgroup to be acceptable to it.\n",
                    "rendered": {
                      "text": "  % whatever remains after the first group so that TeX's argument scanner\n  % will preserve any originally enclosing braces as well as provide an\n  % empty argument to acquire even if there isn't a second group.\n  % In this first of two dirty tricks, we put a } at the end of the structure\n  % we are going to extract from. The \\ifnum0=`{\\fi keeps TeX happy to allow\n  % what would otherwise be an unbalanced macro definition for\n  % \\@@IEEEextractgroup to be acceptable to it.\n",
                      "markdown": "`  % whatever remains after the first group so that TeX's argument scanner\n  % will preserve any originally enclosing braces as well as provide an\n  % empty argument to acquire even if there isn't a second group.\n  % In this first of two dirty tricks, we put a } at the end of the structure\n  % we are going to extract from. The \\ifnum0=`{\\fi keeps TeX happy to allow\n  % what would otherwise be an unbalanced macro definition for\n  % \\@@IEEEextractgroup to be acceptable to it.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2901,
                  "startColumn": 48,
                  "endLine": 2901,
                  "endColumn": 56,
                  "snippet": {
                    "text": "% \\@IEEEextractedgroup        ==> a macro containing {ab}\n% \\@IEEEextractedgroupremain  ==> a macro containing {c{de}}\n%\n% The *-star form, \\@IEEEextractgroup*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextractgroup{\\@ifstar{\\let\\@IEEEextractgroupdef=\\def\\@@IEEEextractgroup}{\\let\\@IEEEextractgroupdef=\\edef\\@@IEEEextractgroup}}\n\n",
                    "rendered": {
                      "text": "% \\@IEEEextractedgroup        ==> a macro containing {ab}\n% \\@IEEEextractedgroupremain  ==> a macro containing {c{de}}\n%\n% The *-star form, \\@IEEEextractgroup*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextractgroup{\\@ifstar{\\let\\@IEEEextractgroupdef=\\def\\@@IEEEextractgroup}{\\let\\@IEEEextractgroupdef=\\edef\\@@IEEEextractgroup}}\n\n",
                      "markdown": "`% \\@IEEEextractedgroup        ==> a macro containing {ab}\n% \\@IEEEextractedgroupremain  ==> a macro containing {c{de}}\n%\n% The *-star form, \\@IEEEextractgroup*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextractgroup{\\@ifstar{\\let\\@IEEEextractgroupdef=\\def\\@@IEEEextractgroup}{\\let\\@IEEEextractgroupdef=\\edef\\@@IEEEextractgroup}}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2863,
                  "startColumn": 51,
                  "endLine": 2863,
                  "endColumn": 59,
                  "snippet": {
                    "text": "% \\@IEEEstripouterbracesarg ==> a macro containing {{{ab}c}}\n% \\@IEEEstrippedouterbraces ==> a macro containing {ab}c\n%\n% the *-star form,\\@IEEEstripouterbraces*, does not expand the argument\n% contents during processing\n\\def\\@IEEEstripouterbraces{\\@ifstar{\\let\\@IEEEstripouterbracesdef=\\def\\@@IEEEstripouterbraces}{\\let\\@IEEEstripouterbracesdef=\\edef\\@@IEEEstripouterbraces}}\n\n",
                    "rendered": {
                      "text": "% \\@IEEEstripouterbracesarg ==> a macro containing {{{ab}c}}\n% \\@IEEEstrippedouterbraces ==> a macro containing {ab}c\n%\n% the *-star form,\\@IEEEstripouterbraces*, does not expand the argument\n% contents during processing\n\\def\\@IEEEstripouterbraces{\\@ifstar{\\let\\@IEEEstripouterbracesdef=\\def\\@@IEEEstripouterbraces}{\\let\\@IEEEstripouterbracesdef=\\edef\\@@IEEEstripouterbraces}}\n\n",
                      "markdown": "`% \\@IEEEstripouterbracesarg ==> a macro containing {{{ab}c}}\n% \\@IEEEstrippedouterbraces ==> a macro containing {ab}c\n%\n% the *-star form,\\@IEEEstripouterbraces*, does not expand the argument\n% contents during processing\n\\def\\@IEEEstripouterbraces{\\@ifstar{\\let\\@IEEEstripouterbracesdef=\\def\\@@IEEEstripouterbraces}{\\let\\@IEEEstripouterbracesdef=\\edef\\@@IEEEstripouterbraces}}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2721,
                  "startColumn": 30,
                  "endLine": 2721,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n\\vspace*{\\@IEEEtrantmpdimenA}\\fi}\n% V1.8 compensate for \\topskip at the top of top tables so caption text is on main text baseline\n% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n",
                    "rendered": {
                      "text": "\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n\\vspace*{\\@IEEEtrantmpdimenA}\\fi}\n% V1.8 compensate for \\topskip at the top of top tables so caption text is on main text baseline\n% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n",
                      "markdown": "`\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n\\vspace*{\\@IEEEtrantmpdimenA}\\fi}\n% V1.8 compensate for \\topskip at the top of top tables so caption text is on main text baseline\n% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2716,
                  "startColumn": 12,
                  "endLine": 2716,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n% V1.8 compensate for \\topskip so top of top figures align with tops of the first lines of main text\n% here we calculate a space equal to the amount \\topskip exceeds the main text height\n% we hook in at \\@floatboxreset\n\\def\\@IEEEfiguretopskipspace{\\ifdim\\prevdepth=-1000pt\\relax\n\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n",
                    "rendered": {
                      "text": "\n% V1.8 compensate for \\topskip so top of top figures align with tops of the first lines of main text\n% here we calculate a space equal to the amount \\topskip exceeds the main text height\n% we hook in at \\@floatboxreset\n\\def\\@IEEEfiguretopskipspace{\\ifdim\\prevdepth=-1000pt\\relax\n\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n",
                      "markdown": "`\n% V1.8 compensate for \\topskip so top of top figures align with tops of the first lines of main text\n% here we calculate a space equal to the amount \\topskip exceeds the main text height\n% we hook in at \\@floatboxreset\n\\def\\@IEEEfiguretopskipspace{\\ifdim\\prevdepth=-1000pt\\relax\n\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2169,
                  "startColumn": 31,
                  "endLine": 2169,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\\def\\@IEEEiedjustify{0}\n\n\n% commands to allow the user to control IED\n% label justifications. Use these commands within\n% the IED environment option or in the \\IEEEiedlistdecl\n% Note that changing the normal list justifications\n",
                    "rendered": {
                      "text": "\\def\\@IEEEiedjustify{0}\n\n\n% commands to allow the user to control IED\n% label justifications. Use these commands within\n% the IED environment option or in the \\IEEEiedlistdecl\n% Note that changing the normal list justifications\n",
                      "markdown": "`\\def\\@IEEEiedjustify{0}\n\n\n% commands to allow the user to control IED\n% label justifications. Use these commands within\n% the IED environment option or in the \\IEEEiedlistdecl\n% Note that changing the normal list justifications\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2113,
                  "startColumn": 1,
                  "endLine": 2113,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\n% This command is executed within each IED list environment\n% at the beginning of the list. You can use this to set the \n% parameters for some/all your IED list(s) without disturbing \n% global parameters that affect things other than lists.\n% i.e., renewcommand{\\IEEEiedlistdecl}{\\setlength{\\labelsep}{5em}}\n",
                    "rendered": {
                      "text": "\n\n% This command is executed within each IED list environment\n% at the beginning of the list. You can use this to set the \n% parameters for some/all your IED list(s) without disturbing \n% global parameters that affect things other than lists.\n% i.e., renewcommand{\\IEEEiedlistdecl}{\\setlength{\\labelsep}{5em}}\n",
                      "markdown": "`\n\n% This command is executed within each IED list environment\n% at the beginning of the list. You can use this to set the \n% parameters for some/all your IED list(s) without disturbing \n% global parameters that affect things other than lists.\n% i.e., renewcommand{\\IEEEiedlistdecl}{\\setlength{\\labelsep}{5em}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2022,
                  "startColumn": 23,
                  "endLine": 2022,
                  "endColumn": 27,
                  "snippet": {
                    "text": "% ***************************\n% \n% \n% The IEEE seems to use at least two different values by\n% which ITEMIZED list labels are indented to the right\n% For The Journal of Lightwave Technology (JLT) and The Journal\n% on Selected Areas in Communications (JSAC), they tend to use\n",
                    "rendered": {
                      "text": "% ***************************\n% \n% \n% The IEEE seems to use at least two different values by\n% which ITEMIZED list labels are indented to the right\n% For The Journal of Lightwave Technology (JLT) and The Journal\n% on Selected Areas in Communications (JSAC), they tend to use\n",
                      "markdown": "`% ***************************\n% \n% \n% The IEEE seems to use at least two different values by\n% which ITEMIZED list labels are indented to the right\n% For The Journal of Lightwave Technology (JLT) and The Journal\n% on Selected Areas in Communications (JSAC), they tend to use\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1816,
                  "startColumn": 56,
                  "endLine": 1816,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                    "rendered": {
                      "text": "  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                      "markdown": "`  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1796,
                  "startColumn": 56,
                  "endLine": 1796,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  % tweak textheight to a perfect integer number of lines/page.\n  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n \\fi\n\\fi\n",
                    "rendered": {
                      "text": "  % tweak textheight to a perfect integer number of lines/page.\n  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n \\fi\n\\fi\n",
                      "markdown": "`  % tweak textheight to a perfect integer number of lines/page.\n  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n \\fi\n\\fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1780,
                  "startColumn": 55,
                  "endLine": 1780,
                  "endColumn": 59,
                  "snippet": {
                    "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\n% compsoc conference\n",
                    "rendered": {
                      "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\n% compsoc conference\n",
                      "markdown": "` % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\n% compsoc conference\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1748,
                  "startColumn": 55,
                  "endLine": 1748,
                  "endColumn": 59,
                  "snippet": {
                    "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                    "rendered": {
                      "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                      "markdown": "` % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1730,
                  "startColumn": 54,
                  "endLine": 1730,
                  "endColumn": 58,
                  "snippet": {
                    "text": "% tweak textheight to a perfect integer number of lines/column.\n% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc\n\\IEEEquantizetextheight{c}\n% tweak top margin so that the error is shared equally at the top and bottom\n\\IEEEsettopmargin{q}{0sp}\n\n\n",
                    "rendered": {
                      "text": "% tweak textheight to a perfect integer number of lines/column.\n% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc\n\\IEEEquantizetextheight{c}\n% tweak top margin so that the error is shared equally at the top and bottom\n\\IEEEsettopmargin{q}{0sp}\n\n\n",
                      "markdown": "`% tweak textheight to a perfect integer number of lines/column.\n% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc\n\\IEEEquantizetextheight{c}\n% tweak top margin so that the error is shared equally at the top and bottom\n\\IEEEsettopmargin{q}{0sp}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1645,
                  "startColumn": 3,
                  "endLine": 1645,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1629,
                  "startColumn": 3,
                  "endLine": 1629,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenC by \\@IEEEtrantmpdimenB\n  \\@IEEEtrantmpdimenB\\paperheight\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer bottom margin\n  % get the difference between the actual and the desired\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenA\n  \\@IEEEtrantmpdimenA\\@IEEEtrantmpdimenB\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenC by \\@IEEEtrantmpdimenB\n  \\@IEEEtrantmpdimenB\\paperheight\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer bottom margin\n  % get the difference between the actual and the desired\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenA\n  \\@IEEEtrantmpdimenA\\@IEEEtrantmpdimenB\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenC by \\@IEEEtrantmpdimenB\n  \\@IEEEtrantmpdimenB\\paperheight\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer bottom margin\n  % get the difference between the actual and the desired\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenA\n  \\@IEEEtrantmpdimenA\\@IEEEtrantmpdimenB\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1610,
                  "startColumn": 3,
                  "endLine": 1610,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom\n  % and top footer margins\n  % our adjustment must be half this value to center the footer\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom\n  % and top footer margins\n  % our adjustment must be half this value to center the footer\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom\n  % and top footer margins\n  % our adjustment must be half this value to center the footer\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1603,
                  "startColumn": 3,
                  "endLine": 1603,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenC by \\@IEEEtrantmpdimenB\n  \\@IEEEtrantmpdimenB\\paperheight\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer bottom margin\n  % now subtract off the footer top margin\n  \\advance\\@IEEEtrantmpdimenB -\\footskip\\relax\n  \\settodepth{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenC by \\@IEEEtrantmpdimenB\n  \\@IEEEtrantmpdimenB\\paperheight\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer bottom margin\n  % now subtract off the footer top margin\n  \\advance\\@IEEEtrantmpdimenB -\\footskip\\relax\n  \\settodepth{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenC by \\@IEEEtrantmpdimenB\n  \\@IEEEtrantmpdimenB\\paperheight\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer bottom margin\n  % now subtract off the footer top margin\n  \\advance\\@IEEEtrantmpdimenB -\\footskip\\relax\n  \\settodepth{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1543,
                  "startColumn": 3,
                  "endLine": 1543,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by \\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by \\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by \\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1527,
                  "startColumn": 3,
                  "endLine": 1527,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by \\topskip\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % get the difference between the actual and the desired\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenA\n  \\@IEEEtrantmpdimenA\\@IEEEtrantmpdimenB\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by \\topskip\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % get the difference between the actual and the desired\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenA\n  \\@IEEEtrantmpdimenA\\@IEEEtrantmpdimenB\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by \\topskip\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % get the difference between the actual and the desired\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenA\n  \\@IEEEtrantmpdimenA\\@IEEEtrantmpdimenB\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1514,
                  "startColumn": 3,
                  "endLine": 1514,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom and top margins\n  % we need to adjust by half this amount to center the header\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n  % and add to offset\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom and top margins\n  % we need to adjust by half this amount to center the header\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n  % and add to offset\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom and top margins\n  % we need to adjust by half this amount to center the header\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n  % and add to offset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1507,
                  "startColumn": 3,
                  "endLine": 1507,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by \\topskip\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % subtract from it the top header margin\n  \\advance\\@IEEEtrantmpdimenB -1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by -\\topmargin\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by \\topskip\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % subtract from it the top header margin\n  \\advance\\@IEEEtrantmpdimenB -1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by -\\topmargin\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by \\topskip\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % subtract from it the top header margin\n  \\advance\\@IEEEtrantmpdimenB -1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by -\\topmargin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1093,
                  "startColumn": 11,
                  "endLine": 1093,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\\@IEEEtunefonts\n\\fi\n\n% and again at the start of the document in case the user loaded different fonts\n\\AtBeginDocument{\\ifCLASSOPTIONnofonttune\\else\\@IEEEtunefonts\\fi}\n\n\n",
                    "rendered": {
                      "text": "\\@IEEEtunefonts\n\\fi\n\n% and again at the start of the document in case the user loaded different fonts\n\\AtBeginDocument{\\ifCLASSOPTIONnofonttune\\else\\@IEEEtunefonts\\fi}\n\n\n",
                      "markdown": "`\\@IEEEtunefonts\n\\fi\n\n% and again at the start of the document in case the user loaded different fonts\n\\AtBeginDocument{\\ifCLASSOPTIONnofonttune\\else\\@IEEEtunefonts\\fi}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 40,
                  "endLine": 486,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  % ensure that if newtxmath is used, the cmintegrals option is also invoked\n  \\PassOptionsToPackage{cmintegrals}{newtxmath}\n  % comsoc requires a Times like math font\n  % ensure this requirement is satisfied at document start\n  \\AtBeginDocument{\\@IEEEcomsocverifymathfont}\n\\fi\n\n",
                    "rendered": {
                      "text": "  % ensure that if newtxmath is used, the cmintegrals option is also invoked\n  \\PassOptionsToPackage{cmintegrals}{newtxmath}\n  % comsoc requires a Times like math font\n  % ensure this requirement is satisfied at document start\n  \\AtBeginDocument{\\@IEEEcomsocverifymathfont}\n\\fi\n\n",
                      "markdown": "`  % ensure that if newtxmath is used, the cmintegrals option is also invoked\n  \\PassOptionsToPackage{cmintegrals}{newtxmath}\n  % comsoc requires a Times like math font\n  % ensure this requirement is satisfied at document start\n  \\AtBeginDocument{\\@IEEEcomsocverifymathfont}\n\\fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 55,
                  "endLine": 442,
                  "endColumn": 59,
                  "snippet": {
                    "text": "  \\else\n    \\let\\@IEEEextracttokencurgroup=\\@IEEEextractedtokenmacro\n\\repeat\n% we can safely do a \\let= here because there should be at most one token\n% the relax is needed to handle the case of no token found\n\\expandafter\\let\\expandafter\\@IEEEextractedtoken\\@IEEEextractedtokenmacro\\relax}\n\n",
                    "rendered": {
                      "text": "  \\else\n    \\let\\@IEEEextracttokencurgroup=\\@IEEEextractedtokenmacro\n\\repeat\n% we can safely do a \\let= here because there should be at most one token\n% the relax is needed to handle the case of no token found\n\\expandafter\\let\\expandafter\\@IEEEextractedtoken\\@IEEEextractedtokenmacro\\relax}\n\n",
                      "markdown": "`  \\else\n    \\let\\@IEEEextracttokencurgroup=\\@IEEEextractedtokenmacro\n\\repeat\n% we can safely do a \\let= here because there should be at most one token\n% the relax is needed to handle the case of no token found\n\\expandafter\\let\\expandafter\\@IEEEextractedtoken\\@IEEEextractedtokenmacro\\relax}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 420,
                  "startColumn": 48,
                  "endLine": 420,
                  "endColumn": 56,
                  "snippet": {
                    "text": "% \\@IEEEextractedtokenmacro      ==> a macro containing a\n% \\@IEEEextractedtokensdiscarded ==> a macro containing bcd{ef}g\n%\n% the *-star form, \\@IEEEextracttoken*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextracttoken{\\@ifstar{\\let\\@IEEEextracttokendef=\\def\\@@IEEEextracttoken}{\\let\\@IEEEextracttokendef=\\edef\\@@IEEEextracttoken}}\n\n",
                    "rendered": {
                      "text": "% \\@IEEEextractedtokenmacro      ==> a macro containing a\n% \\@IEEEextractedtokensdiscarded ==> a macro containing bcd{ef}g\n%\n% the *-star form, \\@IEEEextracttoken*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextracttoken{\\@ifstar{\\let\\@IEEEextracttokendef=\\def\\@@IEEEextracttoken}{\\let\\@IEEEextracttokendef=\\edef\\@@IEEEextracttoken}}\n\n",
                      "markdown": "`% \\@IEEEextractedtokenmacro      ==> a macro containing a\n% \\@IEEEextractedtokensdiscarded ==> a macro containing bcd{ef}g\n%\n% the *-star form, \\@IEEEextracttoken*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextracttoken{\\@ifstar{\\let\\@IEEEextracttokendef=\\def\\@@IEEEextracttoken}{\\let\\@IEEEextracttokendef=\\edef\\@@IEEEextracttoken}}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 17,
                  "endLine": 167,
                  "endColumn": 21,
                  "snippet": {
                    "text": "% captionsoff\n%    disables the display of the figure/table captions. Some IEEE journals\n%    request that captions be removed and figures/tables be put on pages\n%    of their own at the end of an initial paper submission. The endfloat\n%    package can be used with this class option to achieve this format.\n%\n% nofonttune\n",
                    "rendered": {
                      "text": "% captionsoff\n%    disables the display of the figure/table captions. Some IEEE journals\n%    request that captions be removed and figures/tables be put on pages\n%    of their own at the end of an initial paper submission. The endfloat\n%    package can be used with this class option to achieve this format.\n%\n% nofonttune\n",
                      "markdown": "`% captionsoff\n%    disables the display of the figure/table captions. Some IEEE journals\n%    request that captions be removed and figures/tables be put on pages\n%    of their own at the end of an initial paper submission. The endfloat\n%    package can be used with this class option to achieve this format.\n%\n% nofonttune\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 59,
                  "endLine": 146,
                  "endColumn": 63,
                  "snippet": {
                    "text": "%\n% oneside, twoside\n%    determines if layout follows single sided or two sided (duplex)\n%    printing. The only notable change is with the headings at the top of\n%    the pages.\n%    The default is oneside.\n%\n",
                    "rendered": {
                      "text": "%\n% oneside, twoside\n%    determines if layout follows single sided or two sided (duplex)\n%    printing. The only notable change is with the headings at the top of\n%    the pages.\n%    The default is oneside.\n%\n",
                      "markdown": "`%\n% oneside, twoside\n%    determines if layout follows single sided or two sided (duplex)\n%    printing. The only notable change is with the headings at the top of\n%    the pages.\n%    The default is oneside.\n%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 65,
                  "endLine": 108,
                  "endColumn": 69,
                  "snippet": {
                    "text": "%    draftcls restricts draft mode to the class file while all other LaTeX\n%    packages (i.e., \\usepackage{graphicx}) will behave as final - allows\n%    for a draft paper with visible figures, etc. draftclsnofoot is like\n%    draftcls, but does not display the date and the word \"DRAFT\" at the foot\n%    of the pages. If using one of the draft modes, the user will probably\n%    also want to select onecolumn.\n%    The default is final.\n",
                    "rendered": {
                      "text": "%    draftcls restricts draft mode to the class file while all other LaTeX\n%    packages (i.e., \\usepackage{graphicx}) will behave as final - allows\n%    for a draft paper with visible figures, etc. draftclsnofoot is like\n%    draftcls, but does not display the date and the word \"DRAFT\" at the foot\n%    of the pages. If using one of the draft modes, the user will probably\n%    also want to select onecolumn.\n%    The default is final.\n",
                      "markdown": "`%    draftcls restricts draft mode to the class file while all other LaTeX\n%    packages (i.e., \\usepackage{graphicx}) will behave as final - allows\n%    for a draft paper with visible figures, etc. draftclsnofoot is like\n%    draftcls, but does not display the date and the word \"DRAFT\" at the foot\n%    of the pages. If using one of the draft modes, the user will probably\n%    also want to select onecolumn.\n%    The default is final.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 55,
                  "endLine": 94,
                  "endColumn": 59,
                  "snippet": {
                    "text": "%    anonymous peer review. The paper title (without the author names) is\n%    repeated at the top of the page after the cover page. For peer review\n%    papers, the \\IEEEpeerreviewmaketitle command must be executed (will\n%    automatically be ignored for non-peerreview modes) at the place the\n%    cover page is to end, usually just after the abstract (keywords are\n%    not normally used with peer review papers). peerreviewca is like\n%    peerreview, but allows the author names to be entered and formatted\n",
                    "rendered": {
                      "text": "%    anonymous peer review. The paper title (without the author names) is\n%    repeated at the top of the page after the cover page. For peer review\n%    papers, the \\IEEEpeerreviewmaketitle command must be executed (will\n%    automatically be ignored for non-peerreview modes) at the place the\n%    cover page is to end, usually just after the abstract (keywords are\n%    not normally used with peer review papers). peerreviewca is like\n%    peerreview, but allows the author names to be entered and formatted\n",
                      "markdown": "`%    anonymous peer review. The paper title (without the author names) is\n%    repeated at the top of the page after the cover page. For peer review\n%    papers, the \\IEEEpeerreviewmaketitle command must be executed (will\n%    automatically be ignored for non-peerreview modes) at the place the\n%    cover page is to end, usually just after the abstract (keywords are\n%    not normally used with peer review papers). peerreviewca is like\n%    peerreview, but allows the author names to be entered and formatted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 13,
                  "endLine": 92,
                  "endColumn": 17,
                  "snippet": {
                    "text": "%    should also select 9pt when using technote. peerreview is like\n%    journal mode, but provides for a single-column \"cover\" title page for\n%    anonymous peer review. The paper title (without the author names) is\n%    repeated at the top of the page after the cover page. For peer review\n%    papers, the \\IEEEpeerreviewmaketitle command must be executed (will\n%    automatically be ignored for non-peerreview modes) at the place the\n%    cover page is to end, usually just after the abstract (keywords are\n",
                    "rendered": {
                      "text": "%    should also select 9pt when using technote. peerreview is like\n%    journal mode, but provides for a single-column \"cover\" title page for\n%    anonymous peer review. The paper title (without the author names) is\n%    repeated at the top of the page after the cover page. For peer review\n%    papers, the \\IEEEpeerreviewmaketitle command must be executed (will\n%    automatically be ignored for non-peerreview modes) at the place the\n%    cover page is to end, usually just after the abstract (keywords are\n",
                      "markdown": "`%    should also select 9pt when using technote. peerreview is like\n%    journal mode, but provides for a single-column \"cover\" title page for\n%    anonymous peer review. The paper title (without the author names) is\n%    repeated at the top of the page after the cover page. For peer review\n%    papers, the \\IEEEpeerreviewmaketitle command must be executed (will\n%    automatically be ignored for non-peerreview modes) at the place the\n%    cover page is to end, usually just after the abstract (keywords are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 6237,
                  "startColumn": 69,
                  "endLine": 6238,
                  "snippet": {
                    "text": "% when locked out, \\thanks, \\IEEEbiography, \\IEEEbiographynophoto, \\IEEEpubid,\n% \\IEEEmembership and \\IEEEaftertitletext will all swallow their given text. \n% \\IEEEPARstart will output a normal character instead\n% warn the user about these commands only once to prevent the console screen\n% from filling up with redundant messages\n\\def\\thanks#1{\\if@IEEEWARNthanks\\typeout{** WARNING: \\noexpand\\thanks\n is locked out when in conference mode (line \\the\\inputlineno).}\\fi\\global\\@IEEEWARNthanksfalse}\n\\def\\IEEEPARstart#1#2{#1#2\\if@IEEEWARNIEEEPARstart\\typeout{** WARNING: \\noexpand\\IEEEPARstart\n",
                    "rendered": {
                      "text": "% when locked out, \\thanks, \\IEEEbiography, \\IEEEbiographynophoto, \\IEEEpubid,\n% \\IEEEmembership and \\IEEEaftertitletext will all swallow their given text. \n% \\IEEEPARstart will output a normal character instead\n% warn the user about these commands only once to prevent the console screen\n% from filling up with redundant messages\n\\def\\thanks#1{\\if@IEEEWARNthanks\\typeout{** WARNING: \\noexpand\\thanks\n is locked out when in conference mode (line \\the\\inputlineno).}\\fi\\global\\@IEEEWARNthanksfalse}\n\\def\\IEEEPARstart#1#2{#1#2\\if@IEEEWARNIEEEPARstart\\typeout{** WARNING: \\noexpand\\IEEEPARstart\n",
                      "markdown": "`% when locked out, \\thanks, \\IEEEbiography, \\IEEEbiographynophoto, \\IEEEpubid,\n% \\IEEEmembership and \\IEEEaftertitletext will all swallow their given text. \n% \\IEEEPARstart will output a normal character instead\n% warn the user about these commands only once to prevent the console screen\n% from filling up with redundant messages\n\\def\\thanks#1{\\if@IEEEWARNthanks\\typeout{** WARNING: \\noexpand\\thanks\n is locked out when in conference mode (line \\the\\inputlineno).}\\fi\\global\\@IEEEWARNthanksfalse}\n\\def\\IEEEPARstart#1#2{#1#2\\if@IEEEWARNIEEEPARstart\\typeout{** WARNING: \\noexpand\\IEEEPARstart\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 6042,
                  "startColumn": 44,
                  "endLine": 6042,
                  "endColumn": 49,
                  "snippet": {
                    "text": "% set the hanging indent\n\\hangindent\\@IEEEBIOhangwidth%\n\\hangafter-\\@IEEEtrantmpcountA%\n% reference the top of the photo area to the top of a capital T\n\\settoheight{\\@IEEEtrantmpdimenB}{\\mbox{T}}%\n% set the photo box, give it zero width and height so as not to disturb anything\n\\noindent\\makebox[0pt][l]{\\hspace{-\\@IEEEBIOhangwidth}\\raisebox{\\@IEEEtrantmpdimenB}[0pt][0pt]{%\n",
                    "rendered": {
                      "text": "% set the hanging indent\n\\hangindent\\@IEEEBIOhangwidth%\n\\hangafter-\\@IEEEtrantmpcountA%\n% reference the top of the photo area to the top of a capital T\n\\settoheight{\\@IEEEtrantmpdimenB}{\\mbox{T}}%\n% set the photo box, give it zero width and height so as not to disturb anything\n\\noindent\\makebox[0pt][l]{\\hspace{-\\@IEEEBIOhangwidth}\\raisebox{\\@IEEEtrantmpdimenB}[0pt][0pt]{%\n",
                      "markdown": "`% set the hanging indent\n\\hangindent\\@IEEEBIOhangwidth%\n\\hangafter-\\@IEEEtrantmpcountA%\n% reference the top of the photo area to the top of a capital T\n\\settoheight{\\@IEEEtrantmpdimenB}{\\mbox{T}}%\n% set the photo box, give it zero width and height so as not to disturb anything\n\\noindent\\makebox[0pt][l]{\\hspace{-\\@IEEEBIOhangwidth}\\raisebox{\\@IEEEtrantmpdimenB}[0pt][0pt]{%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 6042,
                  "startColumn": 15,
                  "endLine": 6042,
                  "endColumn": 20,
                  "snippet": {
                    "text": "% set the hanging indent\n\\hangindent\\@IEEEBIOhangwidth%\n\\hangafter-\\@IEEEtrantmpcountA%\n% reference the top of the photo area to the top of a capital T\n\\settoheight{\\@IEEEtrantmpdimenB}{\\mbox{T}}%\n% set the photo box, give it zero width and height so as not to disturb anything\n\\noindent\\makebox[0pt][l]{\\hspace{-\\@IEEEBIOhangwidth}\\raisebox{\\@IEEEtrantmpdimenB}[0pt][0pt]{%\n",
                    "rendered": {
                      "text": "% set the hanging indent\n\\hangindent\\@IEEEBIOhangwidth%\n\\hangafter-\\@IEEEtrantmpcountA%\n% reference the top of the photo area to the top of a capital T\n\\settoheight{\\@IEEEtrantmpdimenB}{\\mbox{T}}%\n% set the photo box, give it zero width and height so as not to disturb anything\n\\noindent\\makebox[0pt][l]{\\hspace{-\\@IEEEBIOhangwidth}\\raisebox{\\@IEEEtrantmpdimenB}[0pt][0pt]{%\n",
                      "markdown": "`% set the hanging indent\n\\hangindent\\@IEEEBIOhangwidth%\n\\hangafter-\\@IEEEtrantmpcountA%\n% reference the top of the photo area to the top of a capital T\n\\settoheight{\\@IEEEtrantmpdimenB}{\\mbox{T}}%\n% set the photo box, give it zero width and height so as not to disturb anything\n\\noindent\\makebox[0pt][l]{\\hspace{-\\@IEEEBIOhangwidth}\\raisebox{\\@IEEEtrantmpdimenB}[0pt][0pt]{%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5871,
                  "startColumn": 21,
                  "endLine": 5871,
                  "endColumn": 26,
                  "snippet": {
                    "text": "% which uses command \\leavevmode which causes an unwanted \\indent to be issued\n\\noindent\n% calculate the desired height of the big letter\n% it extends from the top of \\IEEEPARstartHEIGHTTEXT in the current font\n% down to \\IEEEPARstartDROPDEPTH below the current baseline\n\\settoheight{\\@IEEEtrantmpdimenA}{\\IEEEPARstartHEIGHTTEXT}%\n\\addtolength{\\@IEEEtrantmpdimenA}{\\IEEEPARstartDROPDEPTH}%\n",
                    "rendered": {
                      "text": "% which uses command \\leavevmode which causes an unwanted \\indent to be issued\n\\noindent\n% calculate the desired height of the big letter\n% it extends from the top of \\IEEEPARstartHEIGHTTEXT in the current font\n% down to \\IEEEPARstartDROPDEPTH below the current baseline\n\\settoheight{\\@IEEEtrantmpdimenA}{\\IEEEPARstartHEIGHTTEXT}%\n\\addtolength{\\@IEEEtrantmpdimenA}{\\IEEEPARstartDROPDEPTH}%\n",
                      "markdown": "`% which uses command \\leavevmode which causes an unwanted \\indent to be issued\n\\noindent\n% calculate the desired height of the big letter\n% it extends from the top of \\IEEEPARstartHEIGHTTEXT in the current font\n% down to \\IEEEPARstartDROPDEPTH below the current baseline\n\\settoheight{\\@IEEEtrantmpdimenA}{\\IEEEPARstartHEIGHTTEXT}%\n\\addtolength{\\@IEEEtrantmpdimenA}{\\IEEEPARstartDROPDEPTH}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5691,
                  "startColumn": 29,
                  "endLine": 5691,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n\n% V1.7\n% command that allows the one time saving of the original definition\n% of section to \\@IEEEappendixsavesection for \\appendix or \\appendices \n% we don't save \\section here as it may be redefined later by other\n% packages (hyperref.sty, etc.)\n",
                    "rendered": {
                      "text": "\n\n% V1.7\n% command that allows the one time saving of the original definition\n% of section to \\@IEEEappendixsavesection for \\appendix or \\appendices \n% we don't save \\section here as it may be redefined later by other\n% packages (hyperref.sty, etc.)\n",
                      "markdown": "`\n\n% V1.7\n% command that allows the one time saving of the original definition\n% of section to \\@IEEEappendixsavesection for \\appendix or \\appendices \n% we don't save \\section here as it may be redefined later by other\n% packages (hyperref.sty, etc.)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5525,
                  "startColumn": 70,
                  "endLine": 5526,
                  "snippet": {
                    "text": "% Society papers. We have to remove any spacing glue after the section\n% heading and then remove the blank line for the new paragraph after it.\n% LaTeX's section handler alters \\everypar and we need to propogate those\n% changes outside of the \\parbox lest there be spacing problems at the top\n% of the next section.\n\\def\\IEEEraisesectionheading#1{\\noindent\\raisebox{1.5\\baselineskip}[0pt][0pt]{\\parbox[b]{\\columnwidth}{#1\\unskip\\global\\everypar=\\everypar}}\\vspace{-1\\baselineskip}\\vspace{-\\parskip}\\par}\n\n\n",
                    "rendered": {
                      "text": "% Society papers. We have to remove any spacing glue after the section\n% heading and then remove the blank line for the new paragraph after it.\n% LaTeX's section handler alters \\everypar and we need to propogate those\n% changes outside of the \\parbox lest there be spacing problems at the top\n% of the next section.\n\\def\\IEEEraisesectionheading#1{\\noindent\\raisebox{1.5\\baselineskip}[0pt][0pt]{\\parbox[b]{\\columnwidth}{#1\\unskip\\global\\everypar=\\everypar}}\\vspace{-1\\baselineskip}\\vspace{-\\parskip}\\par}\n\n\n",
                      "markdown": "`% Society papers. We have to remove any spacing glue after the section\n% heading and then remove the blank line for the new paragraph after it.\n% LaTeX's section handler alters \\everypar and we need to propogate those\n% changes outside of the \\parbox lest there be spacing problems at the top\n% of the next section.\n\\def\\IEEEraisesectionheading#1{\\noindent\\raisebox{1.5\\baselineskip}[0pt][0pt]{\\parbox[b]{\\columnwidth}{#1\\unskip\\global\\everypar=\\everypar}}\\vspace{-1\\baselineskip}\\vspace{-\\parskip}\\par}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5499,
                  "startColumn": 14,
                  "endLine": 5499,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\\def\\paragraph{\\@startsection{paragraph}{4}{2\\parindent}{0ex plus 0.1ex minus 0.1ex}%\n{0ex}{\\normalfont\\normalsize}}%\n\\else% compsoc journals\n% use negative top separation as compsoc journals do not indent paragraphs after section titles\n\\def\\section{\\@startsection{section}{1}{\\z@}{-3.5ex plus -2ex minus -1.5ex}%\n{0.7ex plus 1ex minus 0ex}{\\normalfont\\sublargesize\\sffamily\\bfseries\\scshape}}%\n% Note that subsection and smaller may not be correct for the Computer Society,\n",
                    "rendered": {
                      "text": "\\def\\paragraph{\\@startsection{paragraph}{4}{2\\parindent}{0ex plus 0.1ex minus 0.1ex}%\n{0ex}{\\normalfont\\normalsize}}%\n\\else% compsoc journals\n% use negative top separation as compsoc journals do not indent paragraphs after section titles\n\\def\\section{\\@startsection{section}{1}{\\z@}{-3.5ex plus -2ex minus -1.5ex}%\n{0.7ex plus 1ex minus 0ex}{\\normalfont\\sublargesize\\sffamily\\bfseries\\scshape}}%\n% Note that subsection and smaller may not be correct for the Computer Society,\n",
                      "markdown": "`\\def\\paragraph{\\@startsection{paragraph}{4}{2\\parindent}{0ex plus 0.1ex minus 0.1ex}%\n{0ex}{\\normalfont\\normalsize}}%\n\\else% compsoc journals\n% use negative top separation as compsoc journals do not indent paragraphs after section titles\n\\def\\section{\\@startsection{section}{1}{\\z@}{-3.5ex plus -2ex minus -1.5ex}%\n{0.7ex plus 1ex minus 0ex}{\\normalfont\\sublargesize\\sffamily\\bfseries\\scshape}}%\n% Note that subsection and smaller may not be correct for the Computer Society,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5457,
                  "startColumn": 83,
                  "endLine": 5457,
                  "endColumn": 88,
                  "snippet": {
                    "text": "%                     If negative, make stretch parts negative too!\n%                #5 - (absolute value used) positive: bottom separation after heading,\n%                      negative: amount to indent main text after heading\n%                Both #4 and #5 negative means to indent main text and use negative top separation\n%                #6 - font control\n% You've got to have \\normalfont\\normalsize in the font specs below to prevent\n% trouble when you do something like:\n",
                    "rendered": {
                      "text": "%                     If negative, make stretch parts negative too!\n%                #5 - (absolute value used) positive: bottom separation after heading,\n%                      negative: amount to indent main text after heading\n%                Both #4 and #5 negative means to indent main text and use negative top separation\n%                #6 - font control\n% You've got to have \\normalfont\\normalsize in the font specs below to prevent\n% trouble when you do something like:\n",
                      "markdown": "`%                     If negative, make stretch parts negative too!\n%                #5 - (absolute value used) positive: bottom separation after heading,\n%                      negative: amount to indent main text after heading\n%                Both #4 and #5 negative means to indent main text and use negative top separation\n%                #6 - font control\n% You've got to have \\normalfont\\normalsize in the font specs below to prevent\n% trouble when you do something like:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5453,
                  "startColumn": 21,
                  "endLine": 5453,
                  "endColumn": 26,
                  "snippet": {
                    "text": "% arguments are: #1 - sectiontype name\n% (for \\@sect)   #2 - section level\n%                #3 - section heading indent\n%                #4 - top separation (absolute value used, neg indicates not to indent main text)\n%                     If negative, make stretch parts negative too!\n%                #5 - (absolute value used) positive: bottom separation after heading,\n%                      negative: amount to indent main text after heading\n",
                    "rendered": {
                      "text": "% arguments are: #1 - sectiontype name\n% (for \\@sect)   #2 - section level\n%                #3 - section heading indent\n%                #4 - top separation (absolute value used, neg indicates not to indent main text)\n%                     If negative, make stretch parts negative too!\n%                #5 - (absolute value used) positive: bottom separation after heading,\n%                      negative: amount to indent main text after heading\n",
                      "markdown": "`% arguments are: #1 - sectiontype name\n% (for \\@sect)   #2 - section level\n%                #3 - section heading indent\n%                #4 - top separation (absolute value used, neg indicates not to indent main text)\n%                     If negative, make stretch parts negative too!\n%                #5 - (absolute value used) positive: bottom separation after heading,\n%                      negative: amount to indent main text after heading\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5419,
                  "startColumn": 14,
                  "endLine": 5419,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  \\ifdim \\@tempskipa>\\z@% tempskipa determines whether is treated as a high\n     \\begingroup #6{\\relax% or low level heading\n      \\noindent % subsections are NOT indented\n       % print top level headings. \\@svsec is label, #8 is heading title\n       % The IEEE does not block indent the section title text, it flows like normal\n       {\\hskip #3\\relax\\@svsec}{\\interlinepenalty \\@M #8\\@@par}}%\n     \\endgroup\n",
                    "rendered": {
                      "text": "  \\ifdim \\@tempskipa>\\z@% tempskipa determines whether is treated as a high\n     \\begingroup #6{\\relax% or low level heading\n      \\noindent % subsections are NOT indented\n       % print top level headings. \\@svsec is label, #8 is heading title\n       % The IEEE does not block indent the section title text, it flows like normal\n       {\\hskip #3\\relax\\@svsec}{\\interlinepenalty \\@M #8\\@@par}}%\n     \\endgroup\n",
                      "markdown": "`  \\ifdim \\@tempskipa>\\z@% tempskipa determines whether is treated as a high\n     \\begingroup #6{\\relax% or low level heading\n      \\noindent % subsections are NOT indented\n       % print top level headings. \\@svsec is label, #8 is heading title\n       % The IEEE does not block indent the section title text, it flows like normal\n       {\\hskip #3\\relax\\@svsec}{\\interlinepenalty \\@M #8\\@@par}}%\n     \\endgroup\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5145,
                  "startColumn": 11,
                  "endLine": 5145,
                  "endColumn": 16,
                  "snippet": {
                    "text": "%\n\\else % prevdepth <= -1000pt, simplier \\topskip type rules in effect\n\\ifdim\\@IEEEquantizeheightB>\\@IEEEquantizetopbaselineskip\n% height of top line (already included in the total height) in excess of\n% baselineskip is the amount it will be downshifted\n\\advance\\@IEEEquantizeheightA-\\@IEEEquantizetopbaselineskip\\relax\n\\else\n",
                    "rendered": {
                      "text": "%\n\\else % prevdepth <= -1000pt, simplier \\topskip type rules in effect\n\\ifdim\\@IEEEquantizeheightB>\\@IEEEquantizetopbaselineskip\n% height of top line (already included in the total height) in excess of\n% baselineskip is the amount it will be downshifted\n\\advance\\@IEEEquantizeheightA-\\@IEEEquantizetopbaselineskip\\relax\n\\else\n",
                      "markdown": "`%\n\\else % prevdepth <= -1000pt, simplier \\topskip type rules in effect\n\\ifdim\\@IEEEquantizeheightB>\\@IEEEquantizetopbaselineskip\n% height of top line (already included in the total height) in excess of\n% baselineskip is the amount it will be downshifted\n\\advance\\@IEEEquantizeheightA-\\@IEEEquantizetopbaselineskip\\relax\n\\else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5133,
                  "startColumn": 34,
                  "endLine": 5133,
                  "endColumn": 39,
                  "snippet": {
                    "text": "plimit\\relax % this works even though \\@IEEEquantizelineskiplimit is a macro because TeX allows --10pt notation\n\\ifdim\\@IEEEquantizeheightB>\\@IEEEquantizeheightC\\relax\n% lineskip spacing rule is in effect i.e., the object is going to be shifted down relative to the\n% baselineskip set position by its top line height (already a part of the total height) + prevdepth + lineskip - baselineskip\n\\advance\\@IEEEquantizeheightA\\@IEEEquantizeprevdepth\\relax\n\\advance\\@IEEEquantizeheightA\\@IEEEquantizelineskip\\relax\n\\advance\\@IEEEquantizeheightA-\\@IEEEquantizetopbaselineskip\\relax\n\\else\n% height of first line <",
                    "rendered": {
                      "text": "plimit\\relax % this works even though \\@IEEEquantizelineskiplimit is a macro because TeX allows --10pt notation\n\\ifdim\\@IEEEquantizeheightB>\\@IEEEquantizeheightC\\relax\n% lineskip spacing rule is in effect i.e., the object is going to be shifted down relative to the\n% baselineskip set position by its top line height (already a part of the total height) + prevdepth + lineskip - baselineskip\n\\advance\\@IEEEquantizeheightA\\@IEEEquantizeprevdepth\\relax\n\\advance\\@IEEEquantizeheightA\\@IEEEquantizelineskip\\relax\n\\advance\\@IEEEquantizeheightA-\\@IEEEquantizetopbaselineskip\\relax\n\\else\n% height of first line <",
                      "markdown": "`plimit\\relax % this works even though \\@IEEEquantizelineskiplimit is a macro because TeX allows --10pt notation\n\\ifdim\\@IEEEquantizeheightB>\\@IEEEquantizeheightC\\relax\n% lineskip spacing rule is in effect i.e., the object is going to be shifted down relative to the\n% baselineskip set position by its top line height (already a part of the total height) + prevdepth + lineskip - baselineskip\n\\advance\\@IEEEquantizeheightA\\@IEEEquantizeprevdepth\\relax\n\\advance\\@IEEEquantizeheightA\\@IEEEquantizelineskip\\relax\n\\advance\\@IEEEquantizeheightA-\\@IEEEquantizetopbaselineskip\\relax\n\\else\n% height of first line <`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5126,
                  "startColumn": 49,
                  "endLine": 5126,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\\setbox\\@IEEEquantizeboxA\\vtop{\\begingroup\\@IEEEquantizeobjectdecl\\@IEEEquantizeobject\\relax\\endgroup}\\relax\n\\@IEEEquantizeheightB\\ht\\@IEEEquantizeboxA\\relax\n\\ifdim\\@IEEEquantizeprevdepth>-1000pt\\relax % prevdepth > -1000pf means full baselineskip\\lineskip rules in effect\n% lineskip spacing rule takes effect if height of top line > baselineskip - prevdepth - lineskiplimit, \n% otherwise the baselineskip rule is in effect and the height of the first line does not matter at all.\n\\@IEEEquantizeheightC=\\@IEEEquantizetopbaselineskip\\relax\n\\advance\\@IEEEquantizeheightC-\\@IEEEquantizeprevdepth\\relax\n",
                    "rendered": {
                      "text": "\\setbox\\@IEEEquantizeboxA\\vtop{\\begingroup\\@IEEEquantizeobjectdecl\\@IEEEquantizeobject\\relax\\endgroup}\\relax\n\\@IEEEquantizeheightB\\ht\\@IEEEquantizeboxA\\relax\n\\ifdim\\@IEEEquantizeprevdepth>-1000pt\\relax % prevdepth > -1000pf means full baselineskip\\lineskip rules in effect\n% lineskip spacing rule takes effect if height of top line > baselineskip - prevdepth - lineskiplimit, \n% otherwise the baselineskip rule is in effect and the height of the first line does not matter at all.\n\\@IEEEquantizeheightC=\\@IEEEquantizetopbaselineskip\\relax\n\\advance\\@IEEEquantizeheightC-\\@IEEEquantizeprevdepth\\relax\n",
                      "markdown": "`\\setbox\\@IEEEquantizeboxA\\vtop{\\begingroup\\@IEEEquantizeobjectdecl\\@IEEEquantizeobject\\relax\\endgroup}\\relax\n\\@IEEEquantizeheightB\\ht\\@IEEEquantizeboxA\\relax\n\\ifdim\\@IEEEquantizeprevdepth>-1000pt\\relax % prevdepth > -1000pf means full baselineskip\\lineskip rules in effect\n% lineskip spacing rule takes effect if height of top line > baselineskip - prevdepth - lineskiplimit, \n% otherwise the baselineskip rule is in effect and the height of the first line does not matter at all.\n\\@IEEEquantizeheightC=\\@IEEEquantizetopbaselineskip\\relax\n\\advance\\@IEEEquantizeheightC-\\@IEEEquantizeprevdepth\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5089,
                  "startColumn": 4,
                  "endLine": 5089,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\\long\\def\\@@@IEEEquantizevspace[#1]#2{\\relax\n% acquire and store\n% [#1] optional object decl, is \\relax if not given by user\n% #2 top baselineskip\n% allow for object decl specifications that have parameters\n\\@IEEEtrantmptoksA={#1}\\relax\n\\long\\edef\\@IEEEquantizeobjectdecl{\\the\\@IEEEtrantmptoksA}\\relax\n",
                    "rendered": {
                      "text": "\\long\\def\\@@@IEEEquantizevspace[#1]#2{\\relax\n% acquire and store\n% [#1] optional object decl, is \\relax if not given by user\n% #2 top baselineskip\n% allow for object decl specifications that have parameters\n\\@IEEEtrantmptoksA={#1}\\relax\n\\long\\edef\\@IEEEquantizeobjectdecl{\\the\\@IEEEtrantmptoksA}\\relax\n",
                      "markdown": "`\\long\\def\\@@@IEEEquantizevspace[#1]#2{\\relax\n% acquire and store\n% [#1] optional object decl, is \\relax if not given by user\n% #2 top baselineskip\n% allow for object decl specifications that have parameters\n\\@IEEEtrantmptoksA={#1}\\relax\n\\long\\edef\\@IEEEquantizeobjectdecl{\\the\\@IEEEtrantmptoksA}\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5057,
                  "startColumn": 29,
                  "endLine": 5057,
                  "endColumn": 34,
                  "snippet": {
                    "text": "% for objects to appear inline in normal text:\n% top baselineskip = \\baselineskip\n%\n% set prevdepth = -1000pt and top baselineskip = 0pt to consider the\n% overall height of the object without any other external skip\n% consideration\n\n",
                    "rendered": {
                      "text": "% for objects to appear inline in normal text:\n% top baselineskip = \\baselineskip\n%\n% set prevdepth = -1000pt and top baselineskip = 0pt to consider the\n% overall height of the object without any other external skip\n% consideration\n\n",
                      "markdown": "`% for objects to appear inline in normal text:\n% top baselineskip = \\baselineskip\n%\n% set prevdepth = -1000pt and top baselineskip = 0pt to consider the\n% overall height of the object without any other external skip\n% consideration\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5055,
                  "startColumn": 1,
                  "endLine": 5055,
                  "endColumn": 6,
                  "snippet": {
                    "text": "% 0pt                 % always consider any positive height of the top line\n%\n% for objects to appear inline in normal text:\n% top baselineskip = \\baselineskip\n%\n% set prevdepth = -1000pt and top baselineskip = 0pt to consider the\n% overall height of the object without any other external skip\n",
                    "rendered": {
                      "text": "% 0pt                 % always consider any positive height of the top line\n%\n% for objects to appear inline in normal text:\n% top baselineskip = \\baselineskip\n%\n% set prevdepth = -1000pt and top baselineskip = 0pt to consider the\n% overall height of the object without any other external skip\n",
                      "markdown": "`% 0pt                 % always consider any positive height of the top line\n%\n% for objects to appear inline in normal text:\n% top baselineskip = \\baselineskip\n%\n% set prevdepth = -1000pt and top baselineskip = 0pt to consider the\n% overall height of the object without any other external skip\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5052,
                  "startColumn": 66,
                  "endLine": 5052,
                  "endColumn": 71,
                  "snippet": {
                    "text": "% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n% for objects to appear inline in normal text:\n% top baselineskip = \\baselineskip\n",
                    "rendered": {
                      "text": "% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n% for objects to appear inline in normal text:\n% top baselineskip = \\baselineskip\n",
                      "markdown": "`% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n% for objects to appear inline in normal text:\n% top baselineskip = \\baselineskip\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5051,
                  "startColumn": 55,
                  "endLine": 5051,
                  "endColumn": 60,
                  "snippet": {
                    "text": "%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n% for objects to appear inline in normal text:\n",
                    "rendered": {
                      "text": "%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n% for objects to appear inline in normal text:\n",
                      "markdown": "`%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n% for objects to appear inline in normal text:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5050,
                  "startColumn": 54,
                  "endLine": 5050,
                  "endColumn": 59,
                  "snippet": {
                    "text": "% Common combinations of these parameters include:\n%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n",
                    "rendered": {
                      "text": "% Common combinations of these parameters include:\n%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n",
                      "markdown": "`% Common combinations of these parameters include:\n%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5049,
                  "startColumn": 1,
                  "endLine": 5049,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n% Common combinations of these parameters include:\n%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n",
                    "rendered": {
                      "text": "\n% Common combinations of these parameters include:\n%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n",
                      "markdown": "`\n% Common combinations of these parameters include:\n%\n% top baselineskip:   (and default values for offset, prevdepth, etc.)\n% \\topskip            % for objects that appear at the top of a page\n% \\maxdimen           % always ignore the height of the top line\n% 0pt                 % always consider any positive height of the top line\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5041,
                  "startColumn": 71,
                  "endLine": 5042,
                  "snippet": {
                    "text": "% \\topskip spacing rules are in effect.\n%\n% Offset is a manual adjustment that is added to the height calculations of\n% object irrespective of the value of \\prevdepth. It is useful when the top\n% baselineskip will result in a noninteger unit height object placement even\n% if the object itself has integral height. e.g., a footnotesize baselineskip\n% is used before the object, thus an offset of, say -3pt, can be given as a\n% correction.\n",
                    "rendered": {
                      "text": "% \\topskip spacing rules are in effect.\n%\n% Offset is a manual adjustment that is added to the height calculations of\n% object irrespective of the value of \\prevdepth. It is useful when the top\n% baselineskip will result in a noninteger unit height object placement even\n% if the object itself has integral height. e.g., a footnotesize baselineskip\n% is used before the object, thus an offset of, say -3pt, can be given as a\n% correction.\n",
                      "markdown": "`% \\topskip spacing rules are in effect.\n%\n% Offset is a manual adjustment that is added to the height calculations of\n% object irrespective of the value of \\prevdepth. It is useful when the top\n% baselineskip will result in a noninteger unit height object placement even\n% if the object itself has integral height. e.g., a footnotesize baselineskip\n% is used before the object, thus an offset of, say -3pt, can be given as a\n% correction.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5031,
                  "startColumn": 25,
                  "endLine": 5031,
                  "endColumn": 30,
                  "snippet": {
                    "text": "% \\lineskip, respectively, if they are omitted.\n%\n% The prevdepth is the depth of the line before the object, the lineskip limit\n% specifies how close the top of the object can come to the bottom of the\n% previous line before \\baselineskip is ignored and \\lineskip is inserted\n% between the object and the line above it. Lineskip does not come into\n% play unless the first line of the object is high enough to \"get too close\"\n",
                    "rendered": {
                      "text": "% \\lineskip, respectively, if they are omitted.\n%\n% The prevdepth is the depth of the line before the object, the lineskip limit\n% specifies how close the top of the object can come to the bottom of the\n% previous line before \\baselineskip is ignored and \\lineskip is inserted\n% between the object and the line above it. Lineskip does not come into\n% play unless the first line of the object is high enough to \"get too close\"\n",
                      "markdown": "`% \\lineskip, respectively, if they are omitted.\n%\n% The prevdepth is the depth of the line before the object, the lineskip limit\n% specifies how close the top of the object can come to the bottom of the\n% previous line before \\baselineskip is ignored and \\lineskip is inserted\n% between the object and the line above it. Lineskip does not come into\n% play unless the first line of the object is high enough to \"get too close\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5021,
                  "startColumn": 59,
                  "endLine": 5021,
                  "endColumn": 64,
                  "snippet": {
                    "text": "% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n%\n% However, as explained on page 78 of the TeXbook, interline spacing is more\n",
                    "rendered": {
                      "text": "% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n%\n% However, as explained on page 78 of the TeXbook, interline spacing is more\n",
                      "markdown": "`% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n%\n% However, as explained on page 78 of the TeXbook, interline spacing is more\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5019,
                  "startColumn": 19,
                  "endLine": 5019,
                  "endColumn": 24,
                  "snippet": {
                    "text": "% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n",
                    "rendered": {
                      "text": "% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n",
                      "markdown": "`% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5019,
                  "startColumn": 1,
                  "endLine": 5019,
                  "endColumn": 6,
                  "snippet": {
                    "text": "% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n",
                    "rendered": {
                      "text": "% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n",
                      "markdown": "`% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n% of the object is ignored as far as the calculations are concerned.\n% This algorithm is adequate for objects that appear at the top of a page\n% (e.g., titles) where \\topskip spacing is used.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5016,
                  "startColumn": 5,
                  "endLine": 5016,
                  "endColumn": 10,
                  "snippet": {
                    "text": "% when \\prevdepth is -1000pt or less). top baselineskip specifies the\n% baselineskip or topskip used prior to the object. If the height of the\n% first line of the object is greater than the given top baselineskip, then\n% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n",
                    "rendered": {
                      "text": "% when \\prevdepth is -1000pt or less). top baselineskip specifies the\n% baselineskip or topskip used prior to the object. If the height of the\n% first line of the object is greater than the given top baselineskip, then\n% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n",
                      "markdown": "`% when \\prevdepth is -1000pt or less). top baselineskip specifies the\n% baselineskip or topskip used prior to the object. If the height of the\n% first line of the object is greater than the given top baselineskip, then\n% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n% top line height - top baselineskip). Otherwise, the height of the first line\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5015,
                  "startColumn": 52,
                  "endLine": 5015,
                  "endColumn": 57,
                  "snippet": {
                    "text": "% care with regard to the first line of a vertical list (which is indicated\n% when \\prevdepth is -1000pt or less). top baselineskip specifies the\n% baselineskip or topskip used prior to the object. If the height of the\n% first line of the object is greater than the given top baselineskip, then\n% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n",
                    "rendered": {
                      "text": "% care with regard to the first line of a vertical list (which is indicated\n% when \\prevdepth is -1000pt or less). top baselineskip specifies the\n% baselineskip or topskip used prior to the object. If the height of the\n% first line of the object is greater than the given top baselineskip, then\n% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n",
                      "markdown": "`% care with regard to the first line of a vertical list (which is indicated\n% when \\prevdepth is -1000pt or less). top baselineskip specifies the\n% baselineskip or topskip used prior to the object. If the height of the\n% first line of the object is greater than the given top baselineskip, then\n% the top baselineskip is subtracted from the height of the first line and\n% that difference is considered along with the rest of the object height\n% (because the object will be shifted down by an amount = \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 5013,
                  "startColumn": 38,
                  "endLine": 5013,
                  "endColumn": 43,
                  "snippet": {
                    "text": "%\n% The line spacing algorithm of TeX is somewhat involved and requires special\n% care with regard to the first line of a vertical list (which is indicated\n% when \\prevdepth is -1000pt or less). top baselineskip specifies the\n% baselineskip or topskip used prior to the object. If the height of the\n% first line of the object is greater than the given top baselineskip, then\n% the top baselineskip is subtracted from the height of the first line and\n",
                    "rendered": {
                      "text": "%\n% The line spacing algorithm of TeX is somewhat involved and requires special\n% care with regard to the first line of a vertical list (which is indicated\n% when \\prevdepth is -1000pt or less). top baselineskip specifies the\n% baselineskip or topskip used prior to the object. If the height of the\n% first line of the object is greater than the given top baselineskip, then\n% the top baselineskip is subtracted from the height of the first line and\n",
                      "markdown": "`%\n% The line spacing algorithm of TeX is somewhat involved and requires special\n% care with regard to the first line of a vertical list (which is indicated\n% when \\prevdepth is -1000pt or less). top baselineskip specifies the\n% baselineskip or topskip used prior to the object. If the height of the\n% first line of the object is greater than the given top baselineskip, then\n% the top baselineskip is subtracted from the height of the first line and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4205,
                  "startColumn": 70,
                  "endLine": 4206,
                  "snippet": {
                    "text": "\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column definition into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n\\@IEEEappendNOEXPANDtoksA{\\endcsname}%\n",
                    "rendered": {
                      "text": "\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column definition into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n\\@IEEEappendNOEXPANDtoksA{\\endcsname}%\n",
                      "markdown": "`\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column definition into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n\\@IEEEappendNOEXPANDtoksA{\\endcsname}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4167,
                  "startColumn": 69,
                  "endLine": 4168,
                  "snippet": {
                    "text": "\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column defintion into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendtoksA{\\tabskip=\\@IEEEBPcurglue}%\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n",
                    "rendered": {
                      "text": "\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column defintion into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendtoksA{\\tabskip=\\@IEEEBPcurglue}%\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n",
                      "markdown": "`\\toks0={##}%\n% make preamble advance col counter if this environment needs this\n\\if@advanceIEEEeqncolcnt\\@IEEEappendtoksA{\\global\\advance\\@IEEEeqncolcnt by 1\\relax}\\fi\n% insert the column defintion into the preamble, being careful not to expand\n% the column definition\n\\@IEEEappendtoksA{\\tabskip=\\@IEEEBPcurglue}%\n\\@IEEEappendNOEXPANDtoksA{\\begingroup\\csname @IEEEeqnarraycolPRE}%\n\\@IEEEappendtoksA{\\@IEEEBPcurcolname}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 4020,
                  "startColumn": 38,
                  "endLine": 4020,
                  "endColumn": 46,
                  "snippet": {
                    "text": "% \\@IEEEextractedtoken has the first token, the rest are discarded\n\\let#2=u\\relax% assume invalid until know otherwise\n\\ifx\\@IEEEextractedtoken\\ignorespaces\\let#2=e\\else\n\\ifcat\\@IEEEextractedtoken\\relax\\else% screen out control sequences\n\\if0\\@IEEEextractedtoken\\let#2=n\\else\n\\if1\\@IEEEextractedtoken\\let#2=n\\else\n\\if2\\@IEEEextractedtoken\\let#2=n\\else\n",
                    "rendered": {
                      "text": "% \\@IEEEextractedtoken has the first token, the rest are discarded\n\\let#2=u\\relax% assume invalid until know otherwise\n\\ifx\\@IEEEextractedtoken\\ignorespaces\\let#2=e\\else\n\\ifcat\\@IEEEextractedtoken\\relax\\else% screen out control sequences\n\\if0\\@IEEEextractedtoken\\let#2=n\\else\n\\if1\\@IEEEextractedtoken\\let#2=n\\else\n\\if2\\@IEEEextractedtoken\\let#2=n\\else\n",
                      "markdown": "`% \\@IEEEextractedtoken has the first token, the rest are discarded\n\\let#2=u\\relax% assume invalid until know otherwise\n\\ifx\\@IEEEextractedtoken\\ignorespaces\\let#2=e\\else\n\\ifcat\\@IEEEextractedtoken\\relax\\else% screen out control sequences\n\\if0\\@IEEEextractedtoken\\let#2=n\\else\n\\if1\\@IEEEextractedtoken\\let#2=n\\else\n\\if2\\@IEEEextractedtoken\\let#2=n\\else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3961,
                  "startColumn": 37,
                  "endLine": 3961,
                  "endColumn": 45,
                  "snippet": {
                    "text": "% record the default end glues\n\\edef\\@IEEEBPstartglue{\\@IEEEeqnarraycolSEPdefaultstart}%\n\\edef\\@IEEEBPendglue{\\@IEEEeqnarraycolSEPdefaultend}%\n\\edef\\@IEEEedefMACRO{#1}\\relax% fully expand the preamble to support macro containers\n% now parse the user's column specifications\n% \\ignorespaces is used as a delimiter, need at least one trailing \\relax because\n% \\@@IEEEbuildpreamble looks into the future \n",
                    "rendered": {
                      "text": "% record the default end glues\n\\edef\\@IEEEBPstartglue{\\@IEEEeqnarraycolSEPdefaultstart}%\n\\edef\\@IEEEBPendglue{\\@IEEEeqnarraycolSEPdefaultend}%\n\\edef\\@IEEEedefMACRO{#1}\\relax% fully expand the preamble to support macro containers\n% now parse the user's column specifications\n% \\ignorespaces is used as a delimiter, need at least one trailing \\relax because\n% \\@@IEEEbuildpreamble looks into the future \n",
                      "markdown": "`% record the default end glues\n\\edef\\@IEEEBPstartglue{\\@IEEEeqnarraycolSEPdefaultstart}%\n\\edef\\@IEEEBPendglue{\\@IEEEeqnarraycolSEPdefaultend}%\n\\edef\\@IEEEedefMACRO{#1}\\relax% fully expand the preamble to support macro containers\n% now parse the user's column specifications\n% \\ignorespaces is used as a delimiter, need at least one trailing \\relax because\n% \\@@IEEEbuildpreamble looks into the future \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3764,
                  "startColumn": 67,
                  "endLine": 3764,
                  "endColumn": 73,
                  "snippet": {
                    "text": "cord the current values of the (sub)equation counters and revert back\n      % to them if the next line is changed or never comes. The \\if@IEEEeqnumpreadv, \\if@IEEEsubeqnumpreadv\n      % and \\@IEEEsubeqnnumrollback stuff tracks this.\n      % The logic to handle all this is surprisingly complex, but a nice feature of the approach here is\n      % that the equation counters and labels remain valid for what the line would be unless a\n      % \\IEEEyessubnumber et al. later changes it. So, any hyperref links are always correct.\n      \\ifnum\\c@IEEEsubequation>0\\relax% handle subequation\n         \\theIEEEsub",
                    "rendered": {
                      "text": "cord the current values of the (sub)equation counters and revert back\n      % to them if the next line is changed or never comes. The \\if@IEEEeqnumpreadv, \\if@IEEEsubeqnumpreadv\n      % and \\@IEEEsubeqnnumrollback stuff tracks this.\n      % The logic to handle all this is surprisingly complex, but a nice feature of the approach here is\n      % that the equation counters and labels remain valid for what the line would be unless a\n      % \\IEEEyessubnumber et al. later changes it. So, any hyperref links are always correct.\n      \\ifnum\\c@IEEEsubequation>0\\relax% handle subequation\n         \\theIEEEsub",
                      "markdown": "`cord the current values of the (sub)equation counters and revert back\n      % to them if the next line is changed or never comes. The \\if@IEEEeqnumpreadv, \\if@IEEEsubeqnumpreadv\n      % and \\@IEEEsubeqnnumrollback stuff tracks this.\n      % The logic to handle all this is surprisingly complex, but a nice feature of the approach here is\n      % that the equation counters and labels remain valid for what the line would be unless a\n      % \\IEEEyessubnumber et al. later changes it. So, any hyperref links are always correct.\n      \\ifnum\\c@IEEEsubequation>0\\relax% handle subequation\n         \\theIEEEsub`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3236,
                  "startColumn": 61,
                  "endLine": 3236,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n\n\n% creates a vertical rule that extends from the bottom to the top a a cell\n% Provided in case other packages redefine \\vline some other way.\n% usage: \\IEEEeqnarrayvrule[rule thickness]\n% If no argument is provided, \\arrayrulewidth will be used for the rule thickness. \n",
                    "rendered": {
                      "text": "\n\n\n% creates a vertical rule that extends from the bottom to the top a a cell\n% Provided in case other packages redefine \\vline some other way.\n% usage: \\IEEEeqnarrayvrule[rule thickness]\n% If no argument is provided, \\arrayrulewidth will be used for the rule thickness. \n",
                      "markdown": "`\n\n\n% creates a vertical rule that extends from the bottom to the top a a cell\n% Provided in case other packages redefine \\vline some other way.\n% usage: \\IEEEeqnarrayvrule[rule thickness]\n% If no argument is provided, \\arrayrulewidth will be used for the rule thickness. \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3229,
                  "startColumn": 52,
                  "endLine": 3229,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\\def\\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}\n\n% top level default tabskip glues for the start, end, and inter-column\n% may be reset within environments not always at the top level, e.g., \\IEEEeqnarraybox\n\\edef\\@IEEEeqnarraycolSEPdefaultstart{\\@IEEEeqnarraycolSEPcenter}% default start glue\n\\edef\\@IEEEeqnarraycolSEPdefaultend{\\@IEEEeqnarraycolSEPcenter}% default end glue\n\\edef\\@IEEEeqnarraycolSEPdefaultmid{\\@IEEEeqnarraycolSEPzero}% default inter-column glue\n",
                    "rendered": {
                      "text": "\\def\\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}\n\n% top level default tabskip glues for the start, end, and inter-column\n% may be reset within environments not always at the top level, e.g., \\IEEEeqnarraybox\n\\edef\\@IEEEeqnarraycolSEPdefaultstart{\\@IEEEeqnarraycolSEPcenter}% default start glue\n\\edef\\@IEEEeqnarraycolSEPdefaultend{\\@IEEEeqnarraycolSEPcenter}% default end glue\n\\edef\\@IEEEeqnarraycolSEPdefaultmid{\\@IEEEeqnarraycolSEPzero}% default inter-column glue\n",
                      "markdown": "`\\def\\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}\n\n% top level default tabskip glues for the start, end, and inter-column\n% may be reset within environments not always at the top level, e.g., \\IEEEeqnarraybox\n\\edef\\@IEEEeqnarraycolSEPdefaultstart{\\@IEEEeqnarraycolSEPcenter}% default start glue\n\\edef\\@IEEEeqnarraycolSEPdefaultend{\\@IEEEeqnarraycolSEPcenter}% default end glue\n\\edef\\@IEEEeqnarraycolSEPdefaultmid{\\@IEEEeqnarraycolSEPzero}% default inter-column glue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3228,
                  "startColumn": 1,
                  "endLine": 3228,
                  "endColumn": 6,
                  "snippet": {
                    "text": "% a centering tabskip (used for \"+\" col types)\n\\def\\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}\n\n% top level default tabskip glues for the start, end, and inter-column\n% may be reset within environments not always at the top level, e.g., \\IEEEeqnarraybox\n\\edef\\@IEEEeqnarraycolSEPdefaultstart{\\@IEEEeqnarraycolSEPcenter}% default start glue\n\\edef\\@IEEEeqnarraycolSEPdefaultend{\\@IEEEeqnarraycolSEPcenter}% default end glue\n",
                    "rendered": {
                      "text": "% a centering tabskip (used for \"+\" col types)\n\\def\\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}\n\n% top level default tabskip glues for the start, end, and inter-column\n% may be reset within environments not always at the top level, e.g., \\IEEEeqnarraybox\n\\edef\\@IEEEeqnarraycolSEPdefaultstart{\\@IEEEeqnarraycolSEPcenter}% default start glue\n\\edef\\@IEEEeqnarraycolSEPdefaultend{\\@IEEEeqnarraycolSEPcenter}% default end glue\n",
                      "markdown": "`% a centering tabskip (used for \"+\" col types)\n\\def\\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}\n\n% top level default tabskip glues for the start, end, and inter-column\n% may be reset within environments not always at the top level, e.g., \\IEEEeqnarraybox\n\\edef\\@IEEEeqnarraycolSEPdefaultstart{\\@IEEEeqnarraycolSEPcenter}% default start glue\n\\edef\\@IEEEeqnarraycolSEPdefaultend{\\@IEEEeqnarraycolSEPcenter}% default end glue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3185,
                  "startColumn": 50,
                  "endLine": 3185,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\\def\\@IEEEappendtoksA#1{\\edef\\@@IEEEappendtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA #1}}%\n\\@@IEEEappendtoksA}\n\n% also appends to \\@IEEEtrantmptoksA, but does not expand the argument\n% uses \\toks8 as a scratchpad register\n\\def\\@IEEEappendNOEXPANDtoksA#1{\\toks8={#1}%\n\\edef\\@@IEEEappendNOEXPANDtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA\\the\\toks8}}%\n",
                    "rendered": {
                      "text": "\\def\\@IEEEappendtoksA#1{\\edef\\@@IEEEappendtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA #1}}%\n\\@@IEEEappendtoksA}\n\n% also appends to \\@IEEEtrantmptoksA, but does not expand the argument\n% uses \\toks8 as a scratchpad register\n\\def\\@IEEEappendNOEXPANDtoksA#1{\\toks8={#1}%\n\\edef\\@@IEEEappendNOEXPANDtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA\\the\\toks8}}%\n",
                      "markdown": "`\\def\\@IEEEappendtoksA#1{\\edef\\@@IEEEappendtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA #1}}%\n\\@@IEEEappendtoksA}\n\n% also appends to \\@IEEEtrantmptoksA, but does not expand the argument\n% uses \\toks8 as a scratchpad register\n\\def\\@IEEEappendNOEXPANDtoksA#1{\\toks8={#1}%\n\\edef\\@@IEEEappendNOEXPANDtoksA{\\@IEEEtrantmptoksA={\\the\\@IEEEtrantmptoksA\\the\\toks8}}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3132,
                  "startColumn": 19,
                  "endLine": 3132,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\\long\\def\\IEEEeqnarraymulticol#1#2#3{\\multispan{#1}\\relax\n% check if column is defined for the precolumn definition\n% We have to be careful here because TeX scans for & even within an \\iffalse\n% where it does not expand macros. So, if we used only one \\ifx and a #3\n% appeared in the false branch and the user inserted another alignment\n% structure that uses & in the \\IEEEeqnarraymulticol{}, TeX will not see that\n% there is an inner alignment in the false branch yet still will see any &\n",
                    "rendered": {
                      "text": "\\long\\def\\IEEEeqnarraymulticol#1#2#3{\\multispan{#1}\\relax\n% check if column is defined for the precolumn definition\n% We have to be careful here because TeX scans for & even within an \\iffalse\n% where it does not expand macros. So, if we used only one \\ifx and a #3\n% appeared in the false branch and the user inserted another alignment\n% structure that uses & in the \\IEEEeqnarraymulticol{}, TeX will not see that\n% there is an inner alignment in the false branch yet still will see any &\n",
                      "markdown": "`\\long\\def\\IEEEeqnarraymulticol#1#2#3{\\multispan{#1}\\relax\n% check if column is defined for the precolumn definition\n% We have to be careful here because TeX scans for & even within an \\iffalse\n% where it does not expand macros. So, if we used only one \\ifx and a #3\n% appeared in the false branch and the user inserted another alignment\n% structure that uses & in the \\IEEEeqnarraymulticol{}, TeX will not see that\n% there is an inner alignment in the false branch yet still will see any &\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 3093,
                  "startColumn": 48,
                  "endLine": 3093,
                  "endColumn": 55,
                  "snippet": {
                    "text": "%\n\\def\\@IEEEyessubnumber{\\if@IEEEeqnarrayISinner% alter counters and label only inside an IEEEeqnarray\n  \\ifnum\\c@IEEEsubequation>0\\relax% if it already is a subequation, we are good to go as-is\n  \\else% if we are a regular equation we have to watch out for two cases\n    \\if@IEEEeqnumpreadv% if this equation is the result of a preadvance, backout and bump the sub eqnnum\n       \\global\\advance\\c@equation\\m@ne\\global\\c@IEEEsubequation=\\@IEEEsubeqnnumrollback\\addtocounter{IEEEsubequation}{1}\\relax\n    \\else% non-preadvanced equations just need initialization of their sub eqnnum\n",
                    "rendered": {
                      "text": "%\n\\def\\@IEEEyessubnumber{\\if@IEEEeqnarrayISinner% alter counters and label only inside an IEEEeqnarray\n  \\ifnum\\c@IEEEsubequation>0\\relax% if it already is a subequation, we are good to go as-is\n  \\else% if we are a regular equation we have to watch out for two cases\n    \\if@IEEEeqnumpreadv% if this equation is the result of a preadvance, backout and bump the sub eqnnum\n       \\global\\advance\\c@equation\\m@ne\\global\\c@IEEEsubequation=\\@IEEEsubeqnnumrollback\\addtocounter{IEEEsubequation}{1}\\relax\n    \\else% non-preadvanced equations just need initialization of their sub eqnnum\n",
                      "markdown": "`%\n\\def\\@IEEEyessubnumber{\\if@IEEEeqnarrayISinner% alter counters and label only inside an IEEEeqnarray\n  \\ifnum\\c@IEEEsubequation>0\\relax% if it already is a subequation, we are good to go as-is\n  \\else% if we are a regular equation we have to watch out for two cases\n    \\if@IEEEeqnumpreadv% if this equation is the result of a preadvance, backout and bump the sub eqnnum\n       \\global\\advance\\c@equation\\m@ne\\global\\c@IEEEsubequation=\\@IEEEsubeqnnumrollback\\addtocounter{IEEEsubequation}{1}\\relax\n    \\else% non-preadvanced equations just need initialization of their sub eqnnum\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2980,
                  "startColumn": 54,
                  "endLine": 2980,
                  "endColumn": 62,
                  "snippet": {
                    "text": "% If given an empty argument, \\@IEEEextractedfirsttoken and\n% \\@IEEEextractednextfirsttoken will be set to \\relax\n% and all the macros will be empty.\n% the *-star form, \\@IEEEextracttokengroups*, does not expand its argument\n% contents during processing.\n%\n% Depends on: \\@IEEEextractgroup, \\@IEEEextracttoken\n",
                    "rendered": {
                      "text": "% If given an empty argument, \\@IEEEextractedfirsttoken and\n% \\@IEEEextractednextfirsttoken will be set to \\relax\n% and all the macros will be empty.\n% the *-star form, \\@IEEEextracttokengroups*, does not expand its argument\n% contents during processing.\n%\n% Depends on: \\@IEEEextractgroup, \\@IEEEextracttoken\n",
                      "markdown": "`% If given an empty argument, \\@IEEEextractedfirsttoken and\n% \\@IEEEextractednextfirsttoken will be set to \\relax\n% and all the macros will be empty.\n% the *-star form, \\@IEEEextracttokengroups*, does not expand its argument\n% contents during processing.\n%\n% Depends on: \\@IEEEextractgroup, \\@IEEEextracttoken\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2933,
                  "startColumn": 33,
                  "endLine": 2933,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n\n\n% \\@IEEEextracttoken relocated at top because margin setting commands rely on it\n\n\n\n",
                    "rendered": {
                      "text": "\n\n\n% \\@IEEEextracttoken relocated at top because margin setting commands rely on it\n\n\n\n",
                      "markdown": "`\n\n\n% \\@IEEEextracttoken relocated at top because margin setting commands rely on it\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2901,
                  "startColumn": 48,
                  "endLine": 2901,
                  "endColumn": 56,
                  "snippet": {
                    "text": "% \\@IEEEextractedgroup        ==> a macro containing {ab}\n% \\@IEEEextractedgroupremain  ==> a macro containing {c{de}}\n%\n% The *-star form, \\@IEEEextractgroup*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextractgroup{\\@ifstar{\\let\\@IEEEextractgroupdef=\\def\\@@IEEEextractgroup}{\\let\\@IEEEextractgroupdef=\\edef\\@@IEEEextractgroup}}\n\n",
                    "rendered": {
                      "text": "% \\@IEEEextractedgroup        ==> a macro containing {ab}\n% \\@IEEEextractedgroupremain  ==> a macro containing {c{de}}\n%\n% The *-star form, \\@IEEEextractgroup*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextractgroup{\\@ifstar{\\let\\@IEEEextractgroupdef=\\def\\@@IEEEextractgroup}{\\let\\@IEEEextractgroupdef=\\edef\\@@IEEEextractgroup}}\n\n",
                      "markdown": "`% \\@IEEEextractedgroup        ==> a macro containing {ab}\n% \\@IEEEextractedgroupremain  ==> a macro containing {c{de}}\n%\n% The *-star form, \\@IEEEextractgroup*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextractgroup{\\@ifstar{\\let\\@IEEEextractgroupdef=\\def\\@@IEEEextractgroup}{\\let\\@IEEEextractgroupdef=\\edef\\@@IEEEextractgroup}}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2863,
                  "startColumn": 51,
                  "endLine": 2863,
                  "endColumn": 59,
                  "snippet": {
                    "text": "% \\@IEEEstripouterbracesarg ==> a macro containing {{{ab}c}}\n% \\@IEEEstrippedouterbraces ==> a macro containing {ab}c\n%\n% the *-star form,\\@IEEEstripouterbraces*, does not expand the argument\n% contents during processing\n\\def\\@IEEEstripouterbraces{\\@ifstar{\\let\\@IEEEstripouterbracesdef=\\def\\@@IEEEstripouterbraces}{\\let\\@IEEEstripouterbracesdef=\\edef\\@@IEEEstripouterbraces}}\n\n",
                    "rendered": {
                      "text": "% \\@IEEEstripouterbracesarg ==> a macro containing {{{ab}c}}\n% \\@IEEEstrippedouterbraces ==> a macro containing {ab}c\n%\n% the *-star form,\\@IEEEstripouterbraces*, does not expand the argument\n% contents during processing\n\\def\\@IEEEstripouterbraces{\\@ifstar{\\let\\@IEEEstripouterbracesdef=\\def\\@@IEEEstripouterbraces}{\\let\\@IEEEstripouterbracesdef=\\edef\\@@IEEEstripouterbraces}}\n\n",
                      "markdown": "`% \\@IEEEstripouterbracesarg ==> a macro containing {{{ab}c}}\n% \\@IEEEstrippedouterbraces ==> a macro containing {ab}c\n%\n% the *-star form,\\@IEEEstripouterbraces*, does not expand the argument\n% contents during processing\n\\def\\@IEEEstripouterbraces{\\@ifstar{\\let\\@IEEEstripouterbracesdef=\\def\\@@IEEEstripouterbraces}{\\let\\@IEEEstripouterbracesdef=\\edef\\@@IEEEstripouterbraces}}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2725,
                  "startColumn": 35,
                  "endLine": 2725,
                  "endColumn": 40,
                  "snippet": {
                    "text": "% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n% because top of figure content and top of captions in tables is the first thing on the vertical\n% list of these floats\n% thanks to Donald Arseneau for his 2000/11/11 post \"Re: caption hacking\" with info on this topic.\n\n",
                    "rendered": {
                      "text": "% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n% because top of figure content and top of captions in tables is the first thing on the vertical\n% list of these floats\n% thanks to Donald Arseneau for his 2000/11/11 post \"Re: caption hacking\" with info on this topic.\n\n",
                      "markdown": "`% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n% because top of figure content and top of captions in tables is the first thing on the vertical\n% list of these floats\n% thanks to Donald Arseneau for his 2000/11/11 post \"Re: caption hacking\" with info on this topic.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2725,
                  "startColumn": 9,
                  "endLine": 2725,
                  "endColumn": 14,
                  "snippet": {
                    "text": "% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n% because top of figure content and top of captions in tables is the first thing on the vertical\n% list of these floats\n% thanks to Donald Arseneau for his 2000/11/11 post \"Re: caption hacking\" with info on this topic.\n\n",
                    "rendered": {
                      "text": "% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n% because top of figure content and top of captions in tables is the first thing on the vertical\n% list of these floats\n% thanks to Donald Arseneau for his 2000/11/11 post \"Re: caption hacking\" with info on this topic.\n\n",
                      "markdown": "`% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n% because top of figure content and top of captions in tables is the first thing on the vertical\n% list of these floats\n% thanks to Donald Arseneau for his 2000/11/11 post \"Re: caption hacking\" with info on this topic.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2721,
                  "startColumn": 44,
                  "endLine": 2721,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n\\vspace*{\\@IEEEtrantmpdimenA}\\fi}\n% V1.8 compensate for \\topskip at the top of top tables so caption text is on main text baseline\n% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n",
                    "rendered": {
                      "text": "\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n\\vspace*{\\@IEEEtrantmpdimenA}\\fi}\n% V1.8 compensate for \\topskip at the top of top tables so caption text is on main text baseline\n% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n",
                      "markdown": "`\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n\\vspace*{\\@IEEEtrantmpdimenA}\\fi}\n% V1.8 compensate for \\topskip at the top of top tables so caption text is on main text baseline\n% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2721,
                  "startColumn": 37,
                  "endLine": 2721,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n\\vspace*{\\@IEEEtrantmpdimenA}\\fi}\n% V1.8 compensate for \\topskip at the top of top tables so caption text is on main text baseline\n% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n",
                    "rendered": {
                      "text": "\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n\\vspace*{\\@IEEEtrantmpdimenA}\\fi}\n% V1.8 compensate for \\topskip at the top of top tables so caption text is on main text baseline\n% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n",
                      "markdown": "`\\setlength{\\@IEEEtrantmpdimenA}{1\\topskip}\\relax\n\\addtolength{\\@IEEEtrantmpdimenA}{-0.7\\@IEEEnormalsizeunitybaselineskip}\\relax\n\\vspace*{\\@IEEEtrantmpdimenA}\\fi}\n% V1.8 compensate for \\topskip at the top of top tables so caption text is on main text baseline\n% use a strut set on the caption baseline within \\@makecaption\n\\def\\@IEEEtabletopskipstrut{\\ifdim\\prevdepth=-1000pt\\rule{0pt}{\\topskip}\\fi}\n% the \\ifdim\\prevdepth checks are always expected to be true for IEEE style float caption ordering\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2714,
                  "startColumn": 40,
                  "endLine": 2714,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\\def\\@IEEEtablestring{table}\n\n\n% V1.8 compensate for \\topskip so top of top figures align with tops of the first lines of main text\n% here we calculate a space equal to the amount \\topskip exceeds the main text height\n% we hook in at \\@floatboxreset\n\\def\\@IEEEfiguretopskipspace{\\ifdim\\prevdepth=-1000pt\\relax\n",
                    "rendered": {
                      "text": "\\def\\@IEEEtablestring{table}\n\n\n% V1.8 compensate for \\topskip so top of top figures align with tops of the first lines of main text\n% here we calculate a space equal to the amount \\topskip exceeds the main text height\n% we hook in at \\@floatboxreset\n\\def\\@IEEEfiguretopskipspace{\\ifdim\\prevdepth=-1000pt\\relax\n",
                      "markdown": "`\\def\\@IEEEtablestring{table}\n\n\n% V1.8 compensate for \\topskip so top of top figures align with tops of the first lines of main text\n% here we calculate a space equal to the amount \\topskip exceeds the main text height\n% we hook in at \\@floatboxreset\n\\def\\@IEEEfiguretopskipspace{\\ifdim\\prevdepth=-1000pt\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2714,
                  "startColumn": 33,
                  "endLine": 2714,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\\def\\@IEEEtablestring{table}\n\n\n% V1.8 compensate for \\topskip so top of top figures align with tops of the first lines of main text\n% here we calculate a space equal to the amount \\topskip exceeds the main text height\n% we hook in at \\@floatboxreset\n\\def\\@IEEEfiguretopskipspace{\\ifdim\\prevdepth=-1000pt\\relax\n",
                    "rendered": {
                      "text": "\\def\\@IEEEtablestring{table}\n\n\n% V1.8 compensate for \\topskip so top of top figures align with tops of the first lines of main text\n% here we calculate a space equal to the amount \\topskip exceeds the main text height\n% we hook in at \\@floatboxreset\n\\def\\@IEEEfiguretopskipspace{\\ifdim\\prevdepth=-1000pt\\relax\n",
                      "markdown": "`\\def\\@IEEEtablestring{table}\n\n\n% V1.8 compensate for \\topskip so top of top figures align with tops of the first lines of main text\n% here we calculate a space equal to the amount \\topskip exceeds the main text height\n% we hook in at \\@floatboxreset\n\\def\\@IEEEfiguretopskipspace{\\ifdim\\prevdepth=-1000pt\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2668,
                  "startColumn": 23,
                  "endLine": 2668,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\\dblfloatsep 0.85\\baselineskip plus  0.2\\baselineskip minus  0.2\\baselineskip\n\n\\dbltextfloatsep 1.55\\baselineskip plus  0.2\\baselineskip minus  0.4\\baselineskip\n% Note that it would be nice if the rubber here actually worked in LaTeX2e.\n% There is a long standing limitation in LaTeX, first discovered (to the best\n% of my knowledge) by Alan Jeffrey in 1992. LaTeX ignores the stretchable\n% portion of \\dbltextfloatsep, and as a result, double column figures can and\n",
                    "rendered": {
                      "text": "\\dblfloatsep 0.85\\baselineskip plus  0.2\\baselineskip minus  0.2\\baselineskip\n\n\\dbltextfloatsep 1.55\\baselineskip plus  0.2\\baselineskip minus  0.4\\baselineskip\n% Note that it would be nice if the rubber here actually worked in LaTeX2e.\n% There is a long standing limitation in LaTeX, first discovered (to the best\n% of my knowledge) by Alan Jeffrey in 1992. LaTeX ignores the stretchable\n% portion of \\dbltextfloatsep, and as a result, double column figures can and\n",
                      "markdown": "`\\dblfloatsep 0.85\\baselineskip plus  0.2\\baselineskip minus  0.2\\baselineskip\n\n\\dbltextfloatsep 1.55\\baselineskip plus  0.2\\baselineskip minus  0.4\\baselineskip\n% Note that it would be nice if the rubber here actually worked in LaTeX2e.\n% There is a long standing limitation in LaTeX, first discovered (to the best\n% of my knowledge) by Alan Jeffrey in 1992. LaTeX ignores the stretchable\n% portion of \\dbltextfloatsep, and as a result, double column figures can and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2661,
                  "startColumn": 11,
                  "endLine": 2661,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\\def\\topfraction{0.9}\n\\def\\bottomfraction{0.4}\n\\def\\floatpagefraction{0.8}\n% V1.7, let top floats approach 90% of page\n\\def\\textfraction{0.1}\n\n% Double Column Floats\n",
                    "rendered": {
                      "text": "\\def\\topfraction{0.9}\n\\def\\bottomfraction{0.4}\n\\def\\floatpagefraction{0.8}\n% V1.7, let top floats approach 90% of page\n\\def\\textfraction{0.1}\n\n% Double Column Floats\n",
                      "markdown": "`\\def\\topfraction{0.9}\n\\def\\bottomfraction{0.4}\n\\def\\floatpagefraction{0.8}\n% V1.7, let top floats approach 90% of page\n\\def\\textfraction{0.1}\n\n% Double Column Floats\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2394,
                  "startColumn": 65,
                  "endLine": 2394,
                  "endColumn": 71,
                  "snippet": {
                    "text": "                % TIP: If you want to see what a variable's width is you\n                % can use the TeX command \\showthe\\width-variable to \n                % display it on the screen during compilation \n                % (This might be helpful to know when you need to find out\n                % which label is the widest)\n                \\settowidth{\\labelwidth}{Hello}%\n                \\@IEEEsavelistparams% save our list parameters\n",
                    "rendered": {
                      "text": "                % TIP: If you want to see what a variable's width is you\n                % can use the TeX command \\showthe\\width-variable to \n                % display it on the screen during compilation \n                % (This might be helpful to know when you need to find out\n                % which label is the widest)\n                \\settowidth{\\labelwidth}{Hello}%\n                \\@IEEEsavelistparams% save our list parameters\n",
                      "markdown": "`                % TIP: If you want to see what a variable's width is you\n                % can use the TeX command \\showthe\\width-variable to \n                % display it on the screen during compilation \n                % (This might be helpful to know when you need to find out\n                % which label is the widest)\n                \\settowidth{\\labelwidth}{Hello}%\n                \\@IEEEsavelistparams% save our list parameters\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 2393,
                  "startColumn": 35,
                  "endLine": 2393,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                % to set it.\n                % TIP: If you want to see what a variable's width is you\n                % can use the TeX command \\showthe\\width-variable to \n                % display it on the screen during compilation \n                % (This might be helpful to know when you need to find out\n                % which label is the widest)\n                \\settowidth{\\labelwidth}{Hello}%\n",
                    "rendered": {
                      "text": "                % to set it.\n                % TIP: If you want to see what a variable's width is you\n                % can use the TeX command \\showthe\\width-variable to \n                % display it on the screen during compilation \n                % (This might be helpful to know when you need to find out\n                % which label is the widest)\n                \\settowidth{\\labelwidth}{Hello}%\n",
                      "markdown": "`                % to set it.\n                % TIP: If you want to see what a variable's width is you\n                % can use the TeX command \\showthe\\width-variable to \n                % display it on the screen during compilation \n                % (This might be helpful to know when you need to find out\n                % which label is the widest)\n                \\settowidth{\\labelwidth}{Hello}%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1862,
                  "startColumn": 35,
                  "endLine": 1862,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  \\fi\n  \\IEEEsettextheight{\\CLASSINPUTtoptextmargin}{\\CLASSINPUTbottomtextmargin}\n  \\IEEEsettopmargin{t}{\\CLASSINPUTtoptextmargin}\n  \\typeout{** ATTENTION: Overriding top text margin to \\CLASSINPUTtoptextmargin\\space and \n           bottom text margin to \\CLASSINPUTbottomtextmargin\\space via \\string\\CLASSINPUT.}\n\\fi\n\n",
                    "rendered": {
                      "text": "  \\fi\n  \\IEEEsettextheight{\\CLASSINPUTtoptextmargin}{\\CLASSINPUTbottomtextmargin}\n  \\IEEEsettopmargin{t}{\\CLASSINPUTtoptextmargin}\n  \\typeout{** ATTENTION: Overriding top text margin to \\CLASSINPUTtoptextmargin\\space and \n           bottom text margin to \\CLASSINPUTbottomtextmargin\\space via \\string\\CLASSINPUT.}\n\\fi\n\n",
                      "markdown": "`  \\fi\n  \\IEEEsettextheight{\\CLASSINPUTtoptextmargin}{\\CLASSINPUTbottomtextmargin}\n  \\IEEEsettopmargin{t}{\\CLASSINPUTtoptextmargin}\n  \\typeout{** ATTENTION: Overriding top text margin to \\CLASSINPUTtoptextmargin\\space and \n           bottom text margin to \\CLASSINPUTbottomtextmargin\\space via \\string\\CLASSINPUT.}\n\\fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1816,
                  "startColumn": 63,
                  "endLine": 1816,
                  "endColumn": 68,
                  "snippet": {
                    "text": "  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                    "rendered": {
                      "text": "  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                      "markdown": "`  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1816,
                  "startColumn": 9,
                  "endLine": 1816,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                    "rendered": {
                      "text": "  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                      "markdown": "`  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1814,
                  "startColumn": 22,
                  "endLine": 1814,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  \\IEEEsettextheight{1in}{1in}\n  \\IEEEsettopmargin{t}{1in}\n  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n",
                    "rendered": {
                      "text": "  \\IEEEsettextheight{1in}{1in}\n  \\IEEEsettopmargin{t}{1in}\n  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n",
                      "markdown": "`  \\IEEEsettextheight{1in}{1in}\n  \\IEEEsettopmargin{t}{1in}\n  % digitize textheight to be an integer number of lines.\n  % this may cause the top and bottom margins to be off a tad\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1810,
                  "startColumn": 12,
                  "endLine": 1810,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  % we want 1in side margins regardless of paper type\n  \\IEEEsettextwidth{1in}{1in}\n  \\IEEEsetsidemargin{c}{0pt}\n  % want 1in top and bottom margins\n  \\IEEEsettextheight{1in}{1in}\n  \\IEEEsettopmargin{t}{1in}\n  % digitize textheight to be an integer number of lines.\n",
                    "rendered": {
                      "text": "  % we want 1in side margins regardless of paper type\n  \\IEEEsettextwidth{1in}{1in}\n  \\IEEEsetsidemargin{c}{0pt}\n  % want 1in top and bottom margins\n  \\IEEEsettextheight{1in}{1in}\n  \\IEEEsettopmargin{t}{1in}\n  % digitize textheight to be an integer number of lines.\n",
                      "markdown": "`  % we want 1in side margins regardless of paper type\n  \\IEEEsettextwidth{1in}{1in}\n  \\IEEEsetsidemargin{c}{0pt}\n  % want 1in top and bottom margins\n  \\IEEEsettextheight{1in}{1in}\n  \\IEEEsettopmargin{t}{1in}\n  % digitize textheight to be an integer number of lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1804,
                  "startColumn": 12,
                  "endLine": 1804,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n\n% draft mode settings override that of all other modes\n% provides a nice 1in margin all around the paper and extra\n% space between the lines for editor's comments\n\\ifCLASSOPTIONdraftcls\n  % we want 1in side margins regardless of paper type\n",
                    "rendered": {
                      "text": "\n\n% draft mode settings override that of all other modes\n% provides a nice 1in margin all around the paper and extra\n% space between the lines for editor's comments\n\\ifCLASSOPTIONdraftcls\n  % we want 1in side margins regardless of paper type\n",
                      "markdown": "`\n\n% draft mode settings override that of all other modes\n% provides a nice 1in margin all around the paper and extra\n% space between the lines for editor's comments\n\\ifCLASSOPTIONdraftcls\n  % we want 1in side margins regardless of paper type\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1796,
                  "startColumn": 63,
                  "endLine": 1796,
                  "endColumn": 68,
                  "snippet": {
                    "text": "  % tweak textheight to a perfect integer number of lines/page.\n  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n \\fi\n\\fi\n",
                    "rendered": {
                      "text": "  % tweak textheight to a perfect integer number of lines/page.\n  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n \\fi\n\\fi\n",
                      "markdown": "`  % tweak textheight to a perfect integer number of lines/page.\n  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n \\fi\n\\fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1796,
                  "startColumn": 9,
                  "endLine": 1796,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  % tweak textheight to a perfect integer number of lines/page.\n  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n \\fi\n\\fi\n",
                    "rendered": {
                      "text": "  % tweak textheight to a perfect integer number of lines/page.\n  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n \\fi\n\\fi\n",
                      "markdown": "`  % tweak textheight to a perfect integer number of lines/page.\n  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc\n  \\IEEEquantizetextheight{c}\n  % tweak top margin so that the error is shared equally at the top and bottom\n  \\IEEEsettopmargin{q}{0sp}\n \\fi\n\\fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1790,
                  "startColumn": 32,
                  "endLine": 1790,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  \\IEEEsettextwidth{0.75in}{0.75in}\n  % set the side margins to center the text (0.75in for letterpaper)\n  \\IEEEsetsidemargin{c}{0pt}\n  % compsoc conferences want 1in top and bottom margin\n  \\IEEEsettextheight{1in}{1in}\n  \\IEEEsettopmargin{t}{1in}\n  % tweak textheight to a perfect integer number of lines/page.\n",
                    "rendered": {
                      "text": "  \\IEEEsettextwidth{0.75in}{0.75in}\n  % set the side margins to center the text (0.75in for letterpaper)\n  \\IEEEsetsidemargin{c}{0pt}\n  % compsoc conferences want 1in top and bottom margin\n  \\IEEEsettextheight{1in}{1in}\n  \\IEEEsettopmargin{t}{1in}\n  % tweak textheight to a perfect integer number of lines/page.\n",
                      "markdown": "`  \\IEEEsettextwidth{0.75in}{0.75in}\n  % set the side margins to center the text (0.75in for letterpaper)\n  \\IEEEsetsidemargin{c}{0pt}\n  % compsoc conferences want 1in top and bottom margin\n  \\IEEEsettextheight{1in}{1in}\n  \\IEEEsettopmargin{t}{1in}\n  % tweak textheight to a perfect integer number of lines/page.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1780,
                  "startColumn": 62,
                  "endLine": 1780,
                  "endColumn": 67,
                  "snippet": {
                    "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\n% compsoc conference\n",
                    "rendered": {
                      "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\n% compsoc conference\n",
                      "markdown": "` % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\n% compsoc conference\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1780,
                  "startColumn": 8,
                  "endLine": 1780,
                  "endColumn": 13,
                  "snippet": {
                    "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\n% compsoc conference\n",
                    "rendered": {
                      "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\n% compsoc conference\n",
                      "markdown": "` % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\n% compsoc conference\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1748,
                  "startColumn": 62,
                  "endLine": 1748,
                  "endColumn": 67,
                  "snippet": {
                    "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                    "rendered": {
                      "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                      "markdown": "` % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1748,
                  "startColumn": 8,
                  "endLine": 1748,
                  "endColumn": 13,
                  "snippet": {
                    "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                    "rendered": {
                      "text": " % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n",
                      "markdown": "` % tweak textheight to a perfect integer number of lines/page.\n % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc\n \\IEEEquantizetextheight{c}\n % tweak top margin so that the error is shared equally at the top and bottom\n \\IEEEsettopmargin{q}{0sp}\n\\fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1730,
                  "startColumn": 61,
                  "endLine": 1730,
                  "endColumn": 66,
                  "snippet": {
                    "text": "% tweak textheight to a perfect integer number of lines/column.\n% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc\n\\IEEEquantizetextheight{c}\n% tweak top margin so that the error is shared equally at the top and bottom\n\\IEEEsettopmargin{q}{0sp}\n\n\n",
                    "rendered": {
                      "text": "% tweak textheight to a perfect integer number of lines/column.\n% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc\n\\IEEEquantizetextheight{c}\n% tweak top margin so that the error is shared equally at the top and bottom\n\\IEEEsettopmargin{q}{0sp}\n\n\n",
                      "markdown": "`% tweak textheight to a perfect integer number of lines/column.\n% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc\n\\IEEEquantizetextheight{c}\n% tweak top margin so that the error is shared equally at the top and bottom\n\\IEEEsettopmargin{q}{0sp}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1730,
                  "startColumn": 7,
                  "endLine": 1730,
                  "endColumn": 12,
                  "snippet": {
                    "text": "% tweak textheight to a perfect integer number of lines/column.\n% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc\n\\IEEEquantizetextheight{c}\n% tweak top margin so that the error is shared equally at the top and bottom\n\\IEEEsettopmargin{q}{0sp}\n\n\n",
                    "rendered": {
                      "text": "% tweak textheight to a perfect integer number of lines/column.\n% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc\n\\IEEEquantizetextheight{c}\n% tweak top margin so that the error is shared equally at the top and bottom\n\\IEEEsettopmargin{q}{0sp}\n\n\n",
                      "markdown": "`% tweak textheight to a perfect integer number of lines/column.\n% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc\n\\IEEEquantizetextheight{c}\n% tweak top margin so that the error is shared equally at the top and bottom\n\\IEEEsettopmargin{q}{0sp}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1724,
                  "startColumn": 17,
                  "endLine": 1724,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\\maxdepth=0.5\\@IEEEnormalsizeunitybaselineskip\n\\textheight       58pc  % 9.63in, 696pt\n\n% set the default top margin to 58pt\n% which results in a \\topmargin of -49.59pt for 10pt documents\n\\IEEEsettopmargin{t}{58pt}\n% tweak textheight to a perfect integer number of lines/column.\n",
                    "rendered": {
                      "text": "\\maxdepth=0.5\\@IEEEnormalsizeunitybaselineskip\n\\textheight       58pc  % 9.63in, 696pt\n\n% set the default top margin to 58pt\n% which results in a \\topmargin of -49.59pt for 10pt documents\n\\IEEEsettopmargin{t}{58pt}\n% tweak textheight to a perfect integer number of lines/column.\n",
                      "markdown": "`\\maxdepth=0.5\\@IEEEnormalsizeunitybaselineskip\n\\textheight       58pc  % 9.63in, 696pt\n\n% set the default top margin to 58pt\n% which results in a \\topmargin of -49.59pt for 10pt documents\n\\IEEEsettopmargin{t}{58pt}\n% tweak textheight to a perfect integer number of lines/column.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1645,
                  "startColumn": 59,
                  "endLine": 1645,
                  "endColumn": 64,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1611,
                  "startColumn": 7,
                  "endLine": 1611,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom\n  % and top footer margins\n  % our adjustment must be half this value to center the footer\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n  % add to the offset\n",
                    "rendered": {
                      "text": "  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom\n  % and top footer margins\n  % our adjustment must be half this value to center the footer\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n  % add to the offset\n",
                      "markdown": "`  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom\n  % and top footer margins\n  % our adjustment must be half this value to center the footer\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n  % add to the offset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1604,
                  "startColumn": 31,
                  "endLine": 1604,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  \\@IEEEtrantmpdimenB\\paperheight\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer bottom margin\n  % now subtract off the footer top margin\n  \\advance\\@IEEEtrantmpdimenB -\\footskip\\relax\n  \\settodepth{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n",
                    "rendered": {
                      "text": "  \\@IEEEtrantmpdimenB\\paperheight\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer bottom margin\n  % now subtract off the footer top margin\n  \\advance\\@IEEEtrantmpdimenB -\\footskip\\relax\n  \\settodepth{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n",
                      "markdown": "`  \\@IEEEtrantmpdimenB\\paperheight\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual footer bottom margin\n  % now subtract off the footer top margin\n  \\advance\\@IEEEtrantmpdimenB -\\footskip\\relax\n  \\settodepth{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1562,
                  "startColumn": 5,
                  "endLine": 1562,
                  "endColumn": 10,
                  "snippet": {
                    "text": "% \\headsep, \\textheight and (by default) the actual height (or depth) of the\n% \\IEEEdefaultfootersampletext and \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the footer text to the bottom of the main text)\n% b = bottom margin (bottom of the footer text to the bottom of page)\n% c = vertically centered between the main text and the bottom of the page,\n%     with the given offset\n",
                    "rendered": {
                      "text": "% \\headsep, \\textheight and (by default) the actual height (or depth) of the\n% \\IEEEdefaultfootersampletext and \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the footer text to the bottom of the main text)\n% b = bottom margin (bottom of the footer text to the bottom of page)\n% c = vertically centered between the main text and the bottom of the page,\n%     with the given offset\n",
                      "markdown": "`% \\headsep, \\textheight and (by default) the actual height (or depth) of the\n% \\IEEEdefaultfootersampletext and \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the footer text to the bottom of the main text)\n% b = bottom margin (bottom of the footer text to the bottom of page)\n% c = vertically centered between the main text and the bottom of the page,\n%     with the given offset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1543,
                  "startColumn": 59,
                  "endLine": 1543,
                  "endColumn": 64,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by \\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by \\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by \\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header top margin\n  % get the difference between the desired and the actual\n  \\advance\\@IEEEtrantmpdimenA by -\\@IEEEtrantmpdimenB\n\\fi\\fi % if t, b, c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1538,
                  "startColumn": 86,
                  "endLine": 1538,
                  "endColumn": 91,
                  "snippet": {
                    "text": "    Defaulting to `t'}%\n    {Valid modes for \\string\\IEEEsetheadermargin\\space are: t, b, c and a.}\\relax\n  \\fi\n  \\@IEEEtrantmpdimenB 1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by \\topmargin\n  \\advance\\@IEEEtrantmpdimenB by \\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n",
                    "rendered": {
                      "text": "    Defaulting to `t'}%\n    {Valid modes for \\string\\IEEEsetheadermargin\\space are: t, b, c and a.}\\relax\n  \\fi\n  \\@IEEEtrantmpdimenB 1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by \\topmargin\n  \\advance\\@IEEEtrantmpdimenB by \\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n",
                      "markdown": "`    Defaulting to `t'}%\n    {Valid modes for \\string\\IEEEsetheadermargin\\space are: t, b, c and a.}\\relax\n  \\fi\n  \\@IEEEtrantmpdimenB 1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by \\topmargin\n  \\advance\\@IEEEtrantmpdimenB by \\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1514,
                  "startColumn": 79,
                  "endLine": 1514,
                  "endColumn": 84,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom and top margins\n  % we need to adjust by half this amount to center the header\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n  % and add to offset\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom and top margins\n  % we need to adjust by half this amount to center the header\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n  % and add to offset\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by \\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the difference between the bottom and top margins\n  % we need to adjust by half this amount to center the header\n  \\divide\\@IEEEtrantmpdimenB by 2\\relax\n  % and add to offset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1509,
                  "startColumn": 95,
                  "endLine": 1509,
                  "endColumn": 100,
                  "snippet": {
                    "text": "  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % subtract from it the top header margin\n  \\advance\\@IEEEtrantmpdimenB -1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by -\\topmargin\n  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n",
                    "rendered": {
                      "text": "  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % subtract from it the top header margin\n  \\advance\\@IEEEtrantmpdimenB -1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by -\\topmargin\n  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n",
                      "markdown": "`  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % subtract from it the top header margin\n  \\advance\\@IEEEtrantmpdimenB -1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by -\\topmargin\n  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1508,
                  "startColumn": 24,
                  "endLine": 1508,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % subtract from it the top header margin\n  \\advance\\@IEEEtrantmpdimenB -1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by -\\topmargin\n  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n",
                    "rendered": {
                      "text": "  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % subtract from it the top header margin\n  \\advance\\@IEEEtrantmpdimenB -1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by -\\topmargin\n  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n",
                      "markdown": "`  \\settoheight{\\@IEEEtrantmpdimenC}{\\begingroup #2\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\@IEEEtrantmpdimenB by -\\@IEEEtrantmpdimenC\n  % at this point \\@IEEEtrantmpdimenB has the actual header bottom margin\n  % subtract from it the top header margin\n  \\advance\\@IEEEtrantmpdimenB -1in\\relax % take into consideration the system 1in offset of the top margin\n  \\advance\\@IEEEtrantmpdimenB by -\\topmargin\n  \\advance\\@IEEEtrantmpdimenB by -\\headheight\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1472,
                  "startColumn": 55,
                  "endLine": 1472,
                  "endColumn": 60,
                  "snippet": {
                    "text": "% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n% a = adjust the vertical position using the given offset\n% For the offsets, positive values move the header downward.\n",
                    "rendered": {
                      "text": "% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n% a = adjust the vertical position using the given offset\n% For the offsets, positive values move the header downward.\n",
                      "markdown": "`% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n% a = adjust the vertical position using the given offset\n% For the offsets, positive values move the header downward.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1471,
                  "startColumn": 53,
                  "endLine": 1471,
                  "endColumn": 58,
                  "snippet": {
                    "text": "% \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n% a = adjust the vertical position using the given offset\n",
                    "rendered": {
                      "text": "% \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n% a = adjust the vertical position using the given offset\n",
                      "markdown": "`% \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n% a = adjust the vertical position using the given offset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1470,
                  "startColumn": 47,
                  "endLine": 1470,
                  "endColumn": 52,
                  "snippet": {
                    "text": "% the actual height (or depth) of the \\IEEEdefaultheadersampletext and\n% \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n",
                    "rendered": {
                      "text": "% the actual height (or depth) of the \\IEEEdefaultheadersampletext and\n% \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n",
                      "markdown": "`% the actual height (or depth) of the \\IEEEdefaultheadersampletext and\n% \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1470,
                  "startColumn": 5,
                  "endLine": 1470,
                  "endColumn": 10,
                  "snippet": {
                    "text": "% the actual height (or depth) of the \\IEEEdefaultheadersampletext and\n% \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n",
                    "rendered": {
                      "text": "% the actual height (or depth) of the \\IEEEdefaultheadersampletext and\n% \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n",
                      "markdown": "`% the actual height (or depth) of the \\IEEEdefaultheadersampletext and\n% \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin (top of the header text to the top of the page)\n% b = bottom margin (bottom of the header text to the top of the main text)\n% c = vertically centered between the main text and the top of the page,\n%     with the given offset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1452,
                  "startColumn": 17,
                  "endLine": 1452,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  \\settoheight{\\@IEEEtrantmpdimenB}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\topmargin by \\@IEEEtrantmpdimenB\\relax\n\\fi\\fi % if t, b, c\n% convert desired top margin into actual \\topmargin\n% this is not done for the q or a modes because they are only adjustments\n\\advance \\topmargin by -\\topskip\n\\advance \\topmargin by -1in\n",
                    "rendered": {
                      "text": "  \\settoheight{\\@IEEEtrantmpdimenB}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\topmargin by \\@IEEEtrantmpdimenB\\relax\n\\fi\\fi % if t, b, c\n% convert desired top margin into actual \\topmargin\n% this is not done for the q or a modes because they are only adjustments\n\\advance \\topmargin by -\\topskip\n\\advance \\topmargin by -1in\n",
                      "markdown": "`  \\settoheight{\\@IEEEtrantmpdimenB}{\\begingroup #1\\relax\\relax\\relax\\endgroup}\\relax\n  \\advance\\topmargin by \\@IEEEtrantmpdimenB\\relax\n\\fi\\fi % if t, b, c\n% convert desired top margin into actual \\topmargin\n% this is not done for the q or a modes because they are only adjustments\n\\advance \\topmargin by -\\topskip\n\\advance \\topmargin by -1in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1391,
                  "startColumn": 47,
                  "endLine": 1391,
                  "endColumn": 52,
                  "snippet": {
                    "text": "% c = vertically centered, with the given offset\n% a = adjust the vertical margins using the given offset\n% q = adjust the margins using \\IEEEquantizedtextheightdiff and the given offset\n% For the offsets, positive values increase the top margin.\n% \\headheight, \\headsep, \\topskip and \\textheight should be set properly for the\n% given margins before calling this function.\n\\def\\IEEEsettopmargin{\\@ifnextchar [{\\@IEEEsettopmargin}{\\@IEEEsettopmargin[\\IEEEdefaultsampletext]}}\n",
                    "rendered": {
                      "text": "% c = vertically centered, with the given offset\n% a = adjust the vertical margins using the given offset\n% q = adjust the margins using \\IEEEquantizedtextheightdiff and the given offset\n% For the offsets, positive values increase the top margin.\n% \\headheight, \\headsep, \\topskip and \\textheight should be set properly for the\n% given margins before calling this function.\n\\def\\IEEEsettopmargin{\\@ifnextchar [{\\@IEEEsettopmargin}{\\@IEEEsettopmargin[\\IEEEdefaultsampletext]}}\n",
                      "markdown": "`% c = vertically centered, with the given offset\n% a = adjust the vertical margins using the given offset\n% q = adjust the margins using \\IEEEquantizedtextheightdiff and the given offset\n% For the offsets, positive values increase the top margin.\n% \\headheight, \\headsep, \\topskip and \\textheight should be set properly for the\n% given margins before calling this function.\n\\def\\IEEEsettopmargin{\\@ifnextchar [{\\@IEEEsettopmargin}{\\@IEEEsettopmargin[\\IEEEdefaultsampletext]}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1386,
                  "startColumn": 5,
                  "endLine": 1386,
                  "endColumn": 10,
                  "snippet": {
                    "text": "% \\topskip, and (by default) the the actual height (or, for the bottom, depth)\n% of the \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin\n% b = bottom margin\n% c = vertically centered, with the given offset\n% a = adjust the vertical margins using the given offset\n",
                    "rendered": {
                      "text": "% \\topskip, and (by default) the the actual height (or, for the bottom, depth)\n% of the \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin\n% b = bottom margin\n% c = vertically centered, with the given offset\n% a = adjust the vertical margins using the given offset\n",
                      "markdown": "`% \\topskip, and (by default) the the actual height (or, for the bottom, depth)\n% of the \\IEEEdefaultsampletext text.\n% The available modes are:\n% t = top margin\n% b = bottom margin\n% c = vertically centered, with the given offset\n% a = adjust the vertical margins using the given offset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1322,
                  "startColumn": 39,
                  "endLine": 1323,
                  "snippet": {
                    "text": "% group without needing to call \\global on any of the \\@IEEEtrantmp variables.\n% \\@IEEEtrantmpcountC has the quantized int\n% \\IEEEquantizedlength has the quantized length\n% \\@IEEEtrantmpdimenC has the quantized diff\n\\xdef\\@IEEEquantizedlengthintmacro{\\the\\@IEEEtrantmpcountC}\\relax\n\\@IEEEtrantmpcountC\\IEEEquantizedlength\\relax\n\\xdef\\@IEEEquantizedlengthmacro{\\the\\@IEEEtrantmpcountC}\\relax\n\\@IEEEtrantmpcountC\\@IEEEtrantmpdimenC\\relax\n",
                    "rendered": {
                      "text": "% group without needing to call \\global on any of the \\@IEEEtrantmp variables.\n% \\@IEEEtrantmpcountC has the quantized int\n% \\IEEEquantizedlength has the quantized length\n% \\@IEEEtrantmpdimenC has the quantized diff\n\\xdef\\@IEEEquantizedlengthintmacro{\\the\\@IEEEtrantmpcountC}\\relax\n\\@IEEEtrantmpcountC\\IEEEquantizedlength\\relax\n\\xdef\\@IEEEquantizedlengthmacro{\\the\\@IEEEtrantmpcountC}\\relax\n\\@IEEEtrantmpcountC\\@IEEEtrantmpdimenC\\relax\n",
                      "markdown": "`% group without needing to call \\global on any of the \\@IEEEtrantmp variables.\n% \\@IEEEtrantmpcountC has the quantized int\n% \\IEEEquantizedlength has the quantized length\n% \\@IEEEtrantmpdimenC has the quantized diff\n\\xdef\\@IEEEquantizedlengthintmacro{\\the\\@IEEEtrantmpcountC}\\relax\n\\@IEEEtrantmpcountC\\IEEEquantizedlength\\relax\n\\xdef\\@IEEEquantizedlengthmacro{\\the\\@IEEEtrantmpcountC}\\relax\n\\@IEEEtrantmpcountC\\@IEEEtrantmpdimenC\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1243,
                  "startColumn": 45,
                  "endLine": 1244,
                  "snippet": {
                    "text": "\\@IEEEtrantmpdimenB\\the\\@IEEEtrantmpcountB sp\\relax\n% \\@IEEEtrantmpcountC will have the quantized int\n% \\IEEEquantizedlength will have the quantized length\n% \\@IEEEtrantmpdimenC will have the quantized diff\n% initialize them to zero as this is what will be\n% exported if an error occurs\n\\@IEEEtrantmpcountC 0\\relax\n\\IEEEquantizedlength 0sp\\relax\n",
                    "rendered": {
                      "text": "\\@IEEEtrantmpdimenB\\the\\@IEEEtrantmpcountB sp\\relax\n% \\@IEEEtrantmpcountC will have the quantized int\n% \\IEEEquantizedlength will have the quantized length\n% \\@IEEEtrantmpdimenC will have the quantized diff\n% initialize them to zero as this is what will be\n% exported if an error occurs\n\\@IEEEtrantmpcountC 0\\relax\n\\IEEEquantizedlength 0sp\\relax\n",
                      "markdown": "`\\@IEEEtrantmpdimenB\\the\\@IEEEtrantmpcountB sp\\relax\n% \\@IEEEtrantmpcountC will have the quantized int\n% \\IEEEquantizedlength will have the quantized length\n% \\@IEEEtrantmpdimenC will have the quantized diff\n% initialize them to zero as this is what will be\n% exported if an error occurs\n\\@IEEEtrantmpcountC 0\\relax\n\\IEEEquantizedlength 0sp\\relax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1193,
                  "startColumn": 56,
                  "endLine": 1193,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\\def\\IEEEsettextheight{\\@ifnextchar [{\\@IEEEsettextheight}{\\@IEEEsettextheight[\\IEEEdefaultsampletext]}}\n\\def\\@IEEEsettextheight[#1]#2#3{\\textheight\\paperheight\\relax\n  \\@IEEEtrantmpdimenA #2\\relax\n  \\advance \\textheight by -\\@IEEEtrantmpdimenA% subtract top margin\n  \\@IEEEtrantmpdimenA #3\\relax\n  \\advance \\textheight by -\\@IEEEtrantmpdimenA% subtract bottom margin\n  \\advance \\textheight by \\topskip% add \\topskip\n",
                    "rendered": {
                      "text": "\\def\\IEEEsettextheight{\\@ifnextchar [{\\@IEEEsettextheight}{\\@IEEEsettextheight[\\IEEEdefaultsampletext]}}\n\\def\\@IEEEsettextheight[#1]#2#3{\\textheight\\paperheight\\relax\n  \\@IEEEtrantmpdimenA #2\\relax\n  \\advance \\textheight by -\\@IEEEtrantmpdimenA% subtract top margin\n  \\@IEEEtrantmpdimenA #3\\relax\n  \\advance \\textheight by -\\@IEEEtrantmpdimenA% subtract bottom margin\n  \\advance \\textheight by \\topskip% add \\topskip\n",
                      "markdown": "`\\def\\IEEEsettextheight{\\@ifnextchar [{\\@IEEEsettextheight}{\\@IEEEsettextheight[\\IEEEdefaultsampletext]}}\n\\def\\@IEEEsettextheight[#1]#2#3{\\textheight\\paperheight\\relax\n  \\@IEEEtrantmpdimenA #2\\relax\n  \\advance \\textheight by -\\@IEEEtrantmpdimenA% subtract top margin\n  \\@IEEEtrantmpdimenA #3\\relax\n  \\advance \\textheight by -\\@IEEEtrantmpdimenA% subtract bottom margin\n  \\advance \\textheight by \\topskip% add \\topskip\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 1187,
                  "startColumn": 41,
                  "endLine": 1187,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n\n% usage: \\IEEEsettextheight[sample text]{top text margin}{bottom text margin}\n% Sets \\textheight based on the specified top margin and bottom margin.\n% Takes into consideration \\paperheight, \\topskip, and (by default) the\n% the actual height and depth of the \\IEEEdefaultsampletext text. \n\\def\\IEEEsettextheight{\\@ifnextchar [{\\@IEEEsettextheight}{\\@IEEEsettextheight[\\IEEEdefaultsampletext]}}\n",
                    "rendered": {
                      "text": "\n\n% usage: \\IEEEsettextheight[sample text]{top text margin}{bottom text margin}\n% Sets \\textheight based on the specified top margin and bottom margin.\n% Takes into consideration \\paperheight, \\topskip, and (by default) the\n% the actual height and depth of the \\IEEEdefaultsampletext text. \n\\def\\IEEEsettextheight{\\@ifnextchar [{\\@IEEEsettextheight}{\\@IEEEsettextheight[\\IEEEdefaultsampletext]}}\n",
                      "markdown": "`\n\n% usage: \\IEEEsettextheight[sample text]{top text margin}{bottom text margin}\n% Sets \\textheight based on the specified top margin and bottom margin.\n% Takes into consideration \\paperheight, \\topskip, and (by default) the\n% the actual height and depth of the \\IEEEdefaultsampletext text. \n\\def\\IEEEsettextheight{\\@ifnextchar [{\\@IEEEsettextheight}{\\@IEEEsettextheight[\\IEEEdefaultsampletext]}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 420,
                  "startColumn": 48,
                  "endLine": 420,
                  "endColumn": 56,
                  "snippet": {
                    "text": "% \\@IEEEextractedtokenmacro      ==> a macro containing a\n% \\@IEEEextractedtokensdiscarded ==> a macro containing bcd{ef}g\n%\n% the *-star form, \\@IEEEextracttoken*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextracttoken{\\@ifstar{\\let\\@IEEEextracttokendef=\\def\\@@IEEEextracttoken}{\\let\\@IEEEextracttokendef=\\edef\\@@IEEEextracttoken}}\n\n",
                    "rendered": {
                      "text": "% \\@IEEEextractedtokenmacro      ==> a macro containing a\n% \\@IEEEextractedtokensdiscarded ==> a macro containing bcd{ef}g\n%\n% the *-star form, \\@IEEEextracttoken*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextracttoken{\\@ifstar{\\let\\@IEEEextracttokendef=\\def\\@@IEEEextracttoken}{\\let\\@IEEEextracttokendef=\\edef\\@@IEEEextracttoken}}\n\n",
                      "markdown": "`% \\@IEEEextractedtokenmacro      ==> a macro containing a\n% \\@IEEEextractedtokensdiscarded ==> a macro containing bcd{ef}g\n%\n% the *-star form, \\@IEEEextracttoken*, does not expand its argument\n% contents during processing.\n\\def\\@IEEEextracttoken{\\@ifstar{\\let\\@IEEEextracttokendef=\\def\\@@IEEEextracttoken}{\\let\\@IEEEextracttokendef=\\edef\\@@IEEEextracttoken}}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 66,
                  "endLine": 146,
                  "endColumn": 71,
                  "snippet": {
                    "text": "%\n% oneside, twoside\n%    determines if layout follows single sided or two sided (duplex)\n%    printing. The only notable change is with the headings at the top of\n%    the pages.\n%    The default is oneside.\n%\n",
                    "rendered": {
                      "text": "%\n% oneside, twoside\n%    determines if layout follows single sided or two sided (duplex)\n%    printing. The only notable change is with the headings at the top of\n%    the pages.\n%    The default is oneside.\n%\n",
                      "markdown": "`%\n% oneside, twoside\n%    determines if layout follows single sided or two sided (duplex)\n%    printing. The only notable change is with the headings at the top of\n%    the pages.\n%    The default is oneside.\n%\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 69,
                  "endLine": 120,
                  "snippet": {
                    "text": "%    will not alter the typesetting of the document - only the margins will\n%    be affected. In particular, documents using the a4paper option will\n%    have reduced side margins (A4 is narrower than US letter) and a longer\n%    bottom margin (A4 is longer than US letter). For both cases, the top\n%    margins will be the same and the text will be horizontally centered.\n%    For the compsoc conference and draft modes, it is the margins that will\n%    remain constant, and thus the text area size will vary, with changes in\n%    the paper size.\n",
                    "rendered": {
                      "text": "%    will not alter the typesetting of the document - only the margins will\n%    be affected. In particular, documents using the a4paper option will\n%    have reduced side margins (A4 is narrower than US letter) and a longer\n%    bottom margin (A4 is longer than US letter). For both cases, the top\n%    margins will be the same and the text will be horizontally centered.\n%    For the compsoc conference and draft modes, it is the margins that will\n%    remain constant, and thus the text area size will vary, with changes in\n%    the paper size.\n",
                      "markdown": "`%    will not alter the typesetting of the document - only the margins will\n%    be affected. In particular, documents using the a4paper option will\n%    have reduced side margins (A4 is narrower than US letter) and a longer\n%    bottom margin (A4 is longer than US letter). For both cases, the top\n%    margins will be the same and the text will be horizontally centered.\n%    For the compsoc conference and draft modes, it is the margins that will\n%    remain constant, and thus the text area size will vary, with changes in\n%    the paper size.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/latex/IEEEtran.cls"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 20,
                  "endLine": 92,
                  "endColumn": 25,
                  "snippet": {
                    "text": "%    should also select 9pt when using technote. peerreview is like\n%    journal mode, but provides for a single-column \"cover\" title page for\n%    anonymous peer review. The paper title (without the author names) is\n%    repeated at the top of the page after the cover page. For peer review\n%    papers, the \\IEEEpeerreviewmaketitle command must be executed (will\n%    automatically be ignored for non-peerreview modes) at the place the\n%    cover page is to end, usually just after the abstract (keywords are\n",
                    "rendered": {
                      "text": "%    should also select 9pt when using technote. peerreview is like\n%    journal mode, but provides for a single-column \"cover\" title page for\n%    anonymous peer review. The paper title (without the author names) is\n%    repeated at the top of the page after the cover page. For peer review\n%    papers, the \\IEEEpeerreviewmaketitle command must be executed (will\n%    automatically be ignored for non-peerreview modes) at the place the\n%    cover page is to end, usually just after the abstract (keywords are\n",
                      "markdown": "`%    should also select 9pt when using technote. peerreview is like\n%    journal mode, but provides for a single-column \"cover\" title page for\n%    anonymous peer review. The paper title (without the author names) is\n%    repeated at the top of the page after the cover page. For peer review\n%    papers, the \\IEEEpeerreviewmaketitle command must be executed (will\n%    automatically be ignored for non-peerreview modes) at the place the\n%    cover page is to end, usually just after the abstract (keywords are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/Makefile"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# - Apache 2.0        : https://www.apache.org/licenses/LICENSE-2.0\n#\n# You should have received a copy of both of these licenses along with this\n# software. If not, they may be obtained at the above URLs.\n#\n\nRUN = argon2\n",
                    "rendered": {
                      "text": "# - Apache 2.0        : https://www.apache.org/licenses/LICENSE-2.0\n#\n# You should have received a copy of both of these licenses along with this\n# software. If not, they may be obtained at the above URLs.\n#\n\nRUN = argon2\n",
                      "markdown": "`# - Apache 2.0        : https://www.apache.org/licenses/LICENSE-2.0\n#\n# You should have received a copy of both of these licenses along with this\n# software. If not, they may be obtained at the above URLs.\n#\n\nRUN = argon2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/Makefile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 50,
                  "endLine": 8,
                  "endColumn": 54,
                  "snippet": {
                    "text": "# Daniel Dinu, Dmitry Khovratovich, Jean-Philippe Aumasson, and Samuel Neves\n#\n# You may use this work under the terms of a Creative Commons CC0 1.0\n# License/Waiver or the Apache Public License 2.0, at your option. The terms of\n# these licenses can be found at:\n#\n# - CC0 1.0 Universal : https://creativecommons.org/publicdomain/zero/1.0\n",
                    "rendered": {
                      "text": "# Daniel Dinu, Dmitry Khovratovich, Jean-Philippe Aumasson, and Samuel Neves\n#\n# You may use this work under the terms of a Creative Commons CC0 1.0\n# License/Waiver or the Apache Public License 2.0, at your option. The terms of\n# these licenses can be found at:\n#\n# - CC0 1.0 Universal : https://creativecommons.org/publicdomain/zero/1.0\n",
                      "markdown": "`# Daniel Dinu, Dmitry Khovratovich, Jean-Philippe Aumasson, and Samuel Neves\n#\n# You may use this work under the terms of a Creative Commons CC0 1.0\n# License/Waiver or the Apache Public License 2.0, at your option. The terms of\n# these licenses can be found at:\n#\n# - CC0 1.0 Universal : https://creativecommons.org/publicdomain/zero/1.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/Makefile"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 1,
                  "endLine": 216,
                  "endColumn": 6,
                  "snippet": {
                    "text": ".PHONY: dist\ndist:\n\t\tcd ..; \\\n\t\ttar -c --exclude='.??*' -z -f $(DIST)-`date \"+%Y%m%d\"`.tgz $(DIST)/*\n\n.PHONY: test\ntest:           $(SRC) src/test.c\n",
                    "rendered": {
                      "text": ".PHONY: dist\ndist:\n\t\tcd ..; \\\n\t\ttar -c --exclude='.??*' -z -f $(DIST)-`date \"+%Y%m%d\"`.tgz $(DIST)/*\n\n.PHONY: test\ntest:           $(SRC) src/test.c\n",
                      "markdown": "`.PHONY: dist\ndist:\n\t\tcd ..; \\\n\t\ttar -c --exclude='.??*' -z -f $(DIST)-`date \"+%Y%m%d\"`.tgz $(DIST)/*\n\n.PHONY: test\ntest:           $(SRC) src/test.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/argon2.zip/Makefile"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 1,
                  "endLine": 210,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n# substitute PREFIX and PC_EXTRA_LIBS into pkgconfig pc file\n$(PC_NAME): $(PC_SRC)\n\t\tsed '$(SED_COMMANDS)' < '$(PC_SRC)' > '$@'\n\n\n.PHONY: dist\n",
                    "rendered": {
                      "text": "\n# substitute PREFIX and PC_EXTRA_LIBS into pkgconfig pc file\n$(PC_NAME): $(PC_SRC)\n\t\tsed '$(SED_COMMANDS)' < '$(PC_SRC)' > '$@'\n\n\n.PHONY: dist\n",
                      "markdown": "`\n# substitute PREFIX and PC_EXTRA_LIBS into pkgconfig pc file\n$(PC_NAME): $(PC_SRC)\n\t\tsed '$(SED_COMMANDS)' < '$(PC_SRC)' > '$@'\n\n\n.PHONY: dist\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}