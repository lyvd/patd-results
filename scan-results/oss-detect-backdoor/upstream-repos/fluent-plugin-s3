{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 27,
                  "endLine": 10,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      @type s3\n\n      aws_key_id YOUR_AWS_KEY_ID\n      aws_sec_key YOUR_AWS_SECRET_KEY\n      s3_bucket YOUR_S3_BUCKET_NAME\n      s3_region ap-northeast-1\n\n",
                    "rendered": {
                      "text": "      @type s3\n\n      aws_key_id YOUR_AWS_KEY_ID\n      aws_sec_key YOUR_AWS_SECRET_KEY\n      s3_bucket YOUR_S3_BUCKET_NAME\n      s3_region ap-northeast-1\n\n",
                      "markdown": "`      @type s3\n\n      aws_key_id YOUR_AWS_KEY_ID\n      aws_sec_key YOUR_AWS_SECRET_KEY\n      s3_bucket YOUR_S3_BUCKET_NAME\n      s3_region ap-northeast-1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 48,
                  "endLine": 158,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\nNOTE: ${hostname} placeholder is deprecated since v0.8. You can get same result by using [configuration's embedded ruby code feature](https://docs.fluentd.org/configuration/config-file#embedded-ruby-code).\n\n    s3_object_key_format %{path}%{time_slice}_%{hostname}%{index}.%{file_extension}\n    s3_object_key_format \"%{path}%{time_slice}_#{Socket.gethostname}%{index}.%{file_extension}\"\n\nAbove two configurations are same. The important point is wrapping `\"\"` is needed for `#{Socket.gethostname}`.\n",
                    "rendered": {
                      "text": "\nNOTE: ${hostname} placeholder is deprecated since v0.8. You can get same result by using [configuration's embedded ruby code feature](https://docs.fluentd.org/configuration/config-file#embedded-ruby-code).\n\n    s3_object_key_format %{path}%{time_slice}_%{hostname}%{index}.%{file_extension}\n    s3_object_key_format \"%{path}%{time_slice}_#{Socket.gethostname}%{index}.%{file_extension}\"\n\nAbove two configurations are same. The important point is wrapping `\"\"` is needed for `#{Socket.gethostname}`.\n",
                      "markdown": "`\nNOTE: ${hostname} placeholder is deprecated since v0.8. You can get same result by using [configuration's embedded ruby code feature](https://docs.fluentd.org/configuration/config-file#embedded-ruby-code).\n\n    s3_object_key_format %{path}%{time_slice}_%{hostname}%{index}.%{file_extension}\n    s3_object_key_format \"%{path}%{time_slice}_#{Socket.gethostname}%{index}.%{file_extension}\"\n\nAbove two configurations are same. The important point is wrapping `\"\"` is needed for `#{Socket.gethostname}`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 8,
                  "endLine": 156,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    \"log/events/ts=20130111-23/events_1.gz\"\n    \"log/events/ts=20130112-00/events_0.gz\"\n\nNOTE: ${hostname} placeholder is deprecated since v0.8. You can get same result by using [configuration's embedded ruby code feature](https://docs.fluentd.org/configuration/config-file#embedded-ruby-code).\n\n    s3_object_key_format %{path}%{time_slice}_%{hostname}%{index}.%{file_extension}\n    s3_object_key_format \"%{path}%{time_slice}_#{Socket.gethostname}%{index}.%{file_extension}\"\n",
                    "rendered": {
                      "text": "    \"log/events/ts=20130111-23/events_1.gz\"\n    \"log/events/ts=20130112-00/events_0.gz\"\n\nNOTE: ${hostname} placeholder is deprecated since v0.8. You can get same result by using [configuration's embedded ruby code feature](https://docs.fluentd.org/configuration/config-file#embedded-ruby-code).\n\n    s3_object_key_format %{path}%{time_slice}_%{hostname}%{index}.%{file_extension}\n    s3_object_key_format \"%{path}%{time_slice}_#{Socket.gethostname}%{index}.%{file_extension}\"\n",
                      "markdown": "`    \"log/events/ts=20130111-23/events_1.gz\"\n    \"log/events/ts=20130112-00/events_0.gz\"\n\nNOTE: ${hostname} placeholder is deprecated since v0.8. You can get same result by using [configuration's embedded ruby code feature](https://docs.fluentd.org/configuration/config-file#embedded-ruby-code).\n\n    s3_object_key_format %{path}%{time_slice}_%{hostname}%{index}.%{file_extension}\n    s3_object_key_format \"%{path}%{time_slice}_#{Socket.gethostname}%{index}.%{file_extension}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 4,
                  "endLine": 117,
                  "endColumn": 12,
                  "snippet": {
                    "text": "* %{index} is the sequential number starts from 0, increments when multiple files are uploaded to S3 in the same time slice.\n* %{file_extension} depends on **store_as** parameter.\n* %{uuid_flush} a uuid that is replaced everytime the buffer will be flushed.\n* %{hostname} is replaced with `Socket.gethostname` result.\n* %{hex_random} a random hex string that is replaced for each buffer chunk, not\nassured to be unique. This is used to follow a way of performance tuning, `Add\na Hex Hash Prefix to Key Name`, written in [Request Rate and Performance\n",
                    "rendered": {
                      "text": "* %{index} is the sequential number starts from 0, increments when multiple files are uploaded to S3 in the same time slice.\n* %{file_extension} depends on **store_as** parameter.\n* %{uuid_flush} a uuid that is replaced everytime the buffer will be flushed.\n* %{hostname} is replaced with `Socket.gethostname` result.\n* %{hex_random} a random hex string that is replaced for each buffer chunk, not\nassured to be unique. This is used to follow a way of performance tuning, `Add\na Hex Hash Prefix to Key Name`, written in [Request Rate and Performance\n",
                      "markdown": "`* %{index} is the sequential number starts from 0, increments when multiple files are uploaded to S3 in the same time slice.\n* %{file_extension} depends on **store_as** parameter.\n* %{uuid_flush} a uuid that is replaced everytime the buffer will be flushed.\n* %{hostname} is replaced with `Socket.gethostname` result.\n* %{hex_random} a random hex string that is replaced for each buffer chunk, not\nassured to be unique. This is used to follow a way of performance tuning, `Add\na Hex Hash Prefix to Key Name`, written in [Request Rate and Performance\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 6,
                  "endLine": 106,
                  "endColumn": 14,
                  "snippet": {
                    "text": "*   %{file_extension}\n*   %{hex_random}\n*   %{uuid_flush}\n*   %{hostname}\n\nto decide keys dynamically.\n\n",
                    "rendered": {
                      "text": "*   %{file_extension}\n*   %{hex_random}\n*   %{uuid_flush}\n*   %{hostname}\n\nto decide keys dynamically.\n\n",
                      "markdown": "`*   %{file_extension}\n*   %{hex_random}\n*   %{uuid_flush}\n*   %{hostname}\n\nto decide keys dynamically.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 9,
                  "endLine": 392,
                  "endColumn": 75,
                  "snippet": {
                    "text": "Allows grantee to write the ACL for the applicable object.\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\n## hex_random_length\n\n",
                    "rendered": {
                      "text": "Allows grantee to write the ACL for the applicable object.\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\n## hex_random_length\n\n",
                      "markdown": "`Allows grantee to write the ACL for the applicable object.\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\n## hex_random_length\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 9,
                  "endLine": 385,
                  "endColumn": 75,
                  "snippet": {
                    "text": "Allows grantee to read the object ACL.\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\n## grant_write_acp\n\n",
                    "rendered": {
                      "text": "Allows grantee to read the object ACL.\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\n## grant_write_acp\n\n",
                      "markdown": "`Allows grantee to read the object ACL.\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\n## grant_write_acp\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 9,
                  "endLine": 378,
                  "endColumn": 75,
                  "snippet": {
                    "text": "Allows grantee to read the object data and its metadata.\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\n## grant_read_acp\n\n",
                    "rendered": {
                      "text": "Allows grantee to read the object data and its metadata.\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\n## grant_read_acp\n\n",
                      "markdown": "`Allows grantee to read the object data and its metadata.\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\n## grant_read_acp\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 9,
                  "endLine": 368,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\nNote that a canonical user ID is different from an AWS account ID.\nPlease refer to [AWS documentation](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) for more details.\n",
                    "rendered": {
                      "text": "\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\nNote that a canonical user ID is different from an AWS account ID.\nPlease refer to [AWS documentation](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) for more details.\n",
                      "markdown": "`\nValid values are `id=\"Grantee-CanonicalUserID\"`. Please specify the grantee's canonical user ID.\n\ne.g. `id=\"79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be\"`\n\nNote that a canonical user ID is different from an AWS account ID.\nPlease refer to [AWS documentation](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) for more details.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 253,
                  "endLine": 254,
                  "endColumn": 3,
                  "snippet": {
                    "text": "        {..json2..}\n        ...\n\n\nAt this format, \"time\" and \"tag\" are omitted. But you can set these\ninformation to the record by setting `<inject>` option. If you set following configuration in\nS3 output:\n\n",
                    "rendered": {
                      "text": "        {..json2..}\n        ...\n\n\nAt this format, \"time\" and \"tag\" are omitted. But you can set these\ninformation to the record by setting `<inject>` option. If you set following configuration in\nS3 output:\n\n",
                      "markdown": "`        {..json2..}\n        ...\n\n\nAt this format, \"time\" and \"tag\" are omitted. But you can set these\ninformation to the record by setting `<inject>` option. If you set following configuration in\nS3 output:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 82,
                  "endLine": 436,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n## compute_checksums\n\nAWS SDK uses MD5 for API request/response by default. On FIPS enabled environment,\nOpenSSL returns an error because MD5 is disabled. If you want to use\nthis plugin on FIPS enabled environment, set `compute_checksums false`.\n\n## signature_version\n",
                    "rendered": {
                      "text": "\n## compute_checksums\n\nAWS SDK uses MD5 for API request/response by default. On FIPS enabled environment,\nOpenSSL returns an error because MD5 is disabled. If you want to use\nthis plugin on FIPS enabled environment, set `compute_checksums false`.\n\n## signature_version\n",
                      "markdown": "`\n## compute_checksums\n\nAWS SDK uses MD5 for API request/response by default. On FIPS enabled environment,\nOpenSSL returns an error because MD5 is disabled. If you want to use\nthis plugin on FIPS enabled environment, set `compute_checksums false`.\n\n## signature_version\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 21,
                  "endLine": 320,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\npath prefix of the files on S3. Default is \"\" (no prefix).\n[buffer placeholder](https://docs.fluentd.org/configuration/buffer-section#placeholders) is supported,\nso you can embed tag, time and record value like below.\n\n    path logs/%Y%m%d/${tag}/\n    <buffer tag,time>\n",
                    "rendered": {
                      "text": "\npath prefix of the files on S3. Default is \"\" (no prefix).\n[buffer placeholder](https://docs.fluentd.org/configuration/buffer-section#placeholders) is supported,\nso you can embed tag, time and record value like below.\n\n    path logs/%Y%m%d/${tag}/\n    <buffer tag,time>\n",
                      "markdown": "`\npath prefix of the files on S3. Default is \"\" (no prefix).\n[buffer placeholder](https://docs.fluentd.org/configuration/buffer-section#placeholders) is supported,\nso you can embed tag, time and record value like below.\n\n    path logs/%Y%m%d/${tag}/\n    <buffer tag,time>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 114,
                  "endLine": 156,
                  "endColumn": 120,
                  "snippet": {
                    "text": "    \"log/events/ts=20130111-23/events_1.gz\"\n    \"log/events/ts=20130112-00/events_0.gz\"\n\nNOTE: ${hostname} placeholder is deprecated since v0.8. You can get same result by using [configuration's embedded ruby code feature](https://docs.fluentd.org/configuration/config-file#embedded-ruby-code).\n\n    s3_object_key_format %{path}%{time_slice}_%{hostname}%{index}.%{file_extension}\n    s3_object_key_format \"%{path}%{time_slice}_#{Socket.gethostname}%{index}.%{file_extension}\"\n",
                    "rendered": {
                      "text": "    \"log/events/ts=20130111-23/events_1.gz\"\n    \"log/events/ts=20130112-00/events_0.gz\"\n\nNOTE: ${hostname} placeholder is deprecated since v0.8. You can get same result by using [configuration's embedded ruby code feature](https://docs.fluentd.org/configuration/config-file#embedded-ruby-code).\n\n    s3_object_key_format %{path}%{time_slice}_%{hostname}%{index}.%{file_extension}\n    s3_object_key_format \"%{path}%{time_slice}_#{Socket.gethostname}%{index}.%{file_extension}\"\n",
                      "markdown": "`    \"log/events/ts=20130111-23/events_1.gz\"\n    \"log/events/ts=20130112-00/events_0.gz\"\n\nNOTE: ${hostname} placeholder is deprecated since v0.8. You can get same result by using [configuration's embedded ruby code feature](https://docs.fluentd.org/configuration/config-file#embedded-ruby-code).\n\n    s3_object_key_format %{path}%{time_slice}_%{hostname}%{index}.%{file_extension}\n    s3_object_key_format \"%{path}%{time_slice}_#{Socket.gethostname}%{index}.%{file_extension}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 21,
                  "endLine": 128,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nThe default format is `%{path}%{time_slice}_%{index}.%{file_extension}`.\nIn addition, you can use [buffer placeholders](https://docs.fluentd.org/configuration/buffer-section#placeholders) in this parameter,\nso you can embed tag, time and record value like below:\n\n    s3_object_key_format %{path}/events/%Y%m%d/${tag}_%{index}.%{file_extension}\n    <buffer tag,time>\n",
                    "rendered": {
                      "text": "\nThe default format is `%{path}%{time_slice}_%{index}.%{file_extension}`.\nIn addition, you can use [buffer placeholders](https://docs.fluentd.org/configuration/buffer-section#placeholders) in this parameter,\nso you can embed tag, time and record value like below:\n\n    s3_object_key_format %{path}/events/%Y%m%d/${tag}_%{index}.%{file_extension}\n    <buffer tag,time>\n",
                      "markdown": "`\nThe default format is `%{path}%{time_slice}_%{index}.%{file_extension}`.\nIn addition, you can use [buffer placeholders](https://docs.fluentd.org/configuration/buffer-section#placeholders) in this parameter,\nso you can embed tag, time and record value like below:\n\n    s3_object_key_format %{path}/events/%Y%m%d/${tag}_%{index}.%{file_extension}\n    <buffer tag,time>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 112,
                  "endLine": 114,
                  "endColumn": 118,
                  "snippet": {
                    "text": "E.g., \"logs/\" in the example configuration above.\n* %{time_slice} is the\ntime-slice in text that are formatted with **time_slice_format**.\n* %{index} is the sequential number starts from 0, increments when multiple files are uploaded to S3 in the same time slice.\n* %{file_extension} depends on **store_as** parameter.\n* %{uuid_flush} a uuid that is replaced everytime the buffer will be flushed.\n* %{hostname} is replaced with `Socket.gethostname` result.\n",
                    "rendered": {
                      "text": "E.g., \"logs/\" in the example configuration above.\n* %{time_slice} is the\ntime-slice in text that are formatted with **time_slice_format**.\n* %{index} is the sequential number starts from 0, increments when multiple files are uploaded to S3 in the same time slice.\n* %{file_extension} depends on **store_as** parameter.\n* %{uuid_flush} a uuid that is replaced everytime the buffer will be flushed.\n* %{hostname} is replaced with `Socket.gethostname` result.\n",
                      "markdown": "`E.g., \"logs/\" in the example configuration above.\n* %{time_slice} is the\ntime-slice in text that are formatted with **time_slice_format**.\n* %{index} is the sequential number starts from 0, increments when multiple files are uploaded to S3 in the same time slice.\n* %{file_extension} depends on **store_as** parameter.\n* %{uuid_flush} a uuid that is replaced everytime the buffer will be flushed.\n* %{hostname} is replaced with `Socket.gethostname` result.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 50,
                  "endLine": 47,
                  "endColumn": 59,
                  "snippet": {
                    "text": "This parameter is deprecated. Use [instance_profile_credentials](credentials.md#instance_profile_credentials) instead.\n\nThe number of attempts to make (with exponential backoff) when loading\ninstance profile credentials from the EC2 metadata service using an IAM\nrole. Defaults to 5 retries.\n\n## s3_bucket (required)\n",
                    "rendered": {
                      "text": "This parameter is deprecated. Use [instance_profile_credentials](credentials.md#instance_profile_credentials) instead.\n\nThe number of attempts to make (with exponential backoff) when loading\ninstance profile credentials from the EC2 metadata service using an IAM\nrole. Defaults to 5 retries.\n\n## s3_bucket (required)\n",
                      "markdown": "`This parameter is deprecated. Use [instance_profile_credentials](credentials.md#instance_profile_credentials) instead.\n\nThe number of attempts to make (with exponential backoff) when loading\ninstance profile credentials from the EC2 metadata service using an IAM\nrole. Defaults to 5 retries.\n\n## s3_bucket (required)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/output.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 42,
                  "endLine": 18,
                  "endColumn": 48,
                  "snippet": {
                    "text": "      s3_object_key_format %{path}%{time_slice}_%{index}.%{file_extension}\n\n      # if you want to use ${tag} or %Y/%m/%d/ like syntax in path / s3_object_key_format,\n      # need to specify tag for ${tag} and time for %Y/%m/%d in <buffer> argument.\n      <buffer tag,time>\n        @type file\n        path /var/log/fluent/s3\n",
                    "rendered": {
                      "text": "      s3_object_key_format %{path}%{time_slice}_%{index}.%{file_extension}\n\n      # if you want to use ${tag} or %Y/%m/%d/ like syntax in path / s3_object_key_format,\n      # need to specify tag for ${tag} and time for %Y/%m/%d in <buffer> argument.\n      <buffer tag,time>\n        @type file\n        path /var/log/fluent/s3\n",
                      "markdown": "`      s3_object_key_format %{path}%{time_slice}_%{index}.%{file_extension}\n\n      # if you want to use ${tag} or %Y/%m/%d/ like syntax in path / s3_object_key_format,\n      # need to specify tag for ${tag} and time for %Y/%m/%d in <buffer> argument.\n      <buffer tag,time>\n        @type file\n        path /var/log/fluent/s3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.github/ISSUE_TEMPLATE/config.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 86,
                  "endLine": 5,
                  "endColumn": 90,
                  "snippet": {
                    "text": "contact_links:\n  - name: Ask a Question\n    url: https://discuss.fluentd.org/\n    about: I have questions about fluent-plugin-kafka. Please ask and answer questions at https://discuss.fluentd.org/.\n",
                    "rendered": {
                      "text": "contact_links:\n  - name: Ask a Question\n    url: https://discuss.fluentd.org/\n    about: I have questions about fluent-plugin-kafka. Please ask and answer questions at https://discuss.fluentd.org/.\n",
                      "markdown": "`contact_links:\n  - name: Ask a Question\n    url: https://discuss.fluentd.org/\n    about: I have questions about fluent-plugin-kafka. Please ask and answer questions at https://discuss.fluentd.org/.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_in_s3.rb"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 41,
                  "endLine": 208,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    assert_equal 'sqs_test_sec_key', d.instance.sqs.aws_sec_key\n  end\n\n  def test_with_invalid_aws_keys_missing_secret_key\n    assert_raise(Fluent::ConfigError, \"aws_key_id or aws_sec_key is missing\") {\n      conf = <<\"EOS\"\naws_key_id test_key_id\n",
                    "rendered": {
                      "text": "    assert_equal 'sqs_test_sec_key', d.instance.sqs.aws_sec_key\n  end\n\n  def test_with_invalid_aws_keys_missing_secret_key\n    assert_raise(Fluent::ConfigError, \"aws_key_id or aws_sec_key is missing\") {\n      conf = <<\"EOS\"\naws_key_id test_key_id\n",
                      "markdown": "`    assert_equal 'sqs_test_sec_key', d.instance.sqs.aws_sec_key\n  end\n\n  def test_with_invalid_aws_keys_missing_secret_key\n    assert_raise(Fluent::ConfigError, \"aws_key_id or aws_sec_key is missing\") {\n      conf = <<\"EOS\"\naws_key_id test_key_id\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_in_s3.rb"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 41,
                  "endLine": 156,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    }\n  end\n\n  def test_sqs_with_invalid_keys_missing_secret_key\n    assert_raise(Fluent::ConfigError, \"sqs/aws_key_id or sqs/aws_sec_key is missing\") {\n      conf = <<\"EOS\"\naws_key_id test_key_id\n",
                    "rendered": {
                      "text": "    }\n  end\n\n  def test_sqs_with_invalid_keys_missing_secret_key\n    assert_raise(Fluent::ConfigError, \"sqs/aws_key_id or sqs/aws_sec_key is missing\") {\n      conf = <<\"EOS\"\naws_key_id test_key_id\n",
                      "markdown": "`    }\n  end\n\n  def test_sqs_with_invalid_keys_missing_secret_key\n    assert_raise(Fluent::ConfigError, \"sqs/aws_key_id or sqs/aws_sec_key is missing\") {\n      conf = <<\"EOS\"\naws_key_id test_key_id\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 16,
                  "endLine": 335,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n      private\n\n      def check_apikeys\n      end\n    end.configure(conf)\n  end\n",
                    "rendered": {
                      "text": "\n      private\n\n      def check_apikeys\n      end\n    end.configure(conf)\n  end\n",
                      "markdown": "`\n      private\n\n      def check_apikeys\n      end\n    end.configure(conf)\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 16,
                  "endLine": 50,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      def ensure_bucket\n      end\n\n      def check_apikeys\n      end\n    end.configure(conf)\n  end\n",
                    "rendered": {
                      "text": "      def ensure_bucket\n      end\n\n      def check_apikeys\n      end\n    end.configure(conf)\n  end\n",
                      "markdown": "`      def ensure_bucket\n      end\n\n      def check_apikeys\n      end\n    end.configure(conf)\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 39,
                  "endLine": 431,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    unique_hex = \"5226c3c4fb3d49b15226c3c4fb3d49b1\"\n    hex_random = unique_hex.reverse[0...5]\n\n    config = CONFIG_TIME_SLICE.gsub(/%{hostname}/,\"%{hex_random}\") << \"\\nhex_random_length #{hex_random.length}\"\n    config = config.gsub(/buffer_type memory/, \"buffer_type file\\nbuffer_path test/tmp/buf\")\n\n    # Partial mock the S3Bucket, not to make an actual connection to Amazon S3\n",
                    "rendered": {
                      "text": "    unique_hex = \"5226c3c4fb3d49b15226c3c4fb3d49b1\"\n    hex_random = unique_hex.reverse[0...5]\n\n    config = CONFIG_TIME_SLICE.gsub(/%{hostname}/,\"%{hex_random}\") << \"\\nhex_random_length #{hex_random.length}\"\n    config = config.gsub(/buffer_type memory/, \"buffer_type file\\nbuffer_path test/tmp/buf\")\n\n    # Partial mock the S3Bucket, not to make an actual connection to Amazon S3\n",
                      "markdown": "`    unique_hex = \"5226c3c4fb3d49b15226c3c4fb3d49b1\"\n    hex_random = unique_hex.reverse[0...5]\n\n    config = CONFIG_TIME_SLICE.gsub(/%{hostname}/,\"%{hex_random}\") << \"\\nhex_random_length #{hex_random.length}\"\n    config = config.gsub(/buffer_type memory/, \"buffer_type file\\nbuffer_path test/tmp/buf\")\n\n    # Partial mock the S3Bucket, not to make an actual connection to Amazon S3\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 39,
                  "endLine": 406,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    s3path = \"log/events/ts=20110102-13/events_0-#{uuid}.gz\"\n    setup_s3_object_mocks(s3_local_file_path: s3_local_file_path, s3path: s3path)\n\n    config = CONFIG_TIME_SLICE.gsub(/%{hostname}/,\"%{uuid_flush}\")\n    d = create_time_sliced_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n",
                    "rendered": {
                      "text": "    s3path = \"log/events/ts=20110102-13/events_0-#{uuid}.gz\"\n    setup_s3_object_mocks(s3_local_file_path: s3_local_file_path, s3path: s3path)\n\n    config = CONFIG_TIME_SLICE.gsub(/%{hostname}/,\"%{uuid_flush}\")\n    d = create_time_sliced_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n",
                      "markdown": "`    s3path = \"log/events/ts=20110102-13/events_0-#{uuid}.gz\"\n    setup_s3_object_mocks(s3_local_file_path: s3_local_file_path, s3path: s3path)\n\n    config = CONFIG_TIME_SLICE.gsub(/%{hostname}/,\"%{uuid_flush}\")\n    d = create_time_sliced_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 75,
                  "endLine": 313,
                  "endColumn": 83,
                  "snippet": {
                    "text": "    aws_key_id test_key_id\n    aws_sec_key test_sec_key\n    s3_bucket test_bucket\n    s3_object_key_format %{path}/events/ts=%{time_slice}/events_%{index}-%{hostname}.%{file_extension}\n    time_slice_format %Y%m%d-%H\n    path log\n    utc\n",
                    "rendered": {
                      "text": "    aws_key_id test_key_id\n    aws_sec_key test_sec_key\n    s3_bucket test_bucket\n    s3_object_key_format %{path}/events/ts=%{time_slice}/events_%{index}-%{hostname}.%{file_extension}\n    time_slice_format %Y%m%d-%H\n    path log\n    utc\n",
                      "markdown": "`    aws_key_id test_key_id\n    aws_sec_key test_sec_key\n    s3_bucket test_bucket\n    s3_object_key_format %{path}/events/ts=%{time_slice}/events_%{index}-%{hostname}.%{file_extension}\n    time_slice_format %Y%m%d-%H\n    path log\n    utc\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 444,
                  "startColumn": 3,
                  "endLine": 444,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    d = create_time_sliced_driver(config)\n    stub(Fluent::UniqueId).hex(anything) { unique_hex }\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                    "rendered": {
                      "text": "    d = create_time_sliced_driver(config)\n    stub(Fluent::UniqueId).hex(anything) { unique_hex }\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                      "markdown": "`    d = create_time_sliced_driver(config)\n    stub(Fluent::UniqueId).hex(anything) { unique_hex }\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 3,
                  "endLine": 409,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    config = CONFIG_TIME_SLICE.gsub(/%{hostname}/,\"%{uuid_flush}\")\n    d = create_time_sliced_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                    "rendered": {
                      "text": "    config = CONFIG_TIME_SLICE.gsub(/%{hostname}/,\"%{uuid_flush}\")\n    d = create_time_sliced_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                      "markdown": "`    config = CONFIG_TIME_SLICE.gsub(/%{hostname}/,\"%{uuid_flush}\")\n    d = create_time_sliced_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 3,
                  "endLine": 379,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    d = create_time_sliced_driver\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                    "rendered": {
                      "text": "\n    d = create_time_sliced_driver\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                      "markdown": "`\n    d = create_time_sliced_driver\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 3,
                  "endLine": 356,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    config = config.gsub(/check_bucket true/, \"check_bucket false\\n\")\n    d = create_time_sliced_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                    "rendered": {
                      "text": "    config = config.gsub(/check_bucket true/, \"check_bucket false\\n\")\n    d = create_time_sliced_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                      "markdown": "`    config = config.gsub(/check_bucket true/, \"check_bucket false\\n\")\n    d = create_time_sliced_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 3,
                  "endLine": 297,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    config = [CONFIG, 'format json', 'include_tag_key true', 'include_time_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                    "rendered": {
                      "text": "    config = [CONFIG, 'format json', 'include_tag_key true', 'include_time_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                      "markdown": "`    config = [CONFIG, 'format json', 'include_tag_key true', 'include_time_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 3,
                  "endLine": 281,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    config = [CONFIG, 'format json', 'include_time_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                    "rendered": {
                      "text": "    config = [CONFIG, 'format json', 'include_time_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                      "markdown": "`    config = [CONFIG, 'format json', 'include_time_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 3,
                  "endLine": 265,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    config = [CONFIG, 'format json', 'include_tag_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                    "rendered": {
                      "text": "    config = [CONFIG, 'format json', 'include_tag_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                      "markdown": "`    config = [CONFIG, 'format json', 'include_tag_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 3,
                  "endLine": 249,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    config = [CONFIG, 'format json'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                    "rendered": {
                      "text": "    config = [CONFIG, 'format json'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n",
                      "markdown": "`    config = [CONFIG, 'format json'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1})\n      d.feed(time, {\"a\"=>2})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 3,
                  "endLine": 233,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    config = [CONFIG, 'format ltsv'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1, \"b\"=>1})\n      d.feed(time, {\"a\"=>2, \"b\"=>2})\n",
                    "rendered": {
                      "text": "    config = [CONFIG, 'format ltsv'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1, \"b\"=>1})\n      d.feed(time, {\"a\"=>2, \"b\"=>2})\n",
                      "markdown": "`    config = [CONFIG, 'format ltsv'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, {\"a\"=>1, \"b\"=>1})\n      d.feed(time, {\"a\"=>2, \"b\"=>2})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 3,
                  "endLine": 217,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    config = [CONFIG, 'include_tag_key true', 'include_time_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, { \"a\" => 1 })\n      d.feed(time, { \"a\" => 2 })\n",
                    "rendered": {
                      "text": "    config = [CONFIG, 'include_tag_key true', 'include_time_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, { \"a\" => 1 })\n      d.feed(time, { \"a\" => 2 })\n",
                      "markdown": "`    config = [CONFIG, 'include_tag_key true', 'include_time_key true'].join(\"\\n\")\n    d = create_driver(config)\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, { \"a\" => 1 })\n      d.feed(time, { \"a\" => 2 })\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/test/test_out_s3.rb"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 3,
                  "endLine": 201,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  def test_format\n    d = create_driver\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, { \"a\" => 1 })\n      d.feed(time, { \"a\" => 2 })\n",
                    "rendered": {
                      "text": "  def test_format\n    d = create_driver\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, { \"a\" => 1 })\n      d.feed(time, { \"a\" => 2 })\n",
                      "markdown": "`  def test_format\n    d = create_driver\n\n    time = event_time(\"2011-01-02 13:14:15 UTC\")\n    d.run(default_tag: \"test\") do\n      d.feed(time, { \"a\" => 1 })\n      d.feed(time, { \"a\" => 2 })\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/lib/fluent/plugin/out_s3.rb"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 14,
                  "endLine": 479,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      end\n    end\n\n    def check_apikeys\n      @bucket.objects(prefix: @path, :max_keys => 1).first\n    rescue Aws::S3::Errors::NoSuchBucket\n      # ignore NoSuchBucket Error because ensure_bucket checks it.\n",
                    "rendered": {
                      "text": "      end\n    end\n\n    def check_apikeys\n      @bucket.objects(prefix: @path, :max_keys => 1).first\n    rescue Aws::S3::Errors::NoSuchBucket\n      # ignore NoSuchBucket Error because ensure_bucket checks it.\n",
                      "markdown": "`      end\n    end\n\n    def check_apikeys\n      @bucket.objects(prefix: @path, :max_keys => 1).first\n    rescue Aws::S3::Errors::NoSuchBucket\n      # ignore NoSuchBucket Error because ensure_bucket checks it.\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/lib/fluent/plugin/out_s3.rb"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 12,
                  "endLine": 267,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      @s3 = Aws::S3::Resource.new(client: s3_client)\n      @bucket = @s3.bucket(@s3_bucket)\n\n      check_apikeys if @check_apikey_on_start\n      ensure_bucket if @check_bucket\n      ensure_bucket_lifecycle\n\n",
                    "rendered": {
                      "text": "      @s3 = Aws::S3::Resource.new(client: s3_client)\n      @bucket = @s3.bucket(@s3_bucket)\n\n      check_apikeys if @check_apikey_on_start\n      ensure_bucket if @check_bucket\n      ensure_bucket_lifecycle\n\n",
                      "markdown": "`      @s3 = Aws::S3::Resource.new(client: s3_client)\n      @bucket = @s3.bucket(@s3_bucket)\n\n      check_apikeys if @check_apikey_on_start\n      ensure_bucket if @check_bucket\n      ensure_bucket_lifecycle\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/lib/fluent/plugin/out_s3.rb"
                },
                "region": {
                  "startLine": 463,
                  "startColumn": 20,
                  "endLine": 463,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      end\n\n      @s3_object_key_format.gsub('%{hostname}') { |expr|\n        log.warn \"%{hostname} will be removed in the future. Use \\\"\\#{Socket.gethostname}\\\" instead\"\n        Socket.gethostname\n      }\n    end\n",
                    "rendered": {
                      "text": "      end\n\n      @s3_object_key_format.gsub('%{hostname}') { |expr|\n        log.warn \"%{hostname} will be removed in the future. Use \\\"\\#{Socket.gethostname}\\\" instead\"\n        Socket.gethostname\n      }\n    end\n",
                      "markdown": "`      end\n\n      @s3_object_key_format.gsub('%{hostname}') { |expr|\n        log.warn \"%{hostname} will be removed in the future. Use \\\"\\#{Socket.gethostname}\\\" instead\"\n        Socket.gethostname\n      }\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/lib/fluent/plugin/out_s3.rb"
                },
                "region": {
                  "startLine": 462,
                  "startColumn": 36,
                  "endLine": 462,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        @uuid_flush_enabled = true\n      end\n\n      @s3_object_key_format.gsub('%{hostname}') { |expr|\n        log.warn \"%{hostname} will be removed in the future. Use \\\"\\#{Socket.gethostname}\\\" instead\"\n        Socket.gethostname\n      }\n",
                    "rendered": {
                      "text": "        @uuid_flush_enabled = true\n      end\n\n      @s3_object_key_format.gsub('%{hostname}') { |expr|\n        log.warn \"%{hostname} will be removed in the future. Use \\\"\\#{Socket.gethostname}\\\" instead\"\n        Socket.gethostname\n      }\n",
                      "markdown": "`        @uuid_flush_enabled = true\n      end\n\n      @s3_object_key_format.gsub('%{hostname}') { |expr|\n        log.warn \"%{hostname} will be removed in the future. Use \\\"\\#{Socket.gethostname}\\\" instead\"\n        Socket.gethostname\n      }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/lib/fluent/plugin/out_s3.rb"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 39,
                  "endLine": 452,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    end\n\n    def process_s3_object_key_format\n      %W(%{uuid} %{uuid:random} %{uuid:hostname} %{uuid:timestamp}).each { |ph|\n        if @s3_object_key_format.include?(ph)\n          raise Fluent::ConfigError, %!#{ph} placeholder in s3_object_key_format is removed!\n        end\n",
                    "rendered": {
                      "text": "    end\n\n    def process_s3_object_key_format\n      %W(%{uuid} %{uuid:random} %{uuid:hostname} %{uuid:timestamp}).each { |ph|\n        if @s3_object_key_format.include?(ph)\n          raise Fluent::ConfigError, %!#{ph} placeholder in s3_object_key_format is removed!\n        end\n",
                      "markdown": "`    end\n\n    def process_s3_object_key_format\n      %W(%{uuid} %{uuid:random} %{uuid:hostname} %{uuid:timestamp}).each { |ph|\n        if @s3_object_key_format.include?(ph)\n          raise Fluent::ConfigError, %!#{ph} placeholder in s3_object_key_format is removed!\n        end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/lib/fluent/plugin/out_s3.rb"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 91,
                  "endLine": 86,
                  "endColumn": 100,
                  "snippet": {
                    "text": "      desc \"Profile name. Default to 'default' or ENV['AWS_PROFILE']\"\n      config_param :profile_name, :string, default: nil\n    end\n    desc \"The number of attempts to load instance profile credentials from the EC2 metadata service using IAM role\"\n    config_param :aws_iam_retries, :integer, default: nil, deprecated: \"Use 'instance_profile_credentials' instead\"\n    desc \"S3 bucket name\"\n    config_param :s3_bucket, :string\n",
                    "rendered": {
                      "text": "      desc \"Profile name. Default to 'default' or ENV['AWS_PROFILE']\"\n      config_param :profile_name, :string, default: nil\n    end\n    desc \"The number of attempts to load instance profile credentials from the EC2 metadata service using IAM role\"\n    config_param :aws_iam_retries, :integer, default: nil, deprecated: \"Use 'instance_profile_credentials' instead\"\n    desc \"S3 bucket name\"\n    config_param :s3_bucket, :string\n",
                      "markdown": "`      desc \"Profile name. Default to 'default' or ENV['AWS_PROFILE']\"\n      config_param :profile_name, :string, default: nil\n    end\n    desc \"The number of attempts to load instance profile credentials from the EC2 metadata service using IAM role\"\n    config_param :aws_iam_retries, :integer, default: nil, deprecated: \"Use 'instance_profile_credentials' instead\"\n    desc \"S3 bucket name\"\n    config_param :s3_bucket, :string\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.github/workflows/linux.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        ruby: [ '3.2', '3.1', '3.0', '2.7' ]\n        os:\n          - ubuntu-latest\n    name: Ruby ${{ matrix.ruby }} unit testing on ${{ matrix.os }}\n    steps:\n    - uses: actions/checkout@v4\n    - uses: ruby/setup-ruby@v1\n",
                    "rendered": {
                      "text": "        ruby: [ '3.2', '3.1', '3.0', '2.7' ]\n        os:\n          - ubuntu-latest\n    name: Ruby ${{ matrix.ruby }} unit testing on ${{ matrix.os }}\n    steps:\n    - uses: actions/checkout@v4\n    - uses: ruby/setup-ruby@v1\n",
                      "markdown": "`        ruby: [ '3.2', '3.1', '3.0', '2.7' ]\n        os:\n          - ubuntu-latest\n    name: Ruby ${{ matrix.ruby }} unit testing on ${{ matrix.os }}\n    steps:\n    - uses: actions/checkout@v4\n    - uses: ruby/setup-ruby@v1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/appveyor.yml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 9,
                  "snippet": {
                    "text": "install:\n  - SET PATH=C:\\Ruby%ruby_version%\\bin;%PATH%\n  - \"%devkit%\\\\devkitvars.bat\"\n  - ruby --version\n  - gem --version\n  - bundle install\nbuild: off\n",
                    "rendered": {
                      "text": "install:\n  - SET PATH=C:\\Ruby%ruby_version%\\bin;%PATH%\n  - \"%devkit%\\\\devkitvars.bat\"\n  - ruby --version\n  - gem --version\n  - bundle install\nbuild: off\n",
                      "markdown": "`install:\n  - SET PATH=C:\\Ruby%ruby_version%\\bin;%PATH%\n  - \"%devkit%\\\\devkitvars.bat\"\n  - ruby --version\n  - gem --version\n  - bundle install\nbuild: off\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/README.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 31,
                  "endLine": 27,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n## Requirements\n\n| fluent-plugin-s3  | fluentd | ruby |\n|-------------------|---------|------|\n| >= 1.0.0 | >= v0.14.0 | >= 2.1 |\n|  < 1.0.0 | >= v0.12.0 | >= 1.9 |\n",
                    "rendered": {
                      "text": "\n## Requirements\n\n| fluent-plugin-s3  | fluentd | ruby |\n|-------------------|---------|------|\n| >= 1.0.0 | >= v0.14.0 | >= 2.1 |\n|  < 1.0.0 | >= v0.12.0 | >= 1.9 |\n",
                      "markdown": "`\n## Requirements\n\n| fluent-plugin-s3  | fluentd | ruby |\n|-------------------|---------|------|\n| >= 1.0.0 | >= v0.14.0 | >= 2.1 |\n|  < 1.0.0 | >= v0.12.0 | >= 1.9 |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/README.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 73,
                  "endLine": 14,
                  "snippet": {
                    "text": "**s3** output plugin buffers event logs in local file and upload it to S3\nperiodically.\n\nThis plugin splits files exactly by using the time of event logs (not the time\nwhen the logs are received). For example, a log '2011-01-02 message B' is\nreached, and then another log '2011-01-03 message B' is reached in this order,\nthe former one is stored in \"20110102.gz\" file, and latter one in\n\"20110103.gz\" file.\n",
                    "rendered": {
                      "text": "**s3** output plugin buffers event logs in local file and upload it to S3\nperiodically.\n\nThis plugin splits files exactly by using the time of event logs (not the time\nwhen the logs are received). For example, a log '2011-01-02 message B' is\nreached, and then another log '2011-01-03 message B' is reached in this order,\nthe former one is stored in \"20110102.gz\" file, and latter one in\n\"20110103.gz\" file.\n",
                      "markdown": "`**s3** output plugin buffers event logs in local file and upload it to S3\nperiodically.\n\nThis plugin splits files exactly by using the time of event logs (not the time\nwhen the logs are received). For example, a log '2011-01-02 message B' is\nreached, and then another log '2011-01-03 message B' is reached in this order,\nthe former one is stored in \"20110102.gz\" file, and latter one in\n\"20110103.gz\" file.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/README.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 51,
                  "snippet": {
                    "text": "**s3** output plugin buffers event logs in local file and upload it to S3\nperiodically.\n\nThis plugin splits files exactly by using the time of event logs (not the time\nwhen the logs are received). For example, a log '2011-01-02 message B' is\nreached, and then another log '2011-01-03 message B' is reached in this order,\nthe former one is stored in \"20110102.gz\" file, and latter one in\n",
                    "rendered": {
                      "text": "**s3** output plugin buffers event logs in local file and upload it to S3\nperiodically.\n\nThis plugin splits files exactly by using the time of event logs (not the time\nwhen the logs are received). For example, a log '2011-01-02 message B' is\nreached, and then another log '2011-01-03 message B' is reached in this order,\nthe former one is stored in \"20110102.gz\" file, and latter one in\n",
                      "markdown": "`**s3** output plugin buffers event logs in local file and upload it to S3\nperiodically.\n\nThis plugin splits files exactly by using the time of event logs (not the time\nwhen the logs are received). For example, a log '2011-01-02 message B' is\nreached, and then another log '2011-01-03 message B' is reached in this order,\nthe former one is stored in \"20110102.gz\" file, and latter one in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/input.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 27,
                  "endLine": 17,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      @type s3\n\n      aws_key_id YOUR_AWS_KEY_ID\n      aws_sec_key YOUR_AWS_SECRET_KEY\n      s3_bucket YOUR_S3_BUCKET_NAME\n      s3_region ap-northeast-1\n      add_object_metadata true\n",
                    "rendered": {
                      "text": "      @type s3\n\n      aws_key_id YOUR_AWS_KEY_ID\n      aws_sec_key YOUR_AWS_SECRET_KEY\n      s3_bucket YOUR_S3_BUCKET_NAME\n      s3_region ap-northeast-1\n      add_object_metadata true\n",
                      "markdown": "`      @type s3\n\n      aws_key_id YOUR_AWS_KEY_ID\n      aws_sec_key YOUR_AWS_SECRET_KEY\n      s3_bucket YOUR_S3_BUCKET_NAME\n      s3_region ap-northeast-1\n      add_object_metadata true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/credentials.md"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 18,
                  "endLine": 78,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n*   [Using IAM Roles - AWS Identity and Access\n    Management](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html)\n*   [IAM Roles For Service Accounts](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html)\n*   [Aws::STS::Client](http://docs.aws.amazon.com/sdkforruby/api/Aws/STS/Client.html)\n*   [Aws::AssumeRoleWebIdentityCredentials](https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/AssumeRoleWebIdentityCredentials.html)\n\n",
                    "rendered": {
                      "text": "\n*   [Using IAM Roles - AWS Identity and Access\n    Management](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html)\n*   [IAM Roles For Service Accounts](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html)\n*   [Aws::STS::Client](http://docs.aws.amazon.com/sdkforruby/api/Aws/STS/Client.html)\n*   [Aws::AssumeRoleWebIdentityCredentials](https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/AssumeRoleWebIdentityCredentials.html)\n\n",
                      "markdown": "`\n*   [Using IAM Roles - AWS Identity and Access\n    Management](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html)\n*   [IAM Roles For Service Accounts](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html)\n*   [Aws::STS::Client](http://docs.aws.amazon.com/sdkforruby/api/Aws/STS/Client.html)\n*   [Aws::AssumeRoleWebIdentityCredentials](https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/AssumeRoleWebIdentityCredentials.html)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/v0.12.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 27,
                  "endLine": 9,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      @type s3\n\n      aws_key_id YOUR_AWS_KEY_ID\n      aws_sec_key YOUR_AWS_SECRET_KEY\n      s3_bucket YOUR_S3_BUCKET_NAME\n      s3_region ap-northeast-1\n\n",
                    "rendered": {
                      "text": "      @type s3\n\n      aws_key_id YOUR_AWS_KEY_ID\n      aws_sec_key YOUR_AWS_SECRET_KEY\n      s3_bucket YOUR_S3_BUCKET_NAME\n      s3_region ap-northeast-1\n\n",
                      "markdown": "`      @type s3\n\n      aws_key_id YOUR_AWS_KEY_ID\n      aws_sec_key YOUR_AWS_SECRET_KEY\n      s3_bucket YOUR_S3_BUCKET_NAME\n      s3_region ap-northeast-1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/v0.12.md"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 3,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n## time_slice_wait (for v0.12)\n\nThe time to wait old logs. Default is 10 minutes. Specify larger value if\nold logs may reach.\n\nThis parameter is for v0.12. Use [`<buffer>`](https://docs.fluentd.org/configuration/buffer-section)'s `timekey_wait` in v1.\n",
                    "rendered": {
                      "text": "\n## time_slice_wait (for v0.12)\n\nThe time to wait old logs. Default is 10 minutes. Specify larger value if\nold logs may reach.\n\nThis parameter is for v0.12. Use [`<buffer>`](https://docs.fluentd.org/configuration/buffer-section)'s `timekey_wait` in v1.\n",
                      "markdown": "`\n## time_slice_wait (for v0.12)\n\nThe time to wait old logs. Default is 10 minutes. Specify larger value if\nold logs may reach.\n\nThis parameter is for v0.12. Use [`<buffer>`](https://docs.fluentd.org/configuration/buffer-section)'s `timekey_wait` in v1.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/v0.12.md"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13,
                  "endLine": 42,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n## time_slice_format (for v0.12)\n\nFormat of the time used as the file name. Default is '%Y%m%d'. Use\n'%Y%m%d%H' to split files hourly.\n\nThis parameter is for v0.12. Use [buffer placeholder](https://docs.fluentd.org/configuration/buffer-section#placeholders) for [`path`](output.md#path) / [`s3_object_key_format`](output.md#s3_object_key_format) in v1.\n",
                    "rendered": {
                      "text": "\n## time_slice_format (for v0.12)\n\nFormat of the time used as the file name. Default is '%Y%m%d'. Use\n'%Y%m%d%H' to split files hourly.\n\nThis parameter is for v0.12. Use [buffer placeholder](https://docs.fluentd.org/configuration/buffer-section#placeholders) for [`path`](output.md#path) / [`s3_object_key_format`](output.md#s3_object_key_format) in v1.\n",
                      "markdown": "`\n## time_slice_format (for v0.12)\n\nFormat of the time used as the file name. Default is '%Y%m%d'. Use\n'%Y%m%d%H' to split files hourly.\n\nThis parameter is for v0.12. Use [buffer placeholder](https://docs.fluentd.org/configuration/buffer-section#placeholders) for [`path`](output.md#path) / [`s3_object_key_format`](output.md#s3_object_key_format) in v1.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/docs/v0.12.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 34,
                  "endLine": 31,
                  "snippet": {
                    "text": "\n    @format json\n    include_time_key true\n    time_key log_time # default is time\n\nThis parameter is for v0.12. Use [`<format>`](https://docs.fluentd.org/configuration/format-section) and [`<inject>`](https://docs.fluentd.org/configuration/inject-section) for v1.\n\n## buffer_path (for v0.12)\n",
                    "rendered": {
                      "text": "\n    @format json\n    include_time_key true\n    time_key log_time # default is time\n\nThis parameter is for v0.12. Use [`<format>`](https://docs.fluentd.org/configuration/format-section) and [`<inject>`](https://docs.fluentd.org/configuration/inject-section) for v1.\n\n## buffer_path (for v0.12)\n",
                      "markdown": "`\n    @format json\n    include_time_key true\n    time_key log_time # default is time\n\nThis parameter is for v0.12. Use [`<format>`](https://docs.fluentd.org/configuration/format-section) and [`<inject>`](https://docs.fluentd.org/configuration/inject-section) for v1.\n\n## buffer_path (for v0.12)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/lib/fluent/plugin/in_s3.rb"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 14,
                  "endLine": 332,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      Aws::SQS::Client.new(options)\n    end\n\n    def check_apikeys\n      @bucket.objects.first\n      log.debug(\"Succeeded to verify API keys\")\n    rescue => e\n",
                    "rendered": {
                      "text": "      Aws::SQS::Client.new(options)\n    end\n\n    def check_apikeys\n      @bucket.objects.first\n      log.debug(\"Succeeded to verify API keys\")\n    rescue => e\n",
                      "markdown": "`      Aws::SQS::Client.new(options)\n    end\n\n    def check_apikeys\n      @bucket.objects.first\n      log.debug(\"Succeeded to verify API keys\")\n    rescue => e\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/lib/fluent/plugin/in_s3.rb"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 12,
                  "endLine": 177,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n      raise \"#{@bucket.name} is not found.\" unless @bucket.exists?\n\n      check_apikeys if @check_apikey_on_start\n\n      sqs_client = create_sqs_client\n      log.debug(\"Succeeded to create SQS client\")\n",
                    "rendered": {
                      "text": "\n      raise \"#{@bucket.name} is not found.\" unless @bucket.exists?\n\n      check_apikeys if @check_apikey_on_start\n\n      sqs_client = create_sqs_client\n      log.debug(\"Succeeded to create SQS client\")\n",
                      "markdown": "`\n      raise \"#{@bucket.name} is not found.\" unless @bucket.exists?\n\n      check_apikeys if @check_apikey_on_start\n\n      sqs_client = create_sqs_client\n      log.debug(\"Succeeded to create SQS client\")\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/fluent-plugin-s3.gemspec"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 44,
                  "endLine": 27,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  gem.add_development_dependency \"test-unit-rr\", \">= 1.0.3\"\n  gem.add_development_dependency \"timecop\"\n  # aws-sdk-core requires one of ox, oga, libxml, nokogiri or rexml,\n  # and rexml is no longer default gem as of Ruby 3.0.\n  gem.add_development_dependency \"rexml\"\nend\n",
                    "rendered": {
                      "text": "  gem.add_development_dependency \"test-unit-rr\", \">= 1.0.3\"\n  gem.add_development_dependency \"timecop\"\n  # aws-sdk-core requires one of ox, oga, libxml, nokogiri or rexml,\n  # and rexml is no longer default gem as of Ruby 3.0.\n  gem.add_development_dependency \"rexml\"\nend\n",
                      "markdown": "`  gem.add_development_dependency \"test-unit-rr\", \">= 1.0.3\"\n  gem.add_development_dependency \"timecop\"\n  # aws-sdk-core requires one of ox, oga, libxml, nokogiri or rexml,\n  # and rexml is no longer default gem as of Ruby 3.0.\n  gem.add_development_dependency \"rexml\"\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 26,
                  "endLine": 97,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\nRelease 1.1.5 - 2018/09/04\n\n  * out_s3: Improve check_apikeys performance by specifying `max_keys` parameter\n\nRelease 1.1.4 - 2018/07/22\n\n",
                    "rendered": {
                      "text": "\nRelease 1.1.5 - 2018/09/04\n\n  * out_s3: Improve check_apikeys performance by specifying `max_keys` parameter\n\nRelease 1.1.4 - 2018/07/22\n\n",
                      "markdown": "`\nRelease 1.1.5 - 2018/09/04\n\n  * out_s3: Improve check_apikeys performance by specifying `max_keys` parameter\n\nRelease 1.1.4 - 2018/07/22\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 54,
                  "endLine": 384,
                  "endColumn": 77,
                  "snippet": {
                    "text": "Release 0.2.3 - 2012/11/19\n\n  * Loosen 'aws-sdk' version requirement from \"~> 1.1.3\" to \"~> 1.1\"\n  * Support aws-sdk facility to load credentials from ENV vars or IAM Instance Profile by making the credentials non-mandatory\n  * Use Yajl instead of to_json not to raise exceptions when it got invalid bytes as UTF-8.\n\n\n",
                    "rendered": {
                      "text": "Release 0.2.3 - 2012/11/19\n\n  * Loosen 'aws-sdk' version requirement from \"~> 1.1.3\" to \"~> 1.1\"\n  * Support aws-sdk facility to load credentials from ENV vars or IAM Instance Profile by making the credentials non-mandatory\n  * Use Yajl instead of to_json not to raise exceptions when it got invalid bytes as UTF-8.\n\n\n",
                      "markdown": "`Release 0.2.3 - 2012/11/19\n\n  * Loosen 'aws-sdk' version requirement from \"~> 1.1.3\" to \"~> 1.1\"\n  * Support aws-sdk facility to load credentials from ENV vars or IAM Instance Profile by making the credentials non-mandatory\n  * Use Yajl instead of to_json not to raise exceptions when it got invalid bytes as UTF-8.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 55,
                  "endLine": 357,
                  "endColumn": 63,
                  "snippet": {
                    "text": "    https://github.com/fluent/fluent-plugin-s3/pull/12\n  * Fix a lot of temporary files were left on /tmp when the plugin failed to write to S3\n    https://github.com/fluent/fluent-plugin-s3/pull/15\n  * Enable fluent-mixin-config-placeholders to support hostname, uuid and other parameters in configuration\n    https://github.com/fluent/fluent-plugin-s3/pull/19\n  * Update 'aws-sdk' version requirement to '~> 1.8.2'\n    https://github.com/fluent/fluent-plugin-s3/pull/21\n",
                    "rendered": {
                      "text": "    https://github.com/fluent/fluent-plugin-s3/pull/12\n  * Fix a lot of temporary files were left on /tmp when the plugin failed to write to S3\n    https://github.com/fluent/fluent-plugin-s3/pull/15\n  * Enable fluent-mixin-config-placeholders to support hostname, uuid and other parameters in configuration\n    https://github.com/fluent/fluent-plugin-s3/pull/19\n  * Update 'aws-sdk' version requirement to '~> 1.8.2'\n    https://github.com/fluent/fluent-plugin-s3/pull/21\n",
                      "markdown": "`    https://github.com/fluent/fluent-plugin-s3/pull/12\n  * Fix a lot of temporary files were left on /tmp when the plugin failed to write to S3\n    https://github.com/fluent/fluent-plugin-s3/pull/15\n  * Enable fluent-mixin-config-placeholders to support hostname, uuid and other parameters in configuration\n    https://github.com/fluent/fluent-plugin-s3/pull/19\n  * Update 'aws-sdk' version requirement to '~> 1.8.2'\n    https://github.com/fluent/fluent-plugin-s3/pull/21\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 45,
                  "endLine": 363,
                  "endColumn": 49,
                  "snippet": {
                    "text": "    https://github.com/fluent/fluent-plugin-s3/pull/21\n  * Create new S3 bucket if not exists\n    https://github.com/fluent/fluent-plugin-s3/pull/22\n  * Check the permission and bucket existence at start method, not write method.\n\n\nRelease 0.2.6 - 2013/01/15\n",
                    "rendered": {
                      "text": "    https://github.com/fluent/fluent-plugin-s3/pull/21\n  * Create new S3 bucket if not exists\n    https://github.com/fluent/fluent-plugin-s3/pull/22\n  * Check the permission and bucket existence at start method, not write method.\n\n\nRelease 0.2.6 - 2013/01/15\n",
                      "markdown": "`    https://github.com/fluent/fluent-plugin-s3/pull/21\n  * Create new S3 bucket if not exists\n    https://github.com/fluent/fluent-plugin-s3/pull/22\n  * Check the permission and bucket existence at start method, not write method.\n\n\nRelease 0.2.6 - 2013/01/15\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 3,
                  "endLine": 359,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    https://github.com/fluent/fluent-plugin-s3/pull/15\n  * Enable fluent-mixin-config-placeholders to support hostname, uuid and other parameters in configuration\n    https://github.com/fluent/fluent-plugin-s3/pull/19\n  * Update 'aws-sdk' version requirement to '~> 1.8.2'\n    https://github.com/fluent/fluent-plugin-s3/pull/21\n  * Create new S3 bucket if not exists\n    https://github.com/fluent/fluent-plugin-s3/pull/22\n",
                    "rendered": {
                      "text": "    https://github.com/fluent/fluent-plugin-s3/pull/15\n  * Enable fluent-mixin-config-placeholders to support hostname, uuid and other parameters in configuration\n    https://github.com/fluent/fluent-plugin-s3/pull/19\n  * Update 'aws-sdk' version requirement to '~> 1.8.2'\n    https://github.com/fluent/fluent-plugin-s3/pull/21\n  * Create new S3 bucket if not exists\n    https://github.com/fluent/fluent-plugin-s3/pull/22\n",
                      "markdown": "`    https://github.com/fluent/fluent-plugin-s3/pull/15\n  * Enable fluent-mixin-config-placeholders to support hostname, uuid and other parameters in configuration\n    https://github.com/fluent/fluent-plugin-s3/pull/19\n  * Update 'aws-sdk' version requirement to '~> 1.8.2'\n    https://github.com/fluent/fluent-plugin-s3/pull/21\n  * Create new S3 bucket if not exists\n    https://github.com/fluent/fluent-plugin-s3/pull/22\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 3,
                  "endLine": 302,
                  "endColumn": 11,
                  "snippet": {
                    "text": "Release 0.4.0 - 2014/06/06\n\n  * Add 'format' option to change one line format\n  * Update fluentd dependency to v0.10.49\n\n\nRelease 0.3.7 - 2014/03/07\n",
                    "rendered": {
                      "text": "Release 0.4.0 - 2014/06/06\n\n  * Add 'format' option to change one line format\n  * Update fluentd dependency to v0.10.49\n\n\nRelease 0.3.7 - 2014/03/07\n",
                      "markdown": "`Release 0.4.0 - 2014/06/06\n\n  * Add 'format' option to change one line format\n  * Update fluentd dependency to v0.10.49\n\n\nRelease 0.3.7 - 2014/03/07\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 3,
                  "endLine": 289,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nRelease 0.4.2 - 2014/10/22\n\n  * Update fluent-mixin-config-placeholders to v0.3.0\n\n\nRelease 0.4.1 - 2014/10/16\n",
                    "rendered": {
                      "text": "\nRelease 0.4.2 - 2014/10/22\n\n  * Update fluent-mixin-config-placeholders to v0.3.0\n\n\nRelease 0.4.1 - 2014/10/16\n",
                      "markdown": "`\nRelease 0.4.2 - 2014/10/22\n\n  * Update fluent-mixin-config-placeholders to v0.3.0\n\n\nRelease 0.4.1 - 2014/10/16\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 22,
                  "endLine": 155,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n  * Support v0.14\n  * Fix aws_iam_retries warning\n  * Fix race condition at start with buffers\n\n\nRelease 0.6.8 - 2016/04/19\n",
                    "rendered": {
                      "text": "\n  * Support v0.14\n  * Fix aws_iam_retries warning\n  * Fix race condition at start with buffers\n\n\nRelease 0.6.8 - 2016/04/19\n",
                      "markdown": "`\n  * Support v0.14\n  * Fix aws_iam_retries warning\n  * Fix race condition at start with buffers\n\n\nRelease 0.6.8 - 2016/04/19\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "endLine": 79,
                  "endColumn": 11,
                  "snippet": {
                    "text": "Release 1.1.9 - 2019/03/26\n\n  * out_s3: Add enable_transfer_acceleration parameter\n  * Update fluentd dependency to v0.14.22 or later\n\nRelease 1.1.8 - 2019/01/28\n\n",
                    "rendered": {
                      "text": "Release 1.1.9 - 2019/03/26\n\n  * out_s3: Add enable_transfer_acceleration parameter\n  * Update fluentd dependency to v0.14.22 or later\n\nRelease 1.1.8 - 2019/01/28\n\n",
                      "markdown": "`Release 1.1.9 - 2019/03/26\n\n  * out_s3: Add enable_transfer_acceleration parameter\n  * Update fluentd dependency to v0.14.22 or later\n\nRelease 1.1.8 - 2019/01/28\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 53,
                  "endLine": 384,
                  "endColumn": 58,
                  "snippet": {
                    "text": "Release 0.2.3 - 2012/11/19\n\n  * Loosen 'aws-sdk' version requirement from \"~> 1.1.3\" to \"~> 1.1\"\n  * Support aws-sdk facility to load credentials from ENV vars or IAM Instance Profile by making the credentials non-mandatory\n  * Use Yajl instead of to_json not to raise exceptions when it got invalid bytes as UTF-8.\n\n\n",
                    "rendered": {
                      "text": "Release 0.2.3 - 2012/11/19\n\n  * Loosen 'aws-sdk' version requirement from \"~> 1.1.3\" to \"~> 1.1\"\n  * Support aws-sdk facility to load credentials from ENV vars or IAM Instance Profile by making the credentials non-mandatory\n  * Use Yajl instead of to_json not to raise exceptions when it got invalid bytes as UTF-8.\n\n\n",
                      "markdown": "`Release 0.2.3 - 2012/11/19\n\n  * Loosen 'aws-sdk' version requirement from \"~> 1.1.3\" to \"~> 1.1\"\n  * Support aws-sdk facility to load credentials from ENV vars or IAM Instance Profile by making the credentials non-mandatory\n  * Use Yajl instead of to_json not to raise exceptions when it got invalid bytes as UTF-8.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 31,
                  "endLine": 326,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nRelease 0.3.4 - 2013/07/31\n\n  * Add dynamic path slicing by time formatted string\n    https://github.com/fluent/fluent-plugin-s3/pull/24\n\n\n",
                    "rendered": {
                      "text": "\nRelease 0.3.4 - 2013/07/31\n\n  * Add dynamic path slicing by time formatted string\n    https://github.com/fluent/fluent-plugin-s3/pull/24\n\n\n",
                      "markdown": "`\nRelease 0.3.4 - 2013/07/31\n\n  * Add dynamic path slicing by time formatted string\n    https://github.com/fluent/fluent-plugin-s3/pull/24\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 78,
                  "endLine": 235,
                  "snippet": {
                    "text": "Release 0.5.8 - 2015/06/09\n\n  * Fix credential provider selection for env vars\n  * Add aws_iam_retries parameter to set number of attemps to the EC2 metadata service\n\n\nRelease 0.5.7 - 2015/03/31\n\n",
                    "rendered": {
                      "text": "Release 0.5.8 - 2015/06/09\n\n  * Fix credential provider selection for env vars\n  * Add aws_iam_retries parameter to set number of attemps to the EC2 metadata service\n\n\nRelease 0.5.7 - 2015/03/31\n\n",
                      "markdown": "`Release 0.5.8 - 2015/06/09\n\n  * Fix credential provider selection for env vars\n  * Add aws_iam_retries parameter to set number of attemps to the EC2 metadata service\n\n\nRelease 0.5.7 - 2015/03/31\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 41,
                  "endLine": 233,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\nRelease 0.5.8 - 2015/06/09\n\n  * Fix credential provider selection for env vars\n  * Add aws_iam_retries parameter to set number of attemps to the EC2 metadata service\n\n\n",
                    "rendered": {
                      "text": "\nRelease 0.5.8 - 2015/06/09\n\n  * Fix credential provider selection for env vars\n  * Add aws_iam_retries parameter to set number of attemps to the EC2 metadata service\n\n\n",
                      "markdown": "`\nRelease 0.5.8 - 2015/06/09\n\n  * Fix credential provider selection for env vars\n  * Add aws_iam_retries parameter to set number of attemps to the EC2 metadata service\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 57,
                  "endLine": 109,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nRelease 1.1.2 - 2018/04/10\n\n  * out_s3: Fix memory leak when s3_object_key_format has time related placeholder\n\nRelease 1.1.1 - 2018/01/10\n\n",
                    "rendered": {
                      "text": "\nRelease 1.1.2 - 2018/04/10\n\n  * out_s3: Fix memory leak when s3_object_key_format has time related placeholder\n\nRelease 1.1.1 - 2018/01/10\n\n",
                      "markdown": "`\nRelease 1.1.2 - 2018/04/10\n\n  * out_s3: Fix memory leak when s3_object_key_format has time related placeholder\n\nRelease 1.1.1 - 2018/01/10\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-s3.zip/ChangeLog"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 61,
                  "endLine": 94,
                  "snippet": {
                    "text": "\nRelease 1.1.6 - 2018/09/11\n\n  * in_s3: Add s3_endpoint parameter to support S3 compatible service\n\nRelease 1.1.5 - 2018/09/04\n\n  * out_s3: Improve check_apikeys performance by specifying `max_keys` parameter\n",
                    "rendered": {
                      "text": "\nRelease 1.1.6 - 2018/09/11\n\n  * in_s3: Add s3_endpoint parameter to support S3 compatible service\n\nRelease 1.1.5 - 2018/09/04\n\n  * out_s3: Improve check_apikeys performance by specifying `max_keys` parameter\n",
                      "markdown": "`\nRelease 1.1.6 - 2018/09/11\n\n  * in_s3: Add s3_endpoint parameter to support S3 compatible service\n\nRelease 1.1.5 - 2018/09/04\n\n  * out_s3: Improve check_apikeys performance by specifying `max_keys` parameter\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}