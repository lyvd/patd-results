{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 14,
                  "endLine": 20,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    end\n\n    config.vm.box = UBUNTU\n    config.vm.hostname = 'exa'\n\n\n    # Make sure we know the VM image’s default user name. The ‘cassowary’ user\n",
                    "rendered": {
                      "text": "    end\n\n    config.vm.box = UBUNTU\n    config.vm.hostname = 'exa'\n\n\n    # Make sure we know the VM image’s default user name. The ‘cassowary’ user\n",
                      "markdown": "`    end\n\n    config.vm.box = UBUNTU\n    config.vm.hostname = 'exa'\n\n\n    # Make sure we know the VM image’s default user name. The ‘cassowary’ user\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 7,
                  "endLine": 133,
                  "snippet": {
                    "text": "\n      # Link the completion files so they’re “installed”:\n\n      # bash\n      test -h /etc/bash_completion.d/exa \\\n        || ln -s /vagrant/contrib/completions.bash /etc/bash_completion.d/exa\n\n      # zsh\n",
                    "rendered": {
                      "text": "\n      # Link the completion files so they’re “installed”:\n\n      # bash\n      test -h /etc/bash_completion.d/exa \\\n        || ln -s /vagrant/contrib/completions.bash /etc/bash_completion.d/exa\n\n      # zsh\n",
                      "markdown": "`\n      # Link the completion files so they’re “installed”:\n\n      # bash\n      test -h /etc/bash_completion.d/exa \\\n        || ln -s /vagrant/contrib/completions.bash /etc/bash_completion.d/exa\n\n      # zsh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 12,
                  "endLine": 121,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n      chown #{developer} /home/#{developer}/.bash_profile\n\n",
                    "rendered": {
                      "text": "      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n      chown #{developer} /home/#{developer}/.bash_profile\n\n",
                      "markdown": "`      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n      chown #{developer} /home/#{developer}/.bash_profile\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 5,
                  "endLine": 119,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n      # Capture the help text so it gets displayed first\n      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n",
                    "rendered": {
                      "text": "\n      # Capture the help text so it gets displayed first\n      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n",
                      "markdown": "`\n      # Capture the help text so it gets displayed first\n      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 18,
                  "endLine": 40,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n\n",
                    "rendered": {
                      "text": "        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n\n",
                      "markdown": "`        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15,
                  "endLine": 37,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      else\n        trap 'exit' ERR\n        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n",
                    "rendered": {
                      "text": "      else\n        trap 'exit' ERR\n        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n",
                      "markdown": "`      else\n        trap 'exit' ERR\n        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 12,
                  "endLine": 155,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        test -e ~/.cargo/bin/cargo-kcov \\\n          || cargo install cargo-kcov\n\n        sudo apt-get install -qq -o=Dpkg::Use-Pty=0 -y \\\n          cmake g++ pkg-config \\\n          libcurl4-openssl-dev libdw-dev binutils-dev libiberty-dev\n\n",
                    "rendered": {
                      "text": "        test -e ~/.cargo/bin/cargo-kcov \\\n          || cargo install cargo-kcov\n\n        sudo apt-get install -qq -o=Dpkg::Use-Pty=0 -y \\\n          cmake g++ pkg-config \\\n          libcurl4-openssl-dev libdw-dev binutils-dev libiberty-dev\n\n",
                      "markdown": "`        test -e ~/.cargo/bin/cargo-kcov \\\n          || cargo install cargo-kcov\n\n        sudo apt-get install -qq -o=Dpkg::Use-Pty=0 -y \\\n          cmake g++ pkg-config \\\n          libcurl4-openssl-dev libdw-dev binutils-dev libiberty-dev\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 7,
                  "endLine": 137,
                  "snippet": {
                    "text": "      test -h /etc/bash_completion.d/exa \\\n        || ln -s /vagrant/contrib/completions.bash /etc/bash_completion.d/exa\n\n      # zsh\n      test -h /usr/share/zsh/vendor-completions/_exa \\\n        || ln -s /vagrant/contrib/completions.zsh /usr/share/zsh/vendor-completions/_exa\n\n      # fish\n",
                    "rendered": {
                      "text": "      test -h /etc/bash_completion.d/exa \\\n        || ln -s /vagrant/contrib/completions.bash /etc/bash_completion.d/exa\n\n      # zsh\n      test -h /usr/share/zsh/vendor-completions/_exa \\\n        || ln -s /vagrant/contrib/completions.zsh /usr/share/zsh/vendor-completions/_exa\n\n      # fish\n",
                      "markdown": "`      test -h /etc/bash_completion.d/exa \\\n        || ln -s /vagrant/contrib/completions.bash /etc/bash_completion.d/exa\n\n      # zsh\n      test -h /usr/share/zsh/vendor-completions/_exa \\\n        || ln -s /vagrant/contrib/completions.zsh /usr/share/zsh/vendor-completions/_exa\n\n      # fish\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 7,
                  "endLine": 133,
                  "snippet": {
                    "text": "\n      # Link the completion files so they’re “installed”:\n\n      # bash\n      test -h /etc/bash_completion.d/exa \\\n        || ln -s /vagrant/contrib/completions.bash /etc/bash_completion.d/exa\n\n      # zsh\n",
                    "rendered": {
                      "text": "\n      # Link the completion files so they’re “installed”:\n\n      # bash\n      test -h /etc/bash_completion.d/exa \\\n        || ln -s /vagrant/contrib/completions.bash /etc/bash_completion.d/exa\n\n      # zsh\n",
                      "markdown": "`\n      # Link the completion files so they’re “installed”:\n\n      # bash\n      test -h /etc/bash_completion.d/exa \\\n        || ln -s /vagrant/contrib/completions.bash /etc/bash_completion.d/exa\n\n      # zsh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 5,
                  "endLine": 127,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n      # Disable last login date in sshd\n      sed -i '/PrintLastLog yes/c\\PrintLastLog no' /etc/ssh/sshd_config\n      systemctl restart sshd\n\n\n      # Link the completion files so they’re “installed”:\n",
                    "rendered": {
                      "text": "\n      # Disable last login date in sshd\n      sed -i '/PrintLastLog yes/c\\PrintLastLog no' /etc/ssh/sshd_config\n      systemctl restart sshd\n\n\n      # Link the completion files so they’re “installed”:\n",
                      "markdown": "`\n      # Disable last login date in sshd\n      sed -i '/PrintLastLog yes/c\\PrintLastLog no' /etc/ssh/sshd_config\n      systemctl restart sshd\n\n\n      # Link the completion files so they’re “installed”:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 5,
                  "endLine": 126,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      chown #{developer} /home/#{developer}/.bash_profile\n\n      # Disable last login date in sshd\n      sed -i '/PrintLastLog yes/c\\PrintLastLog no' /etc/ssh/sshd_config\n      systemctl restart sshd\n\n\n",
                    "rendered": {
                      "text": "      chown #{developer} /home/#{developer}/.bash_profile\n\n      # Disable last login date in sshd\n      sed -i '/PrintLastLog yes/c\\PrintLastLog no' /etc/ssh/sshd_config\n      systemctl restart sshd\n\n\n",
                      "markdown": "`      chown #{developer} /home/#{developer}/.bash_profile\n\n      # Disable last login date in sshd\n      sed -i '/PrintLastLog yes/c\\PrintLastLog no' /etc/ssh/sshd_config\n      systemctl restart sshd\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 5,
                  "endLine": 123,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n      chown #{developer} /home/#{developer}/.bash_profile\n\n      # Disable last login date in sshd\n      sed -i '/PrintLastLog yes/c\\PrintLastLog no' /etc/ssh/sshd_config\n",
                    "rendered": {
                      "text": "\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n      chown #{developer} /home/#{developer}/.bash_profile\n\n      # Disable last login date in sshd\n      sed -i '/PrintLastLog yes/c\\PrintLastLog no' /etc/ssh/sshd_config\n",
                      "markdown": "`\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n      chown #{developer} /home/#{developer}/.bash_profile\n\n      # Disable last login date in sshd\n      sed -i '/PrintLastLog yes/c\\PrintLastLog no' /etc/ssh/sshd_config\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 12,
                  "endLine": 121,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n      chown #{developer} /home/#{developer}/.bash_profile\n\n",
                    "rendered": {
                      "text": "      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n      chown #{developer} /home/#{developer}/.bash_profile\n\n",
                      "markdown": "`      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n      chown #{developer} /home/#{developer}/.bash_profile\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 5,
                  "endLine": 119,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n      # Capture the help text so it gets displayed first\n      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n",
                    "rendered": {
                      "text": "\n      # Capture the help text so it gets displayed first\n      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n",
                      "markdown": "`\n      # Capture the help text so it gets displayed first\n      rm -f /etc/update-motd.d/*\n      bash /vagrant/devtools/dev-help.sh > /etc/motd\n\n      # Tell bash to execute a bunch of stuff when a session starts\n      echo \"source /vagrant/devtools/dev-bash.sh\" > /home/#{developer}/.bash_profile\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 5,
                  "endLine": 112,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      echo -e \"#!/bin/sh\\nbash /vagrant/devtools/dev-package-for-linux.sh \\\\$@\" > /usr/bin/package-exa\n      echo -e \"#!/bin/sh\\ncat /etc/motd\" > /usr/bin/halp\n\n      chmod +x /usr/bin/{exa,rexa,b,t,x,c,build-exa,test-exa,run-xtests,compile-exa,package-exa,halp}\n\n\n      # Configure the welcoming text that gets shown:\n",
                    "rendered": {
                      "text": "      echo -e \"#!/bin/sh\\nbash /vagrant/devtools/dev-package-for-linux.sh \\\\$@\" > /usr/bin/package-exa\n      echo -e \"#!/bin/sh\\ncat /etc/motd\" > /usr/bin/halp\n\n      chmod +x /usr/bin/{exa,rexa,b,t,x,c,build-exa,test-exa,run-xtests,compile-exa,package-exa,halp}\n\n\n      # Configure the welcoming text that gets shown:\n",
                      "markdown": "`      echo -e \"#!/bin/sh\\nbash /vagrant/devtools/dev-package-for-linux.sh \\\\$@\" > /usr/bin/package-exa\n      echo -e \"#!/bin/sh\\ncat /etc/motd\" > /usr/bin/halp\n\n      chmod +x /usr/bin/{exa,rexa,b,t,x,c,build-exa,test-exa,run-xtests,compile-exa,package-exa,halp}\n\n\n      # Configure the welcoming text that gets shown:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 7,
                  "endLine": 76,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        echo \"Installing just\"\n        wget -q \"https://github.com/casey/just/releases/download/v0.8.3/just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        tar -xf \"just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        cp just /usr/local/bin\n      fi\n\n      # Guarantee that the timezone is UTC — some of the tests\n",
                    "rendered": {
                      "text": "        echo \"Installing just\"\n        wget -q \"https://github.com/casey/just/releases/download/v0.8.3/just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        tar -xf \"just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        cp just /usr/local/bin\n      fi\n\n      # Guarantee that the timezone is UTC — some of the tests\n",
                      "markdown": "`        echo \"Installing just\"\n        wget -q \"https://github.com/casey/just/releases/download/v0.8.3/just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        tar -xf \"just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        cp just /usr/local/bin\n      fi\n\n      # Guarantee that the timezone is UTC — some of the tests\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 7,
                  "endLine": 75,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        trap 'exit' ERR\n        echo \"Installing just\"\n        wget -q \"https://github.com/casey/just/releases/download/v0.8.3/just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        tar -xf \"just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        cp just /usr/local/bin\n      fi\n\n",
                    "rendered": {
                      "text": "        trap 'exit' ERR\n        echo \"Installing just\"\n        wget -q \"https://github.com/casey/just/releases/download/v0.8.3/just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        tar -xf \"just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        cp just /usr/local/bin\n      fi\n\n",
                      "markdown": "`        trap 'exit' ERR\n        echo \"Installing just\"\n        wget -q \"https://github.com/casey/just/releases/download/v0.8.3/just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        tar -xf \"just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        cp just /usr/local/bin\n      fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 7,
                  "endLine": 74,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      else\n        trap 'exit' ERR\n        echo \"Installing just\"\n        wget -q \"https://github.com/casey/just/releases/download/v0.8.3/just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        tar -xf \"just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        cp just /usr/local/bin\n      fi\n",
                    "rendered": {
                      "text": "      else\n        trap 'exit' ERR\n        echo \"Installing just\"\n        wget -q \"https://github.com/casey/just/releases/download/v0.8.3/just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        tar -xf \"just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        cp just /usr/local/bin\n      fi\n",
                      "markdown": "`      else\n        trap 'exit' ERR\n        echo \"Installing just\"\n        wget -q \"https://github.com/casey/just/releases/download/v0.8.3/just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        tar -xf \"just-v0.8.3-x86_64-unknown-linux-musl.tar.gz\"\n        cp just /usr/local/bin\n      fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 7,
                  "endLine": 55,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      else\n        trap 'exit' ERR\n        echo \"Installing Rust\"\n        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile minimal --component rustc,rust-std,cargo,clippy -y > /dev/null\n        source $HOME/.cargo/env\n        echo \"Installing cargo-hack\"\n        cargo install -q cargo-hack\n",
                    "rendered": {
                      "text": "      else\n        trap 'exit' ERR\n        echo \"Installing Rust\"\n        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile minimal --component rustc,rust-std,cargo,clippy -y > /dev/null\n        source $HOME/.cargo/env\n        echo \"Installing cargo-hack\"\n        cargo install -q cargo-hack\n",
                      "markdown": "`      else\n        trap 'exit' ERR\n        echo \"Installing Rust\"\n        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile minimal --component rustc,rust-std,cargo,clippy -y > /dev/null\n        source $HOME/.cargo/env\n        echo \"Installing cargo-hack\"\n        cargo install -q cargo-hack\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 14,
                  "endLine": 40,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n\n",
                    "rendered": {
                      "text": "        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n\n",
                      "markdown": "`        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n",
                    "rendered": {
                      "text": "        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n",
                      "markdown": "`        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 9,
                  "endLine": 39,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n",
                    "rendered": {
                      "text": "        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n",
                      "markdown": "`        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n    EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 7,
                  "endLine": 38,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        trap 'exit' ERR\n        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n",
                    "rendered": {
                      "text": "        trap 'exit' ERR\n        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n",
                      "markdown": "`        trap 'exit' ERR\n        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n      fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 7,
                  "endLine": 37,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      else\n        trap 'exit' ERR\n        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n",
                    "rendered": {
                      "text": "      else\n        trap 'exit' ERR\n        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n",
                      "markdown": "`      else\n        trap 'exit' ERR\n        echo \"Installing tools\"\n        apt-get update -qq\n        apt-get install -qq -o=Dpkg::Use-Pty=0 \\\n          git gcc curl attr libgit2-dev zip \\\n          fish zsh bash bash-completion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Vagrantfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 5,
                  "endLine": 30,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\n    # Install the dependencies needed for exa to build, as quietly as\n    # apt can do.\n    config.vm.provision :shell, privileged: true, inline: <<-EOF\n      if hash fish &>/dev/null; then\n        echo \"Tools are already installed\"\n",
                    "rendered": {
                      "text": "\n\n    # Install the dependencies needed for exa to build, as quietly as\n    # apt can do.\n    config.vm.provision :shell, privileged: true, inline: <<-EOF\n      if hash fish &>/dev/null; then\n        echo \"Tools are already installed\"\n",
                      "markdown": "`\n\n    # Install the dependencies needed for exa to build, as quietly as\n    # apt can do.\n    config.vm.provision :shell, privileged: true, inline: <<-EOF\n      if hash fish &>/dev/null; then\n        echo \"Tools are already installed\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/details-view-dates.toml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 69,
                  "endLine": 20,
                  "endColumn": 75,
                  "snippet": {
                    "text": "tags = [ 'long', 'header', 'time' ]\n\n[[cmd]]\nname = \"‘exa -lh --time=accessed’ produces a table using the accessed time field\"\nshell = \"exa -lh --time=accessed /testcases/dates\"\nstdout = { file = \"outputs/dates_long_time_accessed.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'header', 'time' ]\n\n[[cmd]]\nname = \"‘exa -lh --time=accessed’ produces a table using the accessed time field\"\nshell = \"exa -lh --time=accessed /testcases/dates\"\nstdout = { file = \"outputs/dates_long_time_accessed.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'header', 'time' ]\n\n[[cmd]]\nname = \"‘exa -lh --time=accessed’ produces a table using the accessed time field\"\nshell = \"exa -lh --time=accessed /testcases/dates\"\nstdout = { file = \"outputs/dates_long_time_accessed.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/details-view-dates.toml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 69,
                  "endLine": 12,
                  "endColumn": 75,
                  "snippet": {
                    "text": "tags = [ 'long', 'header', 'time' ]\n\n[[cmd]]\nname = \"‘exa -lh --time=modified’ produces a table using the modified time field\"\nshell = \"exa -lh --time=modified /testcases/dates\"\nstdout = { file = \"outputs/dates_long_time_modified.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'header', 'time' ]\n\n[[cmd]]\nname = \"‘exa -lh --time=modified’ produces a table using the modified time field\"\nshell = \"exa -lh --time=modified /testcases/dates\"\nstdout = { file = \"outputs/dates_long_time_modified.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'header', 'time' ]\n\n[[cmd]]\nname = \"‘exa -lh --time=modified’ produces a table using the modified time field\"\nshell = \"exa -lh --time=modified /testcases/dates\"\nstdout = { file = \"outputs/dates_long_time_modified.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/details-view-dates.toml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 53,
                  "endLine": 4,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# various date fields\n\n[[cmd]]\nname = \"‘exa -lh’ produces a table using the modified time field\"\nshell = \"exa -lh /testcases/dates\"\nstdout = { file = \"outputs/dates_long_time_modified.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "# various date fields\n\n[[cmd]]\nname = \"‘exa -lh’ produces a table using the modified time field\"\nshell = \"exa -lh /testcases/dates\"\nstdout = { file = \"outputs/dates_long_time_modified.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`# various date fields\n\n[[cmd]]\nname = \"‘exa -lh’ produces a table using the modified time field\"\nshell = \"exa -lh /testcases/dates\"\nstdout = { file = \"outputs/dates_long_time_modified.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/sorting.toml"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 62,
                  "endLine": 114,
                  "endColumn": 66,
                  "snippet": {
                    "text": "tags = [ 'oneline', 'sort', 'dates' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=oldest -r’ sorts most recently modified at the bottom\"\nshell = \"exa -1 --sort=oldest -r /testcases/dates\"\nstdout = { string = \"pear\\npeach\\nplum\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'oneline', 'sort', 'dates' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=oldest -r’ sorts most recently modified at the bottom\"\nshell = \"exa -1 --sort=oldest -r /testcases/dates\"\nstdout = { string = \"pear\\npeach\\nplum\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'oneline', 'sort', 'dates' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=oldest -r’ sorts most recently modified at the bottom\"\nshell = \"exa -1 --sort=oldest -r /testcases/dates\"\nstdout = { string = \"pear\\npeach\\nplum\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/sorting.toml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 59,
                  "endLine": 106,
                  "endColumn": 63,
                  "snippet": {
                    "text": "tags = [ 'oneline', 'sort', 'dates', 'reverse' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=oldest’ sorts most recently modified at the top\"\nshell = \"exa -1 --sort=oldest /testcases/dates\"\nstdout = { string = \"plum\\npeach\\npear\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'oneline', 'sort', 'dates', 'reverse' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=oldest’ sorts most recently modified at the top\"\nshell = \"exa -1 --sort=oldest /testcases/dates\"\nstdout = { string = \"plum\\npeach\\npear\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'oneline', 'sort', 'dates', 'reverse' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=oldest’ sorts most recently modified at the top\"\nshell = \"exa -1 --sort=oldest /testcases/dates\"\nstdout = { string = \"plum\\npeach\\npear\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/sorting.toml"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 62,
                  "endLine": 98,
                  "endColumn": 66,
                  "snippet": {
                    "text": "tags = [ 'oneline', 'sort', 'dates' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=newest -r’ sorts most recently modified at the top\"\nshell = \"exa -1 --sort=newest -r /testcases/dates\"\nstdout = { string = \"plum\\npeach\\npear\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'oneline', 'sort', 'dates' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=newest -r’ sorts most recently modified at the top\"\nshell = \"exa -1 --sort=newest -r /testcases/dates\"\nstdout = { string = \"plum\\npeach\\npear\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'oneline', 'sort', 'dates' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=newest -r’ sorts most recently modified at the top\"\nshell = \"exa -1 --sort=newest -r /testcases/dates\"\nstdout = { string = \"plum\\npeach\\npear\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/sorting.toml"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 59,
                  "endLine": 90,
                  "endColumn": 63,
                  "snippet": {
                    "text": "tags = [ 'oneline', 'sort', 'dates', 'reverse' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=newest’ sorts most recently modified at the bottom\"\nshell = \"exa -1 --sort=newest /testcases/dates\"\nstdout = { string = \"pear\\npeach\\nplum\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'oneline', 'sort', 'dates', 'reverse' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=newest’ sorts most recently modified at the bottom\"\nshell = \"exa -1 --sort=newest /testcases/dates\"\nstdout = { string = \"pear\\npeach\\nplum\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'oneline', 'sort', 'dates', 'reverse' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=newest’ sorts most recently modified at the bottom\"\nshell = \"exa -1 --sort=newest /testcases/dates\"\nstdout = { string = \"pear\\npeach\\nplum\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/sorting.toml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 64,
                  "endLine": 82,
                  "endColumn": 68,
                  "snippet": {
                    "text": "tags = [ 'oneline', 'sort', 'dates' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=modified -r’ sorts most recently modified at the top\"\nshell = \"exa -1 --sort=modified -r /testcases/dates\"\nstdout = { string = \"plum\\npeach\\npear\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'oneline', 'sort', 'dates' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=modified -r’ sorts most recently modified at the top\"\nshell = \"exa -1 --sort=modified -r /testcases/dates\"\nstdout = { string = \"plum\\npeach\\npear\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'oneline', 'sort', 'dates' ]\n\n[[cmd]]\nname = \"‘exa -1 --sort=modified -r’ sorts most recently modified at the top\"\nshell = \"exa -1 --sort=modified -r /testcases/dates\"\nstdout = { string = \"plum\\npeach\\npear\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/sorting.toml"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 61,
                  "endLine": 74,
                  "endColumn": 65,
                  "snippet": {
                    "text": "# sorting by modified date\n\n[[cmd]]\nname = \"‘exa -1 --sort=modified’ sorts most recently modified at the bottom\"\nshell = \"exa -1 --sort=modified /testcases/dates\"\nstdout = { string = \"pear\\npeach\\nplum\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "# sorting by modified date\n\n[[cmd]]\nname = \"‘exa -1 --sort=modified’ sorts most recently modified at the bottom\"\nshell = \"exa -1 --sort=modified /testcases/dates\"\nstdout = { string = \"pear\\npeach\\nplum\" }\nstderr = { empty = true }\n",
                      "markdown": "`# sorting by modified date\n\n[[cmd]]\nname = \"‘exa -1 --sort=modified’ sorts most recently modified at the bottom\"\nshell = \"exa -1 --sort=modified /testcases/dates\"\nstdout = { string = \"pear\\npeach\\nplum\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/sorting.toml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 46,
                  "endLine": 60,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n# sorting by inode\n\n# We can’t guarantee inode numbers, but we can at least check that they’re in\n# order. The inode column is the leftmost one, so sort works for this.\n[[cmd]]\nname = \"‘exa -l --inode --sort=inode’ sorts by file inode\"\n",
                    "rendered": {
                      "text": "\n# sorting by inode\n\n# We can’t guarantee inode numbers, but we can at least check that they’re in\n# order. The inode column is the leftmost one, so sort works for this.\n[[cmd]]\nname = \"‘exa -l --inode --sort=inode’ sorts by file inode\"\n",
                      "markdown": "`\n# sorting by inode\n\n# We can’t guarantee inode numbers, but we can at least check that they’re in\n# order. The inode column is the leftmost one, so sort works for this.\n[[cmd]]\nname = \"‘exa -l --inode --sort=inode’ sorts by file inode\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/sorting.toml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 65,
                  "endLine": 64,
                  "endColumn": 71,
                  "snippet": {
                    "text": "# order. The inode column is the leftmost one, so sort works for this.\n[[cmd]]\nname = \"‘exa -l --inode --sort=inode’ sorts by file inode\"\nshell = \"exa -l --inode --sort=inode /testcases/file-names-exts | sort --check\"\nstdout = { empty = true }\nstderr = { empty = true }\nstatus = 0\n",
                    "rendered": {
                      "text": "# order. The inode column is the leftmost one, so sort works for this.\n[[cmd]]\nname = \"‘exa -l --inode --sort=inode’ sorts by file inode\"\nshell = \"exa -l --inode --sort=inode /testcases/file-names-exts | sort --check\"\nstdout = { empty = true }\nstderr = { empty = true }\nstatus = 0\n",
                      "markdown": "`# order. The inode column is the leftmost one, so sort works for this.\n[[cmd]]\nname = \"‘exa -l --inode --sort=inode’ sorts by file inode\"\nshell = \"exa -l --inode --sort=inode /testcases/file-names-exts | sort --check\"\nstdout = { empty = true }\nstderr = { empty = true }\nstatus = 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/sorting.toml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 49,
                  "endLine": 61,
                  "endColumn": 55,
                  "snippet": {
                    "text": "# sorting by inode\n\n# We can’t guarantee inode numbers, but we can at least check that they’re in\n# order. The inode column is the leftmost one, so sort works for this.\n[[cmd]]\nname = \"‘exa -l --inode --sort=inode’ sorts by file inode\"\nshell = \"exa -l --inode --sort=inode /testcases/file-names-exts | sort --check\"\n",
                    "rendered": {
                      "text": "# sorting by inode\n\n# We can’t guarantee inode numbers, but we can at least check that they’re in\n# order. The inode column is the leftmost one, so sort works for this.\n[[cmd]]\nname = \"‘exa -l --inode --sort=inode’ sorts by file inode\"\nshell = \"exa -l --inode --sort=inode /testcases/file-names-exts | sort --check\"\n",
                      "markdown": "`# sorting by inode\n\n# We can’t guarantee inode numbers, but we can at least check that they’re in\n# order. The inode column is the leftmost one, so sort works for this.\n[[cmd]]\nname = \"‘exa -l --inode --sort=inode’ sorts by file inode\"\nshell = \"exa -l --inode --sort=inode /testcases/file-names-exts | sort --check\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/theme/ui_styles.rs"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 10,
                  "endLine": 97,
                  "endColumn": 15,
                  "snippet": {
                    "text": "}\n\n#[derive(Clone, Copy, Debug, Default, PartialEq)]\npub struct Git {\n    pub new: Style,\n    pub modified: Style,\n    pub deleted: Style,\n",
                    "rendered": {
                      "text": "}\n\n#[derive(Clone, Copy, Debug, Default, PartialEq)]\npub struct Git {\n    pub new: Style,\n    pub modified: Style,\n    pub deleted: Style,\n",
                      "markdown": "`}\n\n#[derive(Clone, Copy, Debug, Default, PartialEq)]\npub struct Git {\n    pub new: Style,\n    pub modified: Style,\n    pub deleted: Style,\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/theme/default_theme.rs"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 16,
                  "endLine": 59,
                  "endColumn": 21,
                  "snippet": {
                    "text": "                multi_link_file: Red.on(Yellow),\n            },\n\n            git: Git {\n                new:         Green.normal(),\n                modified:    Blue.normal(),\n                deleted:     Red.normal(),\n",
                    "rendered": {
                      "text": "                multi_link_file: Red.on(Yellow),\n            },\n\n            git: Git {\n                new:         Green.normal(),\n                modified:    Blue.normal(),\n                deleted:     Red.normal(),\n",
                      "markdown": "`                multi_link_file: Red.on(Yellow),\n            },\n\n            git: Git {\n                new:         Green.normal(),\n                modified:    Blue.normal(),\n                deleted:     Red.normal(),\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/icons.rs"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 35,
                  "endLine": 99,
                  "endColumn": 40,
                  "snippet": {
                    "text": "pub fn icon_for_file(file: &File<'_>) -> char {\n    let extensions = Box::new(FileExtensions);\n\n    if let Some(icon) = MAP_BY_NAME.get(file.name.as_str()) { *icon }\n    else if file.points_to_directory() {\n        match file.name.as_str() {\n            \"bin\"           => '\\u{e5fc}', // \n",
                    "rendered": {
                      "text": "pub fn icon_for_file(file: &File<'_>) -> char {\n    let extensions = Box::new(FileExtensions);\n\n    if let Some(icon) = MAP_BY_NAME.get(file.name.as_str()) { *icon }\n    else if file.points_to_directory() {\n        match file.name.as_str() {\n            \"bin\"           => '\\u{e5fc}', // \n",
                      "markdown": "`pub fn icon_for_file(file: &File<'_>) -> char {\n    let extensions = Box::new(FileExtensions);\n\n    if let Some(icon) = MAP_BY_NAME.get(file.name.as_str()) { *icon }\n    else if file.points_to_directory() {\n        match file.name.as_str() {\n            \"bin\"           => '\\u{e5fc}', // \n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/fields.rs"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 16,
                  "endLine": 252,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    pub unstaged: GitStatus,\n}\n\nimpl Default for Git {\n\n    /// Create a Git status for a file with nothing done to it.\n    fn default() -> Self {\n",
                    "rendered": {
                      "text": "    pub unstaged: GitStatus,\n}\n\nimpl Default for Git {\n\n    /// Create a Git status for a file with nothing done to it.\n    fn default() -> Self {\n",
                      "markdown": "`    pub unstaged: GitStatus,\n}\n\nimpl Default for Git {\n\n    /// Create a Git status for a file with nothing done to it.\n    fn default() -> Self {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/fields.rs"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 10,
                  "endLine": 247,
                  "endColumn": 15,
                  "snippet": {
                    "text": "/// it to the staging area, then make *more* changes, so we need to list each\n/// file’s status for both of these.\n#[derive(Copy, Clone)]\npub struct Git {\n    pub staged:   GitStatus,\n    pub unstaged: GitStatus,\n}\n",
                    "rendered": {
                      "text": "/// it to the staging area, then make *more* changes, so we need to list each\n/// file’s status for both of these.\n#[derive(Copy, Clone)]\npub struct Git {\n    pub staged:   GitStatus,\n    pub unstaged: GitStatus,\n}\n",
                      "markdown": "`/// it to the staging area, then make *more* changes, so we need to list each\n/// file’s status for both of these.\n#[derive(Copy, Clone)]\npub struct Git {\n    pub staged:   GitStatus,\n    pub unstaged: GitStatus,\n}\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/fields.rs"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 10,
                  "endLine": 204,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n/// One of a file’s timestamps (created, accessed, or modified).\n#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\npub struct Time {\n    pub seconds: time_t,\n    pub nanoseconds: time_t,\n}\n",
                    "rendered": {
                      "text": "\n/// One of a file’s timestamps (created, accessed, or modified).\n#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\npub struct Time {\n    pub seconds: time_t,\n    pub nanoseconds: time_t,\n}\n",
                      "markdown": "`\n/// One of a file’s timestamps (created, accessed, or modified).\n#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\npub struct Time {\n    pub seconds: time_t,\n    pub nanoseconds: time_t,\n}\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/main.rs"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 109,
                  "endLine": 323,
                  "endColumn": 114,
                  "snippet": {
                    "text": "                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n        }\n",
                    "rendered": {
                      "text": "                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n        }\n",
                      "markdown": "`                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n        }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/main.rs"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 19,
                  "endLine": 322,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                let recurse = self.options.dir_action.recurse_options();\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n",
                    "rendered": {
                      "text": "                let recurse = self.options.dir_action.recurse_options();\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n",
                      "markdown": "`                let recurse = self.options.dir_action.recurse_options();\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/main.rs"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 19,
                  "endLine": 310,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n                let filter = &self.options.filter;\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n                let git = self.git.as_ref();\n\n                let r = grid_details::Render { dir, files, theme, file_style, grid, details, filter, row_threshold, git_ignoring, git, console_width };\n                r.render(&mut self.writer)\n",
                    "rendered": {
                      "text": "\n                let filter = &self.options.filter;\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n                let git = self.git.as_ref();\n\n                let r = grid_details::Render { dir, files, theme, file_style, grid, details, filter, row_threshold, git_ignoring, git, console_width };\n                r.render(&mut self.writer)\n",
                      "markdown": "`\n                let filter = &self.options.filter;\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n                let git = self.git.as_ref();\n\n                let r = grid_details::Render { dir, files, theme, file_style, grid, details, filter, row_threshold, git_ignoring, git, console_width };\n                r.render(&mut self.writer)\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/main.rs"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 109,
                  "endLine": 299,
                  "endColumn": 114,
                  "snippet": {
                    "text": "\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n\n",
                    "rendered": {
                      "text": "\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n\n",
                      "markdown": "`\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/main.rs"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 19,
                  "endLine": 298,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                let recurse = self.options.dir_action.recurse_options();\n\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n",
                    "rendered": {
                      "text": "                let recurse = self.options.dir_action.recurse_options();\n\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n",
                      "markdown": "`                let recurse = self.options.dir_action.recurse_options();\n\n                let git_ignoring = self.options.filter.git_ignore == GitIgnore::CheckAndIgnore;\n                let git = self.git.as_ref();\n                let r = details::Render { dir, files, theme, file_style, opts, recurse, filter, git_ignoring, git };\n                r.render(&mut self.writer)\n            }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/main.rs"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 79,
                  "endLine": 79,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\n            let console_width = options.view.width.actual_terminal_width();\n            let theme = options.theme.to_theme(console_width.is_some());\n            let exa = Exa { options, writer, input_paths, theme, console_width, git };\n\n            match exa.run() {\n                Ok(exit_status) => {\n",
                    "rendered": {
                      "text": "\n            let console_width = options.view.width.actual_terminal_width();\n            let theme = options.theme.to_theme(console_width.is_some());\n            let exa = Exa { options, writer, input_paths, theme, console_width, git };\n\n            match exa.run() {\n                Ok(exit_status) => {\n",
                      "markdown": "`\n            let console_width = options.view.width.actual_terminal_width();\n            let theme = options.theme.to_theme(console_width.is_some());\n            let exa = Exa { options, writer, input_paths, theme, console_width, git };\n\n            match exa.run() {\n                Ok(exit_status) => {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/main.rs"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 15,
                  "endLine": 74,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                input_paths = vec![ OsStr::new(\".\") ];\n            }\n\n            let git = git_options(&options, &input_paths);\n            let writer = io::stdout();\n\n            let console_width = options.view.width.actual_terminal_width();\n",
                    "rendered": {
                      "text": "                input_paths = vec![ OsStr::new(\".\") ];\n            }\n\n            let git = git_options(&options, &input_paths);\n            let writer = io::stdout();\n\n            let console_width = options.view.width.actual_terminal_width();\n",
                      "markdown": "`                input_paths = vec![ OsStr::new(\".\") ];\n            }\n\n            let git = git_options(&options, &input_paths);\n            let writer = io::stdout();\n\n            let console_width = options.view.width.actual_terminal_width();\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/dir_action.rs"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 36,
                  "endLine": 58,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    /// determined earlier. The maximum level should be a number, and this\n    /// will fail with an `Err` if it isn’t.\n    pub fn deduce(matches: &MatchedFlags<'_>, tree: bool) -> Result<Self, OptionsError> {\n        if let Some(level) = matches.get(&flags::LEVEL)? {\n            let arg_str = level.to_string_lossy();\n            match arg_str.parse() {\n                Ok(l) => {\n",
                    "rendered": {
                      "text": "    /// determined earlier. The maximum level should be a number, and this\n    /// will fail with an `Err` if it isn’t.\n    pub fn deduce(matches: &MatchedFlags<'_>, tree: bool) -> Result<Self, OptionsError> {\n        if let Some(level) = matches.get(&flags::LEVEL)? {\n            let arg_str = level.to_string_lossy();\n            match arg_str.parse() {\n                Ok(l) => {\n",
                      "markdown": "`    /// determined earlier. The maximum level should be a number, and this\n    /// will fail with an `Err` if it isn’t.\n    pub fn deduce(matches: &MatchedFlags<'_>, tree: bool) -> Result<Self, OptionsError> {\n        if let Some(level) = matches.get(&flags::LEVEL)? {\n            let arg_str = level.to_string_lossy();\n            match arg_str.parse() {\n                Ok(l) => {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/error.rs"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 24,
                  "endLine": 111,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                Some(\"To sort oldest files last, try \\\"--sort oldest\\\", or just \\\"-sold\\\"\")\n            }\n            Self::Parse(ParseError::NeedsValue { ref flag, .. }) if *flag == Flag::Short(b't') => {\n                Some(\"To sort newest files last, try \\\"--sort newest\\\", or just \\\"-snew\\\"\")\n            }\n            _ => {\n                None\n",
                    "rendered": {
                      "text": "                Some(\"To sort oldest files last, try \\\"--sort oldest\\\", or just \\\"-sold\\\"\")\n            }\n            Self::Parse(ParseError::NeedsValue { ref flag, .. }) if *flag == Flag::Short(b't') => {\n                Some(\"To sort newest files last, try \\\"--sort newest\\\", or just \\\"-snew\\\"\")\n            }\n            _ => {\n                None\n",
                      "markdown": "`                Some(\"To sort oldest files last, try \\\"--sort oldest\\\", or just \\\"-sold\\\"\")\n            }\n            Self::Parse(ParseError::NeedsValue { ref flag, .. }) if *flag == Flag::Short(b't') => {\n                Some(\"To sort newest files last, try \\\"--sort newest\\\", or just \\\"-snew\\\"\")\n            }\n            _ => {\n                None\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/error.rs"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 24,
                  "endLine": 108,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        // ‘ls -lt’ and ‘ls -ltr’ are common combinations\n        match self {\n            Self::BadArgument(time, r) if *time == &flags::TIME && r == \"r\" => {\n                Some(\"To sort oldest files last, try \\\"--sort oldest\\\", or just \\\"-sold\\\"\")\n            }\n            Self::Parse(ParseError::NeedsValue { ref flag, .. }) if *flag == Flag::Short(b't') => {\n                Some(\"To sort newest files last, try \\\"--sort newest\\\", or just \\\"-snew\\\"\")\n",
                    "rendered": {
                      "text": "        // ‘ls -lt’ and ‘ls -ltr’ are common combinations\n        match self {\n            Self::BadArgument(time, r) if *time == &flags::TIME && r == \"r\" => {\n                Some(\"To sort oldest files last, try \\\"--sort oldest\\\", or just \\\"-sold\\\"\")\n            }\n            Self::Parse(ParseError::NeedsValue { ref flag, .. }) if *flag == Flag::Short(b't') => {\n                Some(\"To sort newest files last, try \\\"--sort newest\\\", or just \\\"-snew\\\"\")\n",
                      "markdown": "`        // ‘ls -lt’ and ‘ls -ltr’ are common combinations\n        match self {\n            Self::BadArgument(time, r) if *time == &flags::TIME && r == \"r\" => {\n                Some(\"To sort oldest files last, try \\\"--sort oldest\\\", or just \\\"-sold\\\"\")\n            }\n            Self::Parse(ParseError::NeedsValue { ref flag, .. }) if *flag == Flag::Short(b't') => {\n                Some(\"To sort newest files last, try \\\"--sort newest\\\", or just \\\"-snew\\\"\")\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/view.rs"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 35,
                  "endLine": 297,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    /// option, but passing *no* options means that the user just wants to\n    /// see the default set.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let possible_word = matches.get(&flags::TIME)?;\n        let modified = matches.has(&flags::MODIFIED)?;\n        let changed  = matches.has(&flags::CHANGED)?;\n        let accessed = matches.has(&flags::ACCESSED)?;\n",
                    "rendered": {
                      "text": "    /// option, but passing *no* options means that the user just wants to\n    /// see the default set.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let possible_word = matches.get(&flags::TIME)?;\n        let modified = matches.has(&flags::MODIFIED)?;\n        let changed  = matches.has(&flags::CHANGED)?;\n        let accessed = matches.has(&flags::ACCESSED)?;\n",
                      "markdown": "`    /// option, but passing *no* options means that the user just wants to\n    /// see the default set.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let possible_word = matches.get(&flags::TIME)?;\n        let modified = matches.has(&flags::MODIFIED)?;\n        let changed  = matches.has(&flags::CHANGED)?;\n        let accessed = matches.has(&flags::ACCESSED)?;\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/view.rs"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 26,
                  "endLine": 251,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            }\n            else {\n                use crate::options::vars;\n                match vars.get(vars::TIME_STYLE) {\n                    Some(ref t) if ! t.is_empty()  => t.clone(),\n                    _                              => return Ok(Self::DefaultFormat)\n                }\n",
                    "rendered": {
                      "text": "            }\n            else {\n                use crate::options::vars;\n                match vars.get(vars::TIME_STYLE) {\n                    Some(ref t) if ! t.is_empty()  => t.clone(),\n                    _                              => return Ok(Self::DefaultFormat)\n                }\n",
                      "markdown": "`            }\n            else {\n                use crate::options::vars;\n                match vars.get(vars::TIME_STYLE) {\n                    Some(ref t) if ! t.is_empty()  => t.clone(),\n                    _                              => return Ok(Self::DefaultFormat)\n                }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/view.rs"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 36,
                  "endLine": 246,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    /// Determine how time should be formatted in timestamp columns.\n    fn deduce<V: Vars>(matches: &MatchedFlags<'_>, vars: &V) -> Result<Self, OptionsError> {\n        let word =\n            if let Some(w) = matches.get(&flags::TIME_STYLE)? {\n                w.to_os_string()\n            }\n            else {\n",
                    "rendered": {
                      "text": "    /// Determine how time should be formatted in timestamp columns.\n    fn deduce<V: Vars>(matches: &MatchedFlags<'_>, vars: &V) -> Result<Self, OptionsError> {\n        let word =\n            if let Some(w) = matches.get(&flags::TIME_STYLE)? {\n                w.to_os_string()\n            }\n            else {\n",
                      "markdown": "`    /// Determine how time should be formatted in timestamp columns.\n    fn deduce<V: Vars>(matches: &MatchedFlags<'_>, vars: &V) -> Result<Self, OptionsError> {\n        let word =\n            if let Some(w) = matches.get(&flags::TIME_STYLE)? {\n                w.to_os_string()\n            }\n            else {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/view.rs"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 35,
                  "endLine": 170,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    fn deduce<V: Vars>(vars: &V) -> Result<Self, OptionsError> {\n        use crate::options::vars;\n\n        if let Some(columns) = vars.get(vars::EXA_GRID_ROWS).and_then(|s| s.into_string().ok()) {\n            match columns.parse() {\n                Ok(rows) => {\n                    Ok(Self::MinimumRows(rows))\n",
                    "rendered": {
                      "text": "    fn deduce<V: Vars>(vars: &V) -> Result<Self, OptionsError> {\n        use crate::options::vars;\n\n        if let Some(columns) = vars.get(vars::EXA_GRID_ROWS).and_then(|s| s.into_string().ok()) {\n            match columns.parse() {\n                Ok(rows) => {\n                    Ok(Self::MinimumRows(rows))\n",
                      "markdown": "`    fn deduce<V: Vars>(vars: &V) -> Result<Self, OptionsError> {\n        use crate::options::vars;\n\n        if let Some(columns) = vars.get(vars::EXA_GRID_ROWS).and_then(|s| s.into_string().ok()) {\n            match columns.parse() {\n                Ok(rows) => {\n                    Ok(Self::MinimumRows(rows))\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/view.rs"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 35,
                  "endLine": 148,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    fn deduce<V: Vars>(vars: &V) -> Result<Self, OptionsError> {\n        use crate::options::vars;\n\n        if let Some(columns) = vars.get(vars::COLUMNS).and_then(|s| s.into_string().ok()) {\n            match columns.parse() {\n                Ok(width) => {\n                    Ok(Self::Set(width))\n",
                    "rendered": {
                      "text": "    fn deduce<V: Vars>(vars: &V) -> Result<Self, OptionsError> {\n        use crate::options::vars;\n\n        if let Some(columns) = vars.get(vars::COLUMNS).and_then(|s| s.into_string().ok()) {\n            match columns.parse() {\n                Ok(width) => {\n                    Ok(Self::Set(width))\n",
                      "markdown": "`    fn deduce<V: Vars>(vars: &V) -> Result<Self, OptionsError> {\n        use crate::options::vars;\n\n        if let Some(columns) = vars.get(vars::COLUMNS).and_then(|s| s.into_string().ok()) {\n            match columns.parse() {\n                Ok(width) => {\n                    Ok(Self::Set(width))\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/view.rs"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 35,
                  "endLine": 286,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\nimpl TimeTypes {\n\n    /// Determine which of a file’s time fields should be displayed for it\n    /// based on the user’s options.\n    ///\n    /// There are two separate ways to pick which fields to show: with a\n",
                    "rendered": {
                      "text": "\nimpl TimeTypes {\n\n    /// Determine which of a file’s time fields should be displayed for it\n    /// based on the user’s options.\n    ///\n    /// There are two separate ways to pick which fields to show: with a\n",
                      "markdown": "`\nimpl TimeTypes {\n\n    /// Determine which of a file’s time fields should be displayed for it\n    /// based on the user’s options.\n    ///\n    /// There are two separate ways to pick which fields to show: with a\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/view.rs"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 21,
                  "endLine": 243,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nimpl TimeFormat {\n\n    /// Determine how time should be formatted in timestamp columns.\n    fn deduce<V: Vars>(matches: &MatchedFlags<'_>, vars: &V) -> Result<Self, OptionsError> {\n        let word =\n            if let Some(w) = matches.get(&flags::TIME_STYLE)? {\n",
                    "rendered": {
                      "text": "\nimpl TimeFormat {\n\n    /// Determine how time should be formatted in timestamp columns.\n    fn deduce<V: Vars>(matches: &MatchedFlags<'_>, vars: &V) -> Result<Self, OptionsError> {\n        let word =\n            if let Some(w) = matches.get(&flags::TIME_STYLE)? {\n",
                      "markdown": "`\nimpl TimeFormat {\n\n    /// Determine how time should be formatted in timestamp columns.\n    fn deduce<V: Vars>(matches: &MatchedFlags<'_>, vars: &V) -> Result<Self, OptionsError> {\n        let word =\n            if let Some(w) = matches.get(&flags::TIME_STYLE)? {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/view.rs"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 11,
                  "endLine": 202,
                  "endColumn": 16,
                  "snippet": {
                    "text": "impl Columns {\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let time_types = TimeTypes::deduce(matches)?;\n        let git = matches.has(&flags::GIT)?;\n\n        let blocks = matches.has(&flags::BLOCKS)?;\n        let group  = matches.has(&flags::GROUP)?;\n",
                    "rendered": {
                      "text": "impl Columns {\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let time_types = TimeTypes::deduce(matches)?;\n        let git = matches.has(&flags::GIT)?;\n\n        let blocks = matches.has(&flags::BLOCKS)?;\n        let group  = matches.has(&flags::GROUP)?;\n",
                      "markdown": "`impl Columns {\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let time_types = TimeTypes::deduce(matches)?;\n        let git = matches.has(&flags::GIT)?;\n\n        let blocks = matches.has(&flags::BLOCKS)?;\n        let group  = matches.has(&flags::GROUP)?;\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/mod.rs"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 35,
                  "endLine": 136,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    {\n        use crate::options::parser::{Matches, Strictness};\n\n        let strictness = match vars.get(vars::EXA_STRICT) {\n            None                         => Strictness::UseLastArguments,\n            Some(ref t) if t.is_empty()  => Strictness::UseLastArguments,\n            Some(_)                      => Strictness::ComplainAboutRedundantArguments,\n",
                    "rendered": {
                      "text": "    {\n        use crate::options::parser::{Matches, Strictness};\n\n        let strictness = match vars.get(vars::EXA_STRICT) {\n            None                         => Strictness::UseLastArguments,\n            Some(ref t) if t.is_empty()  => Strictness::UseLastArguments,\n            Some(_)                      => Strictness::ComplainAboutRedundantArguments,\n",
                      "markdown": "`    {\n        use crate::options::parser::{Matches, Strictness};\n\n        let strictness = match vars.get(vars::EXA_STRICT) {\n            None                         => Strictness::UseLastArguments,\n            Some(ref t) if t.is_empty()  => Strictness::UseLastArguments,\n            Some(_)                      => Strictness::ComplainAboutRedundantArguments,\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/mod.rs"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 33,
                  "endLine": 20,
                  "endColumn": 37,
                  "snippet": {
                    "text": "//! For a long time, exa’s philosophy was that the user should be warned\n//! whenever they could be mistaken like this. If you tell exa to display the\n//! inode, and it *doesn’t* display the inode, isn’t that more annoying than\n//! having it throw an error back at you?\n//!\n//! However, this doesn’t take into account *configuration*. Say a user wants\n//! to configure exa so that it lists inodes in the details view, but otherwise\n",
                    "rendered": {
                      "text": "//! For a long time, exa’s philosophy was that the user should be warned\n//! whenever they could be mistaken like this. If you tell exa to display the\n//! inode, and it *doesn’t* display the inode, isn’t that more annoying than\n//! having it throw an error back at you?\n//!\n//! However, this doesn’t take into account *configuration*. Say a user wants\n//! to configure exa so that it lists inodes in the details view, but otherwise\n",
                      "markdown": "`//! For a long time, exa’s philosophy was that the user should be warned\n//! whenever they could be mistaken like this. If you tell exa to display the\n//! inode, and it *doesn’t* display the inode, isn’t that more annoying than\n//! having it throw an error back at you?\n//!\n//! However, this doesn’t take into account *configuration*. Say a user wants\n//! to configure exa so that it lists inodes in the details view, but otherwise\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/mod.rs"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 14,
                  "endLine": 111,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    /// regular file.\n    pub dir_action: DirAction,\n\n    /// How to sort and filter files before outputting them.\n    pub filter: FileFilter,\n\n    /// The user’s preference of view to use (lines, grid, details, or\n",
                    "rendered": {
                      "text": "    /// regular file.\n    pub dir_action: DirAction,\n\n    /// How to sort and filter files before outputting them.\n    pub filter: FileFilter,\n\n    /// The user’s preference of view to use (lines, grid, details, or\n",
                      "markdown": "`    /// regular file.\n    pub dir_action: DirAction,\n\n    /// How to sort and filter files before outputting them.\n    pub filter: FileFilter,\n\n    /// The user’s preference of view to use (lines, grid, details, or\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/mod.rs"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 41,
                  "endLine": 54,
                  "endColumn": 47,
                  "snippet": {
                    "text": "//! alias and which came from the actual command-line: aliased options are\n//! nearer the beginning of the options array, and command-line options are\n//! nearer the end. This means that after the options have been parsed, exa\n//! needs to traverse them *backwards* to find the last-most-specified one.\n//!\n//! For example, invoking exa with `exa --sort=size` when that alias is present\n//! would result in a full command-line of:\n",
                    "rendered": {
                      "text": "//! alias and which came from the actual command-line: aliased options are\n//! nearer the beginning of the options array, and command-line options are\n//! nearer the end. This means that after the options have been parsed, exa\n//! needs to traverse them *backwards* to find the last-most-specified one.\n//!\n//! For example, invoking exa with `exa --sort=size` when that alias is present\n//! would result in a full command-line of:\n",
                      "markdown": "`//! alias and which came from the actual command-line: aliased options are\n//! nearer the beginning of the options array, and command-line options are\n//! nearer the end. This means that after the options have been parsed, exa\n//! needs to traverse them *backwards* to find the last-most-specified one.\n//!\n//! For example, invoking exa with `exa --sort=size` when that alias is present\n//! would result in a full command-line of:\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/mod.rs"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 67,
                  "endLine": 46,
                  "endColumn": 73,
                  "snippet": {
                    "text": "//!\n//! `alias exa=\"exa --sort=Name\"`\n//!\n//! Just like the earlier example, the user now can’t use any other sort order,\n//! because exa refuses to guess which one they meant. It’s *more* annoying to\n//! have to go back and edit the command than if there were no error.\n//!\n",
                    "rendered": {
                      "text": "//!\n//! `alias exa=\"exa --sort=Name\"`\n//!\n//! Just like the earlier example, the user now can’t use any other sort order,\n//! because exa refuses to guess which one they meant. It’s *more* annoying to\n//! have to go back and edit the command than if there were no error.\n//!\n",
                      "markdown": "`//!\n//! `alias exa=\"exa --sort=Name\"`\n//!\n//! Just like the earlier example, the user now can’t use any other sort order,\n//! because exa refuses to guess which one they meant. It’s *more* annoying to\n//! have to go back and edit the command than if there were no error.\n//!\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/help.rs"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 71,
                  "endLine": 65,
                  "endColumn": 76,
                  "snippet": {
                    "text": "  --no-time            suppress the time field\";\n\nstatic GIT_FILTER_HELP: &str = \"  --git-ignore               ignore files mentioned in '.gitignore'\";\nstatic GIT_VIEW_HELP:   &str = \"  --git                list each file's Git status, if tracked or ignored\";\nstatic EXTENDED_HELP:   &str = \"  -@, --extended       list each file's extended attributes and sizes\";\n\n\n",
                    "rendered": {
                      "text": "  --no-time            suppress the time field\";\n\nstatic GIT_FILTER_HELP: &str = \"  --git-ignore               ignore files mentioned in '.gitignore'\";\nstatic GIT_VIEW_HELP:   &str = \"  --git                list each file's Git status, if tracked or ignored\";\nstatic EXTENDED_HELP:   &str = \"  -@, --extended       list each file's extended attributes and sizes\";\n\n\n",
                      "markdown": "`  --no-time            suppress the time field\";\n\nstatic GIT_FILTER_HELP: &str = \"  --git-ignore               ignore files mentioned in '.gitignore'\";\nstatic GIT_VIEW_HELP:   &str = \"  --git                list each file's Git status, if tracked or ignored\";\nstatic EXTENDED_HELP:   &str = \"  -@, --extended       list each file's extended attributes and sizes\";\n\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/help.rs"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 35,
                  "endLine": 62,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  --octal-permissions  list each file's permission in octal format\n  --no-filesize        suppress the filesize field\n  --no-user            suppress the user field\n  --no-time            suppress the time field\";\n\nstatic GIT_FILTER_HELP: &str = \"  --git-ignore               ignore files mentioned in '.gitignore'\";\nstatic GIT_VIEW_HELP:   &str = \"  --git                list each file's Git status, if tracked or ignored\";\n",
                    "rendered": {
                      "text": "  --octal-permissions  list each file's permission in octal format\n  --no-filesize        suppress the filesize field\n  --no-user            suppress the user field\n  --no-time            suppress the time field\";\n\nstatic GIT_FILTER_HELP: &str = \"  --git-ignore               ignore files mentioned in '.gitignore'\";\nstatic GIT_VIEW_HELP:   &str = \"  --git                list each file's Git status, if tracked or ignored\";\n",
                      "markdown": "`  --octal-permissions  list each file's permission in octal format\n  --no-filesize        suppress the filesize field\n  --no-user            suppress the user field\n  --no-time            suppress the time field\";\n\nstatic GIT_FILTER_HELP: &str = \"  --git-ignore               ignore files mentioned in '.gitignore'\";\nstatic GIT_VIEW_HELP:   &str = \"  --git                list each file's Git status, if tracked or ignored\";\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/help.rs"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7,
                  "endLine": 39,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\";\n\n  static USAGE_PART2: &str = \"  \\\n  Valid sort fields:         name, Name, extension, Extension, size, type,\n                             modified, accessed, created, inode, and none.\n                             date, time, old, and new all refer to modified.\n\n",
                    "rendered": {
                      "text": "  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\";\n\n  static USAGE_PART2: &str = \"  \\\n  Valid sort fields:         name, Name, extension, Extension, size, type,\n                             modified, accessed, created, inode, and none.\n                             date, time, old, and new all refer to modified.\n\n",
                      "markdown": "`  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\";\n\n  static USAGE_PART2: &str = \"  \\\n  Valid sort fields:         name, Name, extension, Extension, size, type,\n                             modified, accessed, created, inode, and none.\n                             date, time, old, and new all refer to modified.\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/help.rs"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 43,
                  "endLine": 33,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\";\n",
                    "rendered": {
                      "text": "  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\";\n",
                      "markdown": "`  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\";\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/help.rs"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 40,
                  "endLine": 32,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  -a, --all                  show hidden and 'dot' files\n  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n",
                    "rendered": {
                      "text": "  -a, --all                  show hidden and 'dot' files\n  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n",
                      "markdown": "`  -a, --all                  show hidden and 'dot' files\n  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/help.rs"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 20,
                  "endLine": 19,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  -1, --oneline      display one entry per line\n  -l, --long         display extended file metadata as a table\n  -G, --grid         display entries as a grid (default)\n  -x, --across       sort the grid across, rather than downwards\n  -R, --recurse      recurse into directories\n  -T, --tree         recurse into directories as a tree\n  -F, --classify     display type indicator by file names\n",
                    "rendered": {
                      "text": "  -1, --oneline      display one entry per line\n  -l, --long         display extended file metadata as a table\n  -G, --grid         display entries as a grid (default)\n  -x, --across       sort the grid across, rather than downwards\n  -R, --recurse      recurse into directories\n  -T, --tree         recurse into directories as a tree\n  -F, --classify     display type indicator by file names\n",
                      "markdown": "`  -1, --oneline      display one entry per line\n  -l, --long         display extended file metadata as a table\n  -G, --grid         display entries as a grid (default)\n  -x, --across       sort the grid across, rather than downwards\n  -R, --recurse      recurse into directories\n  -T, --tree         recurse into directories as a tree\n  -F, --classify     display type indicator by file names\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/filter.rs"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 34,
                  "endLine": 188,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n        // If there are no inputs, we return a set of patterns that doesn’t\n        // match anything, rather than, say, `None`.\n        let inputs = match matches.get(&flags::IGNORE_GLOB)? {\n            Some(is)  => is,\n            None      => return Ok(Self::empty()),\n        };\n",
                    "rendered": {
                      "text": "\n        // If there are no inputs, we return a set of patterns that doesn’t\n        // match anything, rather than, say, `None`.\n        let inputs = match matches.get(&flags::IGNORE_GLOB)? {\n            Some(is)  => is,\n            None      => return Ok(Self::empty()),\n        };\n",
                      "markdown": "`\n        // If there are no inputs, we return a set of patterns that doesn’t\n        // match anything, rather than, say, `None`.\n        let inputs = match matches.get(&flags::IGNORE_GLOB)? {\n            Some(is)  => is,\n            None      => return Ok(Self::empty()),\n        };\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/filter.rs"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 32,
                  "endLine": 33,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let word = match matches.get(&flags::SORT)? {\n            Some(w)  => w,\n            None     => return Ok(Self::default()),\n        };\n",
                    "rendered": {
                      "text": "    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let word = match matches.get(&flags::SORT)? {\n            Some(w)  => w,\n            None     => return Ok(Self::default()),\n        };\n",
                      "markdown": "`    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let word = match matches.get(&flags::SORT)? {\n            Some(w)  => w,\n            None     => return Ok(Self::default()),\n        };\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/filter.rs"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 37,
                  "endLine": 31,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    /// Determines which sort field to use based on the `--sort` argument.\n    /// This argument’s value can be one of several flags, listed above.\n    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let word = match matches.get(&flags::SORT)? {\n            Some(w)  => w,\n",
                    "rendered": {
                      "text": "    /// Determines which sort field to use based on the `--sort` argument.\n    /// This argument’s value can be one of several flags, listed above.\n    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let word = match matches.get(&flags::SORT)? {\n            Some(w)  => w,\n",
                      "markdown": "`    /// Determines which sort field to use based on the `--sort` argument.\n    /// This argument’s value can be one of several flags, listed above.\n    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let word = match matches.get(&flags::SORT)? {\n            Some(w)  => w,\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/filter.rs"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 27,
                  "endLine": 30,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    /// Determines which sort field to use based on the `--sort` argument.\n    /// This argument’s value can be one of several flags, listed above.\n    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let word = match matches.get(&flags::SORT)? {\n",
                    "rendered": {
                      "text": "\n    /// Determines which sort field to use based on the `--sort` argument.\n    /// This argument’s value can be one of several flags, listed above.\n    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let word = match matches.get(&flags::SORT)? {\n",
                      "markdown": "`\n    /// Determines which sort field to use based on the `--sort` argument.\n    /// This argument’s value can be one of several flags, listed above.\n    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n    fn deduce(matches: &MatchedFlags<'_>) -> Result<Self, OptionsError> {\n        let word = match matches.get(&flags::SORT)? {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/filter.rs"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 24,
                  "endLine": 28,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nimpl SortField {\n\n    /// Determines which sort field to use based on the `--sort` argument.\n    /// This argument’s value can be one of several flags, listed above.\n    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n",
                    "rendered": {
                      "text": "\nimpl SortField {\n\n    /// Determines which sort field to use based on the `--sort` argument.\n    /// This argument’s value can be one of several flags, listed above.\n    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n",
                      "markdown": "`\nimpl SortField {\n\n    /// Determines which sort field to use based on the `--sort` argument.\n    /// This argument’s value can be one of several flags, listed above.\n    /// Returns the default sort field if none is given, or `Err` if the\n    /// value doesn’t correspond to a sort field we know about.\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/parser.rs"
                },
                "region": {
                  "startLine": 739,
                  "startColumn": 24,
                  "endLine": 739,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            strictness: Strictness::UseLastArguments,\n        };\n\n        assert_eq!(flags.get(&COUNT), Ok(Some(&*nothing)));\n    }\n\n    #[test]\n",
                    "rendered": {
                      "text": "            strictness: Strictness::UseLastArguments,\n        };\n\n        assert_eq!(flags.get(&COUNT), Ok(Some(&*nothing)));\n    }\n\n    #[test]\n",
                      "markdown": "`            strictness: Strictness::UseLastArguments,\n        };\n\n        assert_eq!(flags.get(&COUNT), Ok(Some(&*nothing)));\n    }\n\n    #[test]\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/parser.rs"
                },
                "region": {
                  "startLine": 725,
                  "startColumn": 24,
                  "endLine": 725,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            strictness: Strictness::UseLastArguments,\n        };\n\n        assert_eq!(flags.get(&COUNT), Ok(Some(&*everything)));\n    }\n\n    #[test]\n",
                    "rendered": {
                      "text": "            strictness: Strictness::UseLastArguments,\n        };\n\n        assert_eq!(flags.get(&COUNT), Ok(Some(&*everything)));\n    }\n\n    #[test]\n",
                      "markdown": "`            strictness: Strictness::UseLastArguments,\n        };\n\n        assert_eq!(flags.get(&COUNT), Ok(Some(&*everything)));\n    }\n\n    #[test]\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/parser.rs"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 14,
                  "endLine": 118,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    pub short: Option<ShortArg>,\n\n    /// The long argument that matches it. This is non-optional; all flags\n    /// should at least have a descriptive long name.\n    pub long: LongArg,\n\n    /// Whether this flag takes a value or not.\n",
                    "rendered": {
                      "text": "    pub short: Option<ShortArg>,\n\n    /// The long argument that matches it. This is non-optional; all flags\n    /// should at least have a descriptive long name.\n    pub long: LongArg,\n\n    /// Whether this flag takes a value or not.\n",
                      "markdown": "`    pub short: Option<ShortArg>,\n\n    /// The long argument that matches it. This is non-optional; all flags\n    /// should at least have a descriptive long name.\n    pub long: LongArg,\n\n    /// Whether this flag takes a value or not.\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/parser.rs"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 46,
                  "endLine": 219,
                  "endColumn": 52,
                  "snippet": {
                    "text": "                }\n            }\n\n            // If the string starts with *one* dash then it’s one or more\n            // short arguments.\n            else if bytes.starts_with(b\"-\") && arg != \"-\" {\n                let short_arg = bytes_to_os_str(&bytes[1..]);\n",
                    "rendered": {
                      "text": "                }\n            }\n\n            // If the string starts with *one* dash then it’s one or more\n            // short arguments.\n            else if bytes.starts_with(b\"-\") && arg != \"-\" {\n                let short_arg = bytes_to_os_str(&bytes[1..]);\n",
                      "markdown": "`                }\n            }\n\n            // If the string starts with *one* dash then it’s one or more\n            // short arguments.\n            else if bytes.starts_with(b\"-\") && arg != \"-\" {\n                let short_arg = bytes_to_os_str(&bytes[1..]);\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/time.rs"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 15,
                  "endLine": 172,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    time.duration_since(UNIX_EPOCH)\n        .map(|t| t.as_secs() as i64)\n        .unwrap_or_else(|e| {\n            let diff = e.duration();\n            let mut secs = diff.as_secs();\n            if diff.subsec_nanos() > 0 {\n                secs += 1;\n",
                    "rendered": {
                      "text": "    time.duration_since(UNIX_EPOCH)\n        .map(|t| t.as_secs() as i64)\n        .unwrap_or_else(|e| {\n            let diff = e.duration();\n            let mut secs = diff.as_secs();\n            if diff.subsec_nanos() > 0 {\n                secs += 1;\n",
                      "markdown": "`    time.duration_since(UNIX_EPOCH)\n        .map(|t| t.as_secs() as i64)\n        .unwrap_or_else(|e| {\n            let diff = e.duration();\n            let mut secs = diff.as_secs();\n            if diff.subsec_nanos() > 0 {\n                secs += 1;\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 22,
                  "endLine": 523,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        debug!(\"Getting Git status for file {:?}\", file.path);\n\n        self.git\n            .map(|g| g.get(&file.path, file.is_directory()))\n            .unwrap_or_default()\n    }\n\n",
                    "rendered": {
                      "text": "        debug!(\"Getting Git status for file {:?}\", file.path);\n\n        self.git\n            .map(|g| g.get(&file.path, file.is_directory()))\n            .unwrap_or_default()\n    }\n\n",
                      "markdown": "`        debug!(\"Getting Git status for file {:?}\", file.path);\n\n        self.git\n            .map(|g| g.get(&file.path, file.is_directory()))\n            .unwrap_or_default()\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 26,
                  "endLine": 270,
                  "endColumn": 30,
                  "snippet": {
                    "text": "/// Fields for which of a file’s time fields should be displayed in the\n/// columns output.\n///\n/// There should always be at least one of these — there’s no way to disable\n/// the time columns entirely (yet).\n#[derive(PartialEq, Eq, Debug, Copy, Clone)]\n#[allow(clippy::struct_excessive_bools)]\n",
                    "rendered": {
                      "text": "/// Fields for which of a file’s time fields should be displayed in the\n/// columns output.\n///\n/// There should always be at least one of these — there’s no way to disable\n/// the time columns entirely (yet).\n#[derive(PartialEq, Eq, Debug, Copy, Clone)]\n#[allow(clippy::struct_excessive_bools)]\n",
                      "markdown": "`/// Fields for which of a file’s time fields should be displayed in the\n/// columns output.\n///\n/// There should always be at least one of these — there’s no way to disable\n/// the time columns entirely (yet).\n#[derive(PartialEq, Eq, Debug, Copy, Clone)]\n#[allow(clippy::struct_excessive_bools)]\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 43,
                  "endLine": 174,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        }\n    }\n\n    /// Get the text that should be printed at the top, when the user elects\n    /// to have a header row printed.\n    pub fn header(self) -> &'static str {\n        match self {\n",
                    "rendered": {
                      "text": "        }\n    }\n\n    /// Get the text that should be printed at the top, when the user elects\n    /// to have a header row printed.\n    pub fn header(self) -> &'static str {\n        match self {\n",
                      "markdown": "`        }\n    }\n\n    /// Get the text that should be printed at the top, when the user elects\n    /// to have a header row printed.\n    pub fn header(self) -> &'static str {\n        match self {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 7,
                  "endLine": 37,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#[derive(PartialEq, Eq, Debug, Copy, Clone)]\npub struct Columns {\n\n    /// At least one of these timestamps will be shown.\n    pub time_types: TimeTypes,\n\n    // The rest are just on/off\n",
                    "rendered": {
                      "text": "#[derive(PartialEq, Eq, Debug, Copy, Clone)]\npub struct Columns {\n\n    /// At least one of these timestamps will be shown.\n    pub time_types: TimeTypes,\n\n    // The rest are just on/off\n",
                      "markdown": "`#[derive(PartialEq, Eq, Debug, Copy, Clone)]\npub struct Columns {\n\n    /// At least one of these timestamps will be shown.\n    pub time_types: TimeTypes,\n\n    // The rest are just on/off\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 23,
                  "endLine": 520,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    }\n\n    fn git_status(&self, file: &File<'_>) -> f::Git {\n        debug!(\"Getting Git status for file {:?}\", file.path);\n\n        self.git\n            .map(|g| g.get(&file.path, file.is_directory()))\n",
                    "rendered": {
                      "text": "    }\n\n    fn git_status(&self, file: &File<'_>) -> f::Git {\n        debug!(\"Getting Git status for file {:?}\", file.path);\n\n        self.git\n            .map(|g| g.get(&file.path, file.is_directory()))\n",
                      "markdown": "`    }\n\n    fn git_status(&self, file: &File<'_>) -> f::Git {\n        debug!(\"Getting Git status for file {:?}\", file.path);\n\n        self.git\n            .map(|g| g.get(&file.path, file.is_directory()))\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 11,
                  "endLine": 412,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    pub fn new(options: &'a Options, git: Option<&'a GitCache>, theme: &'a Theme) -> Table<'a> {\n        let columns = options.columns.collect(git.is_some());\n        let widths = TableWidths::zero(columns.len());\n        let env = &*ENVIRONMENT;\n\n        Table {\n            theme,\n",
                    "rendered": {
                      "text": "    pub fn new(options: &'a Options, git: Option<&'a GitCache>, theme: &'a Theme) -> Table<'a> {\n        let columns = options.columns.collect(git.is_some());\n        let widths = TableWidths::zero(columns.len());\n        let env = &*ENVIRONMENT;\n\n        Table {\n            theme,\n",
                      "markdown": "`    pub fn new(options: &'a Options, git: Option<&'a GitCache>, theme: &'a Theme) -> Table<'a> {\n        let columns = options.columns.collect(git.is_some());\n        let widths = TableWidths::zero(columns.len());\n        let env = &*ENVIRONMENT;\n\n        Table {\n            theme,\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 45,
                  "endLine": 326,
                  "endColumn": 51,
                  "snippet": {
                    "text": "                Some(t)\n            }\n            Err(ref e) => {\n                println!(\"Unable to determine time zone: {}\", e);\n                None\n            }\n        };\n",
                    "rendered": {
                      "text": "                Some(t)\n            }\n            Err(ref e) => {\n                println!(\"Unable to determine time zone: {}\", e);\n                None\n            }\n        };\n",
                      "markdown": "`                Some(t)\n            }\n            Err(ref e) => {\n                println!(\"Unable to determine time zone: {}\", e);\n                None\n            }\n        };\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 30,
                  "endLine": 305,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    /// Localisation rules for formatting numbers.\n    numeric: locale::Numeric,\n\n    /// The computer’s current time zone. This gets used to determine how to\n    /// offset files’ timestamps.\n    tz: Option<TimeZone>,\n\n",
                    "rendered": {
                      "text": "    /// Localisation rules for formatting numbers.\n    numeric: locale::Numeric,\n\n    /// The computer’s current time zone. This gets used to determine how to\n    /// offset files’ timestamps.\n    tz: Option<TimeZone>,\n\n",
                      "markdown": "`    /// Localisation rules for formatting numbers.\n    numeric: locale::Numeric,\n\n    /// The computer’s current time zone. This gets used to determine how to\n    /// offset files’ timestamps.\n    tz: Option<TimeZone>,\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 7,
                  "endLine": 271,
                  "endColumn": 13,
                  "snippet": {
                    "text": "/// columns output.\n///\n/// There should always be at least one of these — there’s no way to disable\n/// the time columns entirely (yet).\n#[derive(PartialEq, Eq, Debug, Copy, Clone)]\n#[allow(clippy::struct_excessive_bools)]\npub struct TimeTypes {\n",
                    "rendered": {
                      "text": "/// columns output.\n///\n/// There should always be at least one of these — there’s no way to disable\n/// the time columns entirely (yet).\n#[derive(PartialEq, Eq, Debug, Copy, Clone)]\n#[allow(clippy::struct_excessive_bools)]\npub struct TimeTypes {\n",
                      "markdown": "`/// columns output.\n///\n/// There should always be at least one of these — there’s no way to disable\n/// the time columns entirely (yet).\n#[derive(PartialEq, Eq, Debug, Copy, Clone)]\n#[allow(clippy::struct_excessive_bools)]\npub struct TimeTypes {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 32,
                  "endLine": 267,
                  "endColumn": 38,
                  "snippet": {
                    "text": "}\n\n\n/// Fields for which of a file’s time fields should be displayed in the\n/// columns output.\n///\n/// There should always be at least one of these — there’s no way to disable\n",
                    "rendered": {
                      "text": "}\n\n\n/// Fields for which of a file’s time fields should be displayed in the\n/// columns output.\n///\n/// There should always be at least one of these — there’s no way to disable\n",
                      "markdown": "`}\n\n\n/// Fields for which of a file’s time fields should be displayed in the\n/// columns output.\n///\n/// There should always be at least one of these — there’s no way to disable\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 27,
                  "endLine": 249,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /// The file’s accessed time (`st_atime`).\n    Accessed,\n\n    /// The file’s creation time (`btime` or `birthtime`).\n    Created,\n}\n\n",
                    "rendered": {
                      "text": "    /// The file’s accessed time (`st_atime`).\n    Accessed,\n\n    /// The file’s creation time (`btime` or `birthtime`).\n    Created,\n}\n\n",
                      "markdown": "`    /// The file’s accessed time (`st_atime`).\n    Accessed,\n\n    /// The file’s creation time (`btime` or `birthtime`).\n    Created,\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 27,
                  "endLine": 246,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /// The file’s changed time (`st_ctime`)\n    Changed,\n\n    /// The file’s accessed time (`st_atime`).\n    Accessed,\n\n    /// The file’s creation time (`btime` or `birthtime`).\n",
                    "rendered": {
                      "text": "    /// The file’s changed time (`st_ctime`)\n    Changed,\n\n    /// The file’s accessed time (`st_atime`).\n    Accessed,\n\n    /// The file’s creation time (`btime` or `birthtime`).\n",
                      "markdown": "`    /// The file’s changed time (`st_ctime`)\n    Changed,\n\n    /// The file’s accessed time (`st_atime`).\n    Accessed,\n\n    /// The file’s creation time (`btime` or `birthtime`).\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 26,
                  "endLine": 243,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    /// The file’s modified time (`st_mtime`).\n    Modified,\n\n    /// The file’s changed time (`st_ctime`)\n    Changed,\n\n    /// The file’s accessed time (`st_atime`).\n",
                    "rendered": {
                      "text": "    /// The file’s modified time (`st_mtime`).\n    Modified,\n\n    /// The file’s changed time (`st_ctime`)\n    Changed,\n\n    /// The file’s accessed time (`st_atime`).\n",
                      "markdown": "`    /// The file’s modified time (`st_mtime`).\n    Modified,\n\n    /// The file’s changed time (`st_ctime`)\n    Changed,\n\n    /// The file’s accessed time (`st_atime`).\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 27,
                  "endLine": 240,
                  "endColumn": 33,
                  "snippet": {
                    "text": "#[derive(PartialEq, Eq, Debug, Copy, Clone)]\npub enum TimeType {\n\n    /// The file’s modified time (`st_mtime`).\n    Modified,\n\n    /// The file’s changed time (`st_ctime`)\n",
                    "rendered": {
                      "text": "#[derive(PartialEq, Eq, Debug, Copy, Clone)]\npub enum TimeType {\n\n    /// The file’s modified time (`st_mtime`).\n    Modified,\n\n    /// The file’s changed time (`st_ctime`)\n",
                      "markdown": "`#[derive(PartialEq, Eq, Debug, Copy, Clone)]\npub enum TimeType {\n\n    /// The file’s modified time (`st_mtime`).\n    Modified,\n\n    /// The file’s changed time (`st_ctime`)\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/output/table.rs"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 25,
                  "endLine": 235,
                  "endColumn": 31,
                  "snippet": {
                    "text": "}\n\n\n/// The types of a file’s time fields. These three fields are standard\n/// across most (all?) operating systems.\n#[derive(PartialEq, Eq, Debug, Copy, Clone)]\npub enum TimeType {\n",
                    "rendered": {
                      "text": "}\n\n\n/// The types of a file’s time fields. These three fields are standard\n/// across most (all?) operating systems.\n#[derive(PartialEq, Eq, Debug, Copy, Clone)]\npub enum TimeType {\n",
                      "markdown": "`}\n\n\n/// The types of a file’s time fields. These three fields are standard\n/// across most (all?) operating systems.\n#[derive(PartialEq, Eq, Debug, Copy, Clone)]\npub enum TimeType {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/fish/exa.fish"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 28,
                  "endLine": 48,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    name\\t'Sort by filename'\n    Name\\t'Sort by filename (uppercase first)'\n    newest\\t'Sort by file modified time (newest first)'\n    none\\t'Do not sort files at all'\n    oldest\\t'Sort by file modified time'\n    size\\t'Sort by file size'\n    time\\t'Sort by file modified time'\n",
                    "rendered": {
                      "text": "    name\\t'Sort by filename'\n    Name\\t'Sort by filename (uppercase first)'\n    newest\\t'Sort by file modified time (newest first)'\n    none\\t'Do not sort files at all'\n    oldest\\t'Sort by file modified time'\n    size\\t'Sort by file size'\n    time\\t'Sort by file modified time'\n",
                      "markdown": "`    name\\t'Sort by filename'\n    Name\\t'Sort by filename (uppercase first)'\n    newest\\t'Sort by file modified time (newest first)'\n    none\\t'Do not sort files at all'\n    oldest\\t'Sort by file modified time'\n    size\\t'Sort by file size'\n    time\\t'Sort by file modified time'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/fish/exa.fish"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 45,
                  "endLine": 90,
                  "endColumn": 50,
                  "snippet": {
                    "text": "complete -c exa        -l 'no-time'        -d \"Suppress the time field\"\n\n# Optional extras\ncomplete -c exa -l 'git' -d \"List each file's Git status, if tracked\"\ncomplete -c exa -s '@' -l 'extended' -d \"List each file's extended attributes and sizes\"\n",
                    "rendered": {
                      "text": "complete -c exa        -l 'no-time'        -d \"Suppress the time field\"\n\n# Optional extras\ncomplete -c exa -l 'git' -d \"List each file's Git status, if tracked\"\ncomplete -c exa -s '@' -l 'extended' -d \"List each file's extended attributes and sizes\"\n",
                      "markdown": "`complete -c exa        -l 'no-time'        -d \"Suppress the time field\"\n\n# Optional extras\ncomplete -c exa -l 'git' -d \"List each file's Git status, if tracked\"\ncomplete -c exa -s '@' -l 'extended' -d \"List each file's extended attributes and sizes\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/fish/exa.fish"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 59,
                  "endLine": 87,
                  "endColumn": 65,
                  "snippet": {
                    "text": "complete -c exa        -l 'octal-permissions' -d \"List each file's permission in octal format\"\ncomplete -c exa        -l 'no-filesize'    -d \"Suppress the filesize field\"\ncomplete -c exa        -l 'no-user'        -d \"Suppress the user field\"\ncomplete -c exa        -l 'no-time'        -d \"Suppress the time field\"\n\n# Optional extras\ncomplete -c exa -l 'git' -d \"List each file's Git status, if tracked\"\n",
                    "rendered": {
                      "text": "complete -c exa        -l 'octal-permissions' -d \"List each file's permission in octal format\"\ncomplete -c exa        -l 'no-filesize'    -d \"Suppress the filesize field\"\ncomplete -c exa        -l 'no-user'        -d \"Suppress the user field\"\ncomplete -c exa        -l 'no-time'        -d \"Suppress the time field\"\n\n# Optional extras\ncomplete -c exa -l 'git' -d \"List each file's Git status, if tracked\"\n",
                      "markdown": "`complete -c exa        -l 'octal-permissions' -d \"List each file's permission in octal format\"\ncomplete -c exa        -l 'no-filesize'    -d \"Suppress the filesize field\"\ncomplete -c exa        -l 'no-user'        -d \"Suppress the user field\"\ncomplete -c exa        -l 'no-time'        -d \"Suppress the time field\"\n\n# Optional extras\ncomplete -c exa -l 'git' -d \"List each file's Git status, if tracked\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/fish/exa.fish"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 29,
                  "endLine": 78,
                  "endColumn": 35,
                  "snippet": {
                    "text": "complete -c exa -s 'u' -l 'accessed'      -d \"Use the accessed timestamp field\"\ncomplete -c exa -s 'U' -l 'created'       -d \"Use the created timestamp field\"\ncomplete -c exa        -l 'time-style'    -d \"How to format timestamps\" -x -a \"\n    default\\t'Use the default time style'\n    iso\\t'Display brief ISO timestamps'\n    long-iso\\t'Display longer ISO timestaps, up to the minute'\n    full-iso\\t'Display full ISO timestamps, up to the nanosecond'\n",
                    "rendered": {
                      "text": "complete -c exa -s 'u' -l 'accessed'      -d \"Use the accessed timestamp field\"\ncomplete -c exa -s 'U' -l 'created'       -d \"Use the created timestamp field\"\ncomplete -c exa        -l 'time-style'    -d \"How to format timestamps\" -x -a \"\n    default\\t'Use the default time style'\n    iso\\t'Display brief ISO timestamps'\n    long-iso\\t'Display longer ISO timestaps, up to the minute'\n    full-iso\\t'Display full ISO timestamps, up to the nanosecond'\n",
                      "markdown": "`complete -c exa -s 'u' -l 'accessed'      -d \"Use the accessed timestamp field\"\ncomplete -c exa -s 'U' -l 'created'       -d \"Use the created timestamp field\"\ncomplete -c exa        -l 'time-style'    -d \"How to format timestamps\" -x -a \"\n    default\\t'Use the default time style'\n    iso\\t'Display brief ISO timestamps'\n    long-iso\\t'Display longer ISO timestaps, up to the minute'\n    full-iso\\t'Display full ISO timestamps, up to the nanosecond'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/fish/exa.fish"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 17,
                  "endLine": 48,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    name\\t'Sort by filename'\n    Name\\t'Sort by filename (uppercase first)'\n    newest\\t'Sort by file modified time (newest first)'\n    none\\t'Do not sort files at all'\n    oldest\\t'Sort by file modified time'\n    size\\t'Sort by file size'\n    time\\t'Sort by file modified time'\n",
                    "rendered": {
                      "text": "    name\\t'Sort by filename'\n    Name\\t'Sort by filename (uppercase first)'\n    newest\\t'Sort by file modified time (newest first)'\n    none\\t'Do not sort files at all'\n    oldest\\t'Sort by file modified time'\n    size\\t'Sort by file size'\n    time\\t'Sort by file modified time'\n",
                      "markdown": "`    name\\t'Sort by filename'\n    Name\\t'Sort by filename (uppercase first)'\n    newest\\t'Sort by file modified time (newest first)'\n    none\\t'Do not sort files at all'\n    oldest\\t'Sort by file modified time'\n    size\\t'Sort by file size'\n    time\\t'Sort by file modified time'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/fish/exa.fish"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 34,
                  "endLine": 47,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    modified\\t'Sort by file modified time'\n    name\\t'Sort by filename'\n    Name\\t'Sort by filename (uppercase first)'\n    newest\\t'Sort by file modified time (newest first)'\n    none\\t'Do not sort files at all'\n    oldest\\t'Sort by file modified time'\n    size\\t'Sort by file size'\n",
                    "rendered": {
                      "text": "    modified\\t'Sort by file modified time'\n    name\\t'Sort by filename'\n    Name\\t'Sort by filename (uppercase first)'\n    newest\\t'Sort by file modified time (newest first)'\n    none\\t'Do not sort files at all'\n    oldest\\t'Sort by file modified time'\n    size\\t'Sort by file size'\n",
                      "markdown": "`    modified\\t'Sort by file modified time'\n    name\\t'Sort by filename'\n    Name\\t'Sort by filename (uppercase first)'\n    newest\\t'Sort by file modified time (newest first)'\n    none\\t'Do not sort files at all'\n    oldest\\t'Sort by file modified time'\n    size\\t'Sort by file size'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/fish/exa.fish"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 31,
                  "endLine": 33,
                  "endColumn": 37,
                  "snippet": {
                    "text": "complete -c exa -s 'r' -l 'reverse'   -d \"Reverse the sort order\"\ncomplete -c exa -s 's' -l 'sort'      -d \"Which field to sort by\" -x -a \"\n    accessed\\t'Sort by file accessed time'\n    age\\t'Sort by file modified time (newest first)'\n    changed\\t'Sort by changed time'\n    created\\t'Sort by file modified time'\n    date\\t'Sort by file modified time'\n",
                    "rendered": {
                      "text": "complete -c exa -s 'r' -l 'reverse'   -d \"Reverse the sort order\"\ncomplete -c exa -s 's' -l 'sort'      -d \"Which field to sort by\" -x -a \"\n    accessed\\t'Sort by file accessed time'\n    age\\t'Sort by file modified time (newest first)'\n    changed\\t'Sort by changed time'\n    created\\t'Sort by file modified time'\n    date\\t'Sort by file modified time'\n",
                      "markdown": "`complete -c exa -s 'r' -l 'reverse'   -d \"Reverse the sort order\"\ncomplete -c exa -s 's' -l 'sort'      -d \"Which field to sort by\" -x -a \"\n    accessed\\t'Sort by file accessed time'\n    age\\t'Sort by file modified time (newest first)'\n    changed\\t'Sort by changed time'\n    created\\t'Sort by file modified time'\n    date\\t'Sort by file modified time'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/fish/exa.fish"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 56,
                  "endLine": 31,
                  "endColumn": 62,
                  "snippet": {
                    "text": "complete -c exa -s 'd' -l 'list-dirs' -d \"List directories like regular files\"\ncomplete -c exa -s 'L' -l 'level'     -d \"Limit the depth of recursion\" -x -a \"1 2 3 4 5 6 7 8 9\"\ncomplete -c exa -s 'r' -l 'reverse'   -d \"Reverse the sort order\"\ncomplete -c exa -s 's' -l 'sort'      -d \"Which field to sort by\" -x -a \"\n    accessed\\t'Sort by file accessed time'\n    age\\t'Sort by file modified time (newest first)'\n    changed\\t'Sort by changed time'\n",
                    "rendered": {
                      "text": "complete -c exa -s 'd' -l 'list-dirs' -d \"List directories like regular files\"\ncomplete -c exa -s 'L' -l 'level'     -d \"Limit the depth of recursion\" -x -a \"1 2 3 4 5 6 7 8 9\"\ncomplete -c exa -s 'r' -l 'reverse'   -d \"Reverse the sort order\"\ncomplete -c exa -s 's' -l 'sort'      -d \"Which field to sort by\" -x -a \"\n    accessed\\t'Sort by file accessed time'\n    age\\t'Sort by file modified time (newest first)'\n    changed\\t'Sort by changed time'\n",
                      "markdown": "`complete -c exa -s 'd' -l 'list-dirs' -d \"List directories like regular files\"\ncomplete -c exa -s 'L' -l 'level'     -d \"Limit the depth of recursion\" -x -a \"1 2 3 4 5 6 7 8 9\"\ncomplete -c exa -s 'r' -l 'reverse'   -d \"Reverse the sort order\"\ncomplete -c exa -s 's' -l 'sort'      -d \"Which field to sort by\" -x -a \"\n    accessed\\t'Sort by file accessed time'\n    age\\t'Sort by file modified time (newest first)'\n    changed\\t'Sort by changed time'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/fish/exa.fish"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 53,
                  "endLine": 30,
                  "endColumn": 59,
                  "snippet": {
                    "text": "complete -c exa -s 'a' -l 'all'       -d \"Show hidden and 'dot' files\"\ncomplete -c exa -s 'd' -l 'list-dirs' -d \"List directories like regular files\"\ncomplete -c exa -s 'L' -l 'level'     -d \"Limit the depth of recursion\" -x -a \"1 2 3 4 5 6 7 8 9\"\ncomplete -c exa -s 'r' -l 'reverse'   -d \"Reverse the sort order\"\ncomplete -c exa -s 's' -l 'sort'      -d \"Which field to sort by\" -x -a \"\n    accessed\\t'Sort by file accessed time'\n    age\\t'Sort by file modified time (newest first)'\n",
                    "rendered": {
                      "text": "complete -c exa -s 'a' -l 'all'       -d \"Show hidden and 'dot' files\"\ncomplete -c exa -s 'd' -l 'list-dirs' -d \"List directories like regular files\"\ncomplete -c exa -s 'L' -l 'level'     -d \"Limit the depth of recursion\" -x -a \"1 2 3 4 5 6 7 8 9\"\ncomplete -c exa -s 'r' -l 'reverse'   -d \"Reverse the sort order\"\ncomplete -c exa -s 's' -l 'sort'      -d \"Which field to sort by\" -x -a \"\n    accessed\\t'Sort by file accessed time'\n    age\\t'Sort by file modified time (newest first)'\n",
                      "markdown": "`complete -c exa -s 'a' -l 'all'       -d \"Show hidden and 'dot' files\"\ncomplete -c exa -s 'd' -l 'list-dirs' -d \"List directories like regular files\"\ncomplete -c exa -s 'L' -l 'level'     -d \"Limit the depth of recursion\" -x -a \"1 2 3 4 5 6 7 8 9\"\ncomplete -c exa -s 'r' -l 'reverse'   -d \"Reverse the sort order\"\ncomplete -c exa -s 's' -l 'sort'      -d \"Which field to sort by\" -x -a \"\n    accessed\\t'Sort by file accessed time'\n    age\\t'Sort by file modified time (newest first)'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/bash/exa"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 39,
                  "endLine": 47,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            ;;\n\n        -*)\n            completions=$( exa --help | grep -oE ' (\\-[[:alnum:]@])' | tr -d ' ' )\n            COMPREPLY=( $( compgen -W \"$completions\" -- \"$cur\" ) )\n            ;;\n\n",
                    "rendered": {
                      "text": "            ;;\n\n        -*)\n            completions=$( exa --help | grep -oE ' (\\-[[:alnum:]@])' | tr -d ' ' )\n            COMPREPLY=( $( compgen -W \"$completions\" -- \"$cur\" ) )\n            ;;\n\n",
                      "markdown": "`            ;;\n\n        -*)\n            completions=$( exa --help | grep -oE ' (\\-[[:alnum:]@])' | tr -d ' ' )\n            COMPREPLY=( $( compgen -W \"$completions\" -- \"$cur\" ) )\n            ;;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/bash/exa"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 85,
                  "endLine": 41,
                  "endColumn": 91,
                  "snippet": {
                    "text": "        # _parse_help doesn’t pick up short options when they are on the same line than long options\n        --*)\n            # colo[u]r isn’t parsed correctly so we filter these options out and add them by hand\n            parse_help=$( exa --help | grep -oE ' (\\-\\-[[:alnum:]@-]+)' | tr -d ' ' | grep -v '\\-\\-colo' )\n            completions=$( echo '--color --colour --color-scale --colour-scale' $parse_help )\n            COMPREPLY=( $( compgen -W \"$completions\" -- \"$cur\" ) )\n            ;;\n",
                    "rendered": {
                      "text": "        # _parse_help doesn’t pick up short options when they are on the same line than long options\n        --*)\n            # colo[u]r isn’t parsed correctly so we filter these options out and add them by hand\n            parse_help=$( exa --help | grep -oE ' (\\-\\-[[:alnum:]@-]+)' | tr -d ' ' | grep -v '\\-\\-colo' )\n            completions=$( echo '--color --colour --color-scale --colour-scale' $parse_help )\n            COMPREPLY=( $( compgen -W \"$completions\" -- \"$cur\" ) )\n            ;;\n",
                      "markdown": "`        # _parse_help doesn’t pick up short options when they are on the same line than long options\n        --*)\n            # colo[u]r isn’t parsed correctly so we filter these options out and add them by hand\n            parse_help=$( exa --help | grep -oE ' (\\-\\-[[:alnum:]@-]+)' | tr -d ' ' | grep -v '\\-\\-colo' )\n            completions=$( echo '--color --colour --color-scale --colour-scale' $parse_help )\n            COMPREPLY=( $( compgen -W \"$completions\" -- \"$cur\" ) )\n            ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/bash/exa"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 38,
                  "endLine": 41,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        # _parse_help doesn’t pick up short options when they are on the same line than long options\n        --*)\n            # colo[u]r isn’t parsed correctly so we filter these options out and add them by hand\n            parse_help=$( exa --help | grep -oE ' (\\-\\-[[:alnum:]@-]+)' | tr -d ' ' | grep -v '\\-\\-colo' )\n            completions=$( echo '--color --colour --color-scale --colour-scale' $parse_help )\n            COMPREPLY=( $( compgen -W \"$completions\" -- \"$cur\" ) )\n            ;;\n",
                    "rendered": {
                      "text": "        # _parse_help doesn’t pick up short options when they are on the same line than long options\n        --*)\n            # colo[u]r isn’t parsed correctly so we filter these options out and add them by hand\n            parse_help=$( exa --help | grep -oE ' (\\-\\-[[:alnum:]@-]+)' | tr -d ' ' | grep -v '\\-\\-colo' )\n            completions=$( echo '--color --colour --color-scale --colour-scale' $parse_help )\n            COMPREPLY=( $( compgen -W \"$completions\" -- \"$cur\" ) )\n            ;;\n",
                      "markdown": "`        # _parse_help doesn’t pick up short options when they are on the same line than long options\n        --*)\n            # colo[u]r isn’t parsed correctly so we filter these options out and add them by hand\n            parse_help=$( exa --help | grep -oE ' (\\-\\-[[:alnum:]@-]+)' | tr -d ' ' | grep -v '\\-\\-colo' )\n            completions=$( echo '--color --colour --color-scale --colour-scale' $parse_help )\n            COMPREPLY=( $( compgen -W \"$completions\" -- \"$cur\" ) )\n            ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/bash/exa"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 105,
                  "endLine": 22,
                  "endColumn": 111,
                  "snippet": {
                    "text": "            ;;\n\n        -s|--sort)\n            COMPREPLY=( $( compgen -W 'name filename Name Filename size filesize extension Extension date time modified changed accessed created type inode oldest newest age none --' -- \"$cur\" ) )\n            return\n            ;;\n\n",
                    "rendered": {
                      "text": "            ;;\n\n        -s|--sort)\n            COMPREPLY=( $( compgen -W 'name filename Name Filename size filesize extension Extension date time modified changed accessed created type inode oldest newest age none --' -- \"$cur\" ) )\n            return\n            ;;\n\n",
                      "markdown": "`            ;;\n\n        -s|--sort)\n            COMPREPLY=( $( compgen -W 'name filename Name Filename size filesize extension Extension date time modified changed accessed created type inode oldest newest age none --' -- \"$cur\" ) )\n            return\n            ;;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.toml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 19,
                  "endLine": 55,
                  "endColumn": 4,
                  "snippet": {
                    "text": "default-features = false\n\n[features]\ndefault = [ \"git\" ]\ngit = [ \"git2\" ]\nvendored-openssl = [\"git2/vendored-openssl\"]\n\n\n",
                    "rendered": {
                      "text": "default-features = false\n\n[features]\ndefault = [ \"git\" ]\ngit = [ \"git2\" ]\nvendored-openssl = [\"git2/vendored-openssl\"]\n\n\n",
                      "markdown": "`default-features = false\n\n[features]\ndefault = [ \"git\" ]\ngit = [ \"git2\" ]\nvendored-openssl = [\"git2/vendored-openssl\"]\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/outputs/help.ansitxt"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 39,
                  "endLine": 55,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  --no-filesize        suppress the filesize field\n  --no-user            suppress the user field\n  --no-time            suppress the time field\n  --git                list each file's Git status, if tracked or ignored\n  -@, --extended       list each file's extended attributes and sizes\n",
                    "rendered": {
                      "text": "  --no-filesize        suppress the filesize field\n  --no-user            suppress the user field\n  --no-time            suppress the time field\n  --git                list each file's Git status, if tracked or ignored\n  -@, --extended       list each file's extended attributes and sizes\n",
                      "markdown": "`  --no-filesize        suppress the filesize field\n  --no-user            suppress the user field\n  --no-time            suppress the time field\n  --git                list each file's Git status, if tracked or ignored\n  -@, --extended       list each file's extended attributes and sizes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/outputs/help.ansitxt"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 35,
                  "endLine": 54,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  --octal-permissions  list each file's permission in octal format\n  --no-filesize        suppress the filesize field\n  --no-user            suppress the user field\n  --no-time            suppress the time field\n  --git                list each file's Git status, if tracked or ignored\n  -@, --extended       list each file's extended attributes and sizes\n",
                    "rendered": {
                      "text": "  --octal-permissions  list each file's permission in octal format\n  --no-filesize        suppress the filesize field\n  --no-user            suppress the user field\n  --no-time            suppress the time field\n  --git                list each file's Git status, if tracked or ignored\n  -@, --extended       list each file's extended attributes and sizes\n",
                      "markdown": "`  --octal-permissions  list each file's permission in octal format\n  --no-filesize        suppress the filesize field\n  --no-user            suppress the user field\n  --no-time            suppress the time field\n  --git                list each file's Git status, if tracked or ignored\n  -@, --extended       list each file's extended attributes and sizes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/outputs/help.ansitxt"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7,
                  "endLine": 31,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  -D, --only-dirs            list only directories\n  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\n  --git-ignore               ignore files mentioned in '.gitignore'\n  Valid sort fields:         name, Name, extension, Extension, size, type,\n                             modified, accessed, created, inode, and none.\n                             date, time, old, and new all refer to modified.\n\n",
                    "rendered": {
                      "text": "  -D, --only-dirs            list only directories\n  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\n  --git-ignore               ignore files mentioned in '.gitignore'\n  Valid sort fields:         name, Name, extension, Extension, size, type,\n                             modified, accessed, created, inode, and none.\n                             date, time, old, and new all refer to modified.\n\n",
                      "markdown": "`  -D, --only-dirs            list only directories\n  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\n  --git-ignore               ignore files mentioned in '.gitignore'\n  Valid sort fields:         name, Name, extension, Extension, size, type,\n                             modified, accessed, created, inode, and none.\n                             date, time, old, and new all refer to modified.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/outputs/help.ansitxt"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 43,
                  "endLine": 26,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\n",
                    "rendered": {
                      "text": "  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\n",
                      "markdown": "`  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n  -I, --ignore-glob GLOBS    glob patterns (pipe-separated) of files to ignore\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/outputs/help.ansitxt"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 40,
                  "endLine": 25,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  -a, --all                  show hidden and 'dot' files\n  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n",
                    "rendered": {
                      "text": "  -a, --all                  show hidden and 'dot' files\n  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n",
                      "markdown": "`  -a, --all                  show hidden and 'dot' files\n  -d, --list-dirs            list directories as files; don't list their contents\n  -L, --level DEPTH          limit the depth of recursion\n  -r, --reverse              reverse the sort order\n  -s, --sort SORT_FIELD      which field to sort by\n  --group-directories-first  list directories before other files\n  -D, --only-dirs            list only directories\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/outputs/help.ansitxt"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 20,
                  "endLine": 12,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  -1, --oneline      display one entry per line\n  -l, --long         display extended file metadata as a table\n  -G, --grid         display entries as a grid (default)\n  -x, --across       sort the grid across, rather than downwards\n  -R, --recurse      recurse into directories\n  -T, --tree         recurse into directories as a tree\n  -F, --classify     display type indicator by file names\n",
                    "rendered": {
                      "text": "  -1, --oneline      display one entry per line\n  -l, --long         display extended file metadata as a table\n  -G, --grid         display entries as a grid (default)\n  -x, --across       sort the grid across, rather than downwards\n  -R, --recurse      recurse into directories\n  -T, --tree         recurse into directories as a tree\n  -F, --classify     display type indicator by file names\n",
                      "markdown": "`  -1, --oneline      display one entry per line\n  -l, --long         display extended file metadata as a table\n  -G, --grid         display entries as a grid (default)\n  -x, --across       sort the grid across, rather than downwards\n  -R, --recurse      recurse into directories\n  -T, --tree         recurse into directories as a tree\n  -F, --classify     display type indicator by file names\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/outputs/error_columns_nines.ansitxt"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 51,
                  "endLine": 1,
                  "endColumn": 114,
                  "snippet": {
                    "text": "exa: Value \"99999999999999999999999\" not valid for environment variable COLUMNS: number too large to fit in target type\n",
                    "rendered": {
                      "text": "exa: Value \"99999999999999999999999\" not valid for environment variable COLUMNS: number too large to fit in target type\n",
                      "markdown": "`exa: Value \"99999999999999999999999\" not valid for environment variable COLUMNS: number too large to fit in target type\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/grid-details-view.toml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 28,
                  "endLine": 50,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\n# listing files tests\n# (these rely on bash’s glob sort order)\n# (some of the output files also have trailing whitespace)\n\n[[cmd]]\n",
                    "rendered": {
                      "text": "\n\n# listing files tests\n# (these rely on bash’s glob sort order)\n# (some of the output files also have trailing whitespace)\n\n[[cmd]]\n",
                      "markdown": "`\n\n# listing files tests\n# (these rely on bash’s glob sort order)\n# (some of the output files also have trailing whitespace)\n\n[[cmd]]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/errors.toml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 23,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "name = \"‘exa -lt’ offers a suggestion\"\nshell = \"exa -lt\"\nstdout = { empty = true }\nstderr = { string = \"To sort newest files last, try \\\"--sort newest\\\", or just \\\"-snew\\\"\"}\nstatus = 3\ntags = [ 'error', 'long', 'sort' ]\n\n",
                    "rendered": {
                      "text": "name = \"‘exa -lt’ offers a suggestion\"\nshell = \"exa -lt\"\nstdout = { empty = true }\nstderr = { string = \"To sort newest files last, try \\\"--sort newest\\\", or just \\\"-snew\\\"\"}\nstatus = 3\ntags = [ 'error', 'long', 'sort' ]\n\n",
                      "markdown": "`name = \"‘exa -lt’ offers a suggestion\"\nshell = \"exa -lt\"\nstdout = { empty = true }\nstderr = { string = \"To sort newest files last, try \\\"--sort newest\\\", or just \\\"-snew\\\"\"}\nstatus = 3\ntags = [ 'error', 'long', 'sort' ]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/errors.toml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 23,
                  "endLine": 26,
                  "endColumn": 29,
                  "snippet": {
                    "text": "name = \"‘exa -ltr’ offers a suggestion\"\nshell = \"exa -ltr\"\nstdout = { empty = true }\nstderr = { string = \"To sort oldest files last, try \\\"--sort oldest\\\", or just \\\"-sold\\\"\"}\nstatus = 3\ntags = [ 'error', 'long', 'sort' ]\n\n",
                    "rendered": {
                      "text": "name = \"‘exa -ltr’ offers a suggestion\"\nshell = \"exa -ltr\"\nstdout = { empty = true }\nstderr = { string = \"To sort oldest files last, try \\\"--sort oldest\\\", or just \\\"-sold\\\"\"}\nstatus = 3\ntags = [ 'error', 'long', 'sort' ]\n\n",
                      "markdown": "`name = \"‘exa -ltr’ offers a suggestion\"\nshell = \"exa -ltr\"\nstdout = { empty = true }\nstderr = { string = \"To sort oldest files last, try \\\"--sort oldest\\\", or just \\\"-sold\\\"\"}\nstatus = 3\ntags = [ 'error', 'long', 'sort' ]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/run.sh"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 72,
                  "endLine": 22,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  exit 1\nfi\n\necho -e \"#!/bin/sh\\nexec $exa_binary --colour=always \\\"\\$@\\\"\" > /tmp/exa\nchmod +x /tmp/exa\nexport PATH=\"/tmp:$PATH\"\n\n# Unset any environment variables\n",
                    "rendered": {
                      "text": "  exit 1\nfi\n\necho -e \"#!/bin/sh\\nexec $exa_binary --colour=always \\\"\\$@\\\"\" > /tmp/exa\nchmod +x /tmp/exa\nexport PATH=\"/tmp:$PATH\"\n\n# Unset any environment variables\n",
                      "markdown": "`  exit 1\nfi\n\necho -e \"#!/bin/sh\\nexec $exa_binary --colour=always \\\"\\$@\\\"\" > /tmp/exa\nchmod +x /tmp/exa\nexport PATH=\"/tmp:$PATH\"\n\n# Unset any environment variables\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/README.md"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 44,
                  "endLine": 47,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n6. The `status` field asserts that exa should exit with a status code of 0.\n\n7. The `tags` field does not change the test at all, but can be used to filter which tests are run, instead of running all of them each time.\n",
                    "rendered": {
                      "text": "\n6. The `status` field asserts that exa should exit with a status code of 0.\n\n7. The `tags` field does not change the test at all, but can be used to filter which tests are run, instead of running all of them each time.\n",
                      "markdown": "`\n6. The `status` field asserts that exa should exit with a status code of 0.\n\n7. The `tags` field does not change the test at all, but can be used to filter which tests are run, instead of running all of them each time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/README.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 23,
                  "endLine": 21,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nThe tests are run using [Specsheet](https://specsheet.software/). The TOML files define the  tests, and the files in `output/` contain the output that exa should produce.\n\nFor example, let’s look at one of the tests in `lines-view.toml`. This test checks that running exa does the right thing when running with the `-1` argument, and a directory full of files:\n\n```toml\n[[cmd]]\n",
                    "rendered": {
                      "text": "\nThe tests are run using [Specsheet](https://specsheet.software/). The TOML files define the  tests, and the files in `output/` contain the output that exa should produce.\n\nFor example, let’s look at one of the tests in `lines-view.toml`. This test checks that running exa does the right thing when running with the `-1` argument, and a directory full of files:\n\n```toml\n[[cmd]]\n",
                      "markdown": "`\nThe tests are run using [Specsheet](https://specsheet.software/). The TOML files define the  tests, and the files in `output/` contain the output that exa should produce.\n\nFor example, let’s look at one of the tests in `lines-view.toml`. This test checks that running exa does the right thing when running with the `-1` argument, and a directory full of files:\n\n```toml\n[[cmd]]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/README.md"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 39,
                  "endLine": 39,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n2. The `name` field is a human-readable description of the feature of exa that’s under test. It gets printed to the screen as tests are run.\n\n3. The `shell` field contains the shell script to execute. It should have `exa` in there somewhere.\n\n4. The `stdout` field describes the [content](https://specsheet.software/docs/check-file-schema#content) that exa should print to standard output. In this case, the test asserts that the output of running the program should be identical to the contents of the file.\n\n",
                    "rendered": {
                      "text": "\n2. The `name` field is a human-readable description of the feature of exa that’s under test. It gets printed to the screen as tests are run.\n\n3. The `shell` field contains the shell script to execute. It should have `exa` in there somewhere.\n\n4. The `stdout` field describes the [content](https://specsheet.software/docs/check-file-schema#content) that exa should print to standard output. In this case, the test asserts that the output of running the program should be identical to the contents of the file.\n\n",
                      "markdown": "`\n2. The `name` field is a human-readable description of the feature of exa that’s under test. It gets printed to the screen as tests are run.\n\n3. The `shell` field contains the shell script to execute. It should have `exa` in there somewhere.\n\n4. The `stdout` field describes the [content](https://specsheet.software/docs/check-file-schema#content) that exa should print to standard output. In this case, the test asserts that the output of running the program should be identical to the contents of the file.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/README.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 115,
                  "endLine": 37,
                  "endColumn": 123,
                  "snippet": {
                    "text": "\n1. The `[[cmd]]` line marks this test as a [cmd](https://specsheet.software/checks/command/cmd) check, which can run arbitrary commands. In this case, the commad is exa with some arguments.\n\n2. The `name` field is a human-readable description of the feature of exa that’s under test. It gets printed to the screen as tests are run.\n\n3. The `shell` field contains the shell script to execute. It should have `exa` in there somewhere.\n\n",
                    "rendered": {
                      "text": "\n1. The `[[cmd]]` line marks this test as a [cmd](https://specsheet.software/checks/command/cmd) check, which can run arbitrary commands. In this case, the commad is exa with some arguments.\n\n2. The `name` field is a human-readable description of the feature of exa that’s under test. It gets printed to the screen as tests are run.\n\n3. The `shell` field contains the shell script to execute. It should have `exa` in there somewhere.\n\n",
                      "markdown": "`\n1. The `[[cmd]]` line marks this test as a [cmd](https://specsheet.software/checks/command/cmd) check, which can run arbitrary commands. In this case, the commad is exa with some arguments.\n\n2. The `name` field is a human-readable description of the feature of exa that’s under test. It gets printed to the screen as tests are run.\n\n3. The `shell` field contains the shell script to execute. It should have `exa` in there somewhere.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/README.md"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 142,
                  "endLine": 14,
                  "endColumn": 150,
                  "snippet": {
                    "text": "- missing users and groups\n- nested Git repositories\n\nThey are intended to be run from the Vagrant VM that has already had its environment set up — see the `devtools/dev-create-test-filesystem.sh` script for how the files are generated.\n\n\n## Anatomy of the tests\n",
                    "rendered": {
                      "text": "- missing users and groups\n- nested Git repositories\n\nThey are intended to be run from the Vagrant VM that has already had its environment set up — see the `devtools/dev-create-test-filesystem.sh` script for how the files are generated.\n\n\n## Anatomy of the tests\n",
                      "markdown": "`- missing users and groups\n- nested Git repositories\n\nThey are intended to be run from the Vagrant VM that has already had its environment set up — see the `devtools/dev-create-test-filesystem.sh` script for how the files are generated.\n\n\n## Anatomy of the tests\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/README.md"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 8,
                  "endLine": 12,
                  "endColumn": 13,
                  "snippet": {
                    "text": "- file names with weird stuff like newlines or escapes in\n- invalid UTF-8\n- missing users and groups\n- nested Git repositories\n\nThey are intended to be run from the Vagrant VM that has already had its environment set up — see the `devtools/dev-create-test-filesystem.sh` script for how the files are generated.\n\n",
                    "rendered": {
                      "text": "- file names with weird stuff like newlines or escapes in\n- invalid UTF-8\n- missing users and groups\n- nested Git repositories\n\nThey are intended to be run from the Vagrant VM that has already had its environment set up — see the `devtools/dev-create-test-filesystem.sh` script for how the files are generated.\n\n",
                      "markdown": "`- file names with weird stuff like newlines or escapes in\n- invalid UTF-8\n- missing users and groups\n- nested Git repositories\n\nThey are intended to be run from the Vagrant VM that has already had its environment set up — see the `devtools/dev-create-test-filesystem.sh` script for how the files are generated.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 27,
                  "endLine": 159,
                  "endColumn": 31,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n\n# Both repositories 1 and 2 at once\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories\"\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n\n# Both repositories 1 and 2 at once\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories\"\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n\n# Both repositories 1 and 2 at once\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 30,
                  "endLine": 178,
                  "endColumn": 35,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories across multiple directories 2\"\nshell = \"exa --git -l /testcases/{git2/deeply/nested/directory,git/edits,git2/target,git2/deeply,git}\"\nstdout = { file = \"outputs/git1+2_long_nested.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories across multiple directories 2\"\nshell = \"exa --git -l /testcases/{git2/deeply/nested/directory,git/edits,git2/target,git2/deeply,git}\"\nstdout = { file = \"outputs/git1+2_long_nested.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories across multiple directories 2\"\nshell = \"exa --git -l /testcases/{git2/deeply/nested/directory,git/edits,git2/target,git2/deeply,git}\"\nstdout = { file = \"outputs/git1+2_long_nested.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 30,
                  "endLine": 170,
                  "endColumn": 35,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories across multiple directories\"\nshell = \"exa --git -l /testcases/{git/additions,git2/deeply,git/edits,git2/deeply/nested}\"\nstdout = { file = \"outputs/git1+2_long_directories.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories across multiple directories\"\nshell = \"exa --git -l /testcases/{git/additions,git2/deeply,git/edits,git2/deeply/nested}\"\nstdout = { file = \"outputs/git1+2_long_directories.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories across multiple directories\"\nshell = \"exa --git -l /testcases/{git/additions,git2/deeply,git/edits,git2/deeply/nested}\"\nstdout = { file = \"outputs/git1+2_long_directories.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 30,
                  "endLine": 162,
                  "endColumn": 35,
                  "snippet": {
                    "text": "# Both repositories 1 and 2 at once\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories\"\nshell = \"exa --git -l /testcases/git /testcases/git2\"\nstdout = { file = \"outputs/git1+2_long.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "# Both repositories 1 and 2 at once\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories\"\nshell = \"exa --git -l /testcases/git /testcases/git2\"\nstdout = { file = \"outputs/git1+2_long.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`# Both repositories 1 and 2 at once\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column for multiple repositories\"\nshell = \"exa --git -l /testcases/git /testcases/git2\"\nstdout = { file = \"outputs/git1+2_long.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 47,
                  "endLine": 151,
                  "endColumn": 52,
                  "snippet": {
                    "text": "# The forth Git repo: non UTF-8 file\n\n[[cmd]]\nname = \"‘exa --git -l’ handles non UTF8 file in Git repositories\"\nshell = \"exa --git -l /testcases/git4\"\nstdout = { file = \"outputs/git4_long.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "# The forth Git repo: non UTF-8 file\n\n[[cmd]]\nname = \"‘exa --git -l’ handles non UTF8 file in Git repositories\"\nshell = \"exa --git -l /testcases/git4\"\nstdout = { file = \"outputs/git4_long.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`# The forth Git repo: non UTF-8 file\n\n[[cmd]]\nname = \"‘exa --git -l’ handles non UTF8 file in Git repositories\"\nshell = \"exa --git -l /testcases/git4\"\nstdout = { file = \"outputs/git4_long.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 11,
                  "endLine": 148,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n\n\n# The forth Git repo: non UTF-8 file\n\n[[cmd]]\nname = \"‘exa --git -l’ handles non UTF8 file in Git repositories\"\n",
                    "rendered": {
                      "text": "\n\n\n# The forth Git repo: non UTF-8 file\n\n[[cmd]]\nname = \"‘exa --git -l’ handles non UTF8 file in Git repositories\"\n",
                      "markdown": "`\n\n\n# The forth Git repo: non UTF-8 file\n\n[[cmd]]\nname = \"‘exa --git -l’ handles non UTF8 file in Git repositories\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 49,
                  "endLine": 139,
                  "endColumn": 54,
                  "snippet": {
                    "text": "# The third Git repo: broken symlinks\n\n[[cmd]]\nname = \"‘exa --git -l’ handles broken symlinks in Git repositories\"\nshell = \"exa --git -l /testcases/git3\"\nstdout = { file = \"outputs/git3_long.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "# The third Git repo: broken symlinks\n\n[[cmd]]\nname = \"‘exa --git -l’ handles broken symlinks in Git repositories\"\nshell = \"exa --git -l /testcases/git3\"\nstdout = { file = \"outputs/git3_long.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`# The third Git repo: broken symlinks\n\n[[cmd]]\nname = \"‘exa --git -l’ handles broken symlinks in Git repositories\"\nshell = \"exa --git -l /testcases/git3\"\nstdout = { file = \"outputs/git3_long.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 11,
                  "endLine": 136,
                  "endColumn": 16,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n\n# The third Git repo: broken symlinks\n\n[[cmd]]\nname = \"‘exa --git -l’ handles broken symlinks in Git repositories\"\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n\n# The third Git repo: broken symlinks\n\n[[cmd]]\nname = \"‘exa --git -l’ handles broken symlinks in Git repositories\"\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n\n# The third Git repo: broken symlinks\n\n[[cmd]]\nname = \"‘exa --git -l’ handles broken symlinks in Git repositories\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 31,
                  "endLine": 88,
                  "endColumn": 36,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lT’ shows a Git status column alongside the tree, handling ignored files and nested repositories\"\nshell = \"exa --git -lT /testcases/git2\"\nstdout = { file = \"outputs/git2_long_tree.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lT’ shows a Git status column alongside the tree, handling ignored files and nested repositories\"\nshell = \"exa --git -lT /testcases/git2\"\nstdout = { file = \"outputs/git2_long_tree.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lT’ shows a Git status column alongside the tree, handling ignored files and nested repositories\"\nshell = \"exa --git -lT /testcases/git2\"\nstdout = { file = \"outputs/git2_long_tree.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 31,
                  "endLine": 80,
                  "endColumn": 36,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lR’ shows a Git status column in every table, handling ignored files and nested repositories\"\nshell = \"exa --git -lR /testcases/git2\"\nstdout = { file = \"outputs/git2_long_recurse.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lR’ shows a Git status column in every table, handling ignored files and nested repositories\"\nshell = \"exa --git -lR /testcases/git2\"\nstdout = { file = \"outputs/git2_long_recurse.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lR’ shows a Git status column in every table, handling ignored files and nested repositories\"\nshell = \"exa --git -lR /testcases/git2\"\nstdout = { file = \"outputs/git2_long_recurse.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 30,
                  "endLine": 72,
                  "endColumn": 35,
                  "snippet": {
                    "text": "# The second Git repo: nested repositories and file ignoring\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column with ignored statuses\"\nshell = \"exa --git -l /testcases/git2\"\nstdout = { file = \"outputs/git2_long.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "# The second Git repo: nested repositories and file ignoring\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column with ignored statuses\"\nshell = \"exa --git -l /testcases/git2\"\nstdout = { file = \"outputs/git2_long.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`# The second Git repo: nested repositories and file ignoring\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column with ignored statuses\"\nshell = \"exa --git -l /testcases/git2\"\nstdout = { file = \"outputs/git2_long.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 12,
                  "endLine": 69,
                  "endColumn": 17,
                  "snippet": {
                    "text": "tags = [ 'long', 'grid', 'git', 'list-dirs' ]\n\n\n# The second Git repo: nested repositories and file ignoring\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column with ignored statuses\"\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'grid', 'git', 'list-dirs' ]\n\n\n# The second Git repo: nested repositories and file ignoring\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column with ignored statuses\"\n",
                      "markdown": "`tags = [ 'long', 'grid', 'git', 'list-dirs' ]\n\n\n# The second Git repo: nested repositories and file ignoring\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column with ignored statuses\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 52,
                  "endLine": 60,
                  "endColumn": 57,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lGd’ with file arguments shows a Git status column\"\nshell = \"exa --git -lGd /testcases/git/**/* /testcases\"\nenvironment = { COLUMNS = \"150\" }\nstdout = { file = \"outputs/git1_paths_long_grid.ansitxt\" }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lGd’ with file arguments shows a Git status column\"\nshell = \"exa --git -lGd /testcases/git/**/* /testcases\"\nenvironment = { COLUMNS = \"150\" }\nstdout = { file = \"outputs/git1_paths_long_grid.ansitxt\" }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lGd’ with file arguments shows a Git status column\"\nshell = \"exa --git -lGd /testcases/git/**/* /testcases\"\nenvironment = { COLUMNS = \"150\" }\nstdout = { file = \"outputs/git1_paths_long_grid.ansitxt\" }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 30,
                  "endLine": 52,
                  "endColumn": 35,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column containing multiple statuses\"\nshell = \"exa --git -l /testcases/git/{additions,edits}\"\nstdout = { file = \"outputs/git1_long_multiple.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column containing multiple statuses\"\nshell = \"exa --git -l /testcases/git/{additions,edits}\"\nstdout = { file = \"outputs/git1_long_multiple.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column containing multiple statuses\"\nshell = \"exa --git -l /testcases/git/{additions,edits}\"\nstdout = { file = \"outputs/git1_long_multiple.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 30,
                  "endLine": 44,
                  "endColumn": 35,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column containing modified files\"\nshell = \"exa --git -l /testcases/git/edits\"\nstdout = { file = \"outputs/git1_long_edits.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column containing modified files\"\nshell = \"exa --git -l /testcases/git/edits\"\nstdout = { file = \"outputs/git1_long_edits.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column containing modified files\"\nshell = \"exa --git -l /testcases/git/edits\"\nstdout = { file = \"outputs/git1_long_edits.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 30,
                  "endLine": 36,
                  "endColumn": 35,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column containing new files\"\nshell = \"exa --git -l /testcases/git/additions\"\nstdout = { file = \"outputs/git1_long_additions.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column containing new files\"\nshell = \"exa --git -l /testcases/git/additions\"\nstdout = { file = \"outputs/git1_long_additions.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column containing new files\"\nshell = \"exa --git -l /testcases/git/additions\"\nstdout = { file = \"outputs/git1_long_additions.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 67,
                  "endLine": 28,
                  "endColumn": 72,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ with a directory argument shows the combined Git status column\"\nshell = \"exa --git -l /testcases/git/moves/thither\"\nstdout = { file = \"outputs/git1_long_moves.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ with a directory argument shows the combined Git status column\"\nshell = \"exa --git -l /testcases/git/moves/thither\"\nstdout = { file = \"outputs/git1_long_moves.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -l’ with a directory argument shows the combined Git status column\"\nshell = \"exa --git -l /testcases/git/moves/thither\"\nstdout = { file = \"outputs/git1_long_moves.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 31,
                  "endLine": 20,
                  "endColumn": 36,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lT’ shows a Git status column alongside the tree\"\nshell = \"exa --git -lT /testcases/git\"\nstdout = { file = \"outputs/git1_long_tree.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lT’ shows a Git status column alongside the tree\"\nshell = \"exa --git -lT /testcases/git\"\nstdout = { file = \"outputs/git1_long_tree.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lT’ shows a Git status column alongside the tree\"\nshell = \"exa --git -lT /testcases/git\"\nstdout = { file = \"outputs/git1_long_tree.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 31,
                  "endLine": 12,
                  "endColumn": 36,
                  "snippet": {
                    "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lR’ shows a Git status column in every table\"\nshell = \"exa --git -lR /testcases/git\"\nstdout = { file = \"outputs/git1_long_recurse.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lR’ shows a Git status column in every table\"\nshell = \"exa --git -lR /testcases/git\"\nstdout = { file = \"outputs/git1_long_recurse.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`tags = [ 'long', 'git' ]\n\n[[cmd]]\nname = \"‘exa --git -lR’ shows a Git status column in every table\"\nshell = \"exa --git -lR /testcases/git\"\nstdout = { file = \"outputs/git1_long_recurse.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 30,
                  "endLine": 4,
                  "endColumn": 35,
                  "snippet": {
                    "text": "# The first Git repo: additions and modifications\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column\"\nshell = \"exa --git -l /testcases/git\"\nstdout = { file = \"outputs/git1_long.ansitxt\" }\nstderr = { empty = true }\n",
                    "rendered": {
                      "text": "# The first Git repo: additions and modifications\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column\"\nshell = \"exa --git -l /testcases/git\"\nstdout = { file = \"outputs/git1_long.ansitxt\" }\nstderr = { empty = true }\n",
                      "markdown": "`# The first Git repo: additions and modifications\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column\"\nshell = \"exa --git -l /testcases/git\"\nstdout = { file = \"outputs/git1_long.ansitxt\" }\nstderr = { empty = true }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/xtests/git.toml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 11,
                  "endLine": 1,
                  "endColumn": 16,
                  "snippet": {
                    "text": "# The first Git repo: additions and modifications\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column\"\n",
                    "rendered": {
                      "text": "# The first Git repo: additions and modifications\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column\"\n",
                      "markdown": "`# The first Git repo: additions and modifications\n\n[[cmd]]\nname = \"‘exa --git -l’ shows a Git status column\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/snap/snapcraft.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 13,
                  "endLine": 8,
                  "endColumn": 18,
                  "snippet": {
                    "text": "  It uses colours for information by default, helping you distinguish between\n  many types of files, such as whether you are the owner, or in the owning\n  group. It also has extra features not present in the original ls, such as\n  viewing the Git status for a directory, or recursing into directories with a\n  tree view. exa is written in Rust, so it’s small, fast, and portable.\n\ngrade: stable\n",
                    "rendered": {
                      "text": "  It uses colours for information by default, helping you distinguish between\n  many types of files, such as whether you are the owner, or in the owning\n  group. It also has extra features not present in the original ls, such as\n  viewing the Git status for a directory, or recursing into directories with a\n  tree view. exa is written in Rust, so it’s small, fast, and portable.\n\ngrade: stable\n",
                      "markdown": "`  It uses colours for information by default, helping you distinguish between\n  many types of files, such as whether you are the owner, or in the owning\n  group. It also has extra features not present in the original ls, such as\n  viewing the Git status for a directory, or recursing into directories with a\n  tree view. exa is written in Rust, so it’s small, fast, and portable.\n\ngrade: stable\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 30,
                  "endLine": 80,
                  "endColumn": 35,
                  "snippet": {
                    "text": "# *dynamically* linked, which broke the whole ‘self-contained binary’ concept.\n# So dump the linker table, in case anything unscrupulous shows up.\necho -e \"\\n\\033[4mLibraries linked:\\033[0m\"\notool -L \"$exa_macos_binary\" | sed 's/^[[:space:]]*//'\n\n# Might as well use it to test itself, right?\necho -e \"\\n\\033[4mAll done! Files produced:\\033[0m\"\n",
                    "rendered": {
                      "text": "# *dynamically* linked, which broke the whole ‘self-contained binary’ concept.\n# So dump the linker table, in case anything unscrupulous shows up.\necho -e \"\\n\\033[4mLibraries linked:\\033[0m\"\notool -L \"$exa_macos_binary\" | sed 's/^[[:space:]]*//'\n\n# Might as well use it to test itself, right?\necho -e \"\\n\\033[4mAll done! Files produced:\\033[0m\"\n",
                      "markdown": "`# *dynamically* linked, which broke the whole ‘self-contained binary’ concept.\n# So dump the linker table, in case anything unscrupulous shows up.\necho -e \"\\n\\033[4mLibraries linked:\\033[0m\"\notool -L \"$exa_macos_binary\" | sed 's/^[[:space:]]*//'\n\n# Might as well use it to test itself, right?\necho -e \"\\n\\033[4mAll done! Files produced:\\033[0m\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 25,
                  "endLine": 73,
                  "endColumn": 30,
                  "snippet": {
                    "text": "else\n  exa_macos_zip=\"$exa_root/exa-macos-x86_64-${exa_version}.zip\"\nfi\nrm -vf \"$exa_macos_zip\" | sed 's/^/removing /'\nzip -j \"$exa_macos_zip\" \"$exa_macos_binary\"\n\n# There was a problem a while back where a library was getting unknowingly\n",
                    "rendered": {
                      "text": "else\n  exa_macos_zip=\"$exa_root/exa-macos-x86_64-${exa_version}.zip\"\nfi\nrm -vf \"$exa_macos_zip\" | sed 's/^/removing /'\nzip -j \"$exa_macos_zip\" \"$exa_macos_binary\"\n\n# There was a problem a while back where a library was getting unknowingly\n",
                      "markdown": "`else\n  exa_macos_zip=\"$exa_root/exa-macos-x86_64-${exa_version}.zip\"\nfi\nrm -vf \"$exa_macos_zip\" | sed 's/^/removing /'\nzip -j \"$exa_macos_zip\" \"$exa_macos_binary\"\n\n# There was a problem a while back where a library was getting unknowingly\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 33,
                  "endLine": 55,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cargo build --release --manifest-path \"$toml_file\"\ncargo test --release --manifest-path \"$toml_file\" --lib -- --quiet\n# we can’t run the xtests outside the VM!\n#/vagrant/xtests/run.sh --release\ncp \"$exa_root\"/target/release/exa \"$exa_macos_binary\"\n\n# Stripping the binary before distributing it removes a bunch of debugging\n# symbols, saving some space.\n",
                    "rendered": {
                      "text": "cargo build --release --manifest-path \"$toml_file\"\ncargo test --release --manifest-path \"$toml_file\" --lib -- --quiet\n# we can’t run the xtests outside the VM!\n#/vagrant/xtests/run.sh --release\ncp \"$exa_root\"/target/release/exa \"$exa_macos_binary\"\n\n# Stripping the binary before distributing it removes a bunch of debugging\n# symbols, saving some space.\n",
                      "markdown": "`cargo build --release --manifest-path \"$toml_file\"\ncargo test --release --manifest-path \"$toml_file\" --lib -- --quiet\n# we can’t run the xtests outside the VM!\n#/vagrant/xtests/run.sh --release\ncp \"$exa_root\"/target/release/exa \"$exa_macos_binary\"\n\n# Stripping the binary before distributing it removes a bunch of debugging\n# symbols, saving some space.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 28,
                  "endLine": 50,
                  "endColumn": 33,
                  "snippet": {
                    "text": "# faster binary.\necho -e \"\\n\\033[4mCompiling release version of exa...\\033[0m\"\nexa_macos_binary=\"$exa_root/exa-macos-x86_64\"\nrm -vf \"$exa_macos_binary\" | sed 's/^/removing /'\ncargo build --release --manifest-path \"$toml_file\"\ncargo test --release --manifest-path \"$toml_file\" --lib -- --quiet\n# we can’t run the xtests outside the VM!\n",
                    "rendered": {
                      "text": "# faster binary.\necho -e \"\\n\\033[4mCompiling release version of exa...\\033[0m\"\nexa_macos_binary=\"$exa_root/exa-macos-x86_64\"\nrm -vf \"$exa_macos_binary\" | sed 's/^/removing /'\ncargo build --release --manifest-path \"$toml_file\"\ncargo test --release --manifest-path \"$toml_file\" --lib -- --quiet\n# we can’t run the xtests outside the VM!\n",
                      "markdown": "`# faster binary.\necho -e \"\\n\\033[4mCompiling release version of exa...\\033[0m\"\nexa_macos_binary=\"$exa_root/exa-macos-x86_64\"\nrm -vf \"$exa_macos_binary\" | sed 's/^/removing /'\ncargo build --release --manifest-path \"$toml_file\"\ncargo test --release --manifest-path \"$toml_file\" --lib -- --quiet\n# we can’t run the xtests outside the VM!\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 54,
                  "endLine": 41,
                  "endColumn": 59,
                  "snippet": {
                    "text": "if [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=$exa_root/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n  echo \"Building exa v$exa_version\"\nfi\n",
                    "rendered": {
                      "text": "if [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=$exa_root/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n  echo \"Building exa v$exa_version\"\nfi\n",
                      "markdown": "`if [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=$exa_root/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n  echo \"Building exa v$exa_version\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 35,
                  "endLine": 39,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n# Weekly builds have a bit more information in their version number (see build.rs).\nif [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=$exa_root/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n",
                    "rendered": {
                      "text": "\n# Weekly builds have a bit more information in their version number (see build.rs).\nif [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=$exa_root/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n",
                      "markdown": "`\n# Weekly builds have a bit more information in their version number (see build.rs).\nif [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=$exa_root/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 48,
                  "endLine": 31,
                  "endColumn": 53,
                  "snippet": {
                    "text": "# You will also need GNU coreutils: https://stackoverflow.com/a/4031502/3484614\nexa_root=\"$(dirname \"$(dirname \"$(greadlink -fm \"$0\")\")\")\"\ntoml_file=\"$exa_root\"/Cargo.toml\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n",
                    "rendered": {
                      "text": "# You will also need GNU coreutils: https://stackoverflow.com/a/4031502/3484614\nexa_root=\"$(dirname \"$(dirname \"$(greadlink -fm \"$0\")\")\")\"\ntoml_file=\"$exa_root\"/Cargo.toml\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n",
                      "markdown": "`# You will also need GNU coreutils: https://stackoverflow.com/a/4031502/3484614\nexa_root=\"$(dirname \"$(dirname \"$(greadlink -fm \"$0\")\")\")\"\ntoml_file=\"$exa_root\"/Cargo.toml\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 36,
                  "endLine": 31,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# You will also need GNU coreutils: https://stackoverflow.com/a/4031502/3484614\nexa_root=\"$(dirname \"$(dirname \"$(greadlink -fm \"$0\")\")\")\"\ntoml_file=\"$exa_root\"/Cargo.toml\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n",
                    "rendered": {
                      "text": "# You will also need GNU coreutils: https://stackoverflow.com/a/4031502/3484614\nexa_root=\"$(dirname \"$(dirname \"$(greadlink -fm \"$0\")\")\")\"\ntoml_file=\"$exa_root\"/Cargo.toml\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n",
                      "markdown": "`# You will also need GNU coreutils: https://stackoverflow.com/a/4031502/3484614\nexa_root=\"$(dirname \"$(dirname \"$(greadlink -fm \"$0\")\")\")\"\ntoml_file=\"$exa_root\"/Cargo.toml\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 50,
                  "endLine": 12,
                  "endColumn": 58,
                  "snippet": {
                    "text": "# and it doesn’t run the xtests.\n\n\n# Virtualising macOS is a legal minefield, so this script is ‘local’ instead\n# of ‘dev’: I run it from my actual machine, rather than from a VM.\nuname=$(uname -s)\nif [[ \"$uname\" != \"Darwin\" ]]; then\n",
                    "rendered": {
                      "text": "# and it doesn’t run the xtests.\n\n\n# Virtualising macOS is a legal minefield, so this script is ‘local’ instead\n# of ‘dev’: I run it from my actual machine, rather than from a VM.\nuname=$(uname -s)\nif [[ \"$uname\" != \"Darwin\" ]]; then\n",
                      "markdown": "`# and it doesn’t run the xtests.\n\n\n# Virtualising macOS is a legal minefield, so this script is ‘local’ instead\n# of ‘dev’: I run it from my actual machine, rather than from a VM.\nuname=$(uname -s)\nif [[ \"$uname\" != \"Darwin\" ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/local-package-for-macos.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 14,
                  "snippet": {
                    "text": "set -e\n\n# This script builds a publishable release-worthy version of exa.\n# It gets the version number, builds exa using cargo, tests it, strips the\n# binary, and compresses it into a zip.\n#\n",
                    "rendered": {
                      "text": "set -e\n\n# This script builds a publishable release-worthy version of exa.\n# It gets the version number, builds exa using cargo, tests it, strips the\n# binary, and compresses it into a zip.\n#\n",
                      "markdown": "`set -e\n\n# This script builds a publishable release-worthy version of exa.\n# It gets the version number, builds exa using cargo, tests it, strips the\n# binary, and compresses it into a zip.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 17,
                  "endLine": 283,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\n# A second Git repository\n# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\ncd       \"$TEST_ROOT/git2\"\n",
                    "rendered": {
                      "text": "\n\n# A second Git repository\n# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\ncd       \"$TEST_ROOT/git2\"\n",
                      "markdown": "`\n\n# A second Git repository\n# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\ncd       \"$TEST_ROOT/git2\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 86,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\n# File name testcases.\n# bash really doesn’t want you to create a file with escaped characters\n# in its name, so we have to resort to the echo builtin and touch!\nmkdir \"$TEST_ROOT/file-names\"\necho -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n",
                    "rendered": {
                      "text": "\n\n# File name testcases.\n# bash really doesn’t want you to create a file with escaped characters\n# in its name, so we have to resort to the echo builtin and touch!\nmkdir \"$TEST_ROOT/file-names\"\necho -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n",
                      "markdown": "`\n\n# File name testcases.\n# bash really doesn’t want you to create a file with escaped characters\n# in its name, so we have to resort to the echo builtin and touch!\nmkdir \"$TEST_ROOT/file-names\"\necho -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 41,
                  "endLine": 27,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n\n# Awkward file size testcases.\n# This needs sudo to set the files’ users at the very end.\nmkdir \"$TEST_ROOT/files\"\necho -e \"\\033[1m[ 1/13]\\033[0m Creating file size testcases\"\nfor i in {1..13}; do\n",
                    "rendered": {
                      "text": "\n\n# Awkward file size testcases.\n# This needs sudo to set the files’ users at the very end.\nmkdir \"$TEST_ROOT/files\"\necho -e \"\\033[1m[ 1/13]\\033[0m Creating file size testcases\"\nfor i in {1..13}; do\n",
                      "markdown": "`\n\n# Awkward file size testcases.\n# This needs sudo to set the files’ users at the very end.\nmkdir \"$TEST_ROOT/files\"\necho -e \"\\033[1m[ 1/13]\\033[0m Creating file size testcases\"\nfor i in {1..13}; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 4,
                  "endLine": 377,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# ..\nsudo touch -t $FIXED_DATE          \"$TEST_ROOT\"\nsudo chmod 755                     \"$TEST_ROOT\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT\"\n",
                    "rendered": {
                      "text": "# ..\nsudo touch -t $FIXED_DATE          \"$TEST_ROOT\"\nsudo chmod 755                     \"$TEST_ROOT\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT\"\n",
                      "markdown": "`# ..\nsudo touch -t $FIXED_DATE          \"$TEST_ROOT\"\nsudo chmod 755                     \"$TEST_ROOT\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 4,
                  "endLine": 376,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n# ..\nsudo touch -t $FIXED_DATE          \"$TEST_ROOT\"\nsudo chmod 755                     \"$TEST_ROOT\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT\"\n",
                    "rendered": {
                      "text": "\n# ..\nsudo touch -t $FIXED_DATE          \"$TEST_ROOT\"\nsudo chmod 755                     \"$TEST_ROOT\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT\"\n",
                      "markdown": "`\n# ..\nsudo touch -t $FIXED_DATE          \"$TEST_ROOT\"\nsudo chmod 755                     \"$TEST_ROOT\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 4,
                  "endLine": 372,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# .\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens\"\nchmod 755                          \"$TEST_ROOT/hiddens\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens\"\n\n# ..\nsudo touch -t $FIXED_DATE          \"$TEST_ROOT\"\n",
                    "rendered": {
                      "text": "# .\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens\"\nchmod 755                          \"$TEST_ROOT/hiddens\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens\"\n\n# ..\nsudo touch -t $FIXED_DATE          \"$TEST_ROOT\"\n",
                      "markdown": "`# .\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens\"\nchmod 755                          \"$TEST_ROOT/hiddens\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens\"\n\n# ..\nsudo touch -t $FIXED_DATE          \"$TEST_ROOT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 55,
                  "endLine": 371,
                  "endColumn": 6,
                  "snippet": {
                    "text": "sudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens/\"*\n\n# .\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens\"\nchmod 755                          \"$TEST_ROOT/hiddens\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens\"\n\n# ..\n",
                    "rendered": {
                      "text": "sudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens/\"*\n\n# .\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens\"\nchmod 755                          \"$TEST_ROOT/hiddens\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens\"\n\n# ..\n",
                      "markdown": "`sudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens/\"*\n\n# .\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens\"\nchmod 755                          \"$TEST_ROOT/hiddens\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens\"\n\n# ..\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 4,
                  "endLine": 367,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# ./hiddens/\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens/\"*\nchmod 644                          \"$TEST_ROOT/hiddens/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens/\"*\n\n# .\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens\"\n",
                    "rendered": {
                      "text": "# ./hiddens/\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens/\"*\nchmod 644                          \"$TEST_ROOT/hiddens/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens/\"*\n\n# .\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens\"\n",
                      "markdown": "`# ./hiddens/\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens/\"*\nchmod 644                          \"$TEST_ROOT/hiddens/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens/\"*\n\n# .\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 57,
                  "endLine": 366,
                  "endColumn": 6,
                  "snippet": {
                    "text": "touch \"$TEST_ROOT/hiddens/..extra-hidden\"\n\n# ./hiddens/\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens/\"*\nchmod 644                          \"$TEST_ROOT/hiddens/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens/\"*\n\n# .\n",
                    "rendered": {
                      "text": "touch \"$TEST_ROOT/hiddens/..extra-hidden\"\n\n# ./hiddens/\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens/\"*\nchmod 644                          \"$TEST_ROOT/hiddens/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens/\"*\n\n# .\n",
                      "markdown": "`touch \"$TEST_ROOT/hiddens/..extra-hidden\"\n\n# ./hiddens/\ntouch -t $FIXED_DATE               \"$TEST_ROOT/hiddens/\"*\nchmod 644                          \"$TEST_ROOT/hiddens/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/hiddens/\"*\n\n# .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 4,
                  "endLine": 348,
                  "endColumn": 11,
                  "snippet": {
                    "text": "touch 'P'$'\\b\\211''UUU'\n\nfind \"$TEST_ROOT/git4\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git4\"\n\n\n# Hidden and dot file testcases.\n",
                    "rendered": {
                      "text": "touch 'P'$'\\b\\211''UUU'\n\nfind \"$TEST_ROOT/git4\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git4\"\n\n\n# Hidden and dot file testcases.\n",
                      "markdown": "`touch 'P'$'\\b\\211''UUU'\n\nfind \"$TEST_ROOT/git4\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git4\"\n\n\n# Hidden and dot file testcases.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 346,
                  "endLine": 347,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n# Create a non UTF-8 file\ntouch 'P'$'\\b\\211''UUU'\n\nfind \"$TEST_ROOT/git4\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git4\"\n\n\n",
                    "rendered": {
                      "text": "\n# Create a non UTF-8 file\ntouch 'P'$'\\b\\211''UUU'\n\nfind \"$TEST_ROOT/git4\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git4\"\n\n\n",
                      "markdown": "`\n# Create a non UTF-8 file\ntouch 'P'$'\\b\\211''UUU'\n\nfind \"$TEST_ROOT/git4\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git4\"\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 26,
                  "endLine": 342,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Regression test for https://github.com/ogham/exa/issues/698\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (4/4)\"\nmkdir -p \"$TEST_ROOT/git4\"\ncd       \"$TEST_ROOT/git4\"\ngit init >/dev/null\n\n# Create a non UTF-8 file\ntouch 'P'$'\\b\\211''UUU'\n",
                    "rendered": {
                      "text": "# Regression test for https://github.com/ogham/exa/issues/698\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (4/4)\"\nmkdir -p \"$TEST_ROOT/git4\"\ncd       \"$TEST_ROOT/git4\"\ngit init >/dev/null\n\n# Create a non UTF-8 file\ntouch 'P'$'\\b\\211''UUU'\n",
                      "markdown": "`# Regression test for https://github.com/ogham/exa/issues/698\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (4/4)\"\nmkdir -p \"$TEST_ROOT/git4\"\ncd       \"$TEST_ROOT/git4\"\ngit init >/dev/null\n\n# Create a non UTF-8 file\ntouch 'P'$'\\b\\211''UUU'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 39,
                  "endLine": 339,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n# A fourth Git repository\n# Regression test for https://github.com/ogham/exa/issues/698\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (4/4)\"\nmkdir -p \"$TEST_ROOT/git4\"\ncd       \"$TEST_ROOT/git4\"\ngit init >/dev/null\n",
                    "rendered": {
                      "text": "\n# A fourth Git repository\n# Regression test for https://github.com/ogham/exa/issues/698\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (4/4)\"\nmkdir -p \"$TEST_ROOT/git4\"\ncd       \"$TEST_ROOT/git4\"\ngit init >/dev/null\n",
                      "markdown": "`\n# A fourth Git repository\n# Regression test for https://github.com/ogham/exa/issues/698\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (4/4)\"\nmkdir -p \"$TEST_ROOT/git4\"\ncd       \"$TEST_ROOT/git4\"\ngit init >/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 10,
                  "endLine": 337,
                  "endColumn": 15,
                  "snippet": {
                    "text": "sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git3\"\n\n\n# A fourth Git repository\n# Regression test for https://github.com/ogham/exa/issues/698\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (4/4)\"\nmkdir -p \"$TEST_ROOT/git4\"\n",
                    "rendered": {
                      "text": "sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git3\"\n\n\n# A fourth Git repository\n# Regression test for https://github.com/ogham/exa/issues/698\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (4/4)\"\nmkdir -p \"$TEST_ROOT/git4\"\n",
                      "markdown": "`sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git3\"\n\n\n# A fourth Git repository\n# Regression test for https://github.com/ogham/exa/issues/698\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (4/4)\"\nmkdir -p \"$TEST_ROOT/git4\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 4,
                  "endLine": 334,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n# This normally fails with:\nfind \"$TEST_ROOT/git3\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git3\"\n\n\n# A fourth Git repository\n",
                    "rendered": {
                      "text": "\n# This normally fails with:\nfind \"$TEST_ROOT/git3\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git3\"\n\n\n# A fourth Git repository\n",
                      "markdown": "`\n# This normally fails with:\nfind \"$TEST_ROOT/git3\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git3\"\n\n\n# A fourth Git repository\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 27,
                  "endLine": 333,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# Create a symbolic link pointing to a non-existing file\nln -s aaa/aaa/a b\n\n# This normally fails with:\nfind \"$TEST_ROOT/git3\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git3\"\n\n\n",
                    "rendered": {
                      "text": "# Create a symbolic link pointing to a non-existing file\nln -s aaa/aaa/a b\n\n# This normally fails with:\nfind \"$TEST_ROOT/git3\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git3\"\n\n\n",
                      "markdown": "`# Create a symbolic link pointing to a non-existing file\nln -s aaa/aaa/a b\n\n# This normally fails with:\nfind \"$TEST_ROOT/git3\" -exec touch {} -h -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git3\"\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 26,
                  "endLine": 327,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Regression test for https://github.com/ogham/exa/issues/526\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (3/4)\"\nmkdir -p \"$TEST_ROOT/git3\"\ncd       \"$TEST_ROOT/git3\"\ngit init >/dev/null\n\n# Create a symbolic link pointing to a non-existing file\nln -s aaa/aaa/a b\n",
                    "rendered": {
                      "text": "# Regression test for https://github.com/ogham/exa/issues/526\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (3/4)\"\nmkdir -p \"$TEST_ROOT/git3\"\ncd       \"$TEST_ROOT/git3\"\ngit init >/dev/null\n\n# Create a symbolic link pointing to a non-existing file\nln -s aaa/aaa/a b\n",
                      "markdown": "`# Regression test for https://github.com/ogham/exa/issues/526\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (3/4)\"\nmkdir -p \"$TEST_ROOT/git3\"\ncd       \"$TEST_ROOT/git3\"\ngit init >/dev/null\n\n# Create a symbolic link pointing to a non-existing file\nln -s aaa/aaa/a b\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 39,
                  "endLine": 324,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n# A third Git repository\n# Regression test for https://github.com/ogham/exa/issues/526\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (3/4)\"\nmkdir -p \"$TEST_ROOT/git3\"\ncd       \"$TEST_ROOT/git3\"\ngit init >/dev/null\n",
                    "rendered": {
                      "text": "\n# A third Git repository\n# Regression test for https://github.com/ogham/exa/issues/526\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (3/4)\"\nmkdir -p \"$TEST_ROOT/git3\"\ncd       \"$TEST_ROOT/git3\"\ngit init >/dev/null\n",
                      "markdown": "`\n# A third Git repository\n# Regression test for https://github.com/ogham/exa/issues/526\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (3/4)\"\nmkdir -p \"$TEST_ROOT/git3\"\ncd       \"$TEST_ROOT/git3\"\ngit init >/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 9,
                  "endLine": 322,
                  "endColumn": 14,
                  "snippet": {
                    "text": "sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git2\"\n\n\n# A third Git repository\n# Regression test for https://github.com/ogham/exa/issues/526\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (3/4)\"\nmkdir -p \"$TEST_ROOT/git3\"\n",
                    "rendered": {
                      "text": "sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git2\"\n\n\n# A third Git repository\n# Regression test for https://github.com/ogham/exa/issues/526\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (3/4)\"\nmkdir -p \"$TEST_ROOT/git3\"\n",
                      "markdown": "`sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git2\"\n\n\n# A third Git repository\n# Regression test for https://github.com/ogham/exa/issues/526\necho -e \"\\033[1m[12/13]\\033[0m Creating Git testcases (3/4)\"\nmkdir -p \"$TEST_ROOT/git3\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 4,
                  "endLine": 319,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# the ‘deeply’ directory.\n\nfind \"$TEST_ROOT/git2\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git2\"\n\n\n# A third Git repository\n",
                    "rendered": {
                      "text": "# the ‘deeply’ directory.\n\nfind \"$TEST_ROOT/git2\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git2\"\n\n\n# A third Git repository\n",
                      "markdown": "`# the ‘deeply’ directory.\n\nfind \"$TEST_ROOT/git2\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git2\"\n\n\n# A third Git repository\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 317,
                  "endLine": 318,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# it’s in the sub-repository but hasn’t been added to it. Were the sub-repo not\n# present, it would be marked as a new file, as the top-level repo knows about\n# the ‘deeply’ directory.\n\nfind \"$TEST_ROOT/git2\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git2\"\n\n\n",
                    "rendered": {
                      "text": "# it’s in the sub-repository but hasn’t been added to it. Were the sub-repo not\n# present, it would be marked as a new file, as the top-level repo knows about\n# the ‘deeply’ directory.\n\nfind \"$TEST_ROOT/git2\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git2\"\n\n\n",
                      "markdown": "`# it’s in the sub-repository but hasn’t been added to it. Were the sub-repo not\n# present, it would be marked as a new file, as the top-level repo knows about\n# the ‘deeply’ directory.\n\nfind \"$TEST_ROOT/git2\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git2\"\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 32,
                  "endLine": 311,
                  "endColumn": 4,
                  "snippet": {
                    "text": "touch \"target/another ignored file\"\n\nmkdir \"deeply/nested/repository\"\ncd    \"deeply/nested/repository\"\ngit init >/dev/null\ntouch subfile\n# This file, ‘subfile’, should _not_ be marked as a new file by exa, because\n# it’s in the sub-repository but hasn’t been added to it. Were the sub-repo not\n",
                    "rendered": {
                      "text": "touch \"target/another ignored file\"\n\nmkdir \"deeply/nested/repository\"\ncd    \"deeply/nested/repository\"\ngit init >/dev/null\ntouch subfile\n# This file, ‘subfile’, should _not_ be marked as a new file by exa, because\n# it’s in the sub-repository but hasn’t been added to it. Were the sub-repo not\n",
                      "markdown": "`touch \"target/another ignored file\"\n\nmkdir \"deeply/nested/repository\"\ncd    \"deeply/nested/repository\"\ngit init >/dev/null\ntouch subfile\n# This file, ‘subfile’, should _not_ be marked as a new file by exa, because\n# it’s in the sub-repository but hasn’t been added to it. Were the sub-repo not\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 39,
                  "endLine": 291,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git init >/dev/null\n\ntouch \"deeply/nested/directory/upd8d\"\ngit add \"deeply/nested/directory/upd8d\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"Now with contents\" > \"deeply/nested/directory/upd8d\"\ntouch \"deeply/nested/directory/l8st\"\n",
                    "rendered": {
                      "text": "git init >/dev/null\n\ntouch \"deeply/nested/directory/upd8d\"\ngit add \"deeply/nested/directory/upd8d\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"Now with contents\" > \"deeply/nested/directory/upd8d\"\ntouch \"deeply/nested/directory/l8st\"\n",
                      "markdown": "`git init >/dev/null\n\ntouch \"deeply/nested/directory/upd8d\"\ngit add \"deeply/nested/directory/upd8d\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"Now with contents\" > \"deeply/nested/directory/upd8d\"\ntouch \"deeply/nested/directory/l8st\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 37,
                  "endLine": 290,
                  "endColumn": 4,
                  "snippet": {
                    "text": "cd       \"$TEST_ROOT/git2\"\ngit init >/dev/null\n\ntouch \"deeply/nested/directory/upd8d\"\ngit add \"deeply/nested/directory/upd8d\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"Now with contents\" > \"deeply/nested/directory/upd8d\"\n",
                    "rendered": {
                      "text": "cd       \"$TEST_ROOT/git2\"\ngit init >/dev/null\n\ntouch \"deeply/nested/directory/upd8d\"\ngit add \"deeply/nested/directory/upd8d\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"Now with contents\" > \"deeply/nested/directory/upd8d\"\n",
                      "markdown": "`cd       \"$TEST_ROOT/git2\"\ngit init >/dev/null\n\ntouch \"deeply/nested/directory/upd8d\"\ngit add \"deeply/nested/directory/upd8d\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"Now with contents\" > \"deeply/nested/directory/upd8d\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 26,
                  "endLine": 287,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\ncd       \"$TEST_ROOT/git2\"\ngit init >/dev/null\n\ntouch \"deeply/nested/directory/upd8d\"\ngit add \"deeply/nested/directory/upd8d\"\n",
                    "rendered": {
                      "text": "# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\ncd       \"$TEST_ROOT/git2\"\ngit init >/dev/null\n\ntouch \"deeply/nested/directory/upd8d\"\ngit add \"deeply/nested/directory/upd8d\"\n",
                      "markdown": "`# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\ncd       \"$TEST_ROOT/git2\"\ngit init >/dev/null\n\ntouch \"deeply/nested/directory/upd8d\"\ngit add \"deeply/nested/directory/upd8d\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 39,
                  "endLine": 284,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n# A second Git repository\n# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\ncd       \"$TEST_ROOT/git2\"\ngit init >/dev/null\n",
                    "rendered": {
                      "text": "\n# A second Git repository\n# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\ncd       \"$TEST_ROOT/git2\"\ngit init >/dev/null\n",
                      "markdown": "`\n# A second Git repository\n# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\ncd       \"$TEST_ROOT/git2\"\ngit init >/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 10,
                  "endLine": 282,
                  "endColumn": 15,
                  "snippet": {
                    "text": "sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git\"\n\n\n# A second Git repository\n# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\n",
                    "rendered": {
                      "text": "sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git\"\n\n\n# A second Git repository\n# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\n",
                      "markdown": "`sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git\"\n\n\n# A second Git repository\n# for testing two at once\necho -e \"\\033[1m[11/13]\\033[0m Creating Git testcases (2/4)\"\nmkdir -p \"$TEST_ROOT/git2/deeply/nested/directory\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 4,
                  "endLine": 279,
                  "endColumn": 11,
                  "snippet": {
                    "text": "touch additions/unstaged\n\nfind \"$TEST_ROOT/git\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git\"\n\n\n# A second Git repository\n",
                    "rendered": {
                      "text": "touch additions/unstaged\n\nfind \"$TEST_ROOT/git\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git\"\n\n\n# A second Git repository\n",
                      "markdown": "`touch additions/unstaged\n\nfind \"$TEST_ROOT/git\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git\"\n\n\n# A second Git repository\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 277,
                  "endLine": 278,
                  "endColumn": 5,
                  "snippet": {
                    "text": "git add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\ntouch additions/unstaged\n\nfind \"$TEST_ROOT/git\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git\"\n\n\n",
                    "rendered": {
                      "text": "git add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\ntouch additions/unstaged\n\nfind \"$TEST_ROOT/git\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git\"\n\n\n",
                      "markdown": "`git add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\ntouch additions/unstaged\n\nfind \"$TEST_ROOT/git\" -exec touch {} -t $FIXED_DATE \\;\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/git\"\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 28,
                  "endLine": 275,
                  "endColumn": 33,
                  "snippet": {
                    "text": "mv moves/{hither,thither}\n\ngit add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\ntouch additions/unstaged\n\nfind \"$TEST_ROOT/git\" -exec touch {} -t $FIXED_DATE \\;\n",
                    "rendered": {
                      "text": "mv moves/{hither,thither}\n\ngit add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\ntouch additions/unstaged\n\nfind \"$TEST_ROOT/git\" -exec touch {} -t $FIXED_DATE \\;\n",
                      "markdown": "`mv moves/{hither,thither}\n\ngit add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\ntouch additions/unstaged\n\nfind \"$TEST_ROOT/git\" -exec touch {} -t $FIXED_DATE \\;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 273,
                  "endLine": 274,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\nmv moves/{hither,thither}\n\ngit add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\ntouch additions/unstaged\n\n",
                    "rendered": {
                      "text": "echo \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\nmv moves/{hither,thither}\n\ngit add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\ntouch additions/unstaged\n\n",
                      "markdown": "`echo \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\nmv moves/{hither,thither}\n\ngit add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\ntouch additions/unstaged\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 31,
                  "endLine": 272,
                  "endColumn": 3,
                  "snippet": {
                    "text": "git commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\nmv moves/{hither,thither}\n\ngit add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\n",
                    "rendered": {
                      "text": "git commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\nmv moves/{hither,thither}\n\ngit add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\n",
                      "markdown": "`git commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\nmv moves/{hither,thither}\n\ngit add edits moves additions\necho \"more modifications!\" | tee edits/unstaged edits/both additions/edited >/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 23,
                  "endLine": 270,
                  "endColumn": 28,
                  "snippet": {
                    "text": "git config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\nmv moves/{hither,thither}\n\n",
                    "rendered": {
                      "text": "git config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\nmv moves/{hither,thither}\n\n",
                      "markdown": "`git config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\nmv moves/{hither,thither}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 39,
                  "endLine": 268,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\n",
                    "rendered": {
                      "text": "\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\n",
                      "markdown": "`\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\ntouch additions/{staged,edited}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 44,
                  "endLine": 267,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"this file gets moved\" > moves/hither\n\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\n",
                    "rendered": {
                      "text": "echo \"this file gets moved\" > moves/hither\n\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\n",
                      "markdown": "`echo \"this file gets moved\" > moves/hither\n\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\necho \"modifications!\" | tee edits/{staged,both} >/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 19,
                  "endLine": 266,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"original content\" | tee edits/{staged,unstaged,both} >/dev/null\necho \"this file gets moved\" > moves/hither\n\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\n",
                    "rendered": {
                      "text": "echo \"original content\" | tee edits/{staged,unstaged,both} >/dev/null\necho \"this file gets moved\" > moves/hither\n\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\n",
                      "markdown": "`echo \"original content\" | tee edits/{staged,unstaged,both} >/dev/null\necho \"this file gets moved\" > moves/hither\n\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 264,
                  "endLine": 265,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\necho \"original content\" | tee edits/{staged,unstaged,both} >/dev/null\necho \"this file gets moved\" > moves/hither\n\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n",
                    "rendered": {
                      "text": "\necho \"original content\" | tee edits/{staged,unstaged,both} >/dev/null\necho \"this file gets moved\" > moves/hither\n\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n",
                      "markdown": "`\necho \"original content\" | tee edits/{staged,unstaged,both} >/dev/null\necho \"this file gets moved\" > moves/hither\n\ngit add edits moves\ngit config --global user.email \"exa@exa.exa\"\ngit config --global user.name \"Exa Exa\"\ngit commit -m \"Automated test commit\" >/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 25,
                  "endLine": 262,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nmkdir edits additions moves\n\necho \"original content\" | tee edits/{staged,unstaged,both} >/dev/null\necho \"this file gets moved\" > moves/hither\n\ngit add edits moves\n",
                    "rendered": {
                      "text": "\nmkdir edits additions moves\n\necho \"original content\" | tee edits/{staged,unstaged,both} >/dev/null\necho \"this file gets moved\" > moves/hither\n\ngit add edits moves\n",
                      "markdown": "`\nmkdir edits additions moves\n\necho \"original content\" | tee edits/{staged,unstaged,both} >/dev/null\necho \"this file gets moved\" > moves/hither\n\ngit add edits moves\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 22,
                  "endLine": 258,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\ngit init >/dev/null\n\nmkdir edits additions moves\n\n",
                    "rendered": {
                      "text": "# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\ngit init >/dev/null\n\nmkdir edits additions moves\n\n",
                      "markdown": "`# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\ngit init >/dev/null\n\nmkdir edits additions moves\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 39,
                  "endLine": 255,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\ngit init >/dev/null\n",
                    "rendered": {
                      "text": "\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\ngit init >/dev/null\n",
                      "markdown": "`\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\ngit init >/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 68,
                  "endLine": 255,
                  "snippet": {
                    "text": "\n\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\ngit init >/dev/null\n",
                    "rendered": {
                      "text": "\n\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\ngit init >/dev/null\n",
                      "markdown": "`\n\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\ngit init >/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 47,
                  "endLine": 254,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\n",
                    "rendered": {
                      "text": "\n\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\n",
                      "markdown": "`\n\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\ncd    \"$TEST_ROOT/git\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 10,
                  "endLine": 253,
                  "endColumn": 15,
                  "snippet": {
                    "text": "sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/attributes\"\n\n\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\n",
                    "rendered": {
                      "text": "sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/attributes\"\n\n\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\n",
                      "markdown": "`sudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/attributes\"\n\n\n# A sample Git repository\n# This uses cd because it's easier than telling Git where to go each time\necho -e \"\\033[1m[10/13]\\033[0m Creating Git testcases (1/4)\"\nmkdir \"$TEST_ROOT/git\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 4,
                  "endLine": 250,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#chmod +a \"$FIXED_USER deny readextattr\" \"$TEST_ROOT/attributes\"/**/*_forbidden\n\nsudo chmod 000                        \"$TEST_ROOT/attributes\"/**/*_forbidden\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/attributes\"\n\n\n# A sample Git repository\n",
                    "rendered": {
                      "text": "#chmod +a \"$FIXED_USER deny readextattr\" \"$TEST_ROOT/attributes\"/**/*_forbidden\n\nsudo chmod 000                        \"$TEST_ROOT/attributes\"/**/*_forbidden\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/attributes\"\n\n\n# A sample Git repository\n",
                      "markdown": "`#chmod +a \"$FIXED_USER deny readextattr\" \"$TEST_ROOT/attributes\"/**/*_forbidden\n\nsudo chmod 000                        \"$TEST_ROOT/attributes\"/**/*_forbidden\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/attributes\"\n\n\n# A sample Git repository\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 4,
                  "endLine": 249,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# but it only works on macos:\n#chmod +a \"$FIXED_USER deny readextattr\" \"$TEST_ROOT/attributes\"/**/*_forbidden\n\nsudo chmod 000                        \"$TEST_ROOT/attributes\"/**/*_forbidden\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/attributes\"\n\n\n",
                    "rendered": {
                      "text": "# but it only works on macos:\n#chmod +a \"$FIXED_USER deny readextattr\" \"$TEST_ROOT/attributes\"/**/*_forbidden\n\nsudo chmod 000                        \"$TEST_ROOT/attributes\"/**/*_forbidden\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/attributes\"\n\n\n",
                      "markdown": "`# but it only works on macos:\n#chmod +a \"$FIXED_USER deny readextattr\" \"$TEST_ROOT/attributes\"/**/*_forbidden\n\nsudo chmod 000                        \"$TEST_ROOT/attributes\"/**/*_forbidden\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/attributes\"\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 242,
                  "endLine": 243,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    touch $dir/this-file\n    touch $dir/that-file\ndone\n\nfind \"$TEST_ROOT/attributes\" -exec touch {} -t $FIXED_DATE \\;\n\n# I want to use the following to test,\n# but it only works on macos:\n",
                    "rendered": {
                      "text": "    touch $dir/this-file\n    touch $dir/that-file\ndone\n\nfind \"$TEST_ROOT/attributes\" -exec touch {} -t $FIXED_DATE \\;\n\n# I want to use the following to test,\n# but it only works on macos:\n",
                      "markdown": "`    touch $dir/this-file\n    touch $dir/that-file\ndone\n\nfind \"$TEST_ROOT/attributes\" -exec touch {} -t $FIXED_DATE \\;\n\n# I want to use the following to test,\n# but it only works on macos:\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 4,
                  "endLine": 208,
                  "endColumn": 11,
                  "snippet": {
                    "text": "touch -t $FIXED_MED_DATE -a \"$TEST_ROOT/dates/pear\"\ntouch -t $FIXED_NEW_DATE -a \"$TEST_ROOT/dates/peach\"\n\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/dates\"\n\nmkdir \"$TEST_ROOT/far-dates\"\ntouch -t $FIXED_PAST_DATE    \"$TEST_ROOT/far-dates/the-distant-past\"\n",
                    "rendered": {
                      "text": "touch -t $FIXED_MED_DATE -a \"$TEST_ROOT/dates/pear\"\ntouch -t $FIXED_NEW_DATE -a \"$TEST_ROOT/dates/peach\"\n\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/dates\"\n\nmkdir \"$TEST_ROOT/far-dates\"\ntouch -t $FIXED_PAST_DATE    \"$TEST_ROOT/far-dates/the-distant-past\"\n",
                      "markdown": "`touch -t $FIXED_MED_DATE -a \"$TEST_ROOT/dates/pear\"\ntouch -t $FIXED_NEW_DATE -a \"$TEST_ROOT/dates/peach\"\n\nsudo chown $FIXED_USER:$FIXED_USER -R \"$TEST_ROOT/dates\"\n\nmkdir \"$TEST_ROOT/far-dates\"\ntouch -t $FIXED_PAST_DATE    \"$TEST_ROOT/far-dates/the-distant-past\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 48,
                  "endLine": 188,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n# Awkward date and time testcases.\nmkdir \"$TEST_ROOT/dates\"\necho -e \"\\033[1m[ 8/13]\\033[0m Creating date and time testcases\"\n\n# created dates\n# there’s no way to touch the created date of a file...\n",
                    "rendered": {
                      "text": "\n# Awkward date and time testcases.\nmkdir \"$TEST_ROOT/dates\"\necho -e \"\\033[1m[ 8/13]\\033[0m Creating date and time testcases\"\n\n# created dates\n# there’s no way to touch the created date of a file...\n",
                      "markdown": "`\n# Awkward date and time testcases.\nmkdir \"$TEST_ROOT/dates\"\necho -e \"\\033[1m[ 8/13]\\033[0m Creating date and time testcases\"\n\n# created dates\n# there’s no way to touch the created date of a file...\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 18,
                  "endLine": 186,
                  "endColumn": 24,
                  "snippet": {
                    "text": "done\n\n\n# Awkward date and time testcases.\nmkdir \"$TEST_ROOT/dates\"\necho -e \"\\033[1m[ 8/13]\\033[0m Creating date and time testcases\"\n\n",
                    "rendered": {
                      "text": "done\n\n\n# Awkward date and time testcases.\nmkdir \"$TEST_ROOT/dates\"\necho -e \"\\033[1m[ 8/13]\\033[0m Creating date and time testcases\"\n\n",
                      "markdown": "`done\n\n\n# Awkward date and time testcases.\nmkdir \"$TEST_ROOT/dates\"\necho -e \"\\033[1m[ 8/13]\\033[0m Creating date and time testcases\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 8,
                  "endLine": 181,
                  "endColumn": 15,
                  "snippet": {
                    "text": "for perms in 000 001 002 004 010 020 040 100 200 400 644 755 777 1000 1001 2000 2010 4000 4100 7666 7777; do\n    touch                              \"$TEST_ROOT/permissions/$perms\"\n    sudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/$perms\"\n    sudo chmod $perms                  \"$TEST_ROOT/permissions/$perms\"\n    sudo touch -t $FIXED_DATE          \"$TEST_ROOT/permissions/$perms\"\ndone\n\n",
                    "rendered": {
                      "text": "for perms in 000 001 002 004 010 020 040 100 200 400 644 755 777 1000 1001 2000 2010 4000 4100 7666 7777; do\n    touch                              \"$TEST_ROOT/permissions/$perms\"\n    sudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/$perms\"\n    sudo chmod $perms                  \"$TEST_ROOT/permissions/$perms\"\n    sudo touch -t $FIXED_DATE          \"$TEST_ROOT/permissions/$perms\"\ndone\n\n",
                      "markdown": "`for perms in 000 001 002 004 010 020 040 100 200 400 644 755 777 1000 1001 2000 2010 4000 4100 7666 7777; do\n    touch                              \"$TEST_ROOT/permissions/$perms\"\n    sudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/$perms\"\n    sudo chmod $perms                  \"$TEST_ROOT/permissions/$perms\"\n    sudo touch -t $FIXED_DATE          \"$TEST_ROOT/permissions/$perms\"\ndone\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 8,
                  "endLine": 180,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nfor perms in 000 001 002 004 010 020 040 100 200 400 644 755 777 1000 1001 2000 2010 4000 4100 7666 7777; do\n    touch                              \"$TEST_ROOT/permissions/$perms\"\n    sudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/$perms\"\n    sudo chmod $perms                  \"$TEST_ROOT/permissions/$perms\"\n    sudo touch -t $FIXED_DATE          \"$TEST_ROOT/permissions/$perms\"\ndone\n",
                    "rendered": {
                      "text": "\nfor perms in 000 001 002 004 010 020 040 100 200 400 644 755 777 1000 1001 2000 2010 4000 4100 7666 7777; do\n    touch                              \"$TEST_ROOT/permissions/$perms\"\n    sudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/$perms\"\n    sudo chmod $perms                  \"$TEST_ROOT/permissions/$perms\"\n    sudo touch -t $FIXED_DATE          \"$TEST_ROOT/permissions/$perms\"\ndone\n",
                      "markdown": "`\nfor perms in 000 001 002 004 010 020 040 100 200 400 644 755 777 1000 1001 2000 2010 4000 4100 7666 7777; do\n    touch                              \"$TEST_ROOT/permissions/$perms\"\n    sudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/$perms\"\n    sudo chmod $perms                  \"$TEST_ROOT/permissions/$perms\"\n    sudo touch -t $FIXED_DATE          \"$TEST_ROOT/permissions/$perms\"\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 4,
                  "endLine": 176,
                  "endColumn": 11,
                  "snippet": {
                    "text": "mkdir                              \"$TEST_ROOT/permissions/forbidden-directory\"\nchmod 000                          \"$TEST_ROOT/permissions/forbidden-directory\"\ntouch -t $FIXED_DATE               \"$TEST_ROOT/permissions/forbidden-directory\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/forbidden-directory\"\n\nfor perms in 000 001 002 004 010 020 040 100 200 400 644 755 777 1000 1001 2000 2010 4000 4100 7666 7777; do\n    touch                              \"$TEST_ROOT/permissions/$perms\"\n",
                    "rendered": {
                      "text": "mkdir                              \"$TEST_ROOT/permissions/forbidden-directory\"\nchmod 000                          \"$TEST_ROOT/permissions/forbidden-directory\"\ntouch -t $FIXED_DATE               \"$TEST_ROOT/permissions/forbidden-directory\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/forbidden-directory\"\n\nfor perms in 000 001 002 004 010 020 040 100 200 400 644 755 777 1000 1001 2000 2010 4000 4100 7666 7777; do\n    touch                              \"$TEST_ROOT/permissions/$perms\"\n",
                      "markdown": "`mkdir                              \"$TEST_ROOT/permissions/forbidden-directory\"\nchmod 000                          \"$TEST_ROOT/permissions/forbidden-directory\"\ntouch -t $FIXED_DATE               \"$TEST_ROOT/permissions/forbidden-directory\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/forbidden-directory\"\n\nfor perms in 000 001 002 004 010 020 040 100 200 400 644 755 777 1000 1001 2000 2010 4000 4100 7666 7777; do\n    touch                              \"$TEST_ROOT/permissions/$perms\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 79,
                  "endLine": 174,
                  "endColumn": 6,
                  "snippet": {
                    "text": "mkdir \"$TEST_ROOT/permissions\"\necho -e \"\\033[1m[ 7/13]\\033[0m Creating file permission testcases\"\n\nmkdir                              \"$TEST_ROOT/permissions/forbidden-directory\"\nchmod 000                          \"$TEST_ROOT/permissions/forbidden-directory\"\ntouch -t $FIXED_DATE               \"$TEST_ROOT/permissions/forbidden-directory\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/forbidden-directory\"\n\n",
                    "rendered": {
                      "text": "mkdir \"$TEST_ROOT/permissions\"\necho -e \"\\033[1m[ 7/13]\\033[0m Creating file permission testcases\"\n\nmkdir                              \"$TEST_ROOT/permissions/forbidden-directory\"\nchmod 000                          \"$TEST_ROOT/permissions/forbidden-directory\"\ntouch -t $FIXED_DATE               \"$TEST_ROOT/permissions/forbidden-directory\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/forbidden-directory\"\n\n",
                      "markdown": "`mkdir \"$TEST_ROOT/permissions\"\necho -e \"\\033[1m[ 7/13]\\033[0m Creating file permission testcases\"\n\nmkdir                              \"$TEST_ROOT/permissions/forbidden-directory\"\nchmod 000                          \"$TEST_ROOT/permissions/forbidden-directory\"\ntouch -t $FIXED_DATE               \"$TEST_ROOT/permissions/forbidden-directory\"\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/permissions/forbidden-directory\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 4,
                  "endLine": 163,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-gid\"\nsudo chown $FIXED_USER:$FIXED_BAD_GID \"$TEST_ROOT/passwd/unknown-gid\"\n\n\n# Awkward permission testcases.\n",
                    "rendered": {
                      "text": "\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-gid\"\nsudo chown $FIXED_USER:$FIXED_BAD_GID \"$TEST_ROOT/passwd/unknown-gid\"\n\n\n# Awkward permission testcases.\n",
                      "markdown": "`\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-gid\"\nsudo chown $FIXED_USER:$FIXED_BAD_GID \"$TEST_ROOT/passwd/unknown-gid\"\n\n\n# Awkward permission testcases.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 69,
                  "endLine": 162,
                  "endColumn": 6,
                  "snippet": {
                    "text": "chmod 644                             \"$TEST_ROOT/passwd/unknown-uid\"\nsudo chown $FIXED_BAD_UID:$FIXED_USER \"$TEST_ROOT/passwd/unknown-uid\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-gid\"\nsudo chown $FIXED_USER:$FIXED_BAD_GID \"$TEST_ROOT/passwd/unknown-gid\"\n\n\n",
                    "rendered": {
                      "text": "chmod 644                             \"$TEST_ROOT/passwd/unknown-uid\"\nsudo chown $FIXED_BAD_UID:$FIXED_USER \"$TEST_ROOT/passwd/unknown-uid\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-gid\"\nsudo chown $FIXED_USER:$FIXED_BAD_GID \"$TEST_ROOT/passwd/unknown-gid\"\n\n\n",
                      "markdown": "`chmod 644                             \"$TEST_ROOT/passwd/unknown-uid\"\nsudo chown $FIXED_BAD_UID:$FIXED_USER \"$TEST_ROOT/passwd/unknown-uid\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-gid\"\nsudo chown $FIXED_USER:$FIXED_BAD_GID \"$TEST_ROOT/passwd/unknown-gid\"\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 4,
                  "endLine": 159,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-uid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-uid\"\nsudo chown $FIXED_BAD_UID:$FIXED_USER \"$TEST_ROOT/passwd/unknown-uid\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-gid\"\n",
                    "rendered": {
                      "text": "\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-uid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-uid\"\nsudo chown $FIXED_BAD_UID:$FIXED_USER \"$TEST_ROOT/passwd/unknown-uid\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-gid\"\n",
                      "markdown": "`\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-uid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-uid\"\nsudo chown $FIXED_BAD_UID:$FIXED_USER \"$TEST_ROOT/passwd/unknown-uid\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-gid\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 69,
                  "endLine": 158,
                  "endColumn": 6,
                  "snippet": {
                    "text": "mkdir \"$TEST_ROOT/passwd\"\necho -e \"\\033[1m[ 6/13]\\033[0m Creating user and group testcases\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-uid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-uid\"\nsudo chown $FIXED_BAD_UID:$FIXED_USER \"$TEST_ROOT/passwd/unknown-uid\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\n",
                    "rendered": {
                      "text": "mkdir \"$TEST_ROOT/passwd\"\necho -e \"\\033[1m[ 6/13]\\033[0m Creating user and group testcases\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-uid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-uid\"\nsudo chown $FIXED_BAD_UID:$FIXED_USER \"$TEST_ROOT/passwd/unknown-uid\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\n",
                      "markdown": "`mkdir \"$TEST_ROOT/passwd\"\necho -e \"\\033[1m[ 6/13]\\033[0m Creating user and group testcases\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-uid\"\nchmod 644                             \"$TEST_ROOT/passwd/unknown-uid\"\nsudo chown $FIXED_BAD_UID:$FIXED_USER \"$TEST_ROOT/passwd/unknown-uid\"\n\ntouch -t $FIXED_DATE                  \"$TEST_ROOT/passwd/unknown-gid\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 47,
                  "endLine": 152,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n# Awkward passwd testcases.\n# sudo is needed for these because we technically aren’t a member\n# of the groups (because they don’t exist), and chown and chgrp\n# are smart enough to disallow it!\nmkdir \"$TEST_ROOT/passwd\"\necho -e \"\\033[1m[ 6/13]\\033[0m Creating user and group testcases\"\n",
                    "rendered": {
                      "text": "\n# Awkward passwd testcases.\n# sudo is needed for these because we technically aren’t a member\n# of the groups (because they don’t exist), and chown and chgrp\n# are smart enough to disallow it!\nmkdir \"$TEST_ROOT/passwd\"\necho -e \"\\033[1m[ 6/13]\\033[0m Creating user and group testcases\"\n",
                      "markdown": "`\n# Awkward passwd testcases.\n# sudo is needed for these because we technically aren’t a member\n# of the groups (because they don’t exist), and chown and chgrp\n# are smart enough to disallow it!\nmkdir \"$TEST_ROOT/passwd\"\necho -e \"\\033[1m[ 6/13]\\033[0m Creating user and group testcases\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 60,
                  "endLine": 119,
                  "endColumn": 67,
                  "snippet": {
                    "text": "mkdir \"$TEST_ROOT/file-names/links\"\nln -s \"$TEST_ROOT/file-names/new-line-dir\"*/* \"$TEST_ROOT/file-names/links\"\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\" | xargs -0 rm\n\n\n# Special file testcases.\n",
                    "rendered": {
                      "text": "mkdir \"$TEST_ROOT/file-names/links\"\nln -s \"$TEST_ROOT/file-names/new-line-dir\"*/* \"$TEST_ROOT/file-names/links\"\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\" | xargs -0 rm\n\n\n# Special file testcases.\n",
                      "markdown": "`mkdir \"$TEST_ROOT/file-names/links\"\nln -s \"$TEST_ROOT/file-names/new-line-dir\"*/* \"$TEST_ROOT/file-names/links\"\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\" | xargs -0 rm\n\n\n# Special file testcases.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 68,
                  "endLine": 114,
                  "endColumn": 75,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n\nmkdir \"$TEST_ROOT/file-names/links\"\nln -s \"$TEST_ROOT/file-names/new-line-dir\"*/* \"$TEST_ROOT/file-names/links\"\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n\nmkdir \"$TEST_ROOT/file-names/links\"\nln -s \"$TEST_ROOT/file-names/new-line-dir\"*/* \"$TEST_ROOT/file-names/links\"\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n\nmkdir \"$TEST_ROOT/file-names/links\"\nln -s \"$TEST_ROOT/file-names/new-line-dir\"*/* \"$TEST_ROOT/file-names/links\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 67,
                  "endLine": 113,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n\nmkdir \"$TEST_ROOT/file-names/links\"\n",
                    "rendered": {
                      "text": "\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n\nmkdir \"$TEST_ROOT/file-names/links\"\n",
                      "markdown": "`\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n\nmkdir \"$TEST_ROOT/file-names/links\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 68,
                  "endLine": 112,
                  "endColumn": 75,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 68,
                  "endLine": 111,
                  "endColumn": 75,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/another: [\\n]\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/broken\"         | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 69,
                  "endLine": 109,
                  "endColumn": 76,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]/subfile\"        | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 70,
                  "endLine": 108,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\n",
                    "rendered": {
                      "text": "\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\n",
                      "markdown": "`\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/new-line-dir: [\\n]\"                | xargs -0 mkdir\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 71,
                  "endLine": 107,
                  "endColumn": 78,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 72,
                  "endLine": 106,
                  "endColumn": 79,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-3: [\\xe2\\x82\\x28]\"      | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-4: [\\xf0\\x28\\x8c\\x28]\" | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 62,
                  "endLine": 104,
                  "endColumn": 69,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-2: [\\xc3\\x28]\"           | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 63,
                  "endLine": 103,
                  "endColumn": 70,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/invalid-utf8-1: [\\xFF]\"                | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 53,
                  "endLine": 101,
                  "endColumn": 60,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/ansi: [\\033[34mblue\\033[0m]\" | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 53,
                  "endLine": 100,
                  "endColumn": 60,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/escape: [\\033]\"               | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 53,
                  "endLine": 99,
                  "endColumn": 60,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 53,
                  "endLine": 98,
                  "endColumn": 60,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/vertical-tab: [\\v]\" | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 53,
                  "endLine": 97,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\n",
                    "rendered": {
                      "text": "\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\n",
                      "markdown": "`\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/tab: [\\t]\"          | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 53,
                  "endLine": 96,
                  "endColumn": 60,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/return: [\\r]\"       | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 53,
                  "endLine": 95,
                  "endColumn": 60,
                  "snippet": {
                    "text": "echo -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\n",
                      "markdown": "`echo -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/form-feed: [\\f]\"    | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/new-line: [\\n]\"     | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 47,
                  "endLine": 93,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\necho -ne \"$TEST_ROOT/file-names/ascii: hello\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\n",
                    "rendered": {
                      "text": "\necho -ne \"$TEST_ROOT/file-names/ascii: hello\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\n",
                      "markdown": "`\necho -ne \"$TEST_ROOT/file-names/ascii: hello\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/backspace: [\\b]\"    | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 47,
                  "endLine": 92,
                  "endColumn": 54,
                  "snippet": {
                    "text": "echo -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n\necho -ne \"$TEST_ROOT/file-names/ascii: hello\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\n",
                    "rendered": {
                      "text": "echo -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n\necho -ne \"$TEST_ROOT/file-names/ascii: hello\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\n",
                      "markdown": "`echo -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n\necho -ne \"$TEST_ROOT/file-names/ascii: hello\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\necho -ne \"$TEST_ROOT/file-names/bell: [\\a]\"         | xargs -0 touch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 47,
                  "endLine": 91,
                  "endColumn": 54,
                  "snippet": {
                    "text": "mkdir \"$TEST_ROOT/file-names\"\necho -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n\necho -ne \"$TEST_ROOT/file-names/ascii: hello\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\n",
                    "rendered": {
                      "text": "mkdir \"$TEST_ROOT/file-names\"\necho -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n\necho -ne \"$TEST_ROOT/file-names/ascii: hello\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\n",
                      "markdown": "`mkdir \"$TEST_ROOT/file-names\"\necho -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n\necho -ne \"$TEST_ROOT/file-names/ascii: hello\" | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/emoji: [🆒]\"  | xargs -0 touch\necho -ne \"$TEST_ROOT/file-names/utf-8: pâté\"  | xargs -0 touch\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 86,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\n# File name testcases.\n# bash really doesn’t want you to create a file with escaped characters\n# in its name, so we have to resort to the echo builtin and touch!\nmkdir \"$TEST_ROOT/file-names\"\necho -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n",
                    "rendered": {
                      "text": "\n\n# File name testcases.\n# bash really doesn’t want you to create a file with escaped characters\n# in its name, so we have to resort to the echo builtin and touch!\nmkdir \"$TEST_ROOT/file-names\"\necho -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n",
                      "markdown": "`\n\n# File name testcases.\n# bash really doesn’t want you to create a file with escaped characters\n# in its name, so we have to resort to the echo builtin and touch!\nmkdir \"$TEST_ROOT/file-names\"\necho -e \"\\033[1m[ 3/13]\\033[0m Creating file names testcases\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 19,
                  "endLine": 44,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n# File name extension testcases.\n# These aren’t tested in details view, but we set timestamps on them to\n# test that various sort options work.\nmkdir \"$TEST_ROOT/file-names-exts\"\necho -e \"\\033[1m[ 2/13]\\033[0m Creating file name extension testcases\"\n\n",
                    "rendered": {
                      "text": "\n# File name extension testcases.\n# These aren’t tested in details view, but we set timestamps on them to\n# test that various sort options work.\nmkdir \"$TEST_ROOT/file-names-exts\"\necho -e \"\\033[1m[ 2/13]\\033[0m Creating file name extension testcases\"\n\n",
                      "markdown": "`\n# File name extension testcases.\n# These aren’t tested in details view, but we set timestamps on them to\n# test that various sort options work.\nmkdir \"$TEST_ROOT/file-names-exts\"\necho -e \"\\033[1m[ 2/13]\\033[0m Creating file name extension testcases\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 11,
                  "snippet": {
                    "text": "touch -t $FIXED_DATE \"$TEST_ROOT/files/\"*\ntouch -t $FIXED_DATE \"$TEST_ROOT/files/\"\nchmod 644 \"$TEST_ROOT/files/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/files/\"*\n\n\n# File name extension testcases.\n",
                    "rendered": {
                      "text": "touch -t $FIXED_DATE \"$TEST_ROOT/files/\"*\ntouch -t $FIXED_DATE \"$TEST_ROOT/files/\"\nchmod 644 \"$TEST_ROOT/files/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/files/\"*\n\n\n# File name extension testcases.\n",
                      "markdown": "`touch -t $FIXED_DATE \"$TEST_ROOT/files/\"*\ntouch -t $FIXED_DATE \"$TEST_ROOT/files/\"\nchmod 644 \"$TEST_ROOT/files/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/files/\"*\n\n\n# File name extension testcases.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 40,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "done\n\ntouch -t $FIXED_DATE \"$TEST_ROOT/files/\"*\ntouch -t $FIXED_DATE \"$TEST_ROOT/files/\"\nchmod 644 \"$TEST_ROOT/files/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/files/\"*\n\n\n",
                    "rendered": {
                      "text": "done\n\ntouch -t $FIXED_DATE \"$TEST_ROOT/files/\"*\ntouch -t $FIXED_DATE \"$TEST_ROOT/files/\"\nchmod 644 \"$TEST_ROOT/files/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/files/\"*\n\n\n",
                      "markdown": "`done\n\ntouch -t $FIXED_DATE \"$TEST_ROOT/files/\"*\ntouch -t $FIXED_DATE \"$TEST_ROOT/files/\"\nchmod 644 \"$TEST_ROOT/files/\"*\nsudo chown $FIXED_USER:$FIXED_USER \"$TEST_ROOT/files/\"*\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 4,
                  "endLine": 22,
                  "endColumn": 11,
                  "snippet": {
                    "text": "fi\n\nsudo mkdir \"$TEST_ROOT\"\nsudo chmod 777 \"$TEST_ROOT\"\nsudo mkdir \"$TEST_ROOT/empty\"\n\n\n",
                    "rendered": {
                      "text": "fi\n\nsudo mkdir \"$TEST_ROOT\"\nsudo chmod 777 \"$TEST_ROOT\"\nsudo mkdir \"$TEST_ROOT/empty\"\n\n\n",
                      "markdown": "`fi\n\nsudo mkdir \"$TEST_ROOT\"\nsudo chmod 777 \"$TEST_ROOT\"\nsudo mkdir \"$TEST_ROOT/empty\"\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 22,
                  "snippet": {
                    "text": "trap 'exit' ERR\n\nif [[ ! -d \"/vagrant\" ]]; then\n    echo \"This script should be run in the Vagrant environment\"\n    exit 1\nfi\n\n",
                    "rendered": {
                      "text": "trap 'exit' ERR\n\nif [[ ! -d \"/vagrant\" ]]; then\n    echo \"This script should be run in the Vagrant environment\"\n    exit 1\nfi\n\n",
                      "markdown": "`trap 'exit' ERR\n\nif [[ ! -d \"/vagrant\" ]]; then\n    echo \"This script should be run in the Vagrant environment\"\n    exit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-create-test-filesystem.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/bash\n# This script creates a bunch of awkward test case files. It gets\n# automatically run as part of Vagrant provisioning.\ntrap 'exit' ERR\n\n",
                    "rendered": {
                      "text": "#!/bin/bash\n# This script creates a bunch of awkward test case files. It gets\n# automatically run as part of Vagrant provisioning.\ntrap 'exit' ERR\n\n",
                      "markdown": "`#!/bin/bash\n# This script creates a bunch of awkward test case files. It gets\n# automatically run as part of Vagrant provisioning.\ntrap 'exit' ERR\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-fixtures.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 59,
                  "snippet": {
                    "text": "#!/bin/bash\n# This file contains the text fixtures — the known, constant data — that are\n# used when setting up the environment that exa’s tests get run in.\n\n\n# The directory that all the test files are created under.\n",
                    "rendered": {
                      "text": "#!/bin/bash\n# This file contains the text fixtures — the known, constant data — that are\n# used when setting up the environment that exa’s tests get run in.\n\n\n# The directory that all the test files are created under.\n",
                      "markdown": "`#!/bin/bash\n# This file contains the text fixtures — the known, constant data — that are\n# used when setting up the environment that exa’s tests get run in.\n\n\n# The directory that all the test files are created under.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-package-for-linux.sh"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 25,
                  "endLine": 72,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# *dynamically* linked, which broke the whole ‘self-contained binary’ concept.\n# So dump the linker table, in case anything unscrupulous shows up.\necho -e \"\\n\\033[4mLibraries linked:\\033[0m\"\nldd \"$exa_linux_binary\" | sed \"s/\\t//\"\n\n# Might as well use it to test itself, right?\necho -e \"\\n\\033[4mAll done! Files produced:\\033[0m\"\n",
                    "rendered": {
                      "text": "# *dynamically* linked, which broke the whole ‘self-contained binary’ concept.\n# So dump the linker table, in case anything unscrupulous shows up.\necho -e \"\\n\\033[4mLibraries linked:\\033[0m\"\nldd \"$exa_linux_binary\" | sed \"s/\\t//\"\n\n# Might as well use it to test itself, right?\necho -e \"\\n\\033[4mAll done! Files produced:\\033[0m\"\n",
                      "markdown": "`# *dynamically* linked, which broke the whole ‘self-contained binary’ concept.\n# So dump the linker table, in case anything unscrupulous shows up.\necho -e \"\\n\\033[4mLibraries linked:\\033[0m\"\nldd \"$exa_linux_binary\" | sed \"s/\\t//\"\n\n# Might as well use it to test itself, right?\necho -e \"\\n\\033[4mAll done! Files produced:\\033[0m\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-package-for-linux.sh"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 32,
                  "endLine": 48,
                  "endColumn": 3,
                  "snippet": {
                    "text": "rm -vf \"$exa_linux_binary\"\ncargo build --release --manifest-path \"$toml_file\"\ncargo test --release --manifest-path \"$toml_file\" --lib -- --quiet\n/vagrant/xtests/run.sh --release\ncp /home/vagrant/target/release/exa \"$exa_linux_binary\"\n\n# Stripping the binary before distributing it removes a bunch of debugging\n# symbols, saving some space.\n",
                    "rendered": {
                      "text": "rm -vf \"$exa_linux_binary\"\ncargo build --release --manifest-path \"$toml_file\"\ncargo test --release --manifest-path \"$toml_file\" --lib -- --quiet\n/vagrant/xtests/run.sh --release\ncp /home/vagrant/target/release/exa \"$exa_linux_binary\"\n\n# Stripping the binary before distributing it removes a bunch of debugging\n# symbols, saving some space.\n",
                      "markdown": "`rm -vf \"$exa_linux_binary\"\ncargo build --release --manifest-path \"$toml_file\"\ncargo test --release --manifest-path \"$toml_file\" --lib -- --quiet\n/vagrant/xtests/run.sh --release\ncp /home/vagrant/target/release/exa \"$exa_linux_binary\"\n\n# Stripping the binary before distributing it removes a bunch of debugging\n# symbols, saving some space.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-package-for-linux.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 7,
                  "endLine": 41,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n# Compilation is done in --release mode, which takes longer but produces a\n# faster binary. This binary gets built to a different place, so the extended\n# tests script needs to be told which one to use.\necho -e \"\\n\\033[4mCompiling release version of exa...\\033[0m\"\nexa_linux_binary=\"/vagrant/exa-linux-x86_64\"\nrm -vf \"$exa_linux_binary\"\n",
                    "rendered": {
                      "text": "\n# Compilation is done in --release mode, which takes longer but produces a\n# faster binary. This binary gets built to a different place, so the extended\n# tests script needs to be told which one to use.\necho -e \"\\n\\033[4mCompiling release version of exa...\\033[0m\"\nexa_linux_binary=\"/vagrant/exa-linux-x86_64\"\nrm -vf \"$exa_linux_binary\"\n",
                      "markdown": "`\n# Compilation is done in --release mode, which takes longer but produces a\n# faster binary. This binary gets built to a different place, so the extended\n# tests script needs to be told which one to use.\necho -e \"\\n\\033[4mCompiling release version of exa...\\033[0m\"\nexa_linux_binary=\"/vagrant/exa-linux-x86_64\"\nrm -vf \"$exa_linux_binary\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-package-for-linux.sh"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 54,
                  "endLine": 34,
                  "endColumn": 59,
                  "snippet": {
                    "text": "if [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=/vagrant/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n  echo \"Building exa v$exa_version\"\nfi\n",
                    "rendered": {
                      "text": "if [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=/vagrant/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n  echo \"Building exa v$exa_version\"\nfi\n",
                      "markdown": "`if [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=/vagrant/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n  echo \"Building exa v$exa_version\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-package-for-linux.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 34,
                  "endLine": 32,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n# Weekly builds have a bit more information in their version number (see build.rs).\nif [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=/vagrant/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n",
                    "rendered": {
                      "text": "\n# Weekly builds have a bit more information in their version number (see build.rs).\nif [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=/vagrant/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n",
                      "markdown": "`\n# Weekly builds have a bit more information in their version number (see build.rs).\nif [[ \"$1\" == \"--weekly\" ]]; then\n  git_hash=$(GIT_DIR=/vagrant/.git git rev-parse --short --verify HEAD)\n  date=$(date +\"%Y-%m-%d\")\n  echo \"Building exa weekly v$exa_version, date $date, Git hash $git_hash\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-package-for-linux.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 48,
                  "endLine": 24,
                  "endColumn": 53,
                  "snippet": {
                    "text": "# shell executes something like `exa_version=\"0.8.0\"`, which it understands as\n# a variable definition. Hey, it’s not a hack if it works.\ntoml_file=\"/vagrant/Cargo.toml\"\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n",
                    "rendered": {
                      "text": "# shell executes something like `exa_version=\"0.8.0\"`, which it understands as\n# a variable definition. Hey, it’s not a hack if it works.\ntoml_file=\"/vagrant/Cargo.toml\"\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n",
                      "markdown": "`# shell executes something like `exa_version=\"0.8.0\"`, which it understands as\n# a variable definition. Hey, it’s not a hack if it works.\ntoml_file=\"/vagrant/Cargo.toml\"\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-package-for-linux.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 36,
                  "endLine": 24,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# shell executes something like `exa_version=\"0.8.0\"`, which it understands as\n# a variable definition. Hey, it’s not a hack if it works.\ntoml_file=\"/vagrant/Cargo.toml\"\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n",
                    "rendered": {
                      "text": "# shell executes something like `exa_version=\"0.8.0\"`, which it understands as\n# a variable definition. Hey, it’s not a hack if it works.\ntoml_file=\"/vagrant/Cargo.toml\"\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n",
                      "markdown": "`# shell executes something like `exa_version=\"0.8.0\"`, which it understands as\n# a variable definition. Hey, it’s not a hack if it works.\ntoml_file=\"/vagrant/Cargo.toml\"\neval exa_$(grep version $toml_file | head -n 1 | sed \"s/ //g\")\nif [ -z \"$exa_version\" ]; then\n  echo \"Failed to parse version number! Can't build exa!\"\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-package-for-linux.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 14,
                  "snippet": {
                    "text": "set -e\n\n# This script builds a publishable release-worthy version of exa.\n# It gets the version number, builds exa using cargo, tests it, strips the\n# binary, compresses it into a zip, then puts it in /vagrant so it’s\n# accessible from the host machine.\n",
                    "rendered": {
                      "text": "set -e\n\n# This script builds a publishable release-worthy version of exa.\n# It gets the version number, builds exa using cargo, tests it, strips the\n# binary, compresses it into a zip, then puts it in /vagrant so it’s\n# accessible from the host machine.\n",
                      "markdown": "`set -e\n\n# This script builds a publishable release-worthy version of exa.\n# It gets the version number, builds exa using cargo, tests it, strips the\n# binary, compresses it into a zip, then puts it in /vagrant so it’s\n# accessible from the host machine.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-set-up-environment.sh"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 3,
                  "endLine": 46,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n    sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen\nfi\n\n# only regenerate locales if the config files are newer than the locale archive\n",
                    "rendered": {
                      "text": "    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n    sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen\nfi\n\n# only regenerate locales if the config files are newer than the locale archive\n",
                      "markdown": "`    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n    sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen\nfi\n\n# only regenerate locales if the config files are newer than the locale archive\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-set-up-environment.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 2,
                  "endLine": 45,
                  "endColumn": 8,
                  "snippet": {
                    "text": "if grep -F -q \"# fr_FR.UTF-8\" /etc/locale.gen; then\n    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n    sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen\nfi\n\n",
                    "rendered": {
                      "text": "if grep -F -q \"# fr_FR.UTF-8\" /etc/locale.gen; then\n    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n    sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen\nfi\n\n",
                      "markdown": "`if grep -F -q \"# fr_FR.UTF-8\" /etc/locale.gen; then\n    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n    sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-set-up-environment.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# uncomment these from the config file\nif grep -F -q \"# fr_FR.UTF-8\" /etc/locale.gen; then\n    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n    sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen\n",
                    "rendered": {
                      "text": "\n# uncomment these from the config file\nif grep -F -q \"# fr_FR.UTF-8\" /etc/locale.gen; then\n    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n    sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen\n",
                      "markdown": "`\n# uncomment these from the config file\nif grep -F -q \"# fr_FR.UTF-8\" /etc/locale.gen; then\n    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n    sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-set-up-environment.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 2,
                  "endLine": 42,
                  "endColumn": 8,
                  "snippet": {
                    "text": "fi\n\n# uncomment these from the config file\nif grep -F -q \"# fr_FR.UTF-8\" /etc/locale.gen; then\n    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n",
                    "rendered": {
                      "text": "fi\n\n# uncomment these from the config file\nif grep -F -q \"# fr_FR.UTF-8\" /etc/locale.gen; then\n    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n",
                      "markdown": "`fi\n\n# uncomment these from the config file\nif grep -F -q \"# fr_FR.UTF-8\" /etc/locale.gen; then\n    sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen\nfi\nif grep -F -q \"# ja_JP.UTF-8\" /etc/locale.gen; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-set-up-environment.sh"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 2,
                  "endLine": 36,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# locale generation\n\n# remove most of this file, it slows down locale-gen\nif grep -F -q \"en_GB.UTF-8 UTF-8\" /var/lib/locales/supported.d/en; then\n    echo \"Removing existing locales\"\n    echo \"en_US.UTF-8 UTF-8\" > /var/lib/locales/supported.d/en\nfi\n",
                    "rendered": {
                      "text": "# locale generation\n\n# remove most of this file, it slows down locale-gen\nif grep -F -q \"en_GB.UTF-8 UTF-8\" /var/lib/locales/supported.d/en; then\n    echo \"Removing existing locales\"\n    echo \"en_US.UTF-8 UTF-8\" > /var/lib/locales/supported.d/en\nfi\n",
                      "markdown": "`# locale generation\n\n# remove most of this file, it slows down locale-gen\nif grep -F -q \"en_GB.UTF-8 UTF-8\" /var/lib/locales/supported.d/en; then\n    echo \"Removing existing locales\"\n    echo \"en_US.UTF-8 UTF-8\" > /var/lib/locales/supported.d/en\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-set-up-environment.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 9,
                  "endColumn": 22,
                  "snippet": {
                    "text": "fi\n\nif [[ $EUID -ne 0 ]]; then\n    echo \"This script should be run as root\"\n    exit 1\nfi\n\n",
                    "rendered": {
                      "text": "fi\n\nif [[ $EUID -ne 0 ]]; then\n    echo \"This script should be run as root\"\n    exit 1\nfi\n\n",
                      "markdown": "`fi\n\nif [[ $EUID -ne 0 ]]; then\n    echo \"This script should be run as root\"\n    exit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-set-up-environment.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 14,
                  "endLine": 4,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#!/bin/bash\n\nif [[ ! -d \"/vagrant\" ]]; then\n    echo \"This script should be run in the Vagrant environment\"\n    exit 1\nfi\n\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\nif [[ ! -d \"/vagrant\" ]]; then\n    echo \"This script should be run in the Vagrant environment\"\n    exit 1\nfi\n\n",
                      "markdown": "`#!/bin/bash\n\nif [[ ! -d \"/vagrant\" ]]; then\n    echo \"This script should be run in the Vagrant environment\"\n    exit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-help.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 25,
                  "endLine": 8,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\necho -e \"\n\\033[1;33mThe exa development environment!\\033[0m\nexa's source is available at \\033[33m/vagrant\\033[0m.\nBinaries get built into \\033[33m/home/vagrant/target\\033[0m.\n\n\\033[4mCommands\\033[0m\n",
                    "rendered": {
                      "text": "\necho -e \"\n\\033[1;33mThe exa development environment!\\033[0m\nexa's source is available at \\033[33m/vagrant\\033[0m.\nBinaries get built into \\033[33m/home/vagrant/target\\033[0m.\n\n\\033[4mCommands\\033[0m\n",
                      "markdown": "`\necho -e \"\n\\033[1;33mThe exa development environment!\\033[0m\nexa's source is available at \\033[33m/vagrant\\033[0m.\nBinaries get built into \\033[33m/home/vagrant/target\\033[0m.\n\n\\033[4mCommands\\033[0m\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-bash.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 13,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\n# Display the installed versions of tools.\n# help banner\nbash /vagrant/devtools/dev-versions.sh\n\n\n# Configure the Cool Prompt™ (not actually trademarked).\n",
                    "rendered": {
                      "text": "\n\n# Display the installed versions of tools.\n# help banner\nbash /vagrant/devtools/dev-versions.sh\n\n\n# Configure the Cool Prompt™ (not actually trademarked).\n",
                      "markdown": "`\n\n# Display the installed versions of tools.\n# help banner\nbash /vagrant/devtools/dev-versions.sh\n\n\n# Configure the Cool Prompt™ (not actually trademarked).\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/devtools/dev-bash.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 13,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\n# Display the installed versions of tools.\n# help banner\nbash /vagrant/devtools/dev-versions.sh\n\n\n# Configure the Cool Prompt™ (not actually trademarked).\n",
                    "rendered": {
                      "text": "\n\n# Display the installed versions of tools.\n# help banner\nbash /vagrant/devtools/dev-versions.sh\n\n\n# Configure the Cool Prompt™ (not actually trademarked).\n",
                      "markdown": "`\n\n# Display the installed versions of tools.\n# help banner\nbash /vagrant/devtools/dev-versions.sh\n\n\n# Configure the Cool Prompt™ (not actually trademarked).\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/theme.rs"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 22,
                  "endLine": 66,
                  "endColumn": 27,
                  "snippet": {
                    "text": "impl Definitions {\n    fn deduce<V: Vars>(vars: &V) -> Self {\n        let ls =  vars.get(vars::LS_COLORS) .map(|e| e.to_string_lossy().to_string());\n        let exa = vars.get(vars::EXA_COLORS).map(|e| e.to_string_lossy().to_string());\n        Self { ls, exa }\n    }\n}\n",
                    "rendered": {
                      "text": "impl Definitions {\n    fn deduce<V: Vars>(vars: &V) -> Self {\n        let ls =  vars.get(vars::LS_COLORS) .map(|e| e.to_string_lossy().to_string());\n        let exa = vars.get(vars::EXA_COLORS).map(|e| e.to_string_lossy().to_string());\n        Self { ls, exa }\n    }\n}\n",
                      "markdown": "`impl Definitions {\n    fn deduce<V: Vars>(vars: &V) -> Self {\n        let ls =  vars.get(vars::LS_COLORS) .map(|e| e.to_string_lossy().to_string());\n        let exa = vars.get(vars::EXA_COLORS).map(|e| e.to_string_lossy().to_string());\n        Self { ls, exa }\n    }\n}\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/theme.rs"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 22,
                  "endLine": 65,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nimpl Definitions {\n    fn deduce<V: Vars>(vars: &V) -> Self {\n        let ls =  vars.get(vars::LS_COLORS) .map(|e| e.to_string_lossy().to_string());\n        let exa = vars.get(vars::EXA_COLORS).map(|e| e.to_string_lossy().to_string());\n        Self { ls, exa }\n    }\n",
                    "rendered": {
                      "text": "\nimpl Definitions {\n    fn deduce<V: Vars>(vars: &V) -> Self {\n        let ls =  vars.get(vars::LS_COLORS) .map(|e| e.to_string_lossy().to_string());\n        let exa = vars.get(vars::EXA_COLORS).map(|e| e.to_string_lossy().to_string());\n        Self { ls, exa }\n    }\n",
                      "markdown": "`\nimpl Definitions {\n    fn deduce<V: Vars>(vars: &V) -> Self {\n        let ls =  vars.get(vars::LS_COLORS) .map(|e| e.to_string_lossy().to_string());\n        let exa = vars.get(vars::EXA_COLORS).map(|e| e.to_string_lossy().to_string());\n        Self { ls, exa }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/theme.rs"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 38,
                  "endLine": 25,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\nimpl UseColours {\n    fn deduce<V: Vars>(matches: &MatchedFlags<'_>, vars: &V) -> Result<Self, OptionsError> {\n        let default_value = match vars.get(vars::NO_COLOR) {\n            Some(_) => Self::Never,\n            None => Self::Automatic,\n        };\n",
                    "rendered": {
                      "text": "\nimpl UseColours {\n    fn deduce<V: Vars>(matches: &MatchedFlags<'_>, vars: &V) -> Result<Self, OptionsError> {\n        let default_value = match vars.get(vars::NO_COLOR) {\n            Some(_) => Self::Never,\n            None => Self::Automatic,\n        };\n",
                      "markdown": "`\nimpl UseColours {\n    fn deduce<V: Vars>(matches: &MatchedFlags<'_>, vars: &V) -> Result<Self, OptionsError> {\n        let default_value = match vars.get(vars::NO_COLOR) {\n            Some(_) => Self::Never,\n            None => Self::Automatic,\n        };\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/theme.rs"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 19,
                  "endLine": 117,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        ($name:ident:  $type:ident <- $inputs:expr, $env:expr;  $stricts:expr => err $result:expr) => {\n            #[test]\n            fn $name() {\n                let env = $env;\n                for result in parse_for_test($inputs.as_ref(), TEST_ARGS, $stricts, |mf| $type::deduce(mf, &env)) {\n                    assert_eq!(result.unwrap_err(), $result);\n                }\n",
                    "rendered": {
                      "text": "        ($name:ident:  $type:ident <- $inputs:expr, $env:expr;  $stricts:expr => err $result:expr) => {\n            #[test]\n            fn $name() {\n                let env = $env;\n                for result in parse_for_test($inputs.as_ref(), TEST_ARGS, $stricts, |mf| $type::deduce(mf, &env)) {\n                    assert_eq!(result.unwrap_err(), $result);\n                }\n",
                      "markdown": "`        ($name:ident:  $type:ident <- $inputs:expr, $env:expr;  $stricts:expr => err $result:expr) => {\n            #[test]\n            fn $name() {\n                let env = $env;\n                for result in parse_for_test($inputs.as_ref(), TEST_ARGS, $stricts, |mf| $type::deduce(mf, &env)) {\n                    assert_eq!(result.unwrap_err(), $result);\n                }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/theme.rs"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 19,
                  "endLine": 98,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        ($name:ident:  $type:ident <- $inputs:expr, $env:expr;  $stricts:expr => $result:expr) => {\n            #[test]\n            fn $name() {\n                let env = $env;\n                for result in parse_for_test($inputs.as_ref(), TEST_ARGS, $stricts, |mf| $type::deduce(mf, &env)) {\n                    assert_eq!(result, $result);\n                }\n",
                    "rendered": {
                      "text": "        ($name:ident:  $type:ident <- $inputs:expr, $env:expr;  $stricts:expr => $result:expr) => {\n            #[test]\n            fn $name() {\n                let env = $env;\n                for result in parse_for_test($inputs.as_ref(), TEST_ARGS, $stricts, |mf| $type::deduce(mf, &env)) {\n                    assert_eq!(result, $result);\n                }\n",
                      "markdown": "`        ($name:ident:  $type:ident <- $inputs:expr, $env:expr;  $stricts:expr => $result:expr) => {\n            #[test]\n            fn $name() {\n                let env = $env;\n                for result in parse_for_test($inputs.as_ref(), TEST_ARGS, $stricts, |mf| $type::deduce(mf, &env)) {\n                    assert_eq!(result, $result);\n                }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/options/file_name.rs"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 40,
                  "endLine": 31,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        if matches.has(&flags::NO_ICONS)? || !matches.has(&flags::ICONS)? {\n            Ok(Self::Off)\n        }\n        else if let Some(columns) = vars.get(vars::EXA_ICON_SPACING).and_then(|s| s.into_string().ok()) {\n            match columns.parse() {\n                Ok(width) => {\n                    Ok(Self::On(width))\n",
                    "rendered": {
                      "text": "        if matches.has(&flags::NO_ICONS)? || !matches.has(&flags::ICONS)? {\n            Ok(Self::Off)\n        }\n        else if let Some(columns) = vars.get(vars::EXA_ICON_SPACING).and_then(|s| s.into_string().ok()) {\n            match columns.parse() {\n                Ok(width) => {\n                    Ok(Self::On(width))\n",
                      "markdown": "`        if matches.has(&flags::NO_ICONS)? || !matches.has(&flags::ICONS)? {\n            Ok(Self::Off)\n        }\n        else if let Some(columns) = vars.get(vars::EXA_ICON_SPACING).and_then(|s| s.into_string().ok()) {\n            match columns.parse() {\n                Ok(width) => {\n                    Ok(Self::On(width))\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/mod.rs"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 12,
                  "snippet": {
                    "text": "pub mod git;\n\n#[cfg(not(feature = \"git\"))]\npub mod git {\n    use std::iter::FromIterator;\n    use std::path::{Path, PathBuf};\n\n",
                    "rendered": {
                      "text": "pub mod git;\n\n#[cfg(not(feature = \"git\"))]\npub mod git {\n    use std::iter::FromIterator;\n    use std::path::{Path, PathBuf};\n\n",
                      "markdown": "`pub mod git;\n\n#[cfg(not(feature = \"git\"))]\npub mod git {\n    use std::iter::FromIterator;\n    use std::path::{Path, PathBuf};\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 4,
                  "endLine": 243,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    statuses: Vec<(PathBuf, git2::Status)>,\n}\n\nimpl Git {\n\n    /// Get either the file or directory status for the given path.\n    /// “Prefix lookup” means that it should report an aggregate status of all\n",
                    "rendered": {
                      "text": "    statuses: Vec<(PathBuf, git2::Status)>,\n}\n\nimpl Git {\n\n    /// Get either the file or directory status for the given path.\n    /// “Prefix lookup” means that it should report an aggregate status of all\n",
                      "markdown": "`    statuses: Vec<(PathBuf, git2::Status)>,\n}\n\nimpl Git {\n\n    /// Get either the file or directory status for the given path.\n    /// “Prefix lookup” means that it should report an aggregate status of all\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 6,
                  "endLine": 239,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n\n/// Container of Git statuses for all the files in this folder’s Git repository.\nstruct Git {\n    statuses: Vec<(PathBuf, git2::Status)>,\n}\n\n",
                    "rendered": {
                      "text": "\n\n/// Container of Git statuses for all the files in this folder’s Git repository.\nstruct Git {\n    statuses: Vec<(PathBuf, git2::Status)>,\n}\n\n",
                      "markdown": "`\n\n/// Container of Git statuses for all the files in this folder’s Git repository.\nstruct Git {\n    statuses: Vec<(PathBuf, git2::Status)>,\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 3,
                  "endLine": 226,
                  "endColumn": 8,
                  "snippet": {
                    "text": "        }\n    }\n\n    Git { statuses }\n}\n\n// The `repo.statuses` call above takes a long time. exa debug output:\n",
                    "rendered": {
                      "text": "        }\n    }\n\n    Git { statuses }\n}\n\n// The `repo.statuses` call above takes a long time. exa debug output:\n",
                      "markdown": "`        }\n    }\n\n    Git { statuses }\n}\n\n// The `repo.statuses` call above takes a long time. exa debug output:\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 36,
                  "endLine": 222,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            }\n        }\n        Err(e) => {\n            error!(\"Error looking up Git statuses: {:?}\", e);\n        }\n    }\n\n",
                    "rendered": {
                      "text": "            }\n        }\n        Err(e) => {\n            error!(\"Error looking up Git statuses: {:?}\", e);\n        }\n    }\n\n",
                      "markdown": "`            }\n        }\n        Err(e) => {\n            error!(\"Error looking up Git statuses: {:?}\", e);\n        }\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 18,
                  "endLine": 207,
                  "endColumn": 23,
                  "snippet": {
                    "text": "fn repo_to_statuses(repo: &git2::Repository, workdir: &Path) -> Git {\n    let mut statuses = Vec::new();\n\n    info!(\"Getting Git statuses for repo with workdir {:?}\", workdir);\n    match repo.statuses(None) {\n        Ok(es) => {\n            for e in es.iter() {\n",
                    "rendered": {
                      "text": "fn repo_to_statuses(repo: &git2::Repository, workdir: &Path) -> Git {\n    let mut statuses = Vec::new();\n\n    info!(\"Getting Git statuses for repo with workdir {:?}\", workdir);\n    match repo.statuses(None) {\n        Ok(es) => {\n            for e in es.iter() {\n",
                      "markdown": "`fn repo_to_statuses(repo: &git2::Repository, workdir: &Path) -> Git {\n    let mut statuses = Vec::new();\n\n    info!(\"Getting Git statuses for repo with workdir {:?}\", workdir);\n    match repo.statuses(None) {\n        Ok(es) => {\n            for e in es.iter() {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 63,
                  "endLine": 204,
                  "endColumn": 68,
                  "snippet": {
                    "text": "/// mapping of files to their Git status.\n/// We will have already used the working directory at this point, so it gets\n/// passed in rather than deriving it from the `Repository` again.\nfn repo_to_statuses(repo: &git2::Repository, workdir: &Path) -> Git {\n    let mut statuses = Vec::new();\n\n    info!(\"Getting Git statuses for repo with workdir {:?}\", workdir);\n",
                    "rendered": {
                      "text": "/// mapping of files to their Git status.\n/// We will have already used the working directory at this point, so it gets\n/// passed in rather than deriving it from the `Repository` again.\nfn repo_to_statuses(repo: &git2::Repository, workdir: &Path) -> Git {\n    let mut statuses = Vec::new();\n\n    info!(\"Getting Git statuses for repo with workdir {:?}\", workdir);\n",
                      "markdown": "`/// mapping of files to their Git status.\n/// We will have already used the working directory at this point, so it gets\n/// passed in rather than deriving it from the `Repository` again.\nfn repo_to_statuses(repo: &git2::Repository, workdir: &Path) -> Git {\n    let mut statuses = Vec::new();\n\n    info!(\"Getting Git statuses for repo with workdir {:?}\", workdir);\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 41,
                  "endLine": 168,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        let repo = match git2::Repository::discover(&path) {\n            Ok(r) => r,\n            Err(e) => {\n                error!(\"Error discovering Git repositories: {:?}\", e);\n                return Err(path);\n            }\n        };\n",
                    "rendered": {
                      "text": "        let repo = match git2::Repository::discover(&path) {\n            Ok(r) => r,\n            Err(e) => {\n                error!(\"Error discovering Git repositories: {:?}\", e);\n                return Err(path);\n            }\n        };\n",
                      "markdown": "`        let repo = match git2::Repository::discover(&path) {\n            Ok(r) => r,\n            Err(e) => {\n                error!(\"Error discovering Git repositories: {:?}\", e);\n                return Err(path);\n            }\n        };\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 28,
                  "endLine": 164,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    /// Searches for a Git repository at any point above the given path.\n    /// Returns the original buffer if none is found.\n    fn discover(path: PathBuf) -> Result<Self, PathBuf> {\n        info!(\"Searching for Git repository above {:?}\", path);\n        let repo = match git2::Repository::discover(&path) {\n            Ok(r) => r,\n            Err(e) => {\n",
                    "rendered": {
                      "text": "    /// Searches for a Git repository at any point above the given path.\n    /// Returns the original buffer if none is found.\n    fn discover(path: PathBuf) -> Result<Self, PathBuf> {\n        info!(\"Searching for Git repository above {:?}\", path);\n        let repo = match git2::Repository::discover(&path) {\n            Ok(r) => r,\n            Err(e) => {\n",
                      "markdown": "`    /// Searches for a Git repository at any point above the given path.\n    /// Returns the original buffer if none is found.\n    fn discover(path: PathBuf) -> Result<Self, PathBuf> {\n        info!(\"Searching for Git repository above {:?}\", path);\n        let repo = match git2::Repository::discover(&path) {\n            Ok(r) => r,\n            Err(e) => {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 24,
                  "endLine": 143,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            return statuses.status(index, prefix_lookup);\n        }\n\n        debug!(\"Querying Git repo {:?} for the first time\", &self.workdir);\n        let repo = replace(&mut *contents, GitContents::Processing).inner_repo();\n        let statuses = repo_to_statuses(&repo, &self.workdir);\n        let result = statuses.status(index, prefix_lookup);\n",
                    "rendered": {
                      "text": "            return statuses.status(index, prefix_lookup);\n        }\n\n        debug!(\"Querying Git repo {:?} for the first time\", &self.workdir);\n        let repo = replace(&mut *contents, GitContents::Processing).inner_repo();\n        let statuses = repo_to_statuses(&repo, &self.workdir);\n        let result = statuses.status(index, prefix_lookup);\n",
                      "markdown": "`            return statuses.status(index, prefix_lookup);\n        }\n\n        debug!(\"Querying Git repo {:?} for the first time\", &self.workdir);\n        let repo = replace(&mut *contents, GitContents::Processing).inner_repo();\n        let statuses = repo_to_statuses(&repo, &self.workdir);\n        let result = statuses.status(index, prefix_lookup);\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 7,
                  "endLine": 78,
                  "snippet": {
                    "text": "            }\n        }\n\n        git\n    }\n}\n\n\n",
                    "rendered": {
                      "text": "            }\n        }\n\n        git\n    }\n}\n\n\n",
                      "markdown": "`            }\n        }\n\n        git\n    }\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 46,
                  "endLine": 67,
                  "endColumn": 51,
                  "snippet": {
                    "text": "                            continue;\n                        }\n\n                        debug!(\"Discovered new Git repo\");\n                        git.repos.push(r);\n                    }\n                    Err(miss) => {\n",
                    "rendered": {
                      "text": "                            continue;\n                        }\n\n                        debug!(\"Discovered new Git repo\");\n                        git.repos.push(r);\n                    }\n                    Err(miss) => {\n",
                      "markdown": "`                            continue;\n                        }\n\n                        debug!(\"Discovered new Git repo\");\n                        git.repos.push(r);\n                    }\n                    Err(miss) => {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/feature/git.rs"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 15,
                  "endLine": 46,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    where I: IntoIterator<Item=PathBuf>\n    {\n        let iter = iter.into_iter();\n        let mut git = Self {\n            repos: Vec::with_capacity(iter.size_hint().0),\n            misses: Vec::new(),\n        };\n",
                    "rendered": {
                      "text": "    where I: IntoIterator<Item=PathBuf>\n    {\n        let iter = iter.into_iter();\n        let mut git = Self {\n            repos: Vec::with_capacity(iter.size_hint().0),\n            misses: Vec::new(),\n        };\n",
                      "markdown": "`    where I: IntoIterator<Item=PathBuf>\n    {\n        let iter = iter.into_iter();\n        let mut git = Self {\n            repos: Vec::with_capacity(iter.size_hint().0),\n            misses: Vec::new(),\n        };\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/dir.rs"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 55,
                  "endLine": 122,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                }\n\n                if self.git_ignoring {\n                    let git_status = self.git.map(|g| g.get(path, false)).unwrap_or_default();\n                    if git_status.unstaged == GitStatus::Ignored {\n                         continue;\n                    }\n",
                    "rendered": {
                      "text": "                }\n\n                if self.git_ignoring {\n                    let git_status = self.git.map(|g| g.get(path, false)).unwrap_or_default();\n                    if git_status.unstaged == GitStatus::Ignored {\n                         continue;\n                    }\n",
                      "markdown": "`                }\n\n                if self.git_ignoring {\n                    let git_status = self.git.map(|g| g.get(path, false)).unwrap_or_default();\n                    if git_status.unstaged == GitStatus::Ignored {\n                         continue;\n                    }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/src/fs/dir.rs"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 73,
                  "endLine": 33,
                  "snippet": {
                    "text": "\n    /// Create a new Dir object filled with all the files in the directory\n    /// pointed to by the given path. Fails if the directory can’t be read, or\n    /// isn’t actually a directory, or if there’s an IO error that occurs at\n    /// any point.\n    ///\n    /// The `read_dir` iterator doesn’t actually yield the `.` and `..`\n    /// entries, so if the user wants to see them, we’ll have to add them\n",
                    "rendered": {
                      "text": "\n    /// Create a new Dir object filled with all the files in the directory\n    /// pointed to by the given path. Fails if the directory can’t be read, or\n    /// isn’t actually a directory, or if there’s an IO error that occurs at\n    /// any point.\n    ///\n    /// The `read_dir` iterator doesn’t actually yield the `.` and `..`\n    /// entries, so if the user wants to see them, we’ll have to add them\n",
                      "markdown": "`\n    /// Create a new Dir object filled with all the files in the directory\n    /// pointed to by the given path. Fails if the directory can’t be read, or\n    /// isn’t actually a directory, or if there’s an IO error that occurs at\n    /// any point.\n    ///\n    /// The `read_dir` iterator doesn’t actually yield the `.` and `..`\n    /// entries, so if the user wants to see them, we’ll have to add them\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/zsh/_exa"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 31,
                  "endLine": 54,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        --no-time\"[Suppress the time field]\" \\\n        {-u,--accessed}\"[Use the accessed timestamp field]\" \\\n        {-U,--created}\"[Use the created timestamp field]\" \\\n        --git\"[List each file's Git status, if tracked]\" \\\n        {-@,--extended}\"[List each file's extended attributes and sizes]\" \\\n        '*:filename:_files'\n}\n",
                    "rendered": {
                      "text": "        --no-time\"[Suppress the time field]\" \\\n        {-u,--accessed}\"[Use the accessed timestamp field]\" \\\n        {-U,--created}\"[Use the created timestamp field]\" \\\n        --git\"[List each file's Git status, if tracked]\" \\\n        {-@,--extended}\"[List each file's extended attributes and sizes]\" \\\n        '*:filename:_files'\n}\n",
                      "markdown": "`        --no-time\"[Suppress the time field]\" \\\n        {-u,--accessed}\"[Use the accessed timestamp field]\" \\\n        {-U,--created}\"[Use the created timestamp field]\" \\\n        --git\"[List each file's Git status, if tracked]\" \\\n        {-@,--extended}\"[List each file's extended attributes and sizes]\" \\\n        '*:filename:_files'\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/zsh/_exa"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 31,
                  "endLine": 51,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        --octal-permissions\"[List each file's permission in octal format]\" \\\n        --no-filesize\"[Suppress the filesize field]\" \\\n        --no-user\"[Suppress the user field]\" \\\n        --no-time\"[Suppress the time field]\" \\\n        {-u,--accessed}\"[Use the accessed timestamp field]\" \\\n        {-U,--created}\"[Use the created timestamp field]\" \\\n        --git\"[List each file's Git status, if tracked]\" \\\n",
                    "rendered": {
                      "text": "        --octal-permissions\"[List each file's permission in octal format]\" \\\n        --no-filesize\"[Suppress the filesize field]\" \\\n        --no-user\"[Suppress the user field]\" \\\n        --no-time\"[Suppress the time field]\" \\\n        {-u,--accessed}\"[Use the accessed timestamp field]\" \\\n        {-U,--created}\"[Use the created timestamp field]\" \\\n        --git\"[List each file's Git status, if tracked]\" \\\n",
                      "markdown": "`        --octal-permissions\"[List each file's permission in octal format]\" \\\n        --no-filesize\"[Suppress the filesize field]\" \\\n        --no-user\"[Suppress the user field]\" \\\n        --no-time\"[Suppress the time field]\" \\\n        {-u,--accessed}\"[Use the accessed timestamp field]\" \\\n        {-U,--created}\"[Use the created timestamp field]\" \\\n        --git\"[List each file's Git status, if tracked]\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/zsh/_exa"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 27,
                  "endLine": 45,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        {-m,--modified}\"[Use the modified timestamp field]\" \\\n        {-n,--numeric}\"[List numeric user and group IDs.]\" \\\n        {-S,--blocks}\"[List each file's number of filesystem blocks]\" \\\n        {-t,--time}=\"[Which time field to show]:(time field):(accessed changed created modified)\" \\\n        --time-style=\"[How to format timestamps]:(time style):(default iso long-iso full-iso)\" \\\n        --no-permissions\"[Suppress the permissions field]\" \\\n        --octal-permissions\"[List each file's permission in octal format]\" \\\n",
                    "rendered": {
                      "text": "        {-m,--modified}\"[Use the modified timestamp field]\" \\\n        {-n,--numeric}\"[List numeric user and group IDs.]\" \\\n        {-S,--blocks}\"[List each file's number of filesystem blocks]\" \\\n        {-t,--time}=\"[Which time field to show]:(time field):(accessed changed created modified)\" \\\n        --time-style=\"[How to format timestamps]:(time style):(default iso long-iso full-iso)\" \\\n        --no-permissions\"[Suppress the permissions field]\" \\\n        --octal-permissions\"[List each file's permission in octal format]\" \\\n",
                      "markdown": "`        {-m,--modified}\"[Use the modified timestamp field]\" \\\n        {-n,--numeric}\"[List numeric user and group IDs.]\" \\\n        {-S,--blocks}\"[List each file's number of filesystem blocks]\" \\\n        {-t,--time}=\"[Which time field to show]:(time field):(accessed changed created modified)\" \\\n        --time-style=\"[How to format timestamps]:(time style):(default iso long-iso full-iso)\" \\\n        --no-permissions\"[Suppress the permissions field]\" \\\n        --octal-permissions\"[List each file's permission in octal format]\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/zsh/_exa"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 180,
                  "endLine": 33,
                  "endColumn": 186,
                  "snippet": {
                    "text": "        {-D,--only-dirs}\"[List only directories]\" \\\n        {-L,--level}\"+[Limit the depth of recursion]\" \\\n        {-r,--reverse}\"[Reverse the sort order]\" \\\n        {-s,--sort}=\"[Which field to sort by]:(sort field):(accessed age changed created date extension Extension filename Filename inode modified oldest name Name newest none size time type)\" \\\n        {-I,--ignore-glob}\"[Ignore files that match these glob patterns]\" \\\n        {-b,--binary}\"[List file sizes with binary prefixes]\" \\\n        {-B,--bytes}\"[List file sizes in bytes, without any prefixes]\" \\\n",
                    "rendered": {
                      "text": "        {-D,--only-dirs}\"[List only directories]\" \\\n        {-L,--level}\"+[Limit the depth of recursion]\" \\\n        {-r,--reverse}\"[Reverse the sort order]\" \\\n        {-s,--sort}=\"[Which field to sort by]:(sort field):(accessed age changed created date extension Extension filename Filename inode modified oldest name Name newest none size time type)\" \\\n        {-I,--ignore-glob}\"[Ignore files that match these glob patterns]\" \\\n        {-b,--binary}\"[List file sizes with binary prefixes]\" \\\n        {-B,--bytes}\"[List file sizes in bytes, without any prefixes]\" \\\n",
                      "markdown": "`        {-D,--only-dirs}\"[List only directories]\" \\\n        {-L,--level}\"+[Limit the depth of recursion]\" \\\n        {-r,--reverse}\"[Reverse the sort order]\" \\\n        {-s,--sort}=\"[Which field to sort by]:(sort field):(accessed age changed created date extension Extension filename Filename inode modified oldest name Name newest none size time type)\" \\\n        {-I,--ignore-glob}\"[Ignore files that match these glob patterns]\" \\\n        {-b,--binary}\"[List file sizes with binary prefixes]\" \\\n        {-B,--bytes}\"[List file sizes in bytes, without any prefixes]\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/zsh/_exa"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 36,
                  "endLine": 33,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        {-D,--only-dirs}\"[List only directories]\" \\\n        {-L,--level}\"+[Limit the depth of recursion]\" \\\n        {-r,--reverse}\"[Reverse the sort order]\" \\\n        {-s,--sort}=\"[Which field to sort by]:(sort field):(accessed age changed created date extension Extension filename Filename inode modified oldest name Name newest none size time type)\" \\\n        {-I,--ignore-glob}\"[Ignore files that match these glob patterns]\" \\\n        {-b,--binary}\"[List file sizes with binary prefixes]\" \\\n        {-B,--bytes}\"[List file sizes in bytes, without any prefixes]\" \\\n",
                    "rendered": {
                      "text": "        {-D,--only-dirs}\"[List only directories]\" \\\n        {-L,--level}\"+[Limit the depth of recursion]\" \\\n        {-r,--reverse}\"[Reverse the sort order]\" \\\n        {-s,--sort}=\"[Which field to sort by]:(sort field):(accessed age changed created date extension Extension filename Filename inode modified oldest name Name newest none size time type)\" \\\n        {-I,--ignore-glob}\"[Ignore files that match these glob patterns]\" \\\n        {-b,--binary}\"[List file sizes with binary prefixes]\" \\\n        {-B,--bytes}\"[List file sizes in bytes, without any prefixes]\" \\\n",
                      "markdown": "`        {-D,--only-dirs}\"[List only directories]\" \\\n        {-L,--level}\"+[Limit the depth of recursion]\" \\\n        {-r,--reverse}\"[Reverse the sort order]\" \\\n        {-s,--sort}=\"[Which field to sort by]:(sort field):(accessed age changed created date extension Extension filename Filename inode modified oldest name Name newest none size time type)\" \\\n        {-I,--ignore-glob}\"[Ignore files that match these glob patterns]\" \\\n        {-b,--binary}\"[List file sizes with binary prefixes]\" \\\n        {-B,--bytes}\"[List file sizes in bytes, without any prefixes]\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/completions/zsh/_exa"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 35,
                  "endLine": 32,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        {-d,--list-dirs}\"[List directories like regular files]\" \\\n        {-D,--only-dirs}\"[List only directories]\" \\\n        {-L,--level}\"+[Limit the depth of recursion]\" \\\n        {-r,--reverse}\"[Reverse the sort order]\" \\\n        {-s,--sort}=\"[Which field to sort by]:(sort field):(accessed age changed created date extension Extension filename Filename inode modified oldest name Name newest none size time type)\" \\\n        {-I,--ignore-glob}\"[Ignore files that match these glob patterns]\" \\\n        {-b,--binary}\"[List file sizes with binary prefixes]\" \\\n",
                    "rendered": {
                      "text": "        {-d,--list-dirs}\"[List directories like regular files]\" \\\n        {-D,--only-dirs}\"[List only directories]\" \\\n        {-L,--level}\"+[Limit the depth of recursion]\" \\\n        {-r,--reverse}\"[Reverse the sort order]\" \\\n        {-s,--sort}=\"[Which field to sort by]:(sort field):(accessed age changed created date extension Extension filename Filename inode modified oldest name Name newest none size time type)\" \\\n        {-I,--ignore-glob}\"[Ignore files that match these glob patterns]\" \\\n        {-b,--binary}\"[List file sizes with binary prefixes]\" \\\n",
                      "markdown": "`        {-d,--list-dirs}\"[List directories like regular files]\" \\\n        {-D,--only-dirs}\"[List only directories]\" \\\n        {-L,--level}\"+[Limit the depth of recursion]\" \\\n        {-r,--reverse}\"[Reverse the sort order]\" \\\n        {-s,--sort}=\"[Which field to sort by]:(sort field):(accessed age changed created date extension Extension filename Filename inode modified oldest name Name newest none size time type)\" \\\n        {-I,--ignore-glob}\"[Ignore files that match these glob patterns]\" \\\n        {-b,--binary}\"[List file sizes with binary prefixes]\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 80,
                  "endLine": 216,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\n## `EXA_GRID_ROWS`\n\nLimits the grid-details view (‘`exa --grid --long`’) so it’s only activated when at least the given number of rows of output would be generated.\n\nWith widescreen displays, it’s possible for the grid to look very wide and sparse, on just one or two lines with none of the columns lining up.\nBy specifying a minimum number of rows, you can only use the view if it’s going to be worth using.\n",
                    "rendered": {
                      "text": "\n## `EXA_GRID_ROWS`\n\nLimits the grid-details view (‘`exa --grid --long`’) so it’s only activated when at least the given number of rows of output would be generated.\n\nWith widescreen displays, it’s possible for the grid to look very wide and sparse, on just one or two lines with none of the columns lining up.\nBy specifying a minimum number of rows, you can only use the view if it’s going to be worth using.\n",
                      "markdown": "`\n## `EXA_GRID_ROWS`\n\nLimits the grid-details view (‘`exa --grid --long`’) so it’s only activated when at least the given number of rows of output would be generated.\n\nWith widescreen displays, it’s possible for the grid to look very wide and sparse, on just one or two lines with none of the columns lining up.\nBy specifying a minimum number of rows, you can only use the view if it’s going to be worth using.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 43,
                  "endLine": 32,
                  "endColumn": 47,
                  "snippet": {
                    "text": ": Lists the contents of the current directory in a grid.\n\n`exa --oneline --reverse --sort=size`\n: Displays a list of files with the largest at the top.\n\n`exa --long --header --inode --git`\n: Displays a table of files with a header, showing each file’s metadata, inode, and Git status.\n",
                    "rendered": {
                      "text": ": Lists the contents of the current directory in a grid.\n\n`exa --oneline --reverse --sort=size`\n: Displays a list of files with the largest at the top.\n\n`exa --long --header --inode --git`\n: Displays a table of files with a header, showing each file’s metadata, inode, and Git status.\n",
                      "markdown": "`: Lists the contents of the current directory in a grid.\n\n`exa --oneline --reverse --sort=size`\n: Displays a list of files with the largest at the top.\n\n`exa --long --header --inode --git`\n: Displays a table of files with a header, showing each file’s metadata, inode, and Git status.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 18,
                  "endLine": 184,
                  "endColumn": 23,
                  "snippet": {
                    "text": ": List each file’s extended attributes and sizes.\n\n`--git`  [if exa was built with git support]\n: List each file’s Git status, if tracked.\n\nThis adds a two-character column indicating the staged and unstaged statuses respectively. The status character can be ‘`-`’ for not modified, ‘`M`’ for a modified file, ‘`N`’ for a new file, ‘`D`’ for deleted, ‘`R`’ for renamed, ‘`T`’ for type-change, ‘`I`’ for ignored, and ‘`U`’ for conflicted.\n\n",
                    "rendered": {
                      "text": ": List each file’s extended attributes and sizes.\n\n`--git`  [if exa was built with git support]\n: List each file’s Git status, if tracked.\n\nThis adds a two-character column indicating the staged and unstaged statuses respectively. The status character can be ‘`-`’ for not modified, ‘`M`’ for a modified file, ‘`N`’ for a new file, ‘`D`’ for deleted, ‘`R`’ for renamed, ‘`T`’ for type-change, ‘`I`’ for ignored, and ‘`U`’ for conflicted.\n\n",
                      "markdown": "`: List each file’s extended attributes and sizes.\n\n`--git`  [if exa was built with git support]\n: List each file’s Git status, if tracked.\n\nThis adds a two-character column indicating the staged and unstaged statuses respectively. The status character can be ‘`-`’ for not modified, ‘`M`’ for a modified file, ‘`N`’ for a new file, ‘`D`’ for deleted, ‘`R`’ for renamed, ‘`T`’ for type-change, ‘`I`’ for ignored, and ‘`U`’ for conflicted.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 31,
                  "endLine": 183,
                  "endColumn": 36,
                  "snippet": {
                    "text": "`-@`, `--extended`\n: List each file’s extended attributes and sizes.\n\n`--git`  [if exa was built with git support]\n: List each file’s Git status, if tracked.\n\nThis adds a two-character column indicating the staged and unstaged statuses respectively. The status character can be ‘`-`’ for not modified, ‘`M`’ for a modified file, ‘`N`’ for a new file, ‘`D`’ for deleted, ‘`R`’ for renamed, ‘`T`’ for type-change, ‘`I`’ for ignored, and ‘`U`’ for conflicted.\n",
                    "rendered": {
                      "text": "`-@`, `--extended`\n: List each file’s extended attributes and sizes.\n\n`--git`  [if exa was built with git support]\n: List each file’s Git status, if tracked.\n\nThis adds a two-character column indicating the staged and unstaged statuses respectively. The status character can be ‘`-`’ for not modified, ‘`M`’ for a modified file, ‘`N`’ for a new file, ‘`D`’ for deleted, ‘`R`’ for renamed, ‘`T`’ for type-change, ‘`I`’ for ignored, and ‘`U`’ for conflicted.\n",
                      "markdown": "``-@`, `--extended`\n: List each file’s extended attributes and sizes.\n\n`--git`  [if exa was built with git support]\n: List each file’s Git status, if tracked.\n\nThis adds a two-character column indicating the staged and unstaged statuses respectively. The status character can be ‘`-`’ for not modified, ‘`M`’ for a modified file, ‘`N`’ for a new file, ‘`D`’ for deleted, ‘`R`’ for renamed, ‘`T`’ for type-change, ‘`I`’ for ignored, and ‘`U`’ for conflicted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 14,
                  "endLine": 178,
                  "endColumn": 20,
                  "snippet": {
                    "text": ": Suppress the user field.\n\n`--no-time`\n: Suppress the time field.\n\n`-@`, `--extended`\n: List each file’s extended attributes and sizes.\n",
                    "rendered": {
                      "text": ": Suppress the user field.\n\n`--no-time`\n: Suppress the time field.\n\n`-@`, `--extended`\n: List each file’s extended attributes and sizes.\n",
                      "markdown": "`: Suppress the user field.\n\n`--no-time`\n: Suppress the time field.\n\n`-@`, `--extended`\n: List each file’s extended attributes and sizes.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 37,
                  "endLine": 107,
                  "endColumn": 42,
                  "snippet": {
                    "text": "`-I`, `--ignore-glob=GLOBS`\n: Glob patterns, pipe-separated, of files to ignore.\n\n`--git-ignore` [if exa was built with git support]\n: Do not list files that are ignored by Git.\n\n`--group-directories-first`\n",
                    "rendered": {
                      "text": "`-I`, `--ignore-glob=GLOBS`\n: Glob patterns, pipe-separated, of files to ignore.\n\n`--git-ignore` [if exa was built with git support]\n: Do not list files that are ignored by Git.\n\n`--group-directories-first`\n",
                      "markdown": "``-I`, `--ignore-glob=GLOBS`\n: Glob patterns, pipe-separated, of files to ignore.\n\n`--git-ignore` [if exa was built with git support]\n: Do not list files that are ignored by Git.\n\n`--group-directories-first`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 47,
                  "endLine": 102,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\nSort fields starting with a capital letter will sort uppercase before lowercase: ‘A’ then ‘B’ then ‘a’ then ‘b’. Fields starting with a lowercase letter will mix them: ‘A’ then ‘a’ then ‘B’ then ‘b’.\n\n`-I`, `--ignore-glob=GLOBS`\n: Glob patterns, pipe-separated, of files to ignore.\n",
                    "rendered": {
                      "text": "\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\nSort fields starting with a capital letter will sort uppercase before lowercase: ‘A’ then ‘B’ then ‘a’ then ‘b’. Fields starting with a lowercase letter will mix them: ‘A’ then ‘a’ then ‘B’ then ‘b’.\n\n`-I`, `--ignore-glob=GLOBS`\n: Glob patterns, pipe-separated, of files to ignore.\n",
                      "markdown": "`\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\nSort fields starting with a capital letter will sort uppercase before lowercase: ‘A’ then ‘B’ then ‘a’ then ‘b’. Fields starting with a lowercase letter will mix them: ‘A’ then ‘a’ then ‘B’ then ‘b’.\n\n`-I`, `--ignore-glob=GLOBS`\n: Glob patterns, pipe-separated, of files to ignore.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 102,
                  "endColumn": 5,
                  "snippet": {
                    "text": "Valid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\nSort fields starting with a capital letter will sort uppercase before lowercase: ‘A’ then ‘B’ then ‘a’ then ‘b’. Fields starting with a lowercase letter will mix them: ‘A’ then ‘a’ then ‘B’ then ‘b’.\n\n`-I`, `--ignore-glob=GLOBS`\n: Glob patterns, pipe-separated, of files to ignore.\n",
                    "rendered": {
                      "text": "Valid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\nSort fields starting with a capital letter will sort uppercase before lowercase: ‘A’ then ‘B’ then ‘a’ then ‘b’. Fields starting with a lowercase letter will mix them: ‘A’ then ‘a’ then ‘B’ then ‘b’.\n\n`-I`, `--ignore-glob=GLOBS`\n: Glob patterns, pipe-separated, of files to ignore.\n",
                      "markdown": "`Valid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\nSort fields starting with a capital letter will sort uppercase before lowercase: ‘A’ then ‘B’ then ‘a’ then ‘b’. Fields starting with a lowercase letter will mix them: ‘A’ then ‘a’ then ‘B’ then ‘b’.\n\n`-I`, `--ignore-glob=GLOBS`\n: Glob patterns, pipe-separated, of files to ignore.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 14,
                  "endLine": 100,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nValid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\nSort fields starting with a capital letter will sort uppercase before lowercase: ‘A’ then ‘B’ then ‘a’ then ‘b’. Fields starting with a lowercase letter will mix them: ‘A’ then ‘a’ then ‘B’ then ‘b’.\n\n",
                    "rendered": {
                      "text": "\nValid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\nSort fields starting with a capital letter will sort uppercase before lowercase: ‘A’ then ‘B’ then ‘a’ then ‘b’. Fields starting with a lowercase letter will mix them: ‘A’ then ‘a’ then ‘B’ then ‘b’.\n\n",
                      "markdown": "`\nValid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\nSort fields starting with a capital letter will sort uppercase before lowercase: ‘A’ then ‘B’ then ‘a’ then ‘b’. Fields starting with a lowercase letter will mix them: ‘A’ then ‘a’ then ‘B’ then ‘b’.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 5,
                  "endLine": 98,
                  "endColumn": 11,
                  "snippet": {
                    "text": "`-s`, `--sort=SORT_FIELD`\n: Which field to sort by.\n\nValid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\n",
                    "rendered": {
                      "text": "`-s`, `--sort=SORT_FIELD`\n: Which field to sort by.\n\nValid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\n",
                      "markdown": "``-s`, `--sort=SORT_FIELD`\n: Which field to sort by.\n\nValid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\nThe `modified` sort field has the aliases ‘`date`’, ‘`time`’, and ‘`newest`’, and its reverse order has the aliases ‘`age`’ and ‘`oldest`’.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 16,
                  "endLine": 96,
                  "endColumn": 22,
                  "snippet": {
                    "text": ": Reverse the sort order.\n\n`-s`, `--sort=SORT_FIELD`\n: Which field to sort by.\n\nValid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\n",
                    "rendered": {
                      "text": ": Reverse the sort order.\n\n`-s`, `--sort=SORT_FIELD`\n: Which field to sort by.\n\nValid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\n",
                      "markdown": "`: Reverse the sort order.\n\n`-s`, `--sort=SORT_FIELD`\n: Which field to sort by.\n\nValid sort fields are ‘`name`’, ‘`Name`’, ‘`extension`’, ‘`Extension`’, ‘`size`’, ‘`modified`’, ‘`changed`’, ‘`accessed`’, ‘`created`’, ‘`inode`’, ‘`type`’, and ‘`none`’.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 13,
                  "endLine": 93,
                  "endColumn": 19,
                  "snippet": {
                    "text": ": Limit the depth of recursion.\n\n`-r`, `--reverse`\n: Reverse the sort order.\n\n`-s`, `--sort=SORT_FIELD`\n: Which field to sort by.\n",
                    "rendered": {
                      "text": ": Limit the depth of recursion.\n\n`-r`, `--reverse`\n: Reverse the sort order.\n\n`-s`, `--sort=SORT_FIELD`\n: Which field to sort by.\n",
                      "markdown": "`: Limit the depth of recursion.\n\n`-r`, `--reverse`\n: Reverse the sort order.\n\n`-s`, `--sort=SORT_FIELD`\n: Which field to sort by.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": ": Recurse into directories as a tree.\n\n`-x`, `--across`\n: Sort the grid across, rather than downwards.\n\n`--color`, `--colour=WHEN`\n: When to use terminal colours.\n",
                    "rendered": {
                      "text": ": Recurse into directories as a tree.\n\n`-x`, `--across`\n: Sort the grid across, rather than downwards.\n\n`--color`, `--colour=WHEN`\n: When to use terminal colours.\n",
                      "markdown": "`: Recurse into directories as a tree.\n\n`-x`, `--across`\n: Sort the grid across, rather than downwards.\n\n`--color`, `--colour=WHEN`\n: When to use terminal colours.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 83,
                  "endLine": 35,
                  "endColumn": 88,
                  "snippet": {
                    "text": ": Displays a list of files with the largest at the top.\n\n`exa --long --header --inode --git`\n: Displays a table of files with a header, showing each file’s metadata, inode, and Git status.\n\n`exa --long --tree --level=3`\n: Displays a tree of files, three levels deep, as well as each file’s metadata.\n",
                    "rendered": {
                      "text": ": Displays a list of files with the largest at the top.\n\n`exa --long --header --inode --git`\n: Displays a table of files with a header, showing each file’s metadata, inode, and Git status.\n\n`exa --long --tree --level=3`\n: Displays a tree of files, three levels deep, as well as each file’s metadata.\n",
                      "markdown": "`: Displays a list of files with the largest at the top.\n\n`exa --long --header --inode --git`\n: Displays a table of files with a header, showing each file’s metadata, inode, and Git status.\n\n`exa --long --tree --level=3`\n: Displays a tree of files, three levels deep, as well as each file’s metadata.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa.1.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 80,
                  "endLine": 22,
                  "endColumn": 85,
                  "snippet": {
                    "text": "**exa** is a modern replacement for `ls`.\nIt uses colours for information by default, helping you distinguish between many types of files, such as whether you are the owner, or in the owning group.\n\nIt also has extra features not present in the original `ls`, such as viewing the Git status for a directory, or recursing into directories with a tree view.\n\n\nEXAMPLES\n",
                    "rendered": {
                      "text": "**exa** is a modern replacement for `ls`.\nIt uses colours for information by default, helping you distinguish between many types of files, such as whether you are the owner, or in the owning group.\n\nIt also has extra features not present in the original `ls`, such as viewing the Git status for a directory, or recursing into directories with a tree view.\n\n\nEXAMPLES\n",
                      "markdown": "`**exa** is a modern replacement for `ls`.\nIt uses colours for information by default, helping you distinguish between many types of files, such as whether you are the owner, or in the owning group.\n\nIt also has extra features not present in the original `ls`, such as viewing the Git status for a directory, or recursing into directories with a tree view.\n\n\nEXAMPLES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 76,
                  "endLine": 265,
                  "endColumn": 80,
                  "snippet": {
                    "text": "media, and temporary files.\nAny mappings in the environment variables will override this default set: running exa with `LS_COLORS=\"*.zip=32\"` will turn zip files green but leave the colours of other compressed files alone.\n\nYou can also disable this built-in set entirely by including a `reset` entry at the beginning of `EXA_COLORS`.\nSo setting `EXA_COLORS=\"reset:*.txt=31\"` will highlight only text files; setting `EXA_COLORS=\"reset\"` will highlight nothing.\n\n\nAUTHOR\n======\n\nexa is maintained by Benjamin ‘ogham’ Sago and many other contributors.\n\n**Website:** `https://the.exa.website/` \\\n**Source co",
                    "rendered": {
                      "text": "media, and temporary files.\nAny mappings in the environment variables will override this default set: running exa with `LS_COLORS=\"*.zip=32\"` will turn zip files green but leave the colours of other compressed files alone.\n\nYou can also disable this built-in set entirely by including a `reset` entry at the beginning of `EXA_COLORS`.\nSo setting `EXA_COLORS=\"reset:*.txt=31\"` will highlight only text files; setting `EXA_COLORS=\"reset\"` will highlight nothing.\n\n\nAUTHOR\n======\n\nexa is maintained by Benjamin ‘ogham’ Sago and many other contributors.\n\n**Website:** `https://the.exa.website/` \\\n**Source co",
                      "markdown": "`media, and temporary files.\nAny mappings in the environment variables will override this default set: running exa with `LS_COLORS=\"*.zip=32\"` will turn zip files green but leave the colours of other compressed files alone.\n\nYou can also disable this built-in set entirely by including a `reset` entry at the beginning of `EXA_COLORS`.\nSo setting `EXA_COLORS=\"reset:*.txt=31\"` will highlight only text files; setting `EXA_COLORS=\"reset\"` will highlight nothing.\n\n\nAUTHOR\n======\n\nexa is maintained by Benjamin ‘ogham’ Sago and many other contributors.\n\n**Website:** `https://the.exa.website/` \\\n**Source co`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 63,
                  "endLine": 260,
                  "endColumn": 67,
                  "snippet": {
                    "text": "`38;5;nnn`\n: for a colour from 0 to 255 (replace the `nnn` part)\n\nMany terminals will treat bolded text as a different colour, or at least provide the option to.\n\nexa provides its own built-in set of file extension mappings that cover a large range of common file extensions, including documents, archives, media, and temporary files.\nAny mappings in the environment variables will override this default set: running exa with `LS_COLORS=\"*.zip=32\"` will turn zip files green but leave the colours of other compressed files alone.\n",
                    "rendered": {
                      "text": "`38;5;nnn`\n: for a colour from 0 to 255 (replace the `nnn` part)\n\nMany terminals will treat bolded text as a different colour, or at least provide the option to.\n\nexa provides its own built-in set of file extension mappings that cover a large range of common file extensions, including documents, archives, media, and temporary files.\nAny mappings in the environment variables will override this default set: running exa with `LS_COLORS=\"*.zip=32\"` will turn zip files green but leave the colours of other compressed files alone.\n",
                      "markdown": "``38;5;nnn`\n: for a colour from 0 to 255 (replace the `nnn` part)\n\nMany terminals will treat bolded text as a different colour, or at least provide the option to.\n\nexa provides its own built-in set of file extension mappings that cover a large range of common file extensions, including documents, archives, media, and temporary files.\nAny mappings in the environment variables will override this default set: running exa with `LS_COLORS=\"*.zip=32\"` will turn zip files green but leave the colours of other compressed files alone.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 48,
                  "endLine": 179,
                  "endColumn": 52,
                  "snippet": {
                    "text": ": a number of hard links\n\n`lm`\n: a number of hard links for a regular file with at least two\n\n`ga`\n: a new flag in Git\n",
                    "rendered": {
                      "text": ": a number of hard links\n\n`lm`\n: a number of hard links for a regular file with at least two\n\n`ga`\n: a new flag in Git\n",
                      "markdown": "`: a number of hard links\n\n`lm`\n: a number of hard links for a regular file with at least two\n\n`ga`\n: a new flag in Git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 5,
                  "endLine": 237,
                  "endColumn": 10,
                  "snippet": {
                    "text": ": for underline\n\n`31`\n: for red text\n\n`32`\n: for green text\n",
                    "rendered": {
                      "text": ": for underline\n\n`31`\n: for red text\n\n`32`\n: for green text\n",
                      "markdown": "`: for underline\n\n`31`\n: for red text\n\n`32`\n: for green text\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 29,
                  "endLine": 195,
                  "snippet": {
                    "text": ": a renamed flag in Git\n\n`gt`\n: a modified metadata flag in Git\n\n`xx`\n: “punctuation”, including many background UI elements\n\n",
                    "rendered": {
                      "text": ": a renamed flag in Git\n\n`gt`\n: a modified metadata flag in Git\n\n`xx`\n: “punctuation”, including many background UI elements\n\n",
                      "markdown": "`: a renamed flag in Git\n\n`gt`\n: a modified metadata flag in Git\n\n`xx`\n: “punctuation”, including many background UI elements\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 19,
                  "endLine": 192,
                  "snippet": {
                    "text": ": a deleted flag in Git\n\n`gv`\n: a renamed flag in Git\n\n`gt`\n: a modified metadata flag in Git\n\n",
                    "rendered": {
                      "text": ": a deleted flag in Git\n\n`gv`\n: a renamed flag in Git\n\n`gt`\n: a modified metadata flag in Git\n\n",
                      "markdown": "`: a deleted flag in Git\n\n`gv`\n: a renamed flag in Git\n\n`gt`\n: a modified metadata flag in Git\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 19,
                  "endLine": 189,
                  "snippet": {
                    "text": ": a modified flag in Git\n\n`gd`\n: a deleted flag in Git\n\n`gv`\n: a renamed flag in Git\n\n",
                    "rendered": {
                      "text": ": a modified flag in Git\n\n`gd`\n: a deleted flag in Git\n\n`gv`\n: a renamed flag in Git\n\n",
                      "markdown": "`: a modified flag in Git\n\n`gd`\n: a deleted flag in Git\n\n`gv`\n: a renamed flag in Git\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 20,
                  "endLine": 186,
                  "snippet": {
                    "text": ": a new flag in Git\n\n`gm`\n: a modified flag in Git\n\n`gd`\n: a deleted flag in Git\n\n",
                    "rendered": {
                      "text": ": a new flag in Git\n\n`gm`\n: a modified flag in Git\n\n`gd`\n: a deleted flag in Git\n\n",
                      "markdown": "`: a new flag in Git\n\n`gm`\n: a modified flag in Git\n\n`gd`\n: a deleted flag in Git\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 15,
                  "endLine": 183,
                  "snippet": {
                    "text": ": a number of hard links for a regular file with at least two\n\n`ga`\n: a new flag in Git\n\n`gm`\n: a modified flag in Git\n\n",
                    "rendered": {
                      "text": ": a number of hard links for a regular file with at least two\n\n`ga`\n: a new flag in Git\n\n`gm`\n: a modified flag in Git\n\n",
                      "markdown": "`: a number of hard links for a regular file with at least two\n\n`ga`\n: a new flag in Git\n\n`gm`\n: a modified flag in Git\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/man/exa_colors.5.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 49,
                  "endLine": 19,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nThe `EXA_COLORS` environment variable can be used to customise the colours that `exa` uses to highlight file names, file metadata, and parts of the UI.\n\nYou can use the `dircolors` program to generate a script that sets the variable from an input file, or if you don’t mind editing long strings of text, you can just type it out directly. These variables have the following structure:\n\n- A list of key-value pairs separated by ‘`=`’, such as ‘`*.txt=32`’.\n- Multiple ANSI formatting codes are separated by ‘`;`’, such as ‘`*.txt=32;1;4`’.\n",
                    "rendered": {
                      "text": "\nThe `EXA_COLORS` environment variable can be used to customise the colours that `exa` uses to highlight file names, file metadata, and parts of the UI.\n\nYou can use the `dircolors` program to generate a script that sets the variable from an input file, or if you don’t mind editing long strings of text, you can just type it out directly. These variables have the following structure:\n\n- A list of key-value pairs separated by ‘`=`’, such as ‘`*.txt=32`’.\n- Multiple ANSI formatting codes are separated by ‘`;`’, such as ‘`*.txt=32;1;4`’.\n",
                      "markdown": "`\nThe `EXA_COLORS` environment variable can be used to customise the colours that `exa` uses to highlight file names, file metadata, and parts of the UI.\n\nYou can use the `dircolors` program to generate a script that sets the variable from an input file, or if you don’t mind editing long strings of text, you can just type it out directly. These variables have the following structure:\n\n- A list of key-value pairs separated by ‘`=`’, such as ‘`*.txt=32`’.\n- Multiple ANSI formatting codes are separated by ‘`;`’, such as ‘`*.txt=32;1;4`’.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 11,
                  "endLine": 392,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"zoneinfo_compiled\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64fbebe65e899530f43bd760b23fda8f141118f4db49952b02998cbd0907a5de\"\ndependencies = [\n \"byteorder\",\n \"datetime\",\n",
                    "rendered": {
                      "text": "name = \"zoneinfo_compiled\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64fbebe65e899530f43bd760b23fda8f141118f4db49952b02998cbd0907a5de\"\ndependencies = [\n \"byteorder\",\n \"datetime\",\n",
                      "markdown": "`name = \"zoneinfo_compiled\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64fbebe65e899530f43bd760b23fda8f141118f4db49952b02998cbd0907a5de\"\ndependencies = [\n \"byteorder\",\n \"datetime\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 11,
                  "endLine": 386,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"zoneinfo_compiled\"\n",
                    "rendered": {
                      "text": "name = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"zoneinfo_compiled\"\n",
                      "markdown": "`name = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"zoneinfo_compiled\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 11,
                  "endLine": 380,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\n",
                    "rendered": {
                      "text": "name = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\n",
                      "markdown": "`name = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 11,
                  "endLine": 370,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n",
                    "rendered": {
                      "text": "name = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n",
                      "markdown": "`name = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 11,
                  "endLine": 364,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"vcpkg\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbdbff6266a24120518560b5dc983096efb98462e51d0d68169895b237be3e5d\"\n\n[[package]]\nname = \"winapi\"\n",
                    "rendered": {
                      "text": "name = \"vcpkg\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbdbff6266a24120518560b5dc983096efb98462e51d0d68169895b237be3e5d\"\n\n[[package]]\nname = \"winapi\"\n",
                      "markdown": "`name = \"vcpkg\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbdbff6266a24120518560b5dc983096efb98462e51d0d68169895b237be3e5d\"\n\n[[package]]\nname = \"winapi\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 11,
                  "endLine": 354,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"users\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24cc0f6d6f267b73e5a2cadf007ba8f9bc39c6a6f9666f8cf25ea809a153b032\"\ndependencies = [\n \"libc\",\n \"log\",\n",
                    "rendered": {
                      "text": "name = \"users\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24cc0f6d6f267b73e5a2cadf007ba8f9bc39c6a6f9666f8cf25ea809a153b032\"\ndependencies = [\n \"libc\",\n \"log\",\n",
                      "markdown": "`name = \"users\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24cc0f6d6f267b73e5a2cadf007ba8f9bc39c6a6f9666f8cf25ea809a153b032\"\ndependencies = [\n \"libc\",\n \"log\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 11,
                  "endLine": 342,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"url\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ccd964113622c8e9322cfac19eb1004a07e636c545f325da085d5cdde6f1f8b\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n",
                    "rendered": {
                      "text": "name = \"url\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ccd964113622c8e9322cfac19eb1004a07e636c545f325da085d5cdde6f1f8b\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n",
                      "markdown": "`name = \"url\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ccd964113622c8e9322cfac19eb1004a07e636c545f325da085d5cdde6f1f8b\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 11,
                  "endLine": 336,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"unicode-width\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3\"\n\n[[package]]\nname = \"url\"\n",
                    "rendered": {
                      "text": "name = \"unicode-width\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3\"\n\n[[package]]\nname = \"url\"\n",
                      "markdown": "`name = \"unicode-width\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3\"\n\n[[package]]\nname = \"url\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 11,
                  "endLine": 327,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"unicode-normalization\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07fbfce1c8a97d547e8b5334978438d9d6ec8c20e38f56d4a4374d181493eaef\"\ndependencies = [\n \"tinyvec\",\n]\n",
                    "rendered": {
                      "text": "name = \"unicode-normalization\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07fbfce1c8a97d547e8b5334978438d9d6ec8c20e38f56d4a4374d181493eaef\"\ndependencies = [\n \"tinyvec\",\n]\n",
                      "markdown": "`name = \"unicode-normalization\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07fbfce1c8a97d547e8b5334978438d9d6ec8c20e38f56d4a4374d181493eaef\"\ndependencies = [\n \"tinyvec\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 11,
                  "endLine": 318,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"unicode-bidi\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eeb8be209bb1c96b7c177c7420d26e04eccacb0eeae6b980e35fcb74678107e0\"\ndependencies = [\n \"matches\",\n]\n",
                    "rendered": {
                      "text": "name = \"unicode-bidi\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eeb8be209bb1c96b7c177c7420d26e04eccacb0eeae6b980e35fcb74678107e0\"\ndependencies = [\n \"matches\",\n]\n",
                      "markdown": "`name = \"unicode-bidi\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eeb8be209bb1c96b7c177c7420d26e04eccacb0eeae6b980e35fcb74678107e0\"\ndependencies = [\n \"matches\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 11,
                  "endLine": 312,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"tinyvec_macros\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cda74da7e1a664f795bb1f8a87ec406fb89a02522cf6e50620d016add6dbbf5c\"\n\n[[package]]\nname = \"unicode-bidi\"\n",
                    "rendered": {
                      "text": "name = \"tinyvec_macros\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cda74da7e1a664f795bb1f8a87ec406fb89a02522cf6e50620d016add6dbbf5c\"\n\n[[package]]\nname = \"unicode-bidi\"\n",
                      "markdown": "`name = \"tinyvec_macros\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cda74da7e1a664f795bb1f8a87ec406fb89a02522cf6e50620d016add6dbbf5c\"\n\n[[package]]\nname = \"unicode-bidi\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 11,
                  "endLine": 303,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"tinyvec\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b5220f05bb7de7f3f53c7c065e1199b3172696fe2db9f9c4d8ad9b4ee74c342\"\ndependencies = [\n \"tinyvec_macros\",\n]\n",
                    "rendered": {
                      "text": "name = \"tinyvec\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b5220f05bb7de7f3f53c7c065e1199b3172696fe2db9f9c4d8ad9b4ee74c342\"\ndependencies = [\n \"tinyvec_macros\",\n]\n",
                      "markdown": "`name = \"tinyvec\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b5220f05bb7de7f3f53c7c065e1199b3172696fe2db9f9c4d8ad9b4ee74c342\"\ndependencies = [\n \"tinyvec_macros\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 11,
                  "endLine": 293,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"terminal_size\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86ca8ced750734db02076f44132d802af0b33b09942331f4459dde8636fd2406\"\ndependencies = [\n \"libc\",\n \"winapi\",\n",
                    "rendered": {
                      "text": "name = \"terminal_size\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86ca8ced750734db02076f44132d802af0b33b09942331f4459dde8636fd2406\"\ndependencies = [\n \"libc\",\n \"winapi\",\n",
                      "markdown": "`name = \"terminal_size\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86ca8ced750734db02076f44132d802af0b33b09942331f4459dde8636fd2406\"\ndependencies = [\n \"libc\",\n \"winapi\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 11,
                  "endLine": 284,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"term_grid\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7c9eb7705cb3f0fd71d3955b23db6d372142ac139e8c473952c93bf3c3dc4b7\"\ndependencies = [\n \"unicode-width\",\n]\n",
                    "rendered": {
                      "text": "name = \"term_grid\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7c9eb7705cb3f0fd71d3955b23db6d372142ac139e8c473952c93bf3c3dc4b7\"\ndependencies = [\n \"unicode-width\",\n]\n",
                      "markdown": "`name = \"term_grid\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7c9eb7705cb3f0fd71d3955b23db6d372142ac139e8c473952c93bf3c3dc4b7\"\ndependencies = [\n \"unicode-width\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 11,
                  "endLine": 278,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"scoped_threadpool\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d51f5df5af43ab3f1360b429fa5e0152ac5ce8c0bd6485cae490332e96846a8\"\n\n[[package]]\nname = \"term_grid\"\n",
                    "rendered": {
                      "text": "name = \"scoped_threadpool\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d51f5df5af43ab3f1360b429fa5e0152ac5ce8c0bd6485cae490332e96846a8\"\n\n[[package]]\nname = \"term_grid\"\n",
                      "markdown": "`name = \"scoped_threadpool\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d51f5df5af43ab3f1360b429fa5e0152ac5ce8c0bd6485cae490332e96846a8\"\n\n[[package]]\nname = \"term_grid\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 11,
                  "endLine": 272,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"redox_syscall\"\nversion = \"0.1.57\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce\"\n\n[[package]]\nname = \"scoped_threadpool\"\n",
                    "rendered": {
                      "text": "name = \"redox_syscall\"\nversion = \"0.1.57\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce\"\n\n[[package]]\nname = \"scoped_threadpool\"\n",
                      "markdown": "`name = \"redox_syscall\"\nversion = \"0.1.57\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce\"\n\n[[package]]\nname = \"scoped_threadpool\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 11,
                  "endLine": 266,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"pkg-config\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3831453b3449ceb48b6d9c7ad7c96d5ea673e9b470a1dc578c2ce6521230884c\"\n\n[[package]]\nname = \"redox_syscall\"\n",
                    "rendered": {
                      "text": "name = \"pkg-config\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3831453b3449ceb48b6d9c7ad7c96d5ea673e9b470a1dc578c2ce6521230884c\"\n\n[[package]]\nname = \"redox_syscall\"\n",
                      "markdown": "`name = \"pkg-config\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3831453b3449ceb48b6d9c7ad7c96d5ea673e9b470a1dc578c2ce6521230884c\"\n\n[[package]]\nname = \"redox_syscall\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 11,
                  "endLine": 260,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"percent-encoding\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e\"\n\n[[package]]\nname = \"pkg-config\"\n",
                    "rendered": {
                      "text": "name = \"percent-encoding\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e\"\n\n[[package]]\nname = \"pkg-config\"\n",
                      "markdown": "`name = \"percent-encoding\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e\"\n\n[[package]]\nname = \"pkg-config\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 11,
                  "endLine": 251,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"pad\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2ad9b889f1b12e0b9ee24db044b5129150d5eada288edc800f789928dc8c0e3\"\ndependencies = [\n \"unicode-width\",\n]\n",
                    "rendered": {
                      "text": "name = \"pad\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2ad9b889f1b12e0b9ee24db044b5129150d5eada288edc800f789928dc8c0e3\"\ndependencies = [\n \"unicode-width\",\n]\n",
                      "markdown": "`name = \"pad\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2ad9b889f1b12e0b9ee24db044b5129150d5eada288edc800f789928dc8c0e3\"\ndependencies = [\n \"unicode-width\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 11,
                  "endLine": 237,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"openssl-sys\"\nversion = \"0.9.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"313752393519e876837e09e1fa183ddef0be7735868dced3196f4472d536277f\"\ndependencies = [\n \"autocfg\",\n \"cc\",\n",
                    "rendered": {
                      "text": "name = \"openssl-sys\"\nversion = \"0.9.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"313752393519e876837e09e1fa183ddef0be7735868dced3196f4472d536277f\"\ndependencies = [\n \"autocfg\",\n \"cc\",\n",
                      "markdown": "`name = \"openssl-sys\"\nversion = \"0.9.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"313752393519e876837e09e1fa183ddef0be7735868dced3196f4472d536277f\"\ndependencies = [\n \"autocfg\",\n \"cc\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 11,
                  "endLine": 228,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"openssl-src\"\nversion = \"111.15.0+1.1.1k\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1a5f6ae2ac04393b217ea9f700cd04fa9bf3d93fae2872069f3d15d908af70a\"\ndependencies = [\n \"cc\",\n]\n",
                    "rendered": {
                      "text": "name = \"openssl-src\"\nversion = \"111.15.0+1.1.1k\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1a5f6ae2ac04393b217ea9f700cd04fa9bf3d93fae2872069f3d15d908af70a\"\ndependencies = [\n \"cc\",\n]\n",
                      "markdown": "`name = \"openssl-src\"\nversion = \"111.15.0+1.1.1k\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1a5f6ae2ac04393b217ea9f700cd04fa9bf3d93fae2872069f3d15d908af70a\"\ndependencies = [\n \"cc\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 11,
                  "endLine": 222,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"number_prefix\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3\"\n\n[[package]]\nname = \"openssl-src\"\n",
                    "rendered": {
                      "text": "name = \"number_prefix\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3\"\n\n[[package]]\nname = \"openssl-src\"\n",
                      "markdown": "`name = \"number_prefix\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3\"\n\n[[package]]\nname = \"openssl-src\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 11,
                  "endLine": 212,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"num_cpus\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05499f3756671c15885fee9034446956fff3f243d6077b91e5767df161f766b3\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n",
                    "rendered": {
                      "text": "name = \"num_cpus\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05499f3756671c15885fee9034446956fff3f243d6077b91e5767df161f766b3\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n",
                      "markdown": "`name = \"num_cpus\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05499f3756671c15885fee9034446956fff3f243d6077b91e5767df161f766b3\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 11,
                  "endLine": 206,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"natord\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"308d96db8debc727c3fd9744aac51751243420e46edf401010908da7f8d5e57c\"\n\n[[package]]\nname = \"num_cpus\"\n",
                    "rendered": {
                      "text": "name = \"natord\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"308d96db8debc727c3fd9744aac51751243420e46edf401010908da7f8d5e57c\"\n\n[[package]]\nname = \"num_cpus\"\n",
                      "markdown": "`name = \"natord\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"308d96db8debc727c3fd9744aac51751243420e46edf401010908da7f8d5e57c\"\n\n[[package]]\nname = \"num_cpus\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 11,
                  "endLine": 200,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"matches\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08\"\n\n[[package]]\nname = \"natord\"\n",
                    "rendered": {
                      "text": "name = \"matches\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08\"\n\n[[package]]\nname = \"natord\"\n",
                      "markdown": "`name = \"matches\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08\"\n\n[[package]]\nname = \"natord\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 11,
                  "endLine": 191,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"log\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51b9bbe6c47d51fc3e1a9b945965946b4c44142ab8792c50835a980d362c2710\"\ndependencies = [\n \"cfg-if\",\n]\n",
                    "rendered": {
                      "text": "name = \"log\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51b9bbe6c47d51fc3e1a9b945965946b4c44142ab8792c50835a980d362c2710\"\ndependencies = [\n \"cfg-if\",\n]\n",
                      "markdown": "`name = \"log\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51b9bbe6c47d51fc3e1a9b945965946b4c44142ab8792c50835a980d362c2710\"\ndependencies = [\n \"cfg-if\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 11,
                  "endLine": 182,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"locale\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fdbe492a9c0238da900a1165c42fc5067161ce292678a6fe80921f30fe307fd\"\ndependencies = [\n \"libc\",\n]\n",
                    "rendered": {
                      "text": "name = \"locale\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fdbe492a9c0238da900a1165c42fc5067161ce292678a6fe80921f30fe307fd\"\ndependencies = [\n \"libc\",\n]\n",
                      "markdown": "`name = \"locale\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fdbe492a9c0238da900a1165c42fc5067161ce292678a6fe80921f30fe307fd\"\ndependencies = [\n \"libc\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 11,
                  "endLine": 170,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"libz-sys\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"602113192b08db8f38796c4e85c39e960c145965140e918018bcde1952429655\"\ndependencies = [\n \"cc\",\n \"libc\",\n",
                    "rendered": {
                      "text": "name = \"libz-sys\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"602113192b08db8f38796c4e85c39e960c145965140e918018bcde1952429655\"\ndependencies = [\n \"cc\",\n \"libc\",\n",
                      "markdown": "`name = \"libz-sys\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"602113192b08db8f38796c4e85c39e960c145965140e918018bcde1952429655\"\ndependencies = [\n \"cc\",\n \"libc\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 11,
                  "endLine": 158,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"libgit2-sys\"\nversion = \"0.12.21+1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86271bacd72b2b9e854c3dcfb82efd538f15f870e4c11af66900effb462f6825\"\ndependencies = [\n \"cc\",\n \"libc\",\n",
                    "rendered": {
                      "text": "name = \"libgit2-sys\"\nversion = \"0.12.21+1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86271bacd72b2b9e854c3dcfb82efd538f15f870e4c11af66900effb462f6825\"\ndependencies = [\n \"cc\",\n \"libc\",\n",
                      "markdown": "`name = \"libgit2-sys\"\nversion = \"0.12.21+1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86271bacd72b2b9e854c3dcfb82efd538f15f870e4c11af66900effb462f6825\"\ndependencies = [\n \"cc\",\n \"libc\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 11,
                  "endLine": 152,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"libc\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9385f66bf6105b241aa65a61cb923ef20efc665cb9f9bb50ac2f0c4b7f378d41\"\n\n[[package]]\nname = \"libgit2-sys\"\n",
                    "rendered": {
                      "text": "name = \"libc\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9385f66bf6105b241aa65a61cb923ef20efc665cb9f9bb50ac2f0c4b7f378d41\"\n\n[[package]]\nname = \"libgit2-sys\"\n",
                      "markdown": "`name = \"libc\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9385f66bf6105b241aa65a61cb923ef20efc665cb9f9bb50ac2f0c4b7f378d41\"\n\n[[package]]\nname = \"libgit2-sys\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 11,
                  "endLine": 146,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\n",
                    "rendered": {
                      "text": "name = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\n",
                      "markdown": "`name = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 11,
                  "endLine": 137,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"jobserver\"\nversion = \"0.1.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"972f5ae5d1cb9c6ae417789196c803205313edde988685da5e3aae0827b9e7fd\"\ndependencies = [\n \"libc\",\n]\n",
                    "rendered": {
                      "text": "name = \"jobserver\"\nversion = \"0.1.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"972f5ae5d1cb9c6ae417789196c803205313edde988685da5e3aae0827b9e7fd\"\ndependencies = [\n \"libc\",\n]\n",
                      "markdown": "`name = \"jobserver\"\nversion = \"0.1.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"972f5ae5d1cb9c6ae417789196c803205313edde988685da5e3aae0827b9e7fd\"\ndependencies = [\n \"libc\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 11,
                  "endLine": 126,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"idna\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"418a0a6fab821475f634efe3ccc45c013f742efe03d853e8d3355d5cb850ecf8\"\ndependencies = [\n \"matches\",\n \"unicode-bidi\",\n",
                    "rendered": {
                      "text": "name = \"idna\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"418a0a6fab821475f634efe3ccc45c013f742efe03d853e8d3355d5cb850ecf8\"\ndependencies = [\n \"matches\",\n \"unicode-bidi\",\n",
                      "markdown": "`name = \"idna\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"418a0a6fab821475f634efe3ccc45c013f742efe03d853e8d3355d5cb850ecf8\"\ndependencies = [\n \"matches\",\n \"unicode-bidi\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 11,
                  "endLine": 117,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"hermit-abi\"\nversion = \"0.1.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"322f4de77956e22ed0e5032c359a0f1273f1f7f0d79bfa3b8ffbc730d7fbcc5c\"\ndependencies = [\n \"libc\",\n]\n",
                    "rendered": {
                      "text": "name = \"hermit-abi\"\nversion = \"0.1.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"322f4de77956e22ed0e5032c359a0f1273f1f7f0d79bfa3b8ffbc730d7fbcc5c\"\ndependencies = [\n \"libc\",\n]\n",
                      "markdown": "`name = \"hermit-abi\"\nversion = \"0.1.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"322f4de77956e22ed0e5032c359a0f1273f1f7f0d79bfa3b8ffbc730d7fbcc5c\"\ndependencies = [\n \"libc\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 11,
                  "endLine": 111,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"glob\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574\"\n\n[[package]]\nname = \"hermit-abi\"\n",
                    "rendered": {
                      "text": "name = \"glob\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574\"\n\n[[package]]\nname = \"hermit-abi\"\n",
                      "markdown": "`name = \"glob\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574\"\n\n[[package]]\nname = \"hermit-abi\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 11,
                  "endLine": 97,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"git2\"\nversion = \"0.13.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9831e983241f8c5591ed53f17d874833e2fa82cac2625f3888c50cbfe136cba\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n",
                    "rendered": {
                      "text": "name = \"git2\"\nversion = \"0.13.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9831e983241f8c5591ed53f17d874833e2fa82cac2625f3888c50cbfe136cba\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n",
                      "markdown": "`name = \"git2\"\nversion = \"0.13.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9831e983241f8c5591ed53f17d874833e2fa82cac2625f3888c50cbfe136cba\"\ndependencies = [\n \"bitflags\",\n \"libc\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 11,
                  "endLine": 87,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"form_urlencoded\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fc25a87fa4fd2094bffb06925852034d90a17f0d1e05197d4956d3555752191\"\ndependencies = [\n \"matches\",\n \"percent-encoding\",\n",
                    "rendered": {
                      "text": "name = \"form_urlencoded\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fc25a87fa4fd2094bffb06925852034d90a17f0d1e05197d4956d3555752191\"\ndependencies = [\n \"matches\",\n \"percent-encoding\",\n",
                      "markdown": "`name = \"form_urlencoded\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fc25a87fa4fd2094bffb06925852034d90a17f0d1e05197d4956d3555752191\"\ndependencies = [\n \"matches\",\n \"percent-encoding\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 11,
                  "endLine": 51,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"datetime\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c3f7a77f3e57fedf80e09136f2d8777ebf621207306f6d96d610af048354bc\"\ndependencies = [\n \"libc\",\n \"locale\",\n",
                    "rendered": {
                      "text": "name = \"datetime\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c3f7a77f3e57fedf80e09136f2d8777ebf621207306f6d96d610af048354bc\"\ndependencies = [\n \"libc\",\n \"locale\",\n",
                      "markdown": "`name = \"datetime\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c3f7a77f3e57fedf80e09136f2d8777ebf621207306f6d96d610af048354bc\"\ndependencies = [\n \"libc\",\n \"locale\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 11,
                  "endLine": 45,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"datetime\"\n",
                    "rendered": {
                      "text": "name = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"datetime\"\n",
                      "markdown": "`name = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"datetime\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11,
                  "endLine": 36,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"cc\"\nversion = \"1.0.67\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3c69b077ad434294d3ce9f1f6143a2a4b89a8a2d54ef813d85003a4fd1137fd\"\ndependencies = [\n \"jobserver\",\n]\n",
                    "rendered": {
                      "text": "name = \"cc\"\nversion = \"1.0.67\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3c69b077ad434294d3ce9f1f6143a2a4b89a8a2d54ef813d85003a4fd1137fd\"\ndependencies = [\n \"jobserver\",\n]\n",
                      "markdown": "`name = \"cc\"\nversion = \"1.0.67\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3c69b077ad434294d3ce9f1f6143a2a4b89a8a2d54ef813d85003a4fd1137fd\"\ndependencies = [\n \"jobserver\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 11,
                  "endLine": 30,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"byteorder\"\nversion = \"1.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610\"\n\n[[package]]\nname = \"cc\"\n",
                    "rendered": {
                      "text": "name = \"byteorder\"\nversion = \"1.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610\"\n\n[[package]]\nname = \"cc\"\n",
                      "markdown": "`name = \"byteorder\"\nversion = \"1.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610\"\n\n[[package]]\nname = \"cc\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11,
                  "endLine": 24,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"bitflags\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693\"\n\n[[package]]\nname = \"byteorder\"\n",
                    "rendered": {
                      "text": "name = \"bitflags\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693\"\n\n[[package]]\nname = \"byteorder\"\n",
                      "markdown": "`name = \"bitflags\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693\"\n\n[[package]]\nname = \"byteorder\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 11,
                  "endLine": 18,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"autocfg\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a\"\n\n[[package]]\nname = \"bitflags\"\n",
                    "rendered": {
                      "text": "name = \"autocfg\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a\"\n\n[[package]]\nname = \"bitflags\"\n",
                      "markdown": "`name = \"autocfg\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a\"\n\n[[package]]\nname = \"bitflags\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 11,
                  "endLine": 9,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n",
                    "rendered": {
                      "text": "name = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n",
                      "markdown": "`name = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Justfile"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 9,
                  "endLine": 69,
                  "snippet": {
                    "text": "\n# update dependency versions, and checks for outdated ones\n@update-deps:\n    cargo update\n    command -v cargo-outdated >/dev/null || (echo \"cargo-outdated not installed\" && exit 1)\n    cargo outdated\n\n# list unused dependencies\n",
                    "rendered": {
                      "text": "\n# update dependency versions, and checks for outdated ones\n@update-deps:\n    cargo update\n    command -v cargo-outdated >/dev/null || (echo \"cargo-outdated not installed\" && exit 1)\n    cargo outdated\n\n# list unused dependencies\n",
                      "markdown": "`\n# update dependency versions, and checks for outdated ones\n@update-deps:\n    cargo update\n    command -v cargo-outdated >/dev/null || (echo \"cargo-outdated not installed\" && exit 1)\n    cargo outdated\n\n# list unused dependencies\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Justfile"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 1,
                  "endLine": 66,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    touch src/main.rs\n    cargo clippy\n\n# update dependency versions, and checks for outdated ones\n@update-deps:\n    cargo update\n    command -v cargo-outdated >/dev/null || (echo \"cargo-outdated not installed\" && exit 1)\n",
                    "rendered": {
                      "text": "    touch src/main.rs\n    cargo clippy\n\n# update dependency versions, and checks for outdated ones\n@update-deps:\n    cargo update\n    command -v cargo-outdated >/dev/null || (echo \"cargo-outdated not installed\" && exit 1)\n",
                      "markdown": "`    touch src/main.rs\n    cargo clippy\n\n# update dependency versions, and checks for outdated ones\n@update-deps:\n    cargo update\n    command -v cargo-outdated >/dev/null || (echo \"cargo-outdated not installed\" && exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/Justfile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# display the number of extended tests that get run\n@count-xtests:\n    grep -F '[[cmd]]' -R xtests | wc -l\n\n\n#-----------------------#\n",
                    "rendered": {
                      "text": "\n# display the number of extended tests that get run\n@count-xtests:\n    grep -F '[[cmd]]' -R xtests | wc -l\n\n\n#-----------------------#\n",
                      "markdown": "`\n# display the number of extended tests that get run\n@count-xtests:\n    grep -F '[[cmd]]' -R xtests | wc -l\n\n\n#-----------------------#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 40,
                  "endLine": 253,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nThe initial attempt to solve the problem was just to create a directory of “awkward” test cases, run exa on it, and make sure it produced the correct output.\nBut even this output would change if, say, the user’s locale formats dates in a different way.\nThese can be mocked inside the code, but at the cost of making that code more complicated to read and understand.\n\nAn alternative solution is to fake *everything*: create a virtual machine with a known state and run the tests on *that*.\nThis is what Vagrant does.\n",
                    "rendered": {
                      "text": "\nThe initial attempt to solve the problem was just to create a directory of “awkward” test cases, run exa on it, and make sure it produced the correct output.\nBut even this output would change if, say, the user’s locale formats dates in a different way.\nThese can be mocked inside the code, but at the cost of making that code more complicated to read and understand.\n\nAn alternative solution is to fake *everything*: create a virtual machine with a known state and run the tests on *that*.\nThis is what Vagrant does.\n",
                      "markdown": "`\nThe initial attempt to solve the problem was just to create a directory of “awkward” test cases, run exa on it, and make sure it produced the correct output.\nBut even this output would change if, say, the user’s locale formats dates in a different way.\nThese can be mocked inside the code, but at the cost of making that code more complicated to read and understand.\n\nAn alternative solution is to fake *everything*: create a virtual machine with a known state and run the tests on *that*.\nThis is what Vagrant does.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 17,
                  "endLine": 270,
                  "snippet": {
                    "text": "The first command downloads the virtual machine image, and then runs our provisioning script, which installs Rust and exa’s build-time dependencies, configures the environment, and generates some awkward files and folders to use as test cases.\nOnce this is done, you can SSH in, and build and test:\n\n    host$ vagrant ssh\n    vm$ cd /vagrant\n    vm$ cargo build\n    vm$ ./xtests/run\n    All the tests passed!\n",
                    "rendered": {
                      "text": "The first command downloads the virtual machine image, and then runs our provisioning script, which installs Rust and exa’s build-time dependencies, configures the environment, and generates some awkward files and folders to use as test cases.\nOnce this is done, you can SSH in, and build and test:\n\n    host$ vagrant ssh\n    vm$ cd /vagrant\n    vm$ cargo build\n    vm$ ./xtests/run\n    All the tests passed!\n",
                      "markdown": "`The first command downloads the virtual machine image, and then runs our provisioning script, which installs Rust and exa’s build-time dependencies, configures the environment, and generates some awkward files and folders to use as test cases.\nOnce this is done, you can SSH in, and build and test:\n\n    host$ vagrant ssh\n    vm$ cd /vagrant\n    vm$ cargo build\n    vm$ ./xtests/run\n    All the tests passed!\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 26,
                  "endLine": 267,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    host$ vagrant up\n\nThe first command downloads the virtual machine image, and then runs our provisioning script, which installs Rust and exa’s build-time dependencies, configures the environment, and generates some awkward files and folders to use as test cases.\nOnce this is done, you can SSH in, and build and test:\n\n    host$ vagrant ssh\n    vm$ cd /vagrant\n",
                    "rendered": {
                      "text": "    host$ vagrant up\n\nThe first command downloads the virtual machine image, and then runs our provisioning script, which installs Rust and exa’s build-time dependencies, configures the environment, and generates some awkward files and folders to use as test cases.\nOnce this is done, you can SSH in, and build and test:\n\n    host$ vagrant ssh\n    vm$ cd /vagrant\n",
                      "markdown": "`    host$ vagrant up\n\nThe first command downloads the virtual machine image, and then runs our provisioning script, which installs Rust and exa’s build-time dependencies, configures the environment, and generates some awkward files and folders to use as test cases.\nOnce this is done, you can SSH in, and build and test:\n\n    host$ vagrant ssh\n    vm$ cd /vagrant\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 145,
                  "endLine": 248,
                  "endColumn": 151,
                  "snippet": {
                    "text": "to configure virtual machines for testing.\n\nPrograms such as exa that are basically interfaces to the system are [notoriously difficult to test][testing].\nAlthough the internal components have unit tests, it’s impossible to do a complete end-to-end test without mandating the current user’s name, the time zone, the locale, and directory structure to test.\n(And yes, these tests are worth doing. I have missed an edge case on many an occasion.)\n\nThe initial attempt to solve the problem was just to create a directory of “awkward” test cases, run exa on it, and make sure it produced the correct output.\nBu",
                    "rendered": {
                      "text": "to configure virtual machines for testing.\n\nPrograms such as exa that are basically interfaces to the system are [notoriously difficult to test][testing].\nAlthough the internal components have unit tests, it’s impossible to do a complete end-to-end test without mandating the current user’s name, the time zone, the locale, and directory structure to test.\n(And yes, these tests are worth doing. I have missed an edge case on many an occasion.)\n\nThe initial attempt to solve the problem was just to create a directory of “awkward” test cases, run exa on it, and make sure it produced the correct output.\nBu",
                      "markdown": "`to configure virtual machines for testing.\n\nPrograms such as exa that are basically interfaces to the system are [notoriously difficult to test][testing].\nAlthough the internal components have unit tests, it’s impossible to do a complete end-to-end test without mandating the current user’s name, the time zone, the locale, and directory structure to test.\n(And yes, these tests are worth doing. I have missed an edge case on many an occasion.)\n\nThe initial attempt to solve the problem was just to create a directory of “awkward” test cases, run exa on it, and make sure it produced the correct output.\nBu`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 108,
                  "endLine": 237,
                  "endColumn": 113,
                  "snippet": {
                    "text": "- exa depends on [libgit2](https://github.com/rust-lang/git2-rs) for certain features.\nIf you’re unable to compile libgit2, you can opt out of Git support by running `cargo build --no-default-features`.\n\n- If you intend to compile for musl, you will need to use the flag `vendored-openssl` if you want to get the Git feature working.\nThe full command is `cargo build --release --target=x86_64-unknown-linux-musl --features vendored-openssl,git`.\n\nFor more information, see the [Building from Source page](https://the.exa.website/install/source).\n",
                    "rendered": {
                      "text": "- exa depends on [libgit2](https://github.com/rust-lang/git2-rs) for certain features.\nIf you’re unable to compile libgit2, you can opt out of Git support by running `cargo build --no-default-features`.\n\n- If you intend to compile for musl, you will need to use the flag `vendored-openssl` if you want to get the Git feature working.\nThe full command is `cargo build --release --target=x86_64-unknown-linux-musl --features vendored-openssl,git`.\n\nFor more information, see the [Building from Source page](https://the.exa.website/install/source).\n",
                      "markdown": "`- exa depends on [libgit2](https://github.com/rust-lang/git2-rs) for certain features.\nIf you’re unable to compile libgit2, you can opt out of Git support by running `cargo build --no-default-features`.\n\n- If you intend to compile for musl, you will need to use the flag `vendored-openssl` if you want to get the Git feature working.\nThe full command is `cargo build --release --target=x86_64-unknown-linux-musl --features vendored-openssl,git`.\n\nFor more information, see the [Building from Source page](https://the.exa.website/install/source).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 55,
                  "endLine": 235,
                  "endColumn": 60,
                  "snippet": {
                    "text": "`/usr/local/share/man` is usually a good choice.\n\n- exa depends on [libgit2](https://github.com/rust-lang/git2-rs) for certain features.\nIf you’re unable to compile libgit2, you can opt out of Git support by running `cargo build --no-default-features`.\n\n- If you intend to compile for musl, you will need to use the flag `vendored-openssl` if you want to get the Git feature working.\nThe full command is `cargo build --release --target=x86_64-unknown-linux-musl --features vendored-openssl,git`.\n",
                    "rendered": {
                      "text": "`/usr/local/share/man` is usually a good choice.\n\n- exa depends on [libgit2](https://github.com/rust-lang/git2-rs) for certain features.\nIf you’re unable to compile libgit2, you can opt out of Git support by running `cargo build --no-default-features`.\n\n- If you intend to compile for musl, you will need to use the flag `vendored-openssl` if you want to get the Git feature working.\nThe full command is `cargo build --release --target=x86_64-unknown-linux-musl --features vendored-openssl,git`.\n",
                      "markdown": "``/usr/local/share/man` is usually a good choice.\n\n- exa depends on [libgit2](https://github.com/rust-lang/git2-rs) for certain features.\nIf you’re unable to compile libgit2, you can opt out of Git support by running `cargo build --no-default-features`.\n\n- If you intend to compile for musl, you will need to use the flag `vendored-openssl` if you want to get the Git feature working.\nThe full command is `cargo build --release --target=x86_64-unknown-linux-musl --features vendored-openssl,git`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 16,
                  "endLine": 196,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nCargo will build the `exa` binary and place it in `$HOME/.cargo`.\n\nTo build without Git support, run `cargo install --no-default-features exa` is also available, if the requisite dependencies are not installed.\n\n\n---\n",
                    "rendered": {
                      "text": "\nCargo will build the `exa` binary and place it in `$HOME/.cargo`.\n\nTo build without Git support, run `cargo install --no-default-features exa` is also available, if the requisite dependencies are not installed.\n\n\n---\n",
                      "markdown": "`\nCargo will build the `exa` binary and place it in `$HOME/.cargo`.\n\nTo build without Git support, run `cargo install --no-default-features exa` is also available, if the requisite dependencies are not installed.\n\n\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 8,
                  "endLine": 173,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nOn Ubuntu 20.10 (Groovy Gorilla) and later, install the [`exa`](https://packages.ubuntu.com/jammy/exa) package.\n\n    sudo apt install exa\n\n### Void Linux\n\n",
                    "rendered": {
                      "text": "\nOn Ubuntu 20.10 (Groovy Gorilla) and later, install the [`exa`](https://packages.ubuntu.com/jammy/exa) package.\n\n    sudo apt install exa\n\n### Void Linux\n\n",
                      "markdown": "`\nOn Ubuntu 20.10 (Groovy Gorilla) and later, install the [`exa`](https://packages.ubuntu.com/jammy/exa) package.\n\n    sudo apt install exa\n\n### Void Linux\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 3,
                  "endLine": 167,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nOn openSUSE, install the [`exa`](https://software.opensuse.org/package/exa) package.\n\n    zypper install exa\n\n### Ubuntu\n\n",
                    "rendered": {
                      "text": "\nOn openSUSE, install the [`exa`](https://software.opensuse.org/package/exa) package.\n\n    zypper install exa\n\n### Ubuntu\n\n",
                      "markdown": "`\nOn openSUSE, install the [`exa`](https://software.opensuse.org/package/exa) package.\n\n    zypper install exa\n\n### Ubuntu\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 3,
                  "endLine": 137,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nOn Fedora, install the [`exa`](https://src.fedoraproject.org/modules/exa) package.\n\n    dnf install exa\n\n### Gentoo\n\n",
                    "rendered": {
                      "text": "\nOn Fedora, install the [`exa`](https://src.fedoraproject.org/modules/exa) package.\n\n    dnf install exa\n\n### Gentoo\n\n",
                      "markdown": "`\nOn Fedora, install the [`exa`](https://src.fedoraproject.org/modules/exa) package.\n\n    dnf install exa\n\n### Gentoo\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 3,
                  "endLine": 131,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nOn Debian, install the [`exa`](https://packages.debian.org/stable/exa) package.\n\n    apt install exa\n\n### Fedora\n\n",
                    "rendered": {
                      "text": "\nOn Debian, install the [`exa`](https://packages.debian.org/stable/exa) package.\n\n    apt install exa\n\n### Fedora\n\n",
                      "markdown": "`\nOn Debian, install the [`exa`](https://packages.debian.org/stable/exa) package.\n\n    apt install exa\n\n### Fedora\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 7,
                  "endLine": 97,
                  "endColumn": 13,
                  "snippet": {
                    "text": " **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, and **full-iso**.\n\n\n---\n\n<a id=\"installation\">\n<h1>Installation</h1>\n</a>\n\nexa is available for macOS and Linux.\nMore information on how to install exa is available on [the Installation page](https://the.exa.website/install).\n\n### Alpine Linux\n\nOn Alpin",
                    "rendered": {
                      "text": " **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, and **full-iso**.\n\n\n---\n\n<a id=\"installation\">\n<h1>Installation</h1>\n</a>\n\nexa is available for macOS and Linux.\nMore information on how to install exa is available on [the Installation page](https://the.exa.website/install).\n\n### Alpine Linux\n\nOn Alpin",
                      "markdown": "` **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, and **full-iso**.\n\n\n---\n\n<a id=\"installation\">\n<h1>Installation</h1>\n</a>\n\nexa is available for macOS and Linux.\nMore information on how to install exa is available on [the Installation page](https://the.exa.website/install).\n\n### Alpine Linux\n\nOn Alpin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 7,
                  "endLine": 96,
                  "endColumn": 13,
                  "snippet": {
                    "text": "*Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, and **full-iso**.\n\n\n---\n\n<a id=\"installation\">\n<h1>Installation</h1>\n</a>\n\nexa is available for macOS and Linux.\nMore information on how to install exa is available on [th",
                    "rendered": {
                      "text": "*Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, and **full-iso**.\n\n\n---\n\n<a id=\"installation\">\n<h1>Installation</h1>\n</a>\n\nexa is available for macOS and Linux.\nMore information on how to install exa is available on [th",
                      "markdown": "`*Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, and **full-iso**.\n\n\n---\n\n<a id=\"installation\">\n<h1>Installation</h1>\n</a>\n\nexa is available for macOS and Linux.\nMore information on how to install exa is available on [th`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 210,
                  "endLine": 95,
                  "endColumn": 216,
                  "snippet": {
                    "text": "pt parameters:\n\n- Valid **--color** options are **always**, **automatic**, and **never**.\n- Valid sort fields are **accessed**, **changed**, **created**, **extension**, **Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, a",
                    "rendered": {
                      "text": "pt parameters:\n\n- Valid **--color** options are **always**, **automatic**, and **never**.\n- Valid sort fields are **accessed**, **changed**, **created**, **extension**, **Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, a",
                      "markdown": "`pt parameters:\n\n- Valid **--color** options are **always**, **automatic**, and **never**.\n- Valid sort fields are **accessed**, **changed**, **created**, **extension**, **Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**, while its reverse has the aliases **age** and **oldest**.\n- Valid time fields are **modified**, **changed**, **accessed**, and **created**.\n- Valid time styles are **default**, **iso**, **long-iso**, a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 7,
                  "endLine": 95,
                  "endColumn": 13,
                  "snippet": {
                    "text": "*: list each file's permission in octal format\n- **--no-filesize**: suppress the filesize field\n- **--no-user**: suppress the user field\n- **--no-time**: suppress the time field\n\nSome of the options accept parameters:\n\n- Valid **--color** options are **always**, **automatic**, and **never**.\n- Valid sort fields are **accessed**, **changed**, **created**, **extension**, **Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**",
                    "rendered": {
                      "text": "*: list each file's permission in octal format\n- **--no-filesize**: suppress the filesize field\n- **--no-user**: suppress the user field\n- **--no-time**: suppress the time field\n\nSome of the options accept parameters:\n\n- Valid **--color** options are **always**, **automatic**, and **never**.\n- Valid sort fields are **accessed**, **changed**, **created**, **extension**, **Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**",
                      "markdown": "`*: list each file's permission in octal format\n- **--no-filesize**: suppress the filesize field\n- **--no-user**: suppress the user field\n- **--no-time**: suppress the time field\n\nSome of the options accept parameters:\n\n- Valid **--color** options are **always**, **automatic**, and **never**.\n- Valid sort fields are **accessed**, **changed**, **created**, **extension**, **Extension**, **inode**, **modified**, **name**, **Name**, **size**, **type**, and **none**. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases **date**, **time**, and **newest**`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 29,
                  "endLine": 90,
                  "endColumn": 35,
                  "snippet": {
                    "text": "- **--octal-permissions**: list each file's permission in octal format\n- **--no-filesize**: suppress the filesize field\n- **--no-user**: suppress the user field\n- **--no-time**: suppress the time field\n\nSome of the options accept parameters:\n\n",
                    "rendered": {
                      "text": "- **--octal-permissions**: list each file's permission in octal format\n- **--no-filesize**: suppress the filesize field\n- **--no-user**: suppress the user field\n- **--no-time**: suppress the time field\n\nSome of the options accept parameters:\n\n",
                      "markdown": "`- **--octal-permissions**: list each file's permission in octal format\n- **--no-filesize**: suppress the filesize field\n- **--no-user**: suppress the user field\n- **--no-time**: suppress the time field\n\nSome of the options accept parameters:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 29,
                  "endLine": 84,
                  "endColumn": 34,
                  "snippet": {
                    "text": "- **-U**, **--created**: use the created timestamp field\n- **-@**, **--extended**: list each file’s extended attributes and sizes\n- **--changed**: use the changed timestamp field\n- **--git**: list each file’s Git status, if tracked or ignored\n- **--time-style**: how to format timestamps\n- **--no-permissions**: suppress the permissions field\n- **--octal-permissions**: list each file's permission in octal format\n",
                    "rendered": {
                      "text": "- **-U**, **--created**: use the created timestamp field\n- **-@**, **--extended**: list each file’s extended attributes and sizes\n- **--changed**: use the changed timestamp field\n- **--git**: list each file’s Git status, if tracked or ignored\n- **--time-style**: how to format timestamps\n- **--no-permissions**: suppress the permissions field\n- **--octal-permissions**: list each file's permission in octal format\n",
                      "markdown": "`- **-U**, **--created**: use the created timestamp field\n- **-@**, **--extended**: list each file’s extended attributes and sizes\n- **--changed**: use the changed timestamp field\n- **--git**: list each file’s Git status, if tracked or ignored\n- **--time-style**: how to format timestamps\n- **--no-permissions**: suppress the permissions field\n- **--octal-permissions**: list each file's permission in octal format\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 44,
                  "endLine": 59,
                  "endColumn": 50,
                  "snippet": {
                    "text": "- **-d**, **--list-dirs**: list directories like regular files\n- **-L**, **--level=(depth)**: limit the depth of recursion\n- **-r**, **--reverse**: reverse the sort order\n- **-s**, **--sort=(field)**: which field to sort by\n- **--group-directories-first**: list directories before other files\n- **-D**, **--only-dirs**: list only directories\n- **--git-ignore**: ignore files mentioned in `.gitignore`\n",
                    "rendered": {
                      "text": "- **-d**, **--list-dirs**: list directories like regular files\n- **-L**, **--level=(depth)**: limit the depth of recursion\n- **-r**, **--reverse**: reverse the sort order\n- **-s**, **--sort=(field)**: which field to sort by\n- **--group-directories-first**: list directories before other files\n- **-D**, **--only-dirs**: list only directories\n- **--git-ignore**: ignore files mentioned in `.gitignore`\n",
                      "markdown": "`- **-d**, **--list-dirs**: list directories like regular files\n- **-L**, **--level=(depth)**: limit the depth of recursion\n- **-r**, **--reverse**: reverse the sort order\n- **-s**, **--sort=(field)**: which field to sort by\n- **--group-directories-first**: list directories before other files\n- **-D**, **--only-dirs**: list only directories\n- **--git-ignore**: ignore files mentioned in `.gitignore`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 36,
                  "endLine": 58,
                  "endColumn": 42,
                  "snippet": {
                    "text": "- **-a**, **--all**: show hidden and 'dot' files\n- **-d**, **--list-dirs**: list directories like regular files\n- **-L**, **--level=(depth)**: limit the depth of recursion\n- **-r**, **--reverse**: reverse the sort order\n- **-s**, **--sort=(field)**: which field to sort by\n- **--group-directories-first**: list directories before other files\n- **-D**, **--only-dirs**: list only directories\n",
                    "rendered": {
                      "text": "- **-a**, **--all**: show hidden and 'dot' files\n- **-d**, **--list-dirs**: list directories like regular files\n- **-L**, **--level=(depth)**: limit the depth of recursion\n- **-r**, **--reverse**: reverse the sort order\n- **-s**, **--sort=(field)**: which field to sort by\n- **--group-directories-first**: list directories before other files\n- **-D**, **--only-dirs**: list only directories\n",
                      "markdown": "`- **-a**, **--all**: show hidden and 'dot' files\n- **-d**, **--list-dirs**: list directories like regular files\n- **-L**, **--level=(depth)**: limit the depth of recursion\n- **-r**, **--reverse**: reverse the sort order\n- **-s**, **--sort=(field)**: which field to sort by\n- **--group-directories-first**: list directories before other files\n- **-D**, **--only-dirs**: list only directories\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/exa.zip/README.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 23,
                  "endLine": 46,
                  "endColumn": 29,
                  "snippet": {
                    "text": "- **-l**, **--long**: display extended details and attributes\n- **-R**, **--recurse**: recurse into directories\n- **-T**, **--tree**: recurse into directories as a tree\n- **-x**, **--across**: sort the grid across, rather than downwards\n- **-F**, **--classify**: display type indicator by file names\n- **--colo[u]r**: when to use terminal colours\n- **--colo[u]r-scale**: highlight levels of file sizes distinctly\n",
                    "rendered": {
                      "text": "- **-l**, **--long**: display extended details and attributes\n- **-R**, **--recurse**: recurse into directories\n- **-T**, **--tree**: recurse into directories as a tree\n- **-x**, **--across**: sort the grid across, rather than downwards\n- **-F**, **--classify**: display type indicator by file names\n- **--colo[u]r**: when to use terminal colours\n- **--colo[u]r-scale**: highlight levels of file sizes distinctly\n",
                      "markdown": "`- **-l**, **--long**: display extended details and attributes\n- **-R**, **--recurse**: recurse into directories\n- **-T**, **--tree**: recurse into directories as a tree\n- **-x**, **--across**: sort the grid across, rather than downwards\n- **-F**, **--classify**: display type indicator by file names\n- **--colo[u]r**: when to use terminal colours\n- **--colo[u]r-scale**: highlight levels of file sizes distinctly\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}