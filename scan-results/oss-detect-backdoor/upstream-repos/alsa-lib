{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midiloop.c"
                },
                "region": {
                  "startLine": 177,
                  "endLine": 177,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tprintf(\"output.status.avail = %zi\\n\", snd_rawmidi_status_get_avail(ostat));\n\tprintf(\"output.status.xruns = %zi\\n\", snd_rawmidi_status_get_xruns(ostat));\n\n\tdiff = timediff(end, start);\n\tprintf(\"Time diff: %lliusec (%lli bytes/sec)\\n\", diff, ((long long)opos * 1000000) / diff);\n\n\tif (verbose) {\n",
                    "rendered": {
                      "text": "\tprintf(\"output.status.avail = %zi\\n\", snd_rawmidi_status_get_avail(ostat));\n\tprintf(\"output.status.xruns = %zi\\n\", snd_rawmidi_status_get_xruns(ostat));\n\n\tdiff = timediff(end, start);\n\tprintf(\"Time diff: %lliusec (%lli bytes/sec)\\n\", diff, ((long long)opos * 1000000) / diff);\n\n\tif (verbose) {\n",
                      "markdown": "`\tprintf(\"output.status.avail = %zi\\n\", snd_rawmidi_status_get_avail(ostat));\n\tprintf(\"output.status.xruns = %zi\\n\", snd_rawmidi_status_get_xruns(ostat));\n\n\tdiff = timediff(end, start);\n\tprintf(\"Time diff: %lliusec (%lli bytes/sec)\\n\", diff, ((long long)opos * 1000000) / diff);\n\n\tif (verbose) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/seq-sender.c"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 43,
                  "endLine": 150,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tsnd_seq_port_subscribe_t *sub;\n\tsnd_seq_addr_t addr;\n\tstruct pollfd *pfds;\n\tint client, port, queue, max, err, v1, v2, time = 0, pcm_flag = 0;\n\tchar *ptr;\n\tsnd_pcm_t *phandle = NULL;\n\n",
                    "rendered": {
                      "text": "\tsnd_seq_port_subscribe_t *sub;\n\tsnd_seq_addr_t addr;\n\tstruct pollfd *pfds;\n\tint client, port, queue, max, err, v1, v2, time = 0, pcm_flag = 0;\n\tchar *ptr;\n\tsnd_pcm_t *phandle = NULL;\n\n",
                      "markdown": "`\tsnd_seq_port_subscribe_t *sub;\n\tsnd_seq_addr_t addr;\n\tstruct pollfd *pfds;\n\tint client, port, queue, max, err, v1, v2, time = 0, pcm_flag = 0;\n\tchar *ptr;\n\tsnd_pcm_t *phandle = NULL;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/playmidi1.c"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 18,
                  "endLine": 614,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tsnd_seq_close(seq_handle);\n\n\tif (verbose >= VERB_INFO) {\n\t\tprintf(\"Stopping at %f s,  tick %f\\n\",\n\t\t       tick2time_dbl(Mf_currtime + 1), (double) (Mf_currtime + 1));\n\t}\n\n",
                    "rendered": {
                      "text": "\tsnd_seq_close(seq_handle);\n\n\tif (verbose >= VERB_INFO) {\n\t\tprintf(\"Stopping at %f s,  tick %f\\n\",\n\t\t       tick2time_dbl(Mf_currtime + 1), (double) (Mf_currtime + 1));\n\t}\n\n",
                      "markdown": "`\tsnd_seq_close(seq_handle);\n\n\tif (verbose >= VERB_INFO) {\n\t\tprintf(\"Stopping at %f s,  tick %f\\n\",\n\t\t       tick2time_dbl(Mf_currtime + 1), (double) (Mf_currtime + 1));\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/playmidi1.c"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 14,
                  "endLine": 306,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tsnd_seq_event_t ev;\n\n\tif (verbose >= VERB_EVENT)\n\t\tprintf(\"%lu: Control (%d) %d %d\\n\", Mf_currtime, chan, control, value);\n\tset_event_header(&ev);\n\tsnd_seq_ev_set_controller(&ev, chan, control, value);\n\twrite_ev(&ev);\n",
                    "rendered": {
                      "text": "\tsnd_seq_event_t ev;\n\n\tif (verbose >= VERB_EVENT)\n\t\tprintf(\"%lu: Control (%d) %d %d\\n\", Mf_currtime, chan, control, value);\n\tset_event_header(&ev);\n\tsnd_seq_ev_set_controller(&ev, chan, control, value);\n\twrite_ev(&ev);\n",
                      "markdown": "`\tsnd_seq_event_t ev;\n\n\tif (verbose >= VERB_EVENT)\n\t\tprintf(\"%lu: Control (%d) %d %d\\n\", Mf_currtime, chan, control, value);\n\tset_event_header(&ev);\n\tsnd_seq_ev_set_controller(&ev, chan, control, value);\n\twrite_ev(&ev);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/umpinfo.c"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 40,
                  "endLine": 48,
                  "endColumn": 49,
                  "snippet": {
                    "text": "static void help(void)\n{\n\tprintf(\"umpinfo: inquire UMP Endpoint and Block info\\n\"\n\t       \"  umpinfo -c target\tinquiry via control API\\n\"\n\t       \"  umpinfo -m target\tinquiry via UMP rawmidi API\\n\"\n\t       \"  umpinfo -s client\tinquiry via sequencer API\\n\"\n\t       \"    target = hw:0, etc\\n\"\n",
                    "rendered": {
                      "text": "static void help(void)\n{\n\tprintf(\"umpinfo: inquire UMP Endpoint and Block info\\n\"\n\t       \"  umpinfo -c target\tinquiry via control API\\n\"\n\t       \"  umpinfo -m target\tinquiry via UMP rawmidi API\\n\"\n\t       \"  umpinfo -s client\tinquiry via sequencer API\\n\"\n\t       \"    target = hw:0, etc\\n\"\n",
                      "markdown": "`static void help(void)\n{\n\tprintf(\"umpinfo: inquire UMP Endpoint and Block info\\n\"\n\t       \"  umpinfo -c target\tinquiry via control API\\n\"\n\t       \"  umpinfo -m target\tinquiry via UMP rawmidi API\\n\"\n\t       \"  umpinfo -s client\tinquiry via sequencer API\\n\"\n\t       \"    target = hw:0, etc\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midifile.3"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 16,
                  "endLine": 282,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".SH WRITING EXAMPLE\nThe following is a simple program to demonstrate writing MIDI files.\nThe track would consist of a series of quarter notes from lowest to\nhighest in pitch at constant velocity, each separated by a quarter-note\nrest.\n.sp\n.in +1i\n",
                    "rendered": {
                      "text": ".SH WRITING EXAMPLE\nThe following is a simple program to demonstrate writing MIDI files.\nThe track would consist of a series of quarter notes from lowest to\nhighest in pitch at constant velocity, each separated by a quarter-note\nrest.\n.sp\n.in +1i\n",
                      "markdown": "`.SH WRITING EXAMPLE\nThe following is a simple program to demonstrate writing MIDI files.\nThe track would consist of a series of quarter notes from lowest to\nhighest in pitch at constant velocity, each separated by a quarter-note\nrest.\n.sp\n.in +1i\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midifile.3"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 28,
                  "endLine": 159,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n\\fCMf_seqnum\\fR is called by the \\fImeta\\fR message that provides\na sequence number,\nwhich if present must appear at the beginning of a track.\nThe tempo \\fImeta\\fR message causes \\fCMf_tempo\\fR to be called; its\nargument is the number of microseconds per MIDI quarter-note (24 MIDI clocks).\nThe end-of-track \\fImeta\\fR message causes \\fCMf_eot\\fR to be called.\n",
                    "rendered": {
                      "text": "\n\\fCMf_seqnum\\fR is called by the \\fImeta\\fR message that provides\na sequence number,\nwhich if present must appear at the beginning of a track.\nThe tempo \\fImeta\\fR message causes \\fCMf_tempo\\fR to be called; its\nargument is the number of microseconds per MIDI quarter-note (24 MIDI clocks).\nThe end-of-track \\fImeta\\fR message causes \\fCMf_eot\\fR to be called.\n",
                      "markdown": "`\n\\fCMf_seqnum\\fR is called by the \\fImeta\\fR message that provides\na sequence number,\nwhich if present must appear at the beginning of a track.\nThe tempo \\fImeta\\fR message causes \\fCMf_tempo\\fR to be called; its\nargument is the number of microseconds per MIDI quarter-note (24 MIDI clocks).\nThe end-of-track \\fImeta\\fR message causes \\fCMf_eot\\fR to be called.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midifile.3"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 59,
                  "endLine": 136,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nOnce inside a track, each separate message causes a function to be called.\nFor example, each note-on message causes \\fCMf_noteon\\fR to be called\nwith the channel, pitch, and volume as arguments.  The time at which\nthe message occurred is stored in \\fCMf_currtime\\fR - one of the few\nexternal variables that isn't a function pointer.  The other channel messages\nare handled in a similar and obvious fashion -\n",
                    "rendered": {
                      "text": "\nOnce inside a track, each separate message causes a function to be called.\nFor example, each note-on message causes \\fCMf_noteon\\fR to be called\nwith the channel, pitch, and volume as arguments.  The time at which\nthe message occurred is stored in \\fCMf_currtime\\fR - one of the few\nexternal variables that isn't a function pointer.  The other channel messages\nare handled in a similar and obvious fashion -\n",
                      "markdown": "`\nOnce inside a track, each separate message causes a function to be called.\nFor example, each note-on message causes \\fCMf_noteon\\fR to be called\nwith the channel, pitch, and volume as arguments.  The time at which\nthe message occurred is stored in \\fCMf_currtime\\fR - one of the few\nexternal variables that isn't a function pointer.  The other channel messages\nare handled in a similar and obvious fashion -\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midifile.3"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 28,
                  "endLine": 132,
                  "endColumn": 32,
                  "snippet": {
                    "text": "the number of tracks, and the division of a quarter-note that defines\nthe times units.\n\\fCMf_trackstart\\fR and\n\\fCMf_trackend\\fR are called at the beginning and end of each track.\n\nOnce inside a track, each separate message causes a function to be called.\nFor example, each note-on message causes \\fCMf_noteon\\fR to be called\n",
                    "rendered": {
                      "text": "the number of tracks, and the division of a quarter-note that defines\nthe times units.\n\\fCMf_trackstart\\fR and\n\\fCMf_trackend\\fR are called at the beginning and end of each track.\n\nOnce inside a track, each separate message causes a function to be called.\nFor example, each note-on message causes \\fCMf_noteon\\fR to be called\n",
                      "markdown": "`the number of tracks, and the division of a quarter-note that defines\nthe times units.\n\\fCMf_trackstart\\fR and\n\\fCMf_trackend\\fR are called at the beginning and end of each track.\n\nOnce inside a track, each separate message causes a function to be called.\nFor example, each note-on message causes \\fCMf_noteon\\fR to be called\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midifile.3"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 49,
                  "endLine": 273,
                  "endColumn": 55,
                  "snippet": {
                    "text": "delta-times in a file correspond to subdivisions of a second\nsimilar to SMPTE and MIDI time code. In this format bits\n14 through 8 contain one of four values \\-24, \\-25, \\-29, or \\-30,\ncorresponding to the four standard SMPTE and MIDI time code\nframe per second formats, where \\-29 represents 30 drop frame.\nThe second byte consisting of bits 7 through 0 corresponds\nthe the resolution within a frame.  Refer the Standard MIDI Files \n",
                    "rendered": {
                      "text": "delta-times in a file correspond to subdivisions of a second\nsimilar to SMPTE and MIDI time code. In this format bits\n14 through 8 contain one of four values \\-24, \\-25, \\-29, or \\-30,\ncorresponding to the four standard SMPTE and MIDI time code\nframe per second formats, where \\-29 represents 30 drop frame.\nThe second byte consisting of bits 7 through 0 corresponds\nthe the resolution within a frame.  Refer the Standard MIDI Files \n",
                      "markdown": "`delta-times in a file correspond to subdivisions of a second\nsimilar to SMPTE and MIDI time code. In this format bits\n14 through 8 contain one of four values \\-24, \\-25, \\-29, or \\-30,\ncorresponding to the four standard SMPTE and MIDI time code\nframe per second formats, where \\-29 represents 30 drop frame.\nThe second byte consisting of bits 7 through 0 corresponds\nthe the resolution within a frame.  Refer the Standard MIDI Files \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midifile.3"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 25,
                  "endLine": 271,
                  "endColumn": 31,
                  "snippet": {
                    "text": "bits 14 through 0 represent the number of delta-time \"ticks\"\nwhich make up a quarter note.  If bit 15 of division is a one,\ndelta-times in a file correspond to subdivisions of a second\nsimilar to SMPTE and MIDI time code. In this format bits\n14 through 8 contain one of four values \\-24, \\-25, \\-29, or \\-30,\ncorresponding to the four standard SMPTE and MIDI time code\nframe per second formats, where \\-29 represents 30 drop frame.\n",
                    "rendered": {
                      "text": "bits 14 through 0 represent the number of delta-time \"ticks\"\nwhich make up a quarter note.  If bit 15 of division is a one,\ndelta-times in a file correspond to subdivisions of a second\nsimilar to SMPTE and MIDI time code. In this format bits\n14 through 8 contain one of four values \\-24, \\-25, \\-29, or \\-30,\ncorresponding to the four standard SMPTE and MIDI time code\nframe per second formats, where \\-29 represents 30 drop frame.\n",
                      "markdown": "`bits 14 through 0 represent the number of delta-time \"ticks\"\nwhich make up a quarter note.  If bit 15 of division is a one,\ndelta-times in a file correspond to subdivisions of a second\nsimilar to SMPTE and MIDI time code. In this format bits\n14 through 8 contain one of four values \\-24, \\-25, \\-29, or \\-30,\ncorresponding to the four standard SMPTE and MIDI time code\nframe per second formats, where \\-29 represents 30 drop frame.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midifile.3"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 27,
                  "endLine": 255,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\\fCmf_write_midi_event\\fR and \\fCmf_write_meta_event\\fR are routines\nthat should be called from your \\fCMf_writetrack\\fR routine to write\nout MIDI events.  The delta time param is the number of ticks since the\nlast event.  The int \"type\" is the type of MIDI message. The int \"chan\"\nis the MIDI channel, which can be between 1 and 16.  The char pointer\n\"data\" points to an array containing the data bytes, if any exist. The\n",
                    "rendered": {
                      "text": "\n\\fCmf_write_midi_event\\fR and \\fCmf_write_meta_event\\fR are routines\nthat should be called from your \\fCMf_writetrack\\fR routine to write\nout MIDI events.  The delta time param is the number of ticks since the\nlast event.  The int \"type\" is the type of MIDI message. The int \"chan\"\nis the MIDI channel, which can be between 1 and 16.  The char pointer\n\"data\" points to an array containing the data bytes, if any exist. The\n",
                      "markdown": "`\n\\fCmf_write_midi_event\\fR and \\fCmf_write_meta_event\\fR are routines\nthat should be called from your \\fCMf_writetrack\\fR routine to write\nout MIDI events.  The delta time param is the number of ticks since the\nlast event.  The int \"type\" is the type of MIDI message. The int \"chan\"\nis the MIDI channel, which can be between 1 and 16.  The char pointer\n\"data\" points to an array containing the data bytes, if any exist. The\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midifile.3"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 54,
                  "endLine": 136,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\nOnce inside a track, each separate message causes a function to be called.\nFor example, each note-on message causes \\fCMf_noteon\\fR to be called\nwith the channel, pitch, and volume as arguments.  The time at which\nthe message occurred is stored in \\fCMf_currtime\\fR - one of the few\nexternal variables that isn't a function pointer.  The other channel messages\nare handled in a similar and obvious fashion -\n",
                    "rendered": {
                      "text": "\nOnce inside a track, each separate message causes a function to be called.\nFor example, each note-on message causes \\fCMf_noteon\\fR to be called\nwith the channel, pitch, and volume as arguments.  The time at which\nthe message occurred is stored in \\fCMf_currtime\\fR - one of the few\nexternal variables that isn't a function pointer.  The other channel messages\nare handled in a similar and obvious fashion -\n",
                      "markdown": "`\nOnce inside a track, each separate message causes a function to be called.\nFor example, each note-on message causes \\fCMf_noteon\\fR to be called\nwith the channel, pitch, and volume as arguments.  The time at which\nthe message occurred is stored in \\fCMf_currtime\\fR - one of the few\nexternal variables that isn't a function pointer.  The other channel messages\nare handled in a similar and obvious fashion -\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/mixtest.c"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 1,
                  "endLine": 316,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tmix_areas2(size, dst, srcs[i], sum, 2, 2);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff2)\n\t\t\tdiff2 = diff;\n\t\tprintf(\"mix_areas2    : %llu              \\r\", diff); fflush(stdout);\n",
                    "rendered": {
                      "text": "\t\t\tmix_areas2(size, dst, srcs[i], sum, 2, 2);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff2)\n\t\t\tdiff2 = diff;\n\t\tprintf(\"mix_areas2    : %llu              \\r\", diff); fflush(stdout);\n",
                      "markdown": "`\t\t\tmix_areas2(size, dst, srcs[i], sum, 2, 2);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff2)\n\t\t\tdiff2 = diff;\n\t\tprintf(\"mix_areas2    : %llu              \\r\", diff); fflush(stdout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/mixtest.c"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 1,
                  "endLine": 303,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tmix_areas1_mmx(size, dst, srcs[i], sum, 2, 2, 4);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff1_mmx)\n\t\t\tdiff1_mmx = diff;\n\t\tprintf(\"mix_areas1_mmx: %llu              \\r\", diff); fflush(stdout);\n",
                    "rendered": {
                      "text": "\t\t\tmix_areas1_mmx(size, dst, srcs[i], sum, 2, 2, 4);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff1_mmx)\n\t\t\tdiff1_mmx = diff;\n\t\tprintf(\"mix_areas1_mmx: %llu              \\r\", diff); fflush(stdout);\n",
                      "markdown": "`\t\t\tmix_areas1_mmx(size, dst, srcs[i], sum, 2, 2, 4);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff1_mmx)\n\t\t\tdiff1_mmx = diff;\n\t\tprintf(\"mix_areas1_mmx: %llu              \\r\", diff); fflush(stdout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/mixtest.c"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 1,
                  "endLine": 290,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tmix_areas1(size, dst, srcs[i], sum, 2, 2, 4);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff1)\n\t\t\tdiff1 = diff;\n\t\tprintf(\"mix_areas1    : %llu              \\r\", diff); fflush(stdout);\n",
                    "rendered": {
                      "text": "\t\t\tmix_areas1(size, dst, srcs[i], sum, 2, 2, 4);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff1)\n\t\t\tdiff1 = diff;\n\t\tprintf(\"mix_areas1    : %llu              \\r\", diff); fflush(stdout);\n",
                      "markdown": "`\t\t\tmix_areas1(size, dst, srcs[i], sum, 2, 2, 4);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff1)\n\t\t\tdiff1 = diff;\n\t\tprintf(\"mix_areas1    : %llu              \\r\", diff); fflush(stdout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/mixtest.c"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 1,
                  "endLine": 277,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tmix_areas0(size, dst, srcs[i], sum, 2, 2, 4);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff0)\n\t\t\tdiff0 = diff;\n\t\tprintf(\"mix_areas0    : %llu               \\r\", diff); fflush(stdout);\n",
                    "rendered": {
                      "text": "\t\t\tmix_areas0(size, dst, srcs[i], sum, 2, 2, 4);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff0)\n\t\t\tdiff0 = diff;\n\t\tprintf(\"mix_areas0    : %llu               \\r\", diff); fflush(stdout);\n",
                      "markdown": "`\t\t\tmix_areas0(size, dst, srcs[i], sum, 2, 2, 4);\n\t\t}\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diff0)\n\t\t\tdiff0 = diff;\n\t\tprintf(\"mix_areas0    : %llu               \\r\", diff); fflush(stdout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/mixtest.c"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 1,
                  "endLine": 264,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t}\n\t\tsaturate(size, dst, sum, 2, 4);\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diffS)\n\t\t\tdiffS = diff;\n\t\tprintf(\"mix_areas_srv : %llu               \\r\", diff); fflush(stdout);\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tsaturate(size, dst, sum, 2, 4);\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diffS)\n\t\t\tdiffS = diff;\n\t\tprintf(\"mix_areas_srv : %llu               \\r\", diff); fflush(stdout);\n",
                      "markdown": "`\t\t}\n\t\tsaturate(size, dst, sum, 2, 4);\n\t\trdtscll(end);\n\t\tdiff = end - begin;\n\t\tif (diff < diffS)\n\t\t\tdiffS = diff;\n\t\tprintf(\"mix_areas_srv : %llu               \\r\", diff); fflush(stdout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/midifile.c"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 17,
                  "endLine": 414,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      c = egetc ();\n\n      if (sysexcontinue && c != 0xf7)\n\tmferror (\"didn't find expected continuation of a sysex\");\n\n      if ((c & 0x80) == 0)\n\t{\t\t\t/* running status? */\n",
                    "rendered": {
                      "text": "      c = egetc ();\n\n      if (sysexcontinue && c != 0xf7)\n\tmferror (\"didn't find expected continuation of a sysex\");\n\n      if ((c & 0x80) == 0)\n\t{\t\t\t/* running status? */\n",
                      "markdown": "`      c = egetc ();\n\n      if (sysexcontinue && c != 0xf7)\n\tmferror (\"didn't find expected continuation of a sysex\");\n\n      if ((c & 0x80) == 0)\n\t{\t\t\t/* running status? */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/rawmidi.c"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 24,
                  "endLine": 15,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\tfprintf(stderr, \"    -i device-id : test ALSA input device\\n\");\n\tfprintf(stderr, \"    -o device-id : test ALSA output device\\n\");\n\tfprintf(stderr, \"    -I node      : test input node\\n\");\n\tfprintf(stderr, \"    -O node      : test output node\\n\");\n\tfprintf(stderr, \"    -c clock     : kernel clock type (0=none, 1=realtime, 2=monotonic, 3=monotonic raw)\\n\");\n\tfprintf(stderr, \"    -t: test midi thru\\n\");\n\tfprintf(stderr, \"  example:\\n\");\n",
                    "rendered": {
                      "text": "\tfprintf(stderr, \"    -i device-id : test ALSA input device\\n\");\n\tfprintf(stderr, \"    -o device-id : test ALSA output device\\n\");\n\tfprintf(stderr, \"    -I node      : test input node\\n\");\n\tfprintf(stderr, \"    -O node      : test output node\\n\");\n\tfprintf(stderr, \"    -c clock     : kernel clock type (0=none, 1=realtime, 2=monotonic, 3=monotonic raw)\\n\");\n\tfprintf(stderr, \"    -t: test midi thru\\n\");\n\tfprintf(stderr, \"  example:\\n\");\n",
                      "markdown": "`\tfprintf(stderr, \"    -i device-id : test ALSA input device\\n\");\n\tfprintf(stderr, \"    -o device-id : test ALSA output device\\n\");\n\tfprintf(stderr, \"    -I node      : test input node\\n\");\n\tfprintf(stderr, \"    -O node      : test output node\\n\");\n\tfprintf(stderr, \"    -c clock     : kernel clock type (0=none, 1=realtime, 2=monotonic, 3=monotonic raw)\\n\");\n\tfprintf(stderr, \"    -t: test midi thru\\n\");\n\tfprintf(stderr, \"  example:\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/rawmidi.c"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 24,
                  "endLine": 14,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\tfprintf(stderr, \"    -v: verbose mode\\n\");\n\tfprintf(stderr, \"    -i device-id : test ALSA input device\\n\");\n\tfprintf(stderr, \"    -o device-id : test ALSA output device\\n\");\n\tfprintf(stderr, \"    -I node      : test input node\\n\");\n\tfprintf(stderr, \"    -O node      : test output node\\n\");\n\tfprintf(stderr, \"    -c clock     : kernel clock type (0=none, 1=realtime, 2=monotonic, 3=monotonic raw)\\n\");\n\tfprintf(stderr, \"    -t: test midi thru\\n\");\n",
                    "rendered": {
                      "text": "\tfprintf(stderr, \"    -v: verbose mode\\n\");\n\tfprintf(stderr, \"    -i device-id : test ALSA input device\\n\");\n\tfprintf(stderr, \"    -o device-id : test ALSA output device\\n\");\n\tfprintf(stderr, \"    -I node      : test input node\\n\");\n\tfprintf(stderr, \"    -O node      : test output node\\n\");\n\tfprintf(stderr, \"    -c clock     : kernel clock type (0=none, 1=realtime, 2=monotonic, 3=monotonic raw)\\n\");\n\tfprintf(stderr, \"    -t: test midi thru\\n\");\n",
                      "markdown": "`\tfprintf(stderr, \"    -v: verbose mode\\n\");\n\tfprintf(stderr, \"    -i device-id : test ALSA input device\\n\");\n\tfprintf(stderr, \"    -o device-id : test ALSA output device\\n\");\n\tfprintf(stderr, \"    -I node      : test input node\\n\");\n\tfprintf(stderr, \"    -O node      : test output node\\n\");\n\tfprintf(stderr, \"    -c clock     : kernel clock type (0=none, 1=realtime, 2=monotonic, 3=monotonic raw)\\n\");\n\tfprintf(stderr, \"    -t: test midi thru\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/seq-decoder.c"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 11,
                  "endLine": 116,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t       ev->time.tick);\n\t\tbreak;\n\tcase SND_SEQ_TIME_STAMP_REAL:\n\t\tprintf(\", time = %d.%09d\",\n\t\t       (int)ev->time.time.tv_sec,\n\t\t       (int)ev->time.time.tv_nsec);\n\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t       ev->time.tick);\n\t\tbreak;\n\tcase SND_SEQ_TIME_STAMP_REAL:\n\t\tprintf(\", time = %d.%09d\",\n\t\t       (int)ev->time.time.tv_sec,\n\t\t       (int)ev->time.time.tv_nsec);\n\t\tbreak;\n",
                      "markdown": "`\t\t       ev->time.tick);\n\t\tbreak;\n\tcase SND_SEQ_TIME_STAMP_REAL:\n\t\tprintf(\", time = %d.%09d\",\n\t\t       (int)ev->time.time.tv_sec,\n\t\t       (int)ev->time.time.tv_nsec);\n\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/seq-decoder.c"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 11,
                  "endLine": 112,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\tprintf(\"EVENT>>> Type = %d, flags = 0x%x\", ev->type, ev->flags);\n\tswitch (ev->flags & SND_SEQ_TIME_STAMP_MASK) {\n\tcase SND_SEQ_TIME_STAMP_TICK:\n\t\tprintf(\", time = %d ticks\",\n\t\t       ev->time.tick);\n\t\tbreak;\n\tcase SND_SEQ_TIME_STAMP_REAL:\n",
                    "rendered": {
                      "text": "\tprintf(\"EVENT>>> Type = %d, flags = 0x%x\", ev->type, ev->flags);\n\tswitch (ev->flags & SND_SEQ_TIME_STAMP_MASK) {\n\tcase SND_SEQ_TIME_STAMP_TICK:\n\t\tprintf(\", time = %d ticks\",\n\t\t       ev->time.tick);\n\t\tbreak;\n\tcase SND_SEQ_TIME_STAMP_REAL:\n",
                      "markdown": "`\tprintf(\"EVENT>>> Type = %d, flags = 0x%x\", ev->type, ev->flags);\n\tswitch (ev->flags & SND_SEQ_TIME_STAMP_MASK) {\n\tcase SND_SEQ_TIME_STAMP_TICK:\n\t\tprintf(\", time = %d ticks\",\n\t\t       ev->time.tick);\n\t\tbreak;\n\tcase SND_SEQ_TIME_STAMP_REAL:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/seq-decoder.c"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 31,
                  "endLine": 22,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t[SND_SEQ_EVENT_SONGPOS]=\t\"Song Position\",\n\t[SND_SEQ_EVENT_SONGSEL]=\t\"Song Select\",\n\t[SND_SEQ_EVENT_QFRAME]=\t\"Qframe\",\n\t[SND_SEQ_EVENT_TIMESIGN]=\t\"SMF Time Signature\",\n\t[SND_SEQ_EVENT_KEYSIGN]=\t\"SMF Key Signature\",\n\t[SND_SEQ_EVENT_START]=\t\"Start\",\n\t[SND_SEQ_EVENT_CONTINUE]=\t\"Continue\",\n",
                    "rendered": {
                      "text": "\t[SND_SEQ_EVENT_SONGPOS]=\t\"Song Position\",\n\t[SND_SEQ_EVENT_SONGSEL]=\t\"Song Select\",\n\t[SND_SEQ_EVENT_QFRAME]=\t\"Qframe\",\n\t[SND_SEQ_EVENT_TIMESIGN]=\t\"SMF Time Signature\",\n\t[SND_SEQ_EVENT_KEYSIGN]=\t\"SMF Key Signature\",\n\t[SND_SEQ_EVENT_START]=\t\"Start\",\n\t[SND_SEQ_EVENT_CONTINUE]=\t\"Continue\",\n",
                      "markdown": "`\t[SND_SEQ_EVENT_SONGPOS]=\t\"Song Position\",\n\t[SND_SEQ_EVENT_SONGSEL]=\t\"Song Select\",\n\t[SND_SEQ_EVENT_QFRAME]=\t\"Qframe\",\n\t[SND_SEQ_EVENT_TIMESIGN]=\t\"SMF Time Signature\",\n\t[SND_SEQ_EVENT_KEYSIGN]=\t\"SMF Key Signature\",\n\t[SND_SEQ_EVENT_START]=\t\"Start\",\n\t[SND_SEQ_EVENT_CONTINUE]=\t\"Continue\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/audio_time.c"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 46,
                  "endLine": 435,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\n\t\t\tprintf(\"playback: systime: %lli nsec, audio time %lli nsec, \\tsystime delta %lli resolution %d ns\\n\",\n\t\t\t\ttimediff(tstamp_p, trigger_tstamp_p),\n\t\t\t\ttimestamp2ns(audio_tstamp_p),\n\t\t\t\ttimediff(tstamp_p, trigger_tstamp_p) - timestamp2ns(audio_tstamp_p), audio_tstamp_report_p.accuracy\n",
                    "rendered": {
                      "text": "\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\n\t\t\tprintf(\"playback: systime: %lli nsec, audio time %lli nsec, \\tsystime delta %lli resolution %d ns\\n\",\n\t\t\t\ttimediff(tstamp_p, trigger_tstamp_p),\n\t\t\t\ttimestamp2ns(audio_tstamp_p),\n\t\t\t\ttimediff(tstamp_p, trigger_tstamp_p) - timestamp2ns(audio_tstamp_p), audio_tstamp_report_p.accuracy\n",
                      "markdown": "`\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\n\t\t\tprintf(\"playback: systime: %lli nsec, audio time %lli nsec, \\tsystime delta %lli resolution %d ns\\n\",\n\t\t\t\ttimediff(tstamp_p, trigger_tstamp_p),\n\t\t\t\ttimestamp2ns(audio_tstamp_p),\n\t\t\t\ttimediff(tstamp_p, trigger_tstamp_p) - timestamp2ns(audio_tstamp_p), audio_tstamp_report_p.accuracy\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/audio_time.c"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 48,
                  "endLine": 393,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t\t}\n\n\n\t\t\tprintf(\"\\t capture: systime: %lli nsec, audio time %lli nsec, \\tsystime delta %lli \\t resolution %d ns \\n\", \n\t\t\t\ttimediff(tstamp_c, trigger_tstamp_c),\n\t\t\t\ttimestamp2ns(audio_tstamp_c),\n\t\t\t\ttimediff(tstamp_c, trigger_tstamp_c) - timestamp2ns(audio_tstamp_c), audio_tstamp_report_c.accuracy\n",
                    "rendered": {
                      "text": "\t\t\t}\n\n\n\t\t\tprintf(\"\\t capture: systime: %lli nsec, audio time %lli nsec, \\tsystime delta %lli \\t resolution %d ns \\n\", \n\t\t\t\ttimediff(tstamp_c, trigger_tstamp_c),\n\t\t\t\ttimestamp2ns(audio_tstamp_c),\n\t\t\t\ttimediff(tstamp_c, trigger_tstamp_c) - timestamp2ns(audio_tstamp_c), audio_tstamp_report_c.accuracy\n",
                      "markdown": "`\t\t\t}\n\n\n\t\t\tprintf(\"\\t capture: systime: %lli nsec, audio time %lli nsec, \\tsystime delta %lli \\t resolution %d ns \\n\", \n\t\t\t\ttimediff(tstamp_c, trigger_tstamp_c),\n\t\t\t\ttimestamp2ns(audio_tstamp_c),\n\t\t\t\ttimediff(tstamp_c, trigger_tstamp_c) - timestamp2ns(audio_tstamp_c), audio_tstamp_report_c.accuracy\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/sndo-mixer.alisp"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 36,
                  "endLine": 49,
                  "endColumn": 42,
                  "snippet": {
                    "text": "(defun sndo_mixer_open_virtual (name stream pcm)\n  (setq file (concat (path \"data\") \"/alsa/virtual/\" name \"/sndo\" stream \"-mixer.alisp\"))\n  (setq r (include file))\n  (when (= r -2) (Asyserr \"unable to find file \" file))\n  (when (= r 0) (setq r (sndo_mixer_open_fcn nil stream pcm)))\n  (unsetq file r)\n)\n",
                    "rendered": {
                      "text": "(defun sndo_mixer_open_virtual (name stream pcm)\n  (setq file (concat (path \"data\") \"/alsa/virtual/\" name \"/sndo\" stream \"-mixer.alisp\"))\n  (setq r (include file))\n  (when (= r -2) (Asyserr \"unable to find file \" file))\n  (when (= r 0) (setq r (sndo_mixer_open_fcn nil stream pcm)))\n  (unsetq file r)\n)\n",
                      "markdown": "`(defun sndo_mixer_open_virtual (name stream pcm)\n  (setq file (concat (path \"data\") \"/alsa/virtual/\" name \"/sndo\" stream \"-mixer.alisp\"))\n  (setq r (include file))\n  (when (= r -2) (Asyserr \"unable to find file \" file))\n  (when (= r 0) (setq r (sndo_mixer_open_fcn nil stream pcm)))\n  (unsetq file r)\n)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/sndo-mixer.alisp"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 40,
                  "endLine": 16,
                  "endColumn": 46,
                  "snippet": {
                    "text": "      (setq driver (cdr (assq \"driver\" (unsetq info))))\n      (setq file (concat (path \"data\") \"/alsa/cards/\" (snd_card_alias driver) \"/sndo\" stream \"-mixer.alisp\"))\n      (setq r (include file))\n      (when (= r -2) (Asyserr \"unable to find file \" file))\n    )\n    (setq r (Aerror info))\n  )\n",
                    "rendered": {
                      "text": "      (setq driver (cdr (assq \"driver\" (unsetq info))))\n      (setq file (concat (path \"data\") \"/alsa/cards/\" (snd_card_alias driver) \"/sndo\" stream \"-mixer.alisp\"))\n      (setq r (include file))\n      (when (= r -2) (Asyserr \"unable to find file \" file))\n    )\n    (setq r (Aerror info))\n  )\n",
                      "markdown": "`      (setq driver (cdr (assq \"driver\" (unsetq info))))\n      (setq file (concat (path \"data\") \"/alsa/cards/\" (snd_card_alias driver) \"/sndo\" stream \"-mixer.alisp\"))\n      (setq r (include file))\n      (when (= r -2) (Asyserr \"unable to find file \" file))\n    )\n    (setq r (Aerror info))\n  )\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control.c"
                },
                "region": {
                  "startLine": 1542,
                  "startColumn": 7,
                  "endLine": 1543,
                  "snippet": {
                    "text": "\t\t\tsprintf(buf1, \"libasound_module_ctl_%s.so\", str);\n\t\t}\n\t}\n#ifndef PIC\n\tsnd_control_open_symbols();\n#endif\n\topen_func = snd_dlobj_cache_get(lib, open_name,\n\t\t\tSND_DLSYM_VERSION(SND_CONTROL_DLSYM_VERSION), 1);\n",
                    "rendered": {
                      "text": "\t\t\tsprintf(buf1, \"libasound_module_ctl_%s.so\", str);\n\t\t}\n\t}\n#ifndef PIC\n\tsnd_control_open_symbols();\n#endif\n\topen_func = snd_dlobj_cache_get(lib, open_name,\n\t\t\tSND_DLSYM_VERSION(SND_CONTROL_DLSYM_VERSION), 1);\n",
                      "markdown": "`\t\t\tsprintf(buf1, \"libasound_module_ctl_%s.so\", str);\n\t\t}\n\t}\n#ifndef PIC\n\tsnd_control_open_symbols();\n#endif\n\topen_func = snd_dlobj_cache_get(lib, open_name,\n\t\t\tSND_DLSYM_VERSION(SND_CONTROL_DLSYM_VERSION), 1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control.c"
                },
                "region": {
                  "startLine": 1456,
                  "startColumn": 7,
                  "endLine": 1457,
                  "snippet": {
                    "text": "\tconst char *lib = NULL, *open_name = NULL;\n\tconst char *id;\n\tint (*open_func)(snd_ctl_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_control_open_symbols(void);\n#endif\n\tif (snd_config_get_type(ctl_conf) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tif (name)\n",
                    "rendered": {
                      "text": "\tconst char *lib = NULL, *open_name = NULL;\n\tconst char *id;\n\tint (*open_func)(snd_ctl_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_control_open_symbols(void);\n#endif\n\tif (snd_config_get_type(ctl_conf) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tif (name)\n",
                      "markdown": "`\tconst char *lib = NULL, *open_name = NULL;\n\tconst char *id;\n\tint (*open_func)(snd_ctl_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_control_open_symbols(void);\n#endif\n\tif (snd_config_get_type(ctl_conf) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tif (name)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control_symbols.c"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 22,
                  "snippet": {
                    "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_control_hw;\nextern const char *_snd_module_control_empty;\nextern const char *_snd_module_control_remap;\n",
                    "rendered": {
                      "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_control_hw;\nextern const char *_snd_module_control_empty;\nextern const char *_snd_module_control_remap;\n",
                      "markdown": "` *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_control_hw;\nextern const char *_snd_module_control_empty;\nextern const char *_snd_module_control_remap;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control_remap.c"
                },
                "region": {
                  "startLine": 1098,
                  "startColumn": 26,
                  "endLine": 1098,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tsnd_ctl_elem_id_clear(&cid);\n\t\terr = snd_ctl_ascii_elem_id_parse(&cid, id);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"unable to parse control id '%s'!\", id);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\terr = add_ctl_to_map(map, &mctl, &cid);\n",
                    "rendered": {
                      "text": "\t\tsnd_ctl_elem_id_clear(&cid);\n\t\terr = snd_ctl_ascii_elem_id_parse(&cid, id);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"unable to parse control id '%s'!\", id);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\terr = add_ctl_to_map(map, &mctl, &cid);\n",
                      "markdown": "`\t\tsnd_ctl_elem_id_clear(&cid);\n\t\terr = snd_ctl_ascii_elem_id_parse(&cid, id);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"unable to parse control id '%s'!\", id);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\terr = add_ctl_to_map(map, &mctl, &cid);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control_remap.c"
                },
                "region": {
                  "startLine": 947,
                  "startColumn": 42,
                  "endLine": 947,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\tif (snd_config_get_id(n, &id) < 0)\n\t\t\tcontinue;\n\t\tif (snd_config_get_string(n, &str) < 0) {\n\t\t\tSNDERR(\"expected string with the target control id!\");\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tsnd_ctl_elem_id_clear(&app);\n",
                    "rendered": {
                      "text": "\t\tif (snd_config_get_id(n, &id) < 0)\n\t\t\tcontinue;\n\t\tif (snd_config_get_string(n, &str) < 0) {\n\t\t\tSNDERR(\"expected string with the target control id!\");\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tsnd_ctl_elem_id_clear(&app);\n",
                      "markdown": "`\t\tif (snd_config_get_id(n, &id) < 0)\n\t\t\tcontinue;\n\t\tif (snd_config_get_string(n, &str) < 0) {\n\t\t\tSNDERR(\"expected string with the target control id!\");\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tsnd_ctl_elem_id_clear(&app);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control_remap.c"
                },
                "region": {
                  "startLine": 823,
                  "startColumn": 7,
                  "endLine": 823,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\tmap->event_mask |= event_mask;\n\t\t\tfound = 0;\n\t\t\tfor (head = priv->map_read_queue_head;\n\t\t\t     head != priv->map_read_queue_tail;\n\t\t\t     _next_ptr(&head, priv->map_items))\n\t\t\t\tif (priv->map_read_queue[head] == map) {\n\t\t\t\t\tfound = 1;\n",
                    "rendered": {
                      "text": "\t\t\tmap->event_mask |= event_mask;\n\t\t\tfound = 0;\n\t\t\tfor (head = priv->map_read_queue_head;\n\t\t\t     head != priv->map_read_queue_tail;\n\t\t\t     _next_ptr(&head, priv->map_items))\n\t\t\t\tif (priv->map_read_queue[head] == map) {\n\t\t\t\t\tfound = 1;\n",
                      "markdown": "`\t\t\tmap->event_mask |= event_mask;\n\t\t\tfound = 0;\n\t\t\tfor (head = priv->map_read_queue_head;\n\t\t\t     head != priv->map_read_queue_tail;\n\t\t\t     _next_ptr(&head, priv->map_items))\n\t\t\t\tif (priv->map_read_queue[head] == map) {\n\t\t\t\t\tfound = 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control_remap.c"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 7,
                  "endLine": 55,
                  "snippet": {
                    "text": "#define EREMAPNOTFOUND (888899)\n#endif /* DOC_HIDDEN */\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_remap = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#define EREMAPNOTFOUND (888899)\n#endif /* DOC_HIDDEN */\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_remap = \"\";\n#endif\n\n",
                      "markdown": "`#define EREMAPNOTFOUND (888899)\n#endif /* DOC_HIDDEN */\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_remap = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control_shm.c"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 7,
                  "endLine": 39,
                  "snippet": {
                    "text": "#include <netdb.h>\n#include \"aserver.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_shm = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <netdb.h>\n#include \"aserver.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_shm = \"\";\n#endif\n\n",
                      "markdown": "`#include <netdb.h>\n#include \"aserver.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_shm = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control_ext.c"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 7,
                  "endLine": 38,
                  "snippet": {
                    "text": "#include <unistd.h>\n#include <string.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_ext = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <unistd.h>\n#include <string.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_ext = \"\";\n#endif\n\n",
                      "markdown": "`#include <unistd.h>\n#include <string.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_ext = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control_empty.c"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7,
                  "endLine": 32,
                  "snippet": {
                    "text": "\n#include \"control_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_empty = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "\n#include \"control_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_empty = \"\";\n#endif\n\n",
                      "markdown": "`\n#include \"control_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_empty = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_hw.c"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 7,
                  "endLine": 48,
                  "snippet": {
                    "text": "//#define DEBUG_RW\t\t/* use to debug readi/writei/readn/writen */\n//#define DEBUG_MMAP\t\t/* debug mmap_commit */\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_hw = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "//#define DEBUG_RW\t\t/* use to debug readi/writei/readn/writen */\n//#define DEBUG_MMAP\t\t/* debug mmap_commit */\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_hw = \"\";\n#endif\n\n",
                      "markdown": "`//#define DEBUG_RW\t\t/* use to debug readi/writei/readn/writen */\n//#define DEBUG_MMAP\t\t/* debug mmap_commit */\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_hw = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_mmap_emul.c"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7,
                  "endLine": 33,
                  "snippet": {
                    "text": "#include \"pcm_local.h\"\n#include \"pcm_generic.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_mmap_emul = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"pcm_local.h\"\n#include \"pcm_generic.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_mmap_emul = \"\";\n#endif\n\n",
                      "markdown": "`#include \"pcm_local.h\"\n#include \"pcm_generic.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_mmap_emul = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_share.c"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 7,
                  "endLine": 42,
                  "snippet": {
                    "text": "#include <poll.h>\n#include <pthread.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_share = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <poll.h>\n#include <pthread.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_share = \"\";\n#endif\n\n",
                      "markdown": "`#include <poll.h>\n#include <pthread.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_share = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_lfloat.c"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 7,
                  "endLine": 44,
                  "snippet": {
                    "text": "#define BUGGY_GCC\n#endif\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_lfloat = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#define BUGGY_GCC\n#endif\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_lfloat = \"\";\n#endif\n\n",
                      "markdown": "`#define BUGGY_GCC\n#endif\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_lfloat = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_adpcm.c"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 2,
                  "endLine": 141,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tfor (adjust_idx = 0, i = 0x4; i; i >>= 1, step >>= 1) {\n\t\tif (diff >= step) {\n\t\t\tadjust_idx |= i;\n\t\t\tdiff -= step;\n\t\t\tpred_diff += step;\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\tfor (adjust_idx = 0, i = 0x4; i; i >>= 1, step >>= 1) {\n\t\tif (diff >= step) {\n\t\t\tadjust_idx |= i;\n\t\t\tdiff -= step;\n\t\t\tpred_diff += step;\n\t\t}\n\t}\n",
                      "markdown": "`\tfor (adjust_idx = 0, i = 0x4; i; i >>= 1, step >>= 1) {\n\t\tif (diff >= step) {\n\t\t\tadjust_idx |= i;\n\t\t\tdiff -= step;\n\t\t\tpred_diff += step;\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_adpcm.c"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 1,
                  "endLine": 121,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tdiff = sl - state->pred_val;\n\tsign = (diff < 0) ? 0x8 : 0x0;\n\tif (sign) {\n\t\tdiff = -diff;\n\t}\n\n\t/*\n",
                    "rendered": {
                      "text": "\tdiff = sl - state->pred_val;\n\tsign = (diff < 0) ? 0x8 : 0x0;\n\tif (sign) {\n\t\tdiff = -diff;\n\t}\n\n\t/*\n",
                      "markdown": "`\tdiff = sl - state->pred_val;\n\tsign = (diff < 0) ? 0x8 : 0x0;\n\tif (sign) {\n\t\tdiff = -diff;\n\t}\n\n\t/*\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_adpcm.c"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 118,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tint i;\n\n\t/* Compute difference to previous predicted value */\n\tdiff = sl - state->pred_val;\n\tsign = (diff < 0) ? 0x8 : 0x0;\n\tif (sign) {\n\t\tdiff = -diff;\n",
                    "rendered": {
                      "text": "\tint i;\n\n\t/* Compute difference to previous predicted value */\n\tdiff = sl - state->pred_val;\n\tsign = (diff < 0) ? 0x8 : 0x0;\n\tif (sign) {\n\t\tdiff = -diff;\n",
                      "markdown": "`\tint i;\n\n\t/* Compute difference to previous predicted value */\n\tdiff = sl - state->pred_val;\n\tsign = (diff < 0) ? 0x8 : 0x0;\n\tif (sign) {\n\t\tdiff = -diff;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_adpcm.c"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 7,
                  "endLine": 65,
                  "snippet": {
                    "text": "#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_adpcm = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_adpcm = \"\";\n#endif\n\n",
                      "markdown": "`#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_adpcm = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_iec958.c"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 35,
                  "snippet": {
                    "text": "#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_iec958 = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_iec958 = \"\";\n#endif\n\n",
                      "markdown": "`#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_iec958 = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_multi.c"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 7,
                  "endLine": 38,
                  "snippet": {
                    "text": "#include <string.h>\n#include <math.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_multi = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <string.h>\n#include <math.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_multi = \"\";\n#endif\n\n",
                      "markdown": "`#include <string.h>\n#include <math.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_multi = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_extplug.c"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 35,
                  "snippet": {
                    "text": "#include \"pcm_extplug.h\"\n#include \"pcm_ext_parm.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_extplug = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"pcm_extplug.h\"\n#include \"pcm_ext_parm.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_extplug = \"\";\n#endif\n\n",
                      "markdown": "`#include \"pcm_extplug.h\"\n#include \"pcm_ext_parm.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_extplug = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_asym.c"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 7,
                  "endLine": 12,
                  "snippet": {
                    "text": "\n#include \"pcm_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_asym = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "\n#include \"pcm_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_asym = \"\";\n#endif\n\n",
                      "markdown": "`\n#include \"pcm_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_asym = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_query_hw.c"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 7,
                  "endLine": 25,
                  "snippet": {
                    "text": "\n#include \"timer_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_timer_query_hw = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "\n#include \"timer_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_timer_query_hw = \"\";\n#endif\n\n",
                      "markdown": "`\n#include \"timer_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_timer_query_hw = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer.c"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 7,
                  "endLine": 151,
                  "snippet": {
                    "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_timer_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_timer_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n",
                    "rendered": {
                      "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_timer_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_timer_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n",
                      "markdown": "`\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_timer_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_timer_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer.c"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 7,
                  "endLine": 87,
                  "snippet": {
                    "text": "\tconst char *id;\n\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_timer_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_timer_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(timer_conf) != SND_CONFIG_TYPE_COMPOUND) {\n",
                    "rendered": {
                      "text": "\tconst char *id;\n\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_timer_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_timer_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(timer_conf) != SND_CONFIG_TYPE_COMPOUND) {\n",
                      "markdown": "`\tconst char *id;\n\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_timer_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_timer_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(timer_conf) != SND_CONFIG_TYPE_COMPOUND) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_hw.c"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 1,
                  "endLine": 187,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n\t\treturn -errno;\n\treturn 0;\n",
                    "rendered": {
                      "text": "\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n\t\treturn -errno;\n\treturn 0;\n",
                      "markdown": "`\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n\t\treturn -errno;\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_hw.c"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (!tmr)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n",
                    "rendered": {
                      "text": "\tif (!tmr)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n",
                      "markdown": "`\tif (!tmr)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_CONTINUE;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_hw.c"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 1,
                  "endLine": 170,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n\t\treturn -errno;\n\treturn 0;\n",
                    "rendered": {
                      "text": "\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n\t\treturn -errno;\n\treturn 0;\n",
                      "markdown": "`\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n\t\treturn -errno;\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_hw.c"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 1,
                  "endLine": 168,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (!tmr)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n",
                    "rendered": {
                      "text": "\tif (!tmr)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n",
                      "markdown": "`\tif (!tmr)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STOP;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_hw.c"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 1,
                  "endLine": 153,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_START_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_START;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n\t\treturn -errno;\n\treturn 0;\n",
                    "rendered": {
                      "text": "\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_START_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_START;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n\t\treturn -errno;\n\treturn 0;\n",
                      "markdown": "`\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_START_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_START;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n\t\treturn -errno;\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_hw.c"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 1,
                  "endLine": 151,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (!tmr)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_START_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_START;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n",
                    "rendered": {
                      "text": "\tif (!tmr)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_START_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_START;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n",
                      "markdown": "`\tif (!tmr)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 4))\n\t\tcmd = SNDRV_TIMER_IOCTL_START_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_START;\n\tif (ioctl(tmr->poll_fd, cmd) < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_hw.c"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 1,
                  "endLine": 136,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 1))\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS;\n\tif (ioctl(tmr->poll_fd, cmd, status) < 0)\n\t\treturn -errno;\n\treturn 0;\n",
                    "rendered": {
                      "text": "\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 1))\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS;\n\tif (ioctl(tmr->poll_fd, cmd, status) < 0)\n\t\treturn -errno;\n\treturn 0;\n",
                      "markdown": "`\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 1))\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS;\n\tif (ioctl(tmr->poll_fd, cmd, status) < 0)\n\t\treturn -errno;\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_hw.c"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 1,
                  "endLine": 134,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (!tmr || !status)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 1))\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS;\n\tif (ioctl(tmr->poll_fd, cmd, status) < 0)\n",
                    "rendered": {
                      "text": "\tif (!tmr || !status)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 1))\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS;\n\tif (ioctl(tmr->poll_fd, cmd, status) < 0)\n",
                      "markdown": "`\tif (!tmr || !status)\n\t\treturn -EINVAL;\n\tif (tmr->version < SNDRV_PROTOCOL_VERSION(2, 0, 1))\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS_OLD;\n\telse\n\t\tcmd = SNDRV_TIMER_IOCTL_STATUS;\n\tif (ioctl(tmr->poll_fd, cmd, status) < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_hw.c"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 7,
                  "endLine": 25,
                  "snippet": {
                    "text": "\n#include \"timer_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_timer_hw = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "\n#include \"timer_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_timer_hw = \"\";\n#endif\n\n",
                      "markdown": "`\n#include \"timer_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_timer_hw = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq.c"
                },
                "region": {
                  "startLine": 975,
                  "startColumn": 7,
                  "endLine": 976,
                  "snippet": {
                    "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_seq_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_seq_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n",
                    "rendered": {
                      "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_seq_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_seq_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n",
                      "markdown": "`\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_seq_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_seq_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq.c"
                },
                "region": {
                  "startLine": 911,
                  "startColumn": 7,
                  "endLine": 912,
                  "snippet": {
                    "text": "\tint (*open_func)(snd_seq_t **, const char *,\n\t\t\t snd_config_t *, snd_config_t *, \n\t\t\t int, int) = NULL;\n#ifndef PIC\n\textern void *snd_seq_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(seq_conf) != SND_CONFIG_TYPE_COMPOUND) {\n",
                    "rendered": {
                      "text": "\tint (*open_func)(snd_seq_t **, const char *,\n\t\t\t snd_config_t *, snd_config_t *, \n\t\t\t int, int) = NULL;\n#ifndef PIC\n\textern void *snd_seq_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(seq_conf) != SND_CONFIG_TYPE_COMPOUND) {\n",
                      "markdown": "`\tint (*open_func)(snd_seq_t **, const char *,\n\t\t\t snd_config_t *, snd_config_t *, \n\t\t\t int, int) = NULL;\n#ifndef PIC\n\textern void *snd_seq_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(seq_conf) != SND_CONFIG_TYPE_COMPOUND) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq_hw.c"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 7,
                  "endLine": 28,
                  "snippet": {
                    "text": "#include <fcntl.h>\n#include <sys/ioctl.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_seq_hw = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <fcntl.h>\n#include <sys/ioctl.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_seq_hw = \"\";\n#endif\n\n",
                      "markdown": "`#include <fcntl.h>\n#include <sys/ioctl.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_seq_hw = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq_old.c"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 21,
                  "endLine": 90,
                  "endColumn": 26,
                  "snippet": {
                    "text": "}\n\nvoid snd_instr_header_set_cmd(void *info ATTRIBUTE_UNUSED,\n\t\t\t      unsigned int cmd ATTRIBUTE_UNUSED)\n{\n}\n\n",
                    "rendered": {
                      "text": "}\n\nvoid snd_instr_header_set_cmd(void *info ATTRIBUTE_UNUSED,\n\t\t\t      unsigned int cmd ATTRIBUTE_UNUSED)\n{\n}\n\n",
                      "markdown": "`}\n\nvoid snd_instr_header_set_cmd(void *info ATTRIBUTE_UNUSED,\n\t\t\t      unsigned int cmd ATTRIBUTE_UNUSED)\n{\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq_symbols.c"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 22,
                  "snippet": {
                    "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_seq_hw;\n\nstatic const char **snd_seq_open_objects[] = {\n",
                    "rendered": {
                      "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_seq_hw;\n\nstatic const char **snd_seq_open_objects[] = {\n",
                      "markdown": "` *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_seq_hw;\n\nstatic const char **snd_seq_open_objects[] = {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/hwdep/hwdep_symbols.c"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 22,
                  "snippet": {
                    "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_hwdep_hw;\n\nstatic const char **snd_hwdep_open_objects[] = {\n",
                    "rendered": {
                      "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_hwdep_hw;\n\nstatic const char **snd_hwdep_open_objects[] = {\n",
                      "markdown": "` *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_hwdep_hw;\n\nstatic const char **snd_hwdep_open_objects[] = {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/hwdep/hwdep.c"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 7,
                  "endLine": 117,
                  "snippet": {
                    "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_hwdep_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_hwdep_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n",
                    "rendered": {
                      "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_hwdep_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_hwdep_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n",
                      "markdown": "`\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_hwdep_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_hwdep_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/hwdep/hwdep.c"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 7,
                  "endLine": 52,
                  "snippet": {
                    "text": "\tconst char *id;\n\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_hwdep_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_hwdep_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(hwdep_conf) != SND_CONFIG_TYPE_COMPOUND) {\n",
                    "rendered": {
                      "text": "\tconst char *id;\n\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_hwdep_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_hwdep_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(hwdep_conf) != SND_CONFIG_TYPE_COMPOUND) {\n",
                      "markdown": "`\tconst char *id;\n\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_hwdep_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_hwdep_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(hwdep_conf) != SND_CONFIG_TYPE_COMPOUND) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/ucm_cond.c"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 29,
                  "endLine": 226,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tif (device == NULL) {\n\t\tctl = uc_mgr_get_ctl(uc_mgr);\n\t\tif (ctl == NULL) {\n\t\t\tuc_error(\"cannot determine control device\");\n\t\t\treturn -EINVAL;\n\t\t}\n\t} else {\n",
                    "rendered": {
                      "text": "\tif (device == NULL) {\n\t\tctl = uc_mgr_get_ctl(uc_mgr);\n\t\tif (ctl == NULL) {\n\t\t\tuc_error(\"cannot determine control device\");\n\t\t\treturn -EINVAL;\n\t\t}\n\t} else {\n",
                      "markdown": "`\tif (device == NULL) {\n\t\tctl = uc_mgr_get_ctl(uc_mgr);\n\t\tif (ctl == NULL) {\n\t\t\tuc_error(\"cannot determine control device\");\n\t\t\treturn -EINVAL;\n\t\t}\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/ucm_include.c"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 32,
                  "endLine": 177,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\treturn array;\n\t}\n\tif (array && snd_config_is_array(src) <= 0) {\n\t\tuc_error(\"source configuration node is not an array\");\n\t\treturn -EINVAL;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\treturn array;\n\t}\n\tif (array && snd_config_is_array(src) <= 0) {\n\t\tuc_error(\"source configuration node is not an array\");\n\t\treturn -EINVAL;\n\t}\n\n",
                      "markdown": "`\t\treturn array;\n\t}\n\tif (array && snd_config_is_array(src) <= 0) {\n\t\tuc_error(\"source configuration node is not an array\");\n\t\treturn -EINVAL;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/ucm_include.c"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 37,
                  "endLine": 173,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n\tarray = snd_config_is_array(dst);\n\tif (array < 0) {\n\t\tuc_error(\"destination configuration node is not a compound\");\n\t\treturn array;\n\t}\n\tif (array && snd_config_is_array(src) <= 0) {\n",
                    "rendered": {
                      "text": "\n\tarray = snd_config_is_array(dst);\n\tif (array < 0) {\n\t\tuc_error(\"destination configuration node is not a compound\");\n\t\treturn array;\n\t}\n\tif (array && snd_config_is_array(src) <= 0) {\n",
                      "markdown": "`\n\tarray = snd_config_is_array(dst);\n\tif (array < 0) {\n\t\tuc_error(\"destination configuration node is not a compound\");\n\t\treturn array;\n\t}\n\tif (array && snd_config_is_array(src) <= 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/mixer/simple_abst.c"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 25,
                  "endLine": 327,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tif (err >= 0) {\n\t\terr = snd_ctl_open(&priv->ctl, priv->device, 0);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"unable to open control device '%s': %s\", priv->device, snd_strerror(err));\n\t\t\tgoto __error;\n\t\t}\n\t\terr = snd_hctl_open_ctl(&priv->hctl, priv->ctl);\n",
                    "rendered": {
                      "text": "\tif (err >= 0) {\n\t\terr = snd_ctl_open(&priv->ctl, priv->device, 0);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"unable to open control device '%s': %s\", priv->device, snd_strerror(err));\n\t\t\tgoto __error;\n\t\t}\n\t\terr = snd_hctl_open_ctl(&priv->hctl, priv->ctl);\n",
                      "markdown": "`\tif (err >= 0) {\n\t\terr = snd_ctl_open(&priv->ctl, priv->device, 0);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"unable to open control device '%s': %s\", priv->device, snd_strerror(err));\n\t\t\tgoto __error;\n\t\t}\n\t\terr = snd_hctl_open_ctl(&priv->hctl, priv->ctl);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/pcm.c"
                },
                "region": {
                  "startLine": 631,
                  "startColumn": 17,
                  "endLine": 631,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tif (avail < 0) {\n\t\t\terr = xrun_recovery(handle, avail);\n\t\t\tif (err < 0) {\n\t\t\t\tprintf(\"avail update failed: %s\\n\", snd_strerror(err));\n\t\t\t\treturn err;\n\t\t\t}\n\t\t\tfirst = 1;\n",
                    "rendered": {
                      "text": "\t\tif (avail < 0) {\n\t\t\terr = xrun_recovery(handle, avail);\n\t\t\tif (err < 0) {\n\t\t\t\tprintf(\"avail update failed: %s\\n\", snd_strerror(err));\n\t\t\t\treturn err;\n\t\t\t}\n\t\t\tfirst = 1;\n",
                      "markdown": "`\t\tif (avail < 0) {\n\t\t\terr = xrun_recovery(handle, avail);\n\t\t\tif (err < 0) {\n\t\t\t\tprintf(\"avail update failed: %s\\n\", snd_strerror(err));\n\t\t\t\treturn err;\n\t\t\t}\n\t\t\tfirst = 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/pcm.c"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 17,
                  "endLine": 498,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tif (avail < 0) {\n\t\t\terr = xrun_recovery(handle, avail);\n\t\t\tif (err < 0) {\n\t\t\t\tprintf(\"avail update failed: %s\\n\", snd_strerror(err));\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\tfirst = 1;\n",
                    "rendered": {
                      "text": "\t\tif (avail < 0) {\n\t\t\terr = xrun_recovery(handle, avail);\n\t\t\tif (err < 0) {\n\t\t\t\tprintf(\"avail update failed: %s\\n\", snd_strerror(err));\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\tfirst = 1;\n",
                      "markdown": "`\t\tif (avail < 0) {\n\t\t\terr = xrun_recovery(handle, avail);\n\t\t\tif (err < 0) {\n\t\t\t\tprintf(\"avail update failed: %s\\n\", snd_strerror(err));\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\tfirst = 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/pcm.c"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 30,
                  "endLine": 165,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t/* set the period time */\n\terr = snd_pcm_hw_params_set_period_time_near(handle, params, &period_time, &dir);\n\tif (err < 0) {\n\t\tprintf(\"Unable to set period time %u for playback: %s\\n\", period_time, snd_strerror(err));\n\t\treturn err;\n\t}\n\terr = snd_pcm_hw_params_get_period_size(params, &size, &dir);\n",
                    "rendered": {
                      "text": "\t/* set the period time */\n\terr = snd_pcm_hw_params_set_period_time_near(handle, params, &period_time, &dir);\n\tif (err < 0) {\n\t\tprintf(\"Unable to set period time %u for playback: %s\\n\", period_time, snd_strerror(err));\n\t\treturn err;\n\t}\n\terr = snd_pcm_hw_params_get_period_size(params, &size, &dir);\n",
                      "markdown": "`\t/* set the period time */\n\terr = snd_pcm_hw_params_set_period_time_near(handle, params, &period_time, &dir);\n\tif (err < 0) {\n\t\tprintf(\"Unable to set period time %u for playback: %s\\n\", period_time, snd_strerror(err));\n\t\treturn err;\n\t}\n\terr = snd_pcm_hw_params_get_period_size(params, &size, &dir);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/pcm.c"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 30,
                  "endLine": 153,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t/* set the buffer time */\n\terr = snd_pcm_hw_params_set_buffer_time_near(handle, params, &buffer_time, &dir);\n\tif (err < 0) {\n\t\tprintf(\"Unable to set buffer time %u for playback: %s\\n\", buffer_time, snd_strerror(err));\n\t\treturn err;\n\t}\n\terr = snd_pcm_hw_params_get_buffer_size(params, &size);\n",
                    "rendered": {
                      "text": "\t/* set the buffer time */\n\terr = snd_pcm_hw_params_set_buffer_time_near(handle, params, &buffer_time, &dir);\n\tif (err < 0) {\n\t\tprintf(\"Unable to set buffer time %u for playback: %s\\n\", buffer_time, snd_strerror(err));\n\t\treturn err;\n\t}\n\terr = snd_pcm_hw_params_get_buffer_size(params, &size);\n",
                      "markdown": "`\t/* set the buffer time */\n\terr = snd_pcm_hw_params_set_buffer_time_near(handle, params, &buffer_time, &dir);\n\tif (err < 0) {\n\t\tprintf(\"Unable to set buffer time %u for playback: %s\\n\", buffer_time, snd_strerror(err));\n\t\treturn err;\n\t}\n\terr = snd_pcm_hw_params_get_buffer_size(params, &size);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 1180,
                  "startColumn": 28,
                  "endLine": 1180,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif (be->hdr.access & SNDRV_CTL_ELEM_ACCESS_TLV_CALLBACK) {\n\t\tif ((be->hdr.access & SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE)\n\t\t\t!= SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE) {\n\t\t\tSNDERR(\"Invalid TLV bytes control access 0x%x\",\n\t\t\t\tbe->hdr.access);\n\t\t\ttplg_elem_free(elem);\n\t\t\treturn -EINVAL;\n",
                    "rendered": {
                      "text": "\tif (be->hdr.access & SNDRV_CTL_ELEM_ACCESS_TLV_CALLBACK) {\n\t\tif ((be->hdr.access & SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE)\n\t\t\t!= SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE) {\n\t\t\tSNDERR(\"Invalid TLV bytes control access 0x%x\",\n\t\t\t\tbe->hdr.access);\n\t\t\ttplg_elem_free(elem);\n\t\t\treturn -EINVAL;\n",
                      "markdown": "`\tif (be->hdr.access & SNDRV_CTL_ELEM_ACCESS_TLV_CALLBACK) {\n\t\tif ((be->hdr.access & SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE)\n\t\t\t!= SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE) {\n\t\t\tSNDERR(\"Invalid TLV bytes control access 0x%x\",\n\t\t\t\tbe->hdr.access);\n\t\t\ttplg_elem_free(elem);\n\t\t\treturn -EINVAL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 1140,
                  "startColumn": 11,
                  "endLine": 1140,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tstruct tplg_elem *elem;\n\tint ret;\n\n\ttplg_dbg(\" Control Bytes: %s\", bytes_ctl->hdr.name);\n\n\tif (bytes_ctl->hdr.type != SND_SOC_TPLG_TYPE_BYTES) {\n\t\tSNDERR(\"invalid bytes type %d\", bytes_ctl->hdr.type);\n",
                    "rendered": {
                      "text": "\tstruct tplg_elem *elem;\n\tint ret;\n\n\ttplg_dbg(\" Control Bytes: %s\", bytes_ctl->hdr.name);\n\n\tif (bytes_ctl->hdr.type != SND_SOC_TPLG_TYPE_BYTES) {\n\t\tSNDERR(\"invalid bytes type %d\", bytes_ctl->hdr.type);\n",
                      "markdown": "`\tstruct tplg_elem *elem;\n\tint ret;\n\n\ttplg_dbg(\" Control Bytes: %s\", bytes_ctl->hdr.name);\n\n\tif (bytes_ctl->hdr.type != SND_SOC_TPLG_TYPE_BYTES) {\n\t\tSNDERR(\"invalid bytes type %d\", bytes_ctl->hdr.type);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 1049,
                  "startColumn": 11,
                  "endLine": 1049,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tstruct tplg_elem *elem;\n\tint ret, i, num_items, num_channels;\n\n\ttplg_dbg(\" Control Enum: %s\", enum_ctl->hdr.name);\n\n\tif (enum_ctl->hdr.type != SND_SOC_TPLG_TYPE_ENUM) {\n\t\tSNDERR(\"invalid enum type %d\", enum_ctl->hdr.type);\n",
                    "rendered": {
                      "text": "\tstruct tplg_elem *elem;\n\tint ret, i, num_items, num_channels;\n\n\ttplg_dbg(\" Control Enum: %s\", enum_ctl->hdr.name);\n\n\tif (enum_ctl->hdr.type != SND_SOC_TPLG_TYPE_ENUM) {\n\t\tSNDERR(\"invalid enum type %d\", enum_ctl->hdr.type);\n",
                      "markdown": "`\tstruct tplg_elem *elem;\n\tint ret, i, num_items, num_channels;\n\n\ttplg_dbg(\" Control Enum: %s\", enum_ctl->hdr.name);\n\n\tif (enum_ctl->hdr.type != SND_SOC_TPLG_TYPE_ENUM) {\n\t\tSNDERR(\"invalid enum type %d\", enum_ctl->hdr.type);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 985,
                  "startColumn": 11,
                  "endLine": 985,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tstruct tplg_elem *elem;\n\tint ret, i, num_channels;\n\n\ttplg_dbg(\" Control Mixer: %s\", mixer->hdr.name);\n\n\tif (mixer->hdr.type != SND_SOC_TPLG_TYPE_MIXER) {\n\t\tSNDERR(\"invalid mixer type %d\", mixer->hdr.type);\n",
                    "rendered": {
                      "text": "\tstruct tplg_elem *elem;\n\tint ret, i, num_channels;\n\n\ttplg_dbg(\" Control Mixer: %s\", mixer->hdr.name);\n\n\tif (mixer->hdr.type != SND_SOC_TPLG_TYPE_MIXER) {\n\t\tSNDERR(\"invalid mixer type %d\", mixer->hdr.type);\n",
                      "markdown": "`\tstruct tplg_elem *elem;\n\tint ret, i, num_channels;\n\n\ttplg_dbg(\" Control Mixer: %s\", mixer->hdr.name);\n\n\tif (mixer->hdr.type != SND_SOC_TPLG_TYPE_MIXER) {\n\t\tSNDERR(\"invalid mixer type %d\", mixer->hdr.type);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 765,
                  "startColumn": 11,
                  "endLine": 765,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tfor (j = 0; j < SND_SOC_TPLG_MAX_CHAN; j++)\n\t\tmc->channel[j].reg = -1;\n\n\ttplg_dbg(\" Control Mixer: %s\", elem->id);\n\n\t/* giterate trough each mixer elment */\n\tsnd_config_for_each(i, next, cfg) {\n",
                    "rendered": {
                      "text": "\tfor (j = 0; j < SND_SOC_TPLG_MAX_CHAN; j++)\n\t\tmc->channel[j].reg = -1;\n\n\ttplg_dbg(\" Control Mixer: %s\", elem->id);\n\n\t/* giterate trough each mixer elment */\n\tsnd_config_for_each(i, next, cfg) {\n",
                      "markdown": "`\tfor (j = 0; j < SND_SOC_TPLG_MAX_CHAN; j++)\n\t\tmc->channel[j].reg = -1;\n\n\ttplg_dbg(\" Control Mixer: %s\", elem->id);\n\n\t/* giterate trough each mixer elment */\n\tsnd_config_for_each(i, next, cfg) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 11,
                  "endLine": 628,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tec->channel[j].reg = -1;\n\t}\n\n\ttplg_dbg(\" Control Enum: %s\", elem->id);\n\n\tsnd_config_for_each(i, next, cfg) {\n\n",
                    "rendered": {
                      "text": "\t\tec->channel[j].reg = -1;\n\t}\n\n\ttplg_dbg(\" Control Enum: %s\", elem->id);\n\n\tsnd_config_for_each(i, next, cfg) {\n\n",
                      "markdown": "`\t\tec->channel[j].reg = -1;\n\t}\n\n\ttplg_dbg(\" Control Enum: %s\", elem->id);\n\n\tsnd_config_for_each(i, next, cfg) {\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 11,
                  "endLine": 453,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tsnd_strlcpy(be->hdr.name, elem->id, SNDRV_CTL_ELEM_ID_NAME_MAXLEN);\n\tbe->hdr.type = SND_SOC_TPLG_TYPE_BYTES;\n\n\ttplg_dbg(\" Control Bytes: %s\", elem->id);\n\n\tsnd_config_for_each(i, next, cfg) {\n\t\tn = snd_config_iterator_entry(i);\n",
                    "rendered": {
                      "text": "\tsnd_strlcpy(be->hdr.name, elem->id, SNDRV_CTL_ELEM_ID_NAME_MAXLEN);\n\tbe->hdr.type = SND_SOC_TPLG_TYPE_BYTES;\n\n\ttplg_dbg(\" Control Bytes: %s\", elem->id);\n\n\tsnd_config_for_each(i, next, cfg) {\n\t\tn = snd_config_iterator_entry(i);\n",
                      "markdown": "`\tsnd_strlcpy(be->hdr.name, elem->id, SNDRV_CTL_ELEM_ID_NAME_MAXLEN);\n\tbe->hdr.type = SND_SOC_TPLG_TYPE_BYTES;\n\n\ttplg_dbg(\" Control Bytes: %s\", elem->id);\n\n\tsnd_config_for_each(i, next, cfg) {\n\t\tn = snd_config_iterator_entry(i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 5,
                  "endLine": 240,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t}\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n\t}\n",
                      "markdown": "`\t\t}\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 5,
                  "endLine": 191,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t} else if (err < 0)\n\t\t\treturn err;\n",
                    "rendered": {
                      "text": "\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t} else if (err < 0)\n\t\t\treturn err;\n",
                      "markdown": "`\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t} else if (err < 0)\n\t\t\treturn err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 17,
                  "endLine": 239,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t\t\treturn err;\n\t\t}\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\treturn err;\n\t\t}\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\t\t\treturn err;\n\t\t}\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/ctl.c"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 17,
                  "endLine": 190,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t} else if (err < 0)\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t} else if (err < 0)\n",
                      "markdown": "`\t\t}\n\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" control '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t} else if (err < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/doc/index.doxygen"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 58,
                  "endLine": 44,
                  "endColumn": 67,
                  "snippet": {
                    "text": "- Page \\subpage pcm explains the design of the PCM (digital audio) API.\n- Page \\subpage pcm_plugins explains the design of PCM (digital audio) plugins.\n- Page \\subpage pcm_external_plugins explains the external PCM plugin SDK.\n- Page \\subpage ctl_external_plugins explains the external control plugin SDK.\n- Page \\subpage rawmidi explains the design of the RawMidi API.\n- Page \\subpage timer explains the design of the Timer API.\n- Page \\subpage seq explains the design of the Sequencer API.\n",
                    "rendered": {
                      "text": "- Page \\subpage pcm explains the design of the PCM (digital audio) API.\n- Page \\subpage pcm_plugins explains the design of PCM (digital audio) plugins.\n- Page \\subpage pcm_external_plugins explains the external PCM plugin SDK.\n- Page \\subpage ctl_external_plugins explains the external control plugin SDK.\n- Page \\subpage rawmidi explains the design of the RawMidi API.\n- Page \\subpage timer explains the design of the Timer API.\n- Page \\subpage seq explains the design of the Sequencer API.\n",
                      "markdown": "`- Page \\subpage pcm explains the design of the PCM (digital audio) API.\n- Page \\subpage pcm_plugins explains the design of PCM (digital audio) plugins.\n- Page \\subpage pcm_external_plugins explains the external PCM plugin SDK.\n- Page \\subpage ctl_external_plugins explains the external control plugin SDK.\n- Page \\subpage rawmidi explains the design of the RawMidi API.\n- Page \\subpage timer explains the design of the Timer API.\n- Page \\subpage seq explains the design of the Sequencer API.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/doc/index.doxygen"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 64,
                  "endLine": 38,
                  "endColumn": 73,
                  "snippet": {
                    "text": "---------\n\n- Page \\subpage control explains the primitive controls API.\n- Page \\subpage control_plugins explains the design of primitive control plugins.\n- Page \\subpage hcontrol explains the high-level primitive controls API.\n- Page \\subpage mixer explains the mixer controls API.\n- Page \\subpage pcm explains the design of the PCM (digital audio) API.\n",
                    "rendered": {
                      "text": "---------\n\n- Page \\subpage control explains the primitive controls API.\n- Page \\subpage control_plugins explains the design of primitive control plugins.\n- Page \\subpage hcontrol explains the high-level primitive controls API.\n- Page \\subpage mixer explains the mixer controls API.\n- Page \\subpage pcm explains the design of the PCM (digital audio) API.\n",
                      "markdown": "`---------\n\n- Page \\subpage control explains the primitive controls API.\n- Page \\subpage control_plugins explains the design of primitive control plugins.\n- Page \\subpage hcontrol explains the high-level primitive controls API.\n- Page \\subpage mixer explains the mixer controls API.\n- Page \\subpage pcm explains the design of the PCM (digital audio) API.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/doc/index.doxygen"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15,
                  "endLine": 37,
                  "endColumn": 24,
                  "snippet": {
                    "text": "API links\n---------\n\n- Page \\subpage control explains the primitive controls API.\n- Page \\subpage control_plugins explains the design of primitive control plugins.\n- Page \\subpage hcontrol explains the high-level primitive controls API.\n- Page \\subpage mixer explains the mixer controls API.\n",
                    "rendered": {
                      "text": "API links\n---------\n\n- Page \\subpage control explains the primitive controls API.\n- Page \\subpage control_plugins explains the design of primitive control plugins.\n- Page \\subpage hcontrol explains the high-level primitive controls API.\n- Page \\subpage mixer explains the mixer controls API.\n",
                      "markdown": "`API links\n---------\n\n- Page \\subpage control explains the primitive controls API.\n- Page \\subpage control_plugins explains the design of primitive control plugins.\n- Page \\subpage hcontrol explains the high-level primitive controls API.\n- Page \\subpage mixer explains the mixer controls API.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/doc/doxygen.cfg.in"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 21,
                  "endLine": 130,
                  "endColumn": 26,
                  "snippet": {
                    "text": "ENABLED_SECTIONS = \"\"\nMACRO_EXPANSION  = YES\nEXPAND_ONLY_PREDEF = YES\nPREDEFINED\t = DOXYGEN PIC \"DOC_HIDDEN\" \\\n\t\t   \"ATTRIBUTE_UNUSED=\" \\\n\t\t   ALSA_PCM_NEW_HW_PARAMS_API \\\n\t\t   _POSIX_C_SOURCE \\\n",
                    "rendered": {
                      "text": "ENABLED_SECTIONS = \"\"\nMACRO_EXPANSION  = YES\nEXPAND_ONLY_PREDEF = YES\nPREDEFINED\t = DOXYGEN PIC \"DOC_HIDDEN\" \\\n\t\t   \"ATTRIBUTE_UNUSED=\" \\\n\t\t   ALSA_PCM_NEW_HW_PARAMS_API \\\n\t\t   _POSIX_C_SOURCE \\\n",
                      "markdown": "`ENABLED_SECTIONS = \"\"\nMACRO_EXPANSION  = YES\nEXPAND_ONLY_PREDEF = YES\nPREDEFINED\t = DOXYGEN PIC \"DOC_HIDDEN\" \\\n\t\t   \"ATTRIBUTE_UNUSED=\" \\\n\t\t   ALSA_PCM_NEW_HW_PARAMS_API \\\n\t\t   _POSIX_C_SOURCE \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/doc/Makefile.am"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 28,
                  "snippet": {
                    "text": "AM_CPPFLAGS=-I$(top_srcdir)/include\n\ndoc:\n\ttest -e doxygen.cfg || sed s:[@]top_srcdir[@]:..:g doxygen.cfg.in > doxygen.cfg\n\tdoxygen doxygen.cfg\n\ndoc-pack: doc\n",
                    "rendered": {
                      "text": "AM_CPPFLAGS=-I$(top_srcdir)/include\n\ndoc:\n\ttest -e doxygen.cfg || sed s:[@]top_srcdir[@]:..:g doxygen.cfg.in > doxygen.cfg\n\tdoxygen doxygen.cfg\n\ndoc-pack: doc\n",
                      "markdown": "`AM_CPPFLAGS=-I$(top_srcdir)/include\n\ndoc:\n\ttest -e doxygen.cfg || sed s:[@]top_srcdir[@]:..:g doxygen.cfg.in > doxygen.cfg\n\tdoxygen doxygen.cfg\n\ndoc-pack: doc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/modules/mixer/simple/python/main.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 30,
                  "endLine": 7,
                  "snippet": {
                    "text": "#  -*- Python -*-\n\nfrom os.path import dirname\nfrom pyalsa.alsacontrol import Control\nfrom sys import path\npath.insert(0, dirname(__file__))\n\ndef alsacode(module):\n",
                    "rendered": {
                      "text": "#  -*- Python -*-\n\nfrom os.path import dirname\nfrom pyalsa.alsacontrol import Control\nfrom sys import path\npath.insert(0, dirname(__file__))\n\ndef alsacode(module):\n",
                      "markdown": "`#  -*- Python -*-\n\nfrom os.path import dirname\nfrom pyalsa.alsacontrol import Control\nfrom sys import path\npath.insert(0, dirname(__file__))\n\ndef alsacode(module):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/modules/mixer/simple/python.c"
                },
                "region": {
                  "startLine": 1131,
                  "startColumn": 19,
                  "endLine": 1131,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\tfp = fopen(file, \"r\");\n\tif (fp == NULL) {\n\t\tSNDERR(\"Unable to find python module '%s'\", file);\n\t\treturn -ENODEV;\n\t}\n\t\n",
                    "rendered": {
                      "text": "\n\tfp = fopen(file, \"r\");\n\tif (fp == NULL) {\n\t\tSNDERR(\"Unable to find python module '%s'\", file);\n\t\treturn -ENODEV;\n\t}\n\t\n",
                      "markdown": "`\n\tfp = fopen(file, \"r\");\n\tif (fp == NULL) {\n\t\tSNDERR(\"Unable to find python module '%s'\", file);\n\t\treturn -ENODEV;\n\t}\n\t\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/modules/mixer/simple/python.c"
                },
                "region": {
                  "startLine": 1086,
                  "startColumn": 19,
                  "endLine": 1086,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tPy_XDECREF(obj);\n\tpriv->py_event_func = PyDict_GetItemString(mdict, \"event\");\n\tif (priv->py_event_func == NULL) {\n\t\tSNDERR(\"Unable to find python function 'event'\");\n\t\treturn -EIO;\n\t}\n\treturn 0;\n",
                    "rendered": {
                      "text": "\tPy_XDECREF(obj);\n\tpriv->py_event_func = PyDict_GetItemString(mdict, \"event\");\n\tif (priv->py_event_func == NULL) {\n\t\tSNDERR(\"Unable to find python function 'event'\");\n\t\treturn -EIO;\n\t}\n\treturn 0;\n",
                      "markdown": "`\tPy_XDECREF(obj);\n\tpriv->py_event_func = PyDict_GetItemString(mdict, \"event\");\n\tif (priv->py_event_func == NULL) {\n\t\tSNDERR(\"Unable to find python function 'event'\");\n\t\treturn -EIO;\n\t}\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/modules/mixer/simple/python.c"
                },
                "region": {
                  "startLine": 799,
                  "startColumn": 42,
                  "endLine": 799,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t\tpymixer->melem_count++;\n\t\t}\n\t} else {\n\t\tPyErr_Format(PyExc_RuntimeError, \"Cannot find class '%s'\", class);\n\t\treturn NULL;\n\t}\n\treturn obj2;\n",
                    "rendered": {
                      "text": "\t\t\tpymixer->melem_count++;\n\t\t}\n\t} else {\n\t\tPyErr_Format(PyExc_RuntimeError, \"Cannot find class '%s'\", class);\n\t\treturn NULL;\n\t}\n\treturn obj2;\n",
                      "markdown": "`\t\t\tpymixer->melem_count++;\n\t\t}\n\t} else {\n\t\tPyErr_Format(PyExc_RuntimeError, \"Cannot find class '%s'\", class);\n\t\treturn NULL;\n\t}\n\treturn obj2;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/modules/mixer/simple/python.c"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 7,
                  "endLine": 40,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tPyObject *py_mixer;\n};\n\n#define SCRIPT \"smixer/python/main.py\"\n\nstruct pymelem {\n\tPyObject_HEAD\n",
                    "rendered": {
                      "text": "\tPyObject *py_mixer;\n};\n\n#define SCRIPT \"smixer/python/main.py\"\n\nstruct pymelem {\n\tPyObject_HEAD\n",
                      "markdown": "`\tPyObject *py_mixer;\n};\n\n#define SCRIPT \"smixer/python/main.py\"\n\nstruct pymelem {\n\tPyObject_HEAD\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_symbols.c"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 22,
                  "snippet": {
                    "text": " *\n */\n\n#ifndef PIC\n\n#include \"config.h\"\n\nextern const char *_snd_module_pcm_adpcm;\n",
                    "rendered": {
                      "text": " *\n */\n\n#ifndef PIC\n\n#include \"config.h\"\n\nextern const char *_snd_module_pcm_adpcm;\n",
                      "markdown": "` *\n */\n\n#ifndef PIC\n\n#include \"config.h\"\n\nextern const char *_snd_module_pcm_adpcm;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_plug.c"
                },
                "region": {
                  "startLine": 953,
                  "startColumn": 20,
                  "endLine": 953,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif (snd_pcm_format_mask_empty(&fmt_mask)) {\n\t\t\tSNDERR(\"Unable to find an usable client format\");\n\t\t\tfor (format = 0; format <= SND_PCM_FORMAT_LAST; format++) {\n\t\t\t\tif (!snd_pcm_format_mask_test(format_mask, format))\n\t\t\t\t\tcontinue;\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif (snd_pcm_format_mask_empty(&fmt_mask)) {\n\t\t\tSNDERR(\"Unable to find an usable client format\");\n\t\t\tfor (format = 0; format <= SND_PCM_FORMAT_LAST; format++) {\n\t\t\t\tif (!snd_pcm_format_mask_test(format_mask, format))\n\t\t\t\t\tcontinue;\n",
                      "markdown": "`\t\t}\n\n\t\tif (snd_pcm_format_mask_empty(&fmt_mask)) {\n\t\t\tSNDERR(\"Unable to find an usable client format\");\n\t\t\tfor (format = 0; format <= SND_PCM_FORMAT_LAST; format++) {\n\t\t\t\tif (!snd_pcm_format_mask_test(format_mask, format))\n\t\t\t\t\tcontinue;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_plug.c"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 20,
                  "endLine": 886,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tif (snd_pcm_hw_param_never_eq(params, SND_PCM_HW_PARAM_ACCESS, sparams)) {\n\t\terr = check_access_change(params, sparams);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find an usable access for '%s'\",\n\t\t\t       pcm->name);\n\t\t\treturn err;\n\t\t}\n",
                    "rendered": {
                      "text": "\tif (snd_pcm_hw_param_never_eq(params, SND_PCM_HW_PARAM_ACCESS, sparams)) {\n\t\terr = check_access_change(params, sparams);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find an usable access for '%s'\",\n\t\t\t       pcm->name);\n\t\t\treturn err;\n\t\t}\n",
                      "markdown": "`\tif (snd_pcm_hw_param_never_eq(params, SND_PCM_HW_PARAM_ACCESS, sparams)) {\n\t\terr = check_access_change(params, sparams);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find an usable access for '%s'\",\n\t\t\t       pcm->name);\n\t\t\treturn err;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_plug.c"
                },
                "region": {
                  "startLine": 864,
                  "startColumn": 20,
                  "endLine": 864,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif (snd_pcm_format_mask_empty(&sfmt_mask)) {\n\t\t\tSNDERR(\"Unable to find an usable slave format for '%s'\", pcm->name);\n\t\t\tfor (format = 0; format <= SND_PCM_FORMAT_LAST; format++) {\n\t\t\t\tif (!snd_pcm_format_mask_test(format_mask, format))\n\t\t\t\t\tcontinue;\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif (snd_pcm_format_mask_empty(&sfmt_mask)) {\n\t\t\tSNDERR(\"Unable to find an usable slave format for '%s'\", pcm->name);\n\t\t\tfor (format = 0; format <= SND_PCM_FORMAT_LAST; format++) {\n\t\t\t\tif (!snd_pcm_format_mask_test(format_mask, format))\n\t\t\t\t\tcontinue;\n",
                      "markdown": "`\t\t}\n\n\t\tif (snd_pcm_format_mask_empty(&sfmt_mask)) {\n\t\t\tSNDERR(\"Unable to find an usable slave format for '%s'\", pcm->name);\n\t\t\tfor (format = 0; format <= SND_PCM_FORMAT_LAST; format++) {\n\t\t\t\tif (!snd_pcm_format_mask_test(format_mask, format))\n\t\t\t\t\tcontinue;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_plug.c"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 1,
                  "endLine": 252,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tsgn = !sgn;\n\t\t}\n\t\ted = !ed;\n\t}\n\treturn SND_PCM_FORMAT_UNKNOWN;\n}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tsgn = !sgn;\n\t\t}\n\t\ted = !ed;\n\t}\n\treturn SND_PCM_FORMAT_UNKNOWN;\n}\n",
                      "markdown": "`\t\t\t}\n\t\t\tsgn = !sgn;\n\t\t}\n\t\ted = !ed;\n\t}\n\treturn SND_PCM_FORMAT_UNKNOWN;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_plug.c"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7,
                  "endLine": 33,
                  "snippet": {
                    "text": "#include \"pcm_local.h\"\n#include \"pcm_plugin.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_plug = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"pcm_local.h\"\n#include \"pcm_plugin.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_plug = \"\";\n#endif\n\n",
                      "markdown": "`#include \"pcm_local.h\"\n#include \"pcm_plugin.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_plug = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_dshare.c"
                },
                "region": {
                  "startLine": 170,
                  "endLine": 170,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\told_slave_hw_ptr = dshare->slave_hw_ptr;\n\tdshare->slave_hw_ptr = slave_hw_ptr;\n\tdiff = pcm_frame_diff(slave_hw_ptr, old_slave_hw_ptr, dshare->slave_boundary);\n\tif (diff == 0)\t\t/* fast path */\n\t\treturn 0;\n\tif (dshare->state != SND_PCM_STATE_RUNNING &&\n",
                    "rendered": {
                      "text": "\n\told_slave_hw_ptr = dshare->slave_hw_ptr;\n\tdshare->slave_hw_ptr = slave_hw_ptr;\n\tdiff = pcm_frame_diff(slave_hw_ptr, old_slave_hw_ptr, dshare->slave_boundary);\n\tif (diff == 0)\t\t/* fast path */\n\t\treturn 0;\n\tif (dshare->state != SND_PCM_STATE_RUNNING &&\n",
                      "markdown": "`\n\told_slave_hw_ptr = dshare->slave_hw_ptr;\n\tdshare->slave_hw_ptr = slave_hw_ptr;\n\tdiff = pcm_frame_diff(slave_hw_ptr, old_slave_hw_ptr, dshare->slave_boundary);\n\tif (diff == 0)\t\t/* fast path */\n\t\treturn 0;\n\tif (dshare->state != SND_PCM_STATE_RUNNING &&\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_dshare.c"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 7,
                  "endLine": 50,
                  "snippet": {
                    "text": "#include <sys/mman.h>\n#include \"pcm_direct.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_dshare = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <sys/mman.h>\n#include \"pcm_direct.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_dshare = \"\";\n#endif\n\n",
                      "markdown": "`#include <sys/mman.h>\n#include \"pcm_direct.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_dshare = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_hooks.c"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "#include \"pcm_local.h\"\n#include \"pcm_generic.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_hooks = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"pcm_local.h\"\n#include \"pcm_generic.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_hooks = \"\";\n#endif\n\n",
                      "markdown": "`#include \"pcm_local.h\"\n#include \"pcm_generic.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_hooks = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_route.c"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 7,
                  "endLine": 36,
                  "snippet": {
                    "text": "#include \"bswap.h\"\n#include <math.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_route = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"bswap.h\"\n#include <math.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_route = \"\";\n#endif\n\n",
                      "markdown": "`#include \"bswap.h\"\n#include <math.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_route = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ladspa.c"
                },
                "region": {
                  "startLine": 1278,
                  "startColumn": 28,
                  "endLine": 1278,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t\terr = snd_pcm_ladspa_find_sport(&port, lplug, io->pdesc | LADSPA_PORT_CONTROL, id);\n\t\t}\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find an control port (%s)\", id);\n\t\t\treturn err;\n\t\t}\n\t\tif (snd_config_get_ireal(n, &dval) < 0) {\n",
                    "rendered": {
                      "text": "\t\t\terr = snd_pcm_ladspa_find_sport(&port, lplug, io->pdesc | LADSPA_PORT_CONTROL, id);\n\t\t}\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find an control port (%s)\", id);\n\t\t\treturn err;\n\t\t}\n\t\tif (snd_config_get_ireal(n, &dval) < 0) {\n",
                      "markdown": "`\t\t\terr = snd_pcm_ladspa_find_sport(&port, lplug, io->pdesc | LADSPA_PORT_CONTROL, id);\n\t\t}\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find an control port (%s)\", id);\n\t\t\treturn err;\n\t\t}\n\t\tif (snd_config_get_ireal(n, &dval) < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ladspa.c"
                },
                "region": {
                  "startLine": 990,
                  "startColumn": 28,
                  "endLine": 990,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      __control:\n      \tif (io->controls_size == 0)\n      \t\treturn;\n\tsnd_output_printf(out, \"    Control %s port initial values:\\n\", io->pdesc == LADSPA_PORT_INPUT ? \"input\" : \"output\");\n\tfor (idx = midx = 0; idx < plugin->desc->PortCount; idx++) {\n\t\tif ((plugin->desc->PortDescriptors[idx] & (io->pdesc | LADSPA_PORT_CONTROL)) == (io->pdesc | LADSPA_PORT_CONTROL)) {\n        \t\tsnd_output_printf(out, \"      %i \\\"%s\\\" = %.8f\\n\", idx, plugin->desc->PortNames[idx], io->controls[midx]);\n",
                    "rendered": {
                      "text": "      __control:\n      \tif (io->controls_size == 0)\n      \t\treturn;\n\tsnd_output_printf(out, \"    Control %s port initial values:\\n\", io->pdesc == LADSPA_PORT_INPUT ? \"input\" : \"output\");\n\tfor (idx = midx = 0; idx < plugin->desc->PortCount; idx++) {\n\t\tif ((plugin->desc->PortDescriptors[idx] & (io->pdesc | LADSPA_PORT_CONTROL)) == (io->pdesc | LADSPA_PORT_CONTROL)) {\n        \t\tsnd_output_printf(out, \"      %i \\\"%s\\\" = %.8f\\n\", idx, plugin->desc->PortNames[idx], io->controls[midx]);\n",
                      "markdown": "`      __control:\n      \tif (io->controls_size == 0)\n      \t\treturn;\n\tsnd_output_printf(out, \"    Control %s port initial values:\\n\", io->pdesc == LADSPA_PORT_INPUT ? \"input\" : \"output\");\n\tfor (idx = midx = 0; idx < plugin->desc->PortCount; idx++) {\n\t\tif ((plugin->desc->PortDescriptors[idx] & (io->pdesc | LADSPA_PORT_CONTROL)) == (io->pdesc | LADSPA_PORT_CONTROL)) {\n        \t\tsnd_output_printf(out, \"      %i \\\"%s\\\" = %.8f\\n\", idx, plugin->desc->PortNames[idx], io->controls[midx]);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ladspa.c"
                },
                "region": {
                  "startLine": 1509,
                  "startColumn": 20,
                  "endLine": 1509,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t} else {\n\t\terr = snd_pcm_ladspa_look_for_plugin(lplug, path, label, ladspa_id);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find or load plugin '%s' ID %li, path '%s'\", label, ladspa_id, path);\n\t\t\tfree(lplug);\n\t\t\treturn err;\n\t\t}\n",
                    "rendered": {
                      "text": "\t} else {\n\t\terr = snd_pcm_ladspa_look_for_plugin(lplug, path, label, ladspa_id);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find or load plugin '%s' ID %li, path '%s'\", label, ladspa_id, path);\n\t\t\tfree(lplug);\n\t\t\treturn err;\n\t\t}\n",
                      "markdown": "`\t} else {\n\t\terr = snd_pcm_ladspa_look_for_plugin(lplug, path, label, ladspa_id);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find or load plugin '%s' ID %li, path '%s'\", label, ladspa_id, path);\n\t\t\tfree(lplug);\n\t\t\treturn err;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ladspa.c"
                },
                "region": {
                  "startLine": 1362,
                  "startColumn": 21,
                  "endLine": 1362,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\terr = snd_pcm_ladspa_find_sport(&array[channel], lplug, io->pdesc | LADSPA_PORT_AUDIO, sport);\n\t\t\tif (err < 0) {\n\t\t\t\tSNDERR(\"Unable to find an audio port (%s) for channel %s\", sport, id);\n\t\t\t\treturn err;\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\terr = snd_pcm_ladspa_find_sport(&array[channel], lplug, io->pdesc | LADSPA_PORT_AUDIO, sport);\n\t\t\tif (err < 0) {\n\t\t\t\tSNDERR(\"Unable to find an audio port (%s) for channel %s\", sport, id);\n\t\t\t\treturn err;\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\t\t\t}\n\t\t\terr = snd_pcm_ladspa_find_sport(&array[channel], lplug, io->pdesc | LADSPA_PORT_AUDIO, sport);\n\t\t\tif (err < 0) {\n\t\t\t\tSNDERR(\"Unable to find an audio port (%s) for channel %s\", sport, id);\n\t\t\t\treturn err;\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ladspa.c"
                },
                "region": {
                  "startLine": 1350,
                  "startColumn": 22,
                  "endLine": 1350,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t\tif (err >= 0) {\n\t\t\t\terr = snd_pcm_ladspa_find_port(&array[channel], lplug, io->pdesc | LADSPA_PORT_AUDIO, port);\n\t\t\t\tif (err < 0) {\n\t\t\t\t\tSNDERR(\"Unable to find an audio port (%li) for channel %s\", port, id);\n\t\t\t\t\treturn err;\n\t\t\t\t}\n\t\t\t\tcontinue;\n",
                    "rendered": {
                      "text": "\t\t\tif (err >= 0) {\n\t\t\t\terr = snd_pcm_ladspa_find_port(&array[channel], lplug, io->pdesc | LADSPA_PORT_AUDIO, port);\n\t\t\t\tif (err < 0) {\n\t\t\t\t\tSNDERR(\"Unable to find an audio port (%li) for channel %s\", port, id);\n\t\t\t\t\treturn err;\n\t\t\t\t}\n\t\t\t\tcontinue;\n",
                      "markdown": "`\t\t\tif (err >= 0) {\n\t\t\t\terr = snd_pcm_ladspa_find_port(&array[channel], lplug, io->pdesc | LADSPA_PORT_AUDIO, port);\n\t\t\t\tif (err < 0) {\n\t\t\t\t\tSNDERR(\"Unable to find an audio port (%li) for channel %s\", port, id);\n\t\t\t\t\treturn err;\n\t\t\t\t}\n\t\t\t\tcontinue;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ladspa.c"
                },
                "region": {
                  "startLine": 1278,
                  "startColumn": 20,
                  "endLine": 1278,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\terr = snd_pcm_ladspa_find_sport(&port, lplug, io->pdesc | LADSPA_PORT_CONTROL, id);\n\t\t}\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find an control port (%s)\", id);\n\t\t\treturn err;\n\t\t}\n\t\tif (snd_config_get_ireal(n, &dval) < 0) {\n",
                    "rendered": {
                      "text": "\t\t\terr = snd_pcm_ladspa_find_sport(&port, lplug, io->pdesc | LADSPA_PORT_CONTROL, id);\n\t\t}\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find an control port (%s)\", id);\n\t\t\treturn err;\n\t\t}\n\t\tif (snd_config_get_ireal(n, &dval) < 0) {\n",
                      "markdown": "`\t\t\terr = snd_pcm_ladspa_find_sport(&port, lplug, io->pdesc | LADSPA_PORT_CONTROL, id);\n\t\t}\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to find an control port (%s)\", id);\n\t\t\treturn err;\n\t\t}\n\t\tif (snd_config_get_ireal(n, &dval) < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ladspa.c"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 27,
                  "endLine": 472,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t} else {\n\t\terr = snd_pcm_ladspa_find_port(&port, plugin, io->pdesc | LADSPA_PORT_AUDIO, 0);\n\t\tif (err < 0) {\n\t\t        SNDERR(\"unable to find audio %s port %u plugin '%s'\", io->pdesc & LADSPA_PORT_INPUT ? \"input\" : \"output\", (unsigned int)0, plugin->desc->Name);\n\t\t\treturn err;\n                }\n\t}\n",
                    "rendered": {
                      "text": "\t} else {\n\t\terr = snd_pcm_ladspa_find_port(&port, plugin, io->pdesc | LADSPA_PORT_AUDIO, 0);\n\t\tif (err < 0) {\n\t\t        SNDERR(\"unable to find audio %s port %u plugin '%s'\", io->pdesc & LADSPA_PORT_INPUT ? \"input\" : \"output\", (unsigned int)0, plugin->desc->Name);\n\t\t\treturn err;\n                }\n\t}\n",
                      "markdown": "`\t} else {\n\t\terr = snd_pcm_ladspa_find_port(&port, plugin, io->pdesc | LADSPA_PORT_AUDIO, 0);\n\t\tif (err < 0) {\n\t\t        SNDERR(\"unable to find audio %s port %u plugin '%s'\", io->pdesc & LADSPA_PORT_INPUT ? \"input\" : \"output\", (unsigned int)0, plugin->desc->Name);\n\t\t\treturn err;\n                }\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ladspa.c"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 35,
                  "endLine": 423,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                else {\n        \t\terr = snd_pcm_ladspa_find_port(&port, plugin, io->pdesc | LADSPA_PORT_AUDIO, idx);\n        \t\tif (err < 0) {\n        \t\t        SNDERR(\"unable to find audio %s port %u plugin '%s'\", io->pdesc & LADSPA_PORT_INPUT ? \"input\" : \"output\", idx, plugin->desc->Name);\n        \t\t\treturn err;\n                        }\n                }\n",
                    "rendered": {
                      "text": "                else {\n        \t\terr = snd_pcm_ladspa_find_port(&port, plugin, io->pdesc | LADSPA_PORT_AUDIO, idx);\n        \t\tif (err < 0) {\n        \t\t        SNDERR(\"unable to find audio %s port %u plugin '%s'\", io->pdesc & LADSPA_PORT_INPUT ? \"input\" : \"output\", idx, plugin->desc->Name);\n        \t\t\treturn err;\n                        }\n                }\n",
                      "markdown": "`                else {\n        \t\terr = snd_pcm_ladspa_find_port(&port, plugin, io->pdesc | LADSPA_PORT_AUDIO, idx);\n        \t\tif (err < 0) {\n        \t\t        SNDERR(\"unable to find audio %s port %u plugin '%s'\", io->pdesc & LADSPA_PORT_INPUT ? \"input\" : \"output\", idx, plugin->desc->Name);\n        \t\t\treturn err;\n                        }\n                }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ladspa.c"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 7,
                  "endLine": 44,
                  "snippet": {
                    "text": "\n#include \"ladspa.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_ladspa = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "\n#include \"ladspa.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_ladspa = \"\";\n#endif\n\n",
                      "markdown": "`\n#include \"ladspa.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_ladspa = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_direct.c"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 3,
                  "endLine": 407,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\tcontinue;\n\t\t\tret--;\n\t\t\tif (read(pfd->fd, &cmd, 1) == 1)\n\t\t\t\tcmd = 0 /*process command */;\n\t\t}\n\t\tfor (i = 0; i < current; i++) {\n\t\t\tif (pfds[i+1].fd < 0) {\n",
                    "rendered": {
                      "text": "\t\t\t\tcontinue;\n\t\t\tret--;\n\t\t\tif (read(pfd->fd, &cmd, 1) == 1)\n\t\t\t\tcmd = 0 /*process command */;\n\t\t}\n\t\tfor (i = 0; i < current; i++) {\n\t\t\tif (pfds[i+1].fd < 0) {\n",
                      "markdown": "`\t\t\t\tcontinue;\n\t\t\tret--;\n\t\t\tif (read(pfd->fd, &cmd, 1) == 1)\n\t\t\t\tcmd = 0 /*process command */;\n\t\t}\n\t\tfor (i = 0; i < current; i++) {\n\t\t\tif (pfds[i+1].fd < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_direct.c"
                },
                "region": {
                  "startLine": 1206,
                  "startColumn": 25,
                  "endLine": 1206,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n      __again:\n      \tif (loops-- <= 0) {\n      \t\tSNDERR(\"unable to find a valid configuration for slave\");\n      \t\treturn -EINVAL;\n      \t}\n\tret = snd_pcm_hw_params_any(spcm, &hw_params);\n",
                    "rendered": {
                      "text": "\n      __again:\n      \tif (loops-- <= 0) {\n      \t\tSNDERR(\"unable to find a valid configuration for slave\");\n      \t\treturn -EINVAL;\n      \t}\n\tret = snd_pcm_hw_params_any(spcm, &hw_params);\n",
                      "markdown": "`\n      __again:\n      \tif (loops-- <= 0) {\n      \t\tSNDERR(\"unable to find a valid configuration for slave\");\n      \t\treturn -EINVAL;\n      \t}\n\tret = snd_pcm_hw_params_any(spcm, &hw_params);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_shm.c"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 7,
                  "endLine": 50,
                  "snippet": {
                    "text": "#include <netdb.h>\n#include \"aserver.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_shm = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <netdb.h>\n#include \"aserver.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_shm = \"\";\n#endif\n\n",
                      "markdown": "`#include <netdb.h>\n#include \"aserver.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_shm = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_query.c"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 7,
                  "endLine": 109,
                  "snippet": {
                    "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_timer_query_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_timer_query_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n",
                    "rendered": {
                      "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_timer_query_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_timer_query_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n",
                      "markdown": "`\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_timer_query_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_timer_query_open_symbols();\n#endif\n\th = INTERNAL(snd_dlopen)(lib, RTLD_NOW, errbuf, sizeof(errbuf));\n\tif (h)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_query.c"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 7,
                  "endLine": 44,
                  "snippet": {
                    "text": "\tconst char *id;\n\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_timer_query_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_timer_query_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(timer_conf) != SND_CONFIG_TYPE_COMPOUND) {\n",
                    "rendered": {
                      "text": "\tconst char *id;\n\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_timer_query_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_timer_query_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(timer_conf) != SND_CONFIG_TYPE_COMPOUND) {\n",
                      "markdown": "`\tconst char *id;\n\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_timer_query_t **, const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_timer_query_open_symbols(void);\n#endif\n\tvoid *h = NULL;\n\tif (snd_config_get_type(timer_conf) != SND_CONFIG_TYPE_COMPOUND) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/timer/timer_symbols.c"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 22,
                  "snippet": {
                    "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_timer_hw;\n\nstatic const char **snd_timer_open_objects[] = {\n",
                    "rendered": {
                      "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_timer_hw;\n\nstatic const char **snd_timer_open_objects[] = {\n",
                      "markdown": "` *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_timer_hw;\n\nstatic const char **snd_timer_open_objects[] = {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq_midi_event.c"
                },
                "region": {
                  "startLine": 713,
                  "endLine": 713,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\treturn -ENOMEM;\n\tif (dev->nostat && count < 12)\n\t\treturn -ENOMEM;\n\tcmd = MIDI_CMD_CONTROL|(ev->data.control.channel & 0x0f);\n\tbytes[0] = (ev->data.control.param & 0x3f80) >> 7;\n\tbytes[1] = ev->data.control.param & 0x007f;\n\tbytes[2] = (ev->data.control.value & 0x3f80) >> 7;\n",
                    "rendered": {
                      "text": "\t\treturn -ENOMEM;\n\tif (dev->nostat && count < 12)\n\t\treturn -ENOMEM;\n\tcmd = MIDI_CMD_CONTROL|(ev->data.control.channel & 0x0f);\n\tbytes[0] = (ev->data.control.param & 0x3f80) >> 7;\n\tbytes[1] = ev->data.control.param & 0x007f;\n\tbytes[2] = (ev->data.control.value & 0x3f80) >> 7;\n",
                      "markdown": "`\t\treturn -ENOMEM;\n\tif (dev->nostat && count < 12)\n\t\treturn -ENOMEM;\n\tcmd = MIDI_CMD_CONTROL|(ev->data.control.channel & 0x0f);\n\tbytes[0] = (ev->data.control.param & 0x3f80) >> 7;\n\tbytes[1] = ev->data.control.param & 0x007f;\n\tbytes[2] = (ev->data.control.value & 0x3f80) >> 7;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq_midi_event.c"
                },
                "region": {
                  "startLine": 662,
                  "endLine": 662,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tunsigned char cmd;\n\tint idx = 0;\n\n\tcmd = MIDI_CMD_CONTROL|(ev->data.control.channel & 0x0f);\n\tif (ev->data.control.param < 32) {\n\t\tif (count < 4)\n\t\t\treturn -ENOMEM;\n",
                    "rendered": {
                      "text": "\tunsigned char cmd;\n\tint idx = 0;\n\n\tcmd = MIDI_CMD_CONTROL|(ev->data.control.channel & 0x0f);\n\tif (ev->data.control.param < 32) {\n\t\tif (count < 4)\n\t\t\treturn -ENOMEM;\n",
                      "markdown": "`\tunsigned char cmd;\n\tint idx = 0;\n\n\tcmd = MIDI_CMD_CONTROL|(ev->data.control.channel & 0x0f);\n\tif (ev->data.control.param < 32) {\n\t\tif (count < 4)\n\t\t\treturn -ENOMEM;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq_midi_event.c"
                },
                "region": {
                  "startLine": 600,
                  "startColumn": 45,
                  "endLine": 600,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t} else {\n\t\tunsigned char xbuf[4];\n\n\t\tif ((cmd & 0xf0) == 0xf0 || dev->lastcmd != cmd || dev->nostat) {\n\t\t\tdev->lastcmd = cmd;\n\t\t\txbuf[0] = cmd;\n\t\t\tif (status_event[type].decode)\n",
                    "rendered": {
                      "text": "\t} else {\n\t\tunsigned char xbuf[4];\n\n\t\tif ((cmd & 0xf0) == 0xf0 || dev->lastcmd != cmd || dev->nostat) {\n\t\t\tdev->lastcmd = cmd;\n\t\t\txbuf[0] = cmd;\n\t\t\tif (status_event[type].decode)\n",
                      "markdown": "`\t} else {\n\t\tunsigned char xbuf[4];\n\n\t\tif ((cmd & 0xf0) == 0xf0 || dev->lastcmd != cmd || dev->nostat) {\n\t\t\tdev->lastcmd = cmd;\n\t\t\txbuf[0] = cmd;\n\t\t\tif (status_event[type].decode)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq_midi_event.c"
                },
                "region": {
                  "startLine": 583,
                  "startColumn": 1,
                  "endLine": 583,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tcmd = 0xf0 + (type - ST_SPECIAL);\n\telse\n\t\t/* data.note.channel and data.control.channel is identical */\n\t\tcmd = 0x80 | (type << 4) | (ev->data.note.channel & 0x0f);\n\n\n\tif (cmd == MIDI_CMD_COMMON_SYSEX) {\n",
                    "rendered": {
                      "text": "\t\tcmd = 0xf0 + (type - ST_SPECIAL);\n\telse\n\t\t/* data.note.channel and data.control.channel is identical */\n\t\tcmd = 0x80 | (type << 4) | (ev->data.note.channel & 0x0f);\n\n\n\tif (cmd == MIDI_CMD_COMMON_SYSEX) {\n",
                      "markdown": "`\t\tcmd = 0xf0 + (type - ST_SPECIAL);\n\telse\n\t\t/* data.note.channel and data.control.channel is identical */\n\t\tcmd = 0x80 | (type << 4) | (ev->data.note.channel & 0x0f);\n\n\n\tif (cmd == MIDI_CMD_COMMON_SYSEX) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/seq/seq_midi_event.c"
                },
                "region": {
                  "startLine": 580,
                  "startColumn": 1,
                  "endLine": 580,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n      __found:\n\tif (type >= ST_SPECIAL)\n\t\tcmd = 0xf0 + (type - ST_SPECIAL);\n\telse\n\t\t/* data.note.channel and data.control.channel is identical */\n\t\tcmd = 0x80 | (type << 4) | (ev->data.note.channel & 0x0f);\n",
                    "rendered": {
                      "text": "\n      __found:\n\tif (type >= ST_SPECIAL)\n\t\tcmd = 0xf0 + (type - ST_SPECIAL);\n\telse\n\t\t/* data.note.channel and data.control.channel is identical */\n\t\tcmd = 0x80 | (type << 4) | (ev->data.note.channel & 0x0f);\n",
                      "markdown": "`\n      __found:\n\tif (type >= ST_SPECIAL)\n\t\tcmd = 0xf0 + (type - ST_SPECIAL);\n\telse\n\t\t/* data.note.channel and data.control.channel is identical */\n\t\tcmd = 0x80 | (type << 4) | (ev->data.note.channel & 0x0f);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/async.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 19,
                  "endLine": 46,
                  "endColumn": 25,
                  "snippet": {
                    "text": "{\n\tsnd_async_signo = __libc_allocate_rtsig(0);\n\tif (snd_async_signo < 0) {\n\t\tSNDERR(\"Unable to find a RT signal to use for snd_async\");\n\t\texit(1);\n\t}\n}\n",
                    "rendered": {
                      "text": "{\n\tsnd_async_signo = __libc_allocate_rtsig(0);\n\tif (snd_async_signo < 0) {\n\t\tSNDERR(\"Unable to find a RT signal to use for snd_async\");\n\t\texit(1);\n\t}\n}\n",
                      "markdown": "`{\n\tsnd_async_signo = __libc_allocate_rtsig(0);\n\tif (snd_async_signo < 0) {\n\t\tSNDERR(\"Unable to find a RT signal to use for snd_async\");\n\t\texit(1);\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4622,
                  "startColumn": 2,
                  "endLine": 4622,
                  "endColumn": 10,
                  "snippet": {
                    "text": " \t*_update = NULL;\n \tif (update) {\n \t\tsnd_config_update_free(update);\n \t\tupdate = NULL;\n \t}\n\tif (top) {\n\t\tsnd_config_delete(top);\n",
                    "rendered": {
                      "text": " \t*_update = NULL;\n \tif (update) {\n \t\tsnd_config_update_free(update);\n \t\tupdate = NULL;\n \t}\n\tif (top) {\n\t\tsnd_config_delete(top);\n",
                      "markdown": "` \t*_update = NULL;\n \tif (update) {\n \t\tsnd_config_update_free(update);\n \t\tupdate = NULL;\n \t}\n\tif (top) {\n\t\tsnd_config_delete(top);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4527,
                  "endLine": 4527,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\n\tassert(_top && _update);\n\ttop = *_top;\n\tupdate = *_update;\n\tconfigs = cfgs;\n\tif (!configs) {\n\t\tconfigs = getenv(ALSA_CONFIG_PATH_VAR);\n",
                    "rendered": {
                      "text": "\t\n\tassert(_top && _update);\n\ttop = *_top;\n\tupdate = *_update;\n\tconfigs = cfgs;\n\tif (!configs) {\n\t\tconfigs = getenv(ALSA_CONFIG_PATH_VAR);\n",
                      "markdown": "`\t\n\tassert(_top && _update);\n\ttop = *_top;\n\tupdate = *_update;\n\tconfigs = cfgs;\n\tif (!configs) {\n\t\tconfigs = getenv(ALSA_CONFIG_PATH_VAR);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4362,
                  "startColumn": 19,
                  "endLine": 4362,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tif (snd_config_search(config, \"table\", &n) < 0)\n\t\treturn 0;\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand table compound\");\n\t\treturn err;\n\t}\n\tif (snd_config_search(n, \"id\", &tn) < 0 ||\n",
                    "rendered": {
                      "text": "\tif (snd_config_search(config, \"table\", &n) < 0)\n\t\treturn 0;\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand table compound\");\n\t\treturn err;\n\t}\n\tif (snd_config_search(n, \"id\", &tn) < 0 ||\n",
                      "markdown": "`\tif (snd_config_search(config, \"table\", &n) < 0)\n\t\treturn 0;\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand table compound\");\n\t\treturn err;\n\t}\n\tif (snd_config_search(n, \"id\", &tn) < 0 ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4280,
                  "startColumn": 19,
                  "endLine": 4280,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\treturn -EINVAL;\n\t}\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand filenames in the pre-load section\");\n\t\treturn err;\n\t}\n\tif (snd_config_get_type(n) != SND_CONFIG_TYPE_COMPOUND) {\n",
                    "rendered": {
                      "text": "\t\treturn -EINVAL;\n\t}\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand filenames in the pre-load section\");\n\t\treturn err;\n\t}\n\tif (snd_config_get_type(n) != SND_CONFIG_TYPE_COMPOUND) {\n",
                      "markdown": "`\t\treturn -EINVAL;\n\t}\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand filenames in the pre-load section\");\n\t\treturn err;\n\t}\n\tif (snd_config_get_type(n) != SND_CONFIG_TYPE_COMPOUND) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4626,
                  "startColumn": 1,
                  "endLine": 4626,
                  "endColumn": 6,
                  "snippet": {
                    "text": " \t}\n\tif (top) {\n\t\tsnd_config_delete(top);\n\t\ttop = NULL;\n\t}\n\terr = snd_config_top(&top);\n\tif (err < 0)\n",
                    "rendered": {
                      "text": " \t}\n\tif (top) {\n\t\tsnd_config_delete(top);\n\t\ttop = NULL;\n\t}\n\terr = snd_config_top(&top);\n\tif (err < 0)\n",
                      "markdown": "` \t}\n\tif (top) {\n\t\tsnd_config_delete(top);\n\t\ttop = NULL;\n\t}\n\terr = snd_config_top(&top);\n\tif (err < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4526,
                  "endLine": 4526,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tsnd_config_t *top;\n\t\n\tassert(_top && _update);\n\ttop = *_top;\n\tupdate = *_update;\n\tconfigs = cfgs;\n\tif (!configs) {\n",
                    "rendered": {
                      "text": "\tsnd_config_t *top;\n\t\n\tassert(_top && _update);\n\ttop = *_top;\n\tupdate = *_update;\n\tconfigs = cfgs;\n\tif (!configs) {\n",
                      "markdown": "`\tsnd_config_t *top;\n\t\n\tassert(_top && _update);\n\ttop = *_top;\n\tupdate = *_update;\n\tconfigs = cfgs;\n\tif (!configs) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4373,
                  "startColumn": 19,
                  "endLine": 4373,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t}\n\tif (snd_config_search(n, \"value\", &tn) < 0 ||\n\t    snd_config_get_type(tn) != SND_CONFIG_TYPE_STRING) {\n\t\tSNDERR(\"Unable to find field table.value\");\n\t\tsnd_config_delete(n);\n\t\treturn -EINVAL;\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\tif (snd_config_search(n, \"value\", &tn) < 0 ||\n\t    snd_config_get_type(tn) != SND_CONFIG_TYPE_STRING) {\n\t\tSNDERR(\"Unable to find field table.value\");\n\t\tsnd_config_delete(n);\n\t\treturn -EINVAL;\n\t}\n",
                      "markdown": "`\t}\n\tif (snd_config_search(n, \"value\", &tn) < 0 ||\n\t    snd_config_get_type(tn) != SND_CONFIG_TYPE_STRING) {\n\t\tSNDERR(\"Unable to find field table.value\");\n\t\tsnd_config_delete(n);\n\t\treturn -EINVAL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4367,
                  "startColumn": 19,
                  "endLine": 4367,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t}\n\tif (snd_config_search(n, \"id\", &tn) < 0 ||\n\t    snd_config_get_string(tn, &id) < 0) {\n\t\tSNDERR(\"Unable to find field table.id\");\n\t\tsnd_config_delete(n);\n\t\treturn -EINVAL;\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\tif (snd_config_search(n, \"id\", &tn) < 0 ||\n\t    snd_config_get_string(tn, &id) < 0) {\n\t\tSNDERR(\"Unable to find field table.id\");\n\t\tsnd_config_delete(n);\n\t\treturn -EINVAL;\n\t}\n",
                      "markdown": "`\t}\n\tif (snd_config_search(n, \"id\", &tn) < 0 ||\n\t    snd_config_get_string(tn, &id) < 0) {\n\t\tSNDERR(\"Unable to find field table.id\");\n\t\tsnd_config_delete(n);\n\t\treturn -EINVAL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4362,
                  "startColumn": 19,
                  "endLine": 4362,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tif (snd_config_search(config, \"table\", &n) < 0)\n\t\treturn 0;\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand table compound\");\n\t\treturn err;\n\t}\n\tif (snd_config_search(n, \"id\", &tn) < 0 ||\n",
                    "rendered": {
                      "text": "\tif (snd_config_search(config, \"table\", &n) < 0)\n\t\treturn 0;\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand table compound\");\n\t\treturn err;\n\t}\n\tif (snd_config_search(n, \"id\", &tn) < 0 ||\n",
                      "markdown": "`\tif (snd_config_search(config, \"table\", &n) < 0)\n\t\treturn 0;\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand table compound\");\n\t\treturn err;\n\t}\n\tif (snd_config_search(n, \"id\", &tn) < 0 ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4280,
                  "startColumn": 19,
                  "endLine": 4280,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\treturn -EINVAL;\n\t}\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand filenames in the pre-load section\");\n\t\treturn err;\n\t}\n\tif (snd_config_get_type(n) != SND_CONFIG_TYPE_COMPOUND) {\n",
                    "rendered": {
                      "text": "\t\treturn -EINVAL;\n\t}\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand filenames in the pre-load section\");\n\t\treturn err;\n\t}\n\tif (snd_config_get_type(n) != SND_CONFIG_TYPE_COMPOUND) {\n",
                      "markdown": "`\t\treturn -EINVAL;\n\t}\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n\t\tSNDERR(\"Unable to expand filenames in the pre-load section\");\n\t\treturn err;\n\t}\n\tif (snd_config_get_type(n) != SND_CONFIG_TYPE_COMPOUND) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 4276,
                  "startColumn": 19,
                  "endLine": 4276,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\tif ((err = snd_config_search(config, \"files\", &n)) < 0) {\n\t\tSNDERR(\"Unable to find field files in the pre-load section\");\n\t\treturn -EINVAL;\n\t}\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\tif ((err = snd_config_search(config, \"files\", &n)) < 0) {\n\t\tSNDERR(\"Unable to find field files in the pre-load section\");\n\t\treturn -EINVAL;\n\t}\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n",
                      "markdown": "`\t\t}\n\t}\n\tif ((err = snd_config_search(config, \"files\", &n)) < 0) {\n\t\tSNDERR(\"Unable to find field files in the pre-load section\");\n\t\treturn -EINVAL;\n\t}\n\tif ((err = snd_config_expand(n, root, NULL, private_data, &n)) < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf.c"
                },
                "region": {
                  "startLine": 1851,
                  "startColumn": 1,
                  "endLine": 1851,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\treturn -EINVAL;\n\tidx = 0;\n\tsnd_config_for_each(i, next, config) {\n\t\tnode = snd_config_iterator_entry(i);\n\t\tif (!check_array_item(node->id, idx))\n\t\t\treturn 0;\n\t\tidx++;\n",
                    "rendered": {
                      "text": "\t\treturn -EINVAL;\n\tidx = 0;\n\tsnd_config_for_each(i, next, config) {\n\t\tnode = snd_config_iterator_entry(i);\n\t\tif (!check_array_item(node->id, idx))\n\t\t\treturn 0;\n\t\tidx++;\n",
                      "markdown": "`\t\treturn -EINVAL;\n\tidx = 0;\n\tsnd_config_for_each(i, next, config) {\n\t\tnode = snd_config_iterator_entry(i);\n\t\tif (!check_array_item(node->id, idx))\n\t\t\treturn 0;\n\t\tidx++;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confmisc.c"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 14,
                  "endLine": 42,
                  "endColumn": 42,
                  "snippet": {
                    "text": "<UL>\n  <LI>The getenv function - snd_func_getenv() - obtains\n      an environment value. The result is a string.\n  <LI>The igetenv function - snd_func_igetenv() - obtains\n      an environment value. The result is an integer.\n  <LI>The concat function - snd_func_concat() - merges all specified\n      strings. The result is a string.\n",
                    "rendered": {
                      "text": "<UL>\n  <LI>The getenv function - snd_func_getenv() - obtains\n      an environment value. The result is a string.\n  <LI>The igetenv function - snd_func_igetenv() - obtains\n      an environment value. The result is an integer.\n  <LI>The concat function - snd_func_concat() - merges all specified\n      strings. The result is a string.\n",
                      "markdown": "`<UL>\n  <LI>The getenv function - snd_func_getenv() - obtains\n      an environment value. The result is a string.\n  <LI>The igetenv function - snd_func_igetenv() - obtains\n      an environment value. The result is an integer.\n  <LI>The concat function - snd_func_concat() - merges all specified\n      strings. The result is a string.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confmisc.c"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 13,
                  "endLine": 40,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\\section conffunc_ref Function reference\n\n<UL>\n  <LI>The getenv function - snd_func_getenv() - obtains\n      an environment value. The result is a string.\n  <LI>The igetenv function - snd_func_igetenv() - obtains\n      an environment value. The result is an integer.\n",
                    "rendered": {
                      "text": "\\section conffunc_ref Function reference\n\n<UL>\n  <LI>The getenv function - snd_func_getenv() - obtains\n      an environment value. The result is a string.\n  <LI>The igetenv function - snd_func_igetenv() - obtains\n      an environment value. The result is an integer.\n",
                      "markdown": "`\\section conffunc_ref Function reference\n\n<UL>\n  <LI>The getenv function - snd_func_getenv() - obtains\n      an environment value. The result is a string.\n  <LI>The igetenv function - snd_func_igetenv() - obtains\n      an environment value. The result is an integer.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confmisc.c"
                },
                "region": {
                  "startLine": 1200,
                  "startColumn": 25,
                  "endLine": 1200,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\t\terr = open_ctl(card, &ctl);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"could not open control for card %i\", card);\n\t\t\tgoto __out;\n\t\t}\n\t\tdev = -1;\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\t\terr = open_ctl(card, &ctl);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"could not open control for card %i\", card);\n\t\t\tgoto __out;\n\t\t}\n\t\tdev = -1;\n",
                      "markdown": "`\t\t\tbreak;\n\t\terr = open_ctl(card, &ctl);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"could not open control for card %i\", card);\n\t\t\tgoto __out;\n\t\t}\n\t\tdev = -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confmisc.c"
                },
                "region": {
                  "startLine": 1105,
                  "startColumn": 24,
                  "endLine": 1105,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t}\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %li\", card);\n\t\tgoto __error;\n\t}\n\tsnd_pcm_info_set_device(&info, device);\n",
                    "rendered": {
                      "text": "\t}\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %li\", card);\n\t\tgoto __error;\n\t}\n\tsnd_pcm_info_set_device(&info, device);\n",
                      "markdown": "`\t}\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %li\", card);\n\t\tgoto __error;\n\t}\n\tsnd_pcm_info_set_device(&info, device);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confmisc.c"
                },
                "region": {
                  "startLine": 1013,
                  "startColumn": 24,
                  "endLine": 1013,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\treturn card;\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %i\", card);\n\t\tgoto __error;\n\t}\n\terr = snd_ctl_card_info(ctl, &info);\n",
                    "rendered": {
                      "text": "\t\treturn card;\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %i\", card);\n\t\tgoto __error;\n\t}\n\terr = snd_ctl_card_info(ctl, &info);\n",
                      "markdown": "`\t\treturn card;\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %i\", card);\n\t\tgoto __error;\n\t}\n\terr = snd_ctl_card_info(ctl, &info);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confmisc.c"
                },
                "region": {
                  "startLine": 962,
                  "startColumn": 24,
                  "endLine": 962,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\treturn card;\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %i\", card);\n\t\tgoto __error;\n\t}\n\terr = snd_ctl_card_info(ctl, &info);\n",
                    "rendered": {
                      "text": "\t\treturn card;\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %i\", card);\n\t\tgoto __error;\n\t}\n\terr = snd_ctl_card_info(ctl, &info);\n",
                      "markdown": "`\t\treturn card;\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %i\", card);\n\t\tgoto __error;\n\t}\n\terr = snd_ctl_card_info(ctl, &info);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confmisc.c"
                },
                "region": {
                  "startLine": 762,
                  "startColumn": 24,
                  "endLine": 762,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\tassert(card >= 0 && card <= SND_MAX_CARDS);\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %i\", card);\n\t\tgoto __error;\n\t}\n\terr = snd_ctl_card_info(ctl, &info);\n",
                    "rendered": {
                      "text": "\tassert(card >= 0 && card <= SND_MAX_CARDS);\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %i\", card);\n\t\tgoto __error;\n\t}\n\terr = snd_ctl_card_info(ctl, &info);\n",
                      "markdown": "`\tassert(card >= 0 && card <= SND_MAX_CARDS);\n\terr = open_ctl(card, &ctl);\n\tif (err < 0) {\n\t\tSNDERR(\"could not open control for card %i\", card);\n\t\tgoto __error;\n\t}\n\terr = snd_ctl_card_info(ctl, &info);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confmisc.c"
                },
                "region": {
                  "startLine": 1377,
                  "startColumn": 20,
                  "endLine": 1377,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t} else {\n\t\terr = snd_config_search(src, \"default\", &n);\n\t\tif (err < 0)\n\t\t\tSNDERR(\"Unable to find definition '%s'\", name);\n\t\telse {\n\t\t\tconst char *id;\n\t\t\terr = snd_config_evaluate(n, root, private_data, NULL);\n",
                    "rendered": {
                      "text": "\t} else {\n\t\terr = snd_config_search(src, \"default\", &n);\n\t\tif (err < 0)\n\t\t\tSNDERR(\"Unable to find definition '%s'\", name);\n\t\telse {\n\t\t\tconst char *id;\n\t\t\terr = snd_config_evaluate(n, root, private_data, NULL);\n",
                      "markdown": "`\t} else {\n\t\terr = snd_config_search(src, \"default\", &n);\n\t\tif (err < 0)\n\t\t\tSNDERR(\"Unable to find definition '%s'\", name);\n\t\telse {\n\t\t\tconst char *id;\n\t\t\terr = snd_config_evaluate(n, root, private_data, NULL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confmisc.c"
                },
                "region": {
                  "startLine": 855,
                  "startColumn": 16,
                  "endLine": 855,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t}\n\tcard = snd_card_get_index(str);\n\tif (card < 0)\n\t\tSNDERR(\"cannot find card '%s'\", str);\n\tfree(str);\n\treturn card;\n}\n",
                    "rendered": {
                      "text": "\t}\n\tcard = snd_card_get_index(str);\n\tif (card < 0)\n\t\tSNDERR(\"cannot find card '%s'\", str);\n\tfree(str);\n\treturn card;\n}\n",
                      "markdown": "`\t}\n\tcard = snd_card_get_index(str);\n\tif (card < 0)\n\t\tSNDERR(\"cannot find card '%s'\", str);\n\tfree(str);\n\treturn card;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/confeval.c"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 32,
                  "endLine": 150,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tif (c == '\\0')\n\t\t\tbreak;\n\t\tif (pos == END) {\n\t\t\tSNDERR(\"unexpected expression tail '%s'\", s);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tif (pos == OP) {\n",
                    "rendered": {
                      "text": "\t\tif (c == '\\0')\n\t\t\tbreak;\n\t\tif (pos == END) {\n\t\t\tSNDERR(\"unexpected expression tail '%s'\", s);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tif (pos == OP) {\n",
                      "markdown": "`\t\tif (c == '\\0')\n\t\t\tbreak;\n\t\tif (pos == END) {\n\t\t\tSNDERR(\"unexpected expression tail '%s'\", s);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tif (pos == OP) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/include/global.h"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 6,
                  "endLine": 59,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#define __STRING(x)     #x\n#endif\n\n#ifdef PIC /* dynamic build */\n\n/** \\hideinitializer \\brief Helper macro for #SND_DLSYM_BUILD_VERSION. */\n#define __SND_DLSYM_VERSION(name, version) _ ## name ## version\n",
                    "rendered": {
                      "text": "#define __STRING(x)     #x\n#endif\n\n#ifdef PIC /* dynamic build */\n\n/** \\hideinitializer \\brief Helper macro for #SND_DLSYM_BUILD_VERSION. */\n#define __SND_DLSYM_VERSION(name, version) _ ## name ## version\n",
                      "markdown": "`#define __STRING(x)     #x\n#endif\n\n#ifdef PIC /* dynamic build */\n\n/** \\hideinitializer \\brief Helper macro for #SND_DLSYM_BUILD_VERSION. */\n#define __SND_DLSYM_VERSION(name, version) _ ## name ## version\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/alsa.m4"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 42,
                  "endLine": 192,
                  "endColumn": 46,
                  "snippet": {
                    "text": "   ALSA_TOPOLOGY_LIBS=\"\"\nfi\n\ndnl add the alsa topology library; must be at the end\nAC_MSG_CHECKING(for ALSA topology LDFLAGS)\nif test \"x$alsa_topology_found\" = \"xyes\"; then\n  ALSA_TOPOLOGY_LIBS=\"$ALSA_TOPOLOGY_LIBS -latopology\"\n",
                    "rendered": {
                      "text": "   ALSA_TOPOLOGY_LIBS=\"\"\nfi\n\ndnl add the alsa topology library; must be at the end\nAC_MSG_CHECKING(for ALSA topology LDFLAGS)\nif test \"x$alsa_topology_found\" = \"xyes\"; then\n  ALSA_TOPOLOGY_LIBS=\"$ALSA_TOPOLOGY_LIBS -latopology\"\n",
                      "markdown": "`   ALSA_TOPOLOGY_LIBS=\"\"\nfi\n\ndnl add the alsa topology library; must be at the end\nAC_MSG_CHECKING(for ALSA topology LDFLAGS)\nif test \"x$alsa_topology_found\" = \"xyes\"; then\n  ALSA_TOPOLOGY_LIBS=\"$ALSA_TOPOLOGY_LIBS -latopology\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/alsa.m4"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 21,
                  "endLine": 179,
                  "endColumn": 26,
                  "snippet": {
                    "text": "if test \"x$alsa_found\" = \"xyes\" ; then\n   ifelse([$2], , :, [$2])\n   LIBS=`echo $LIBS | sed 's/-lasound//g'`\n   LIBS=`echo $LIBS | sed 's/  //'`\n   LIBS=\"-lasound $LIBS\"\nfi\nif test \"x$alsa_found\" = \"xno\" ; then\n",
                    "rendered": {
                      "text": "if test \"x$alsa_found\" = \"xyes\" ; then\n   ifelse([$2], , :, [$2])\n   LIBS=`echo $LIBS | sed 's/-lasound//g'`\n   LIBS=`echo $LIBS | sed 's/  //'`\n   LIBS=\"-lasound $LIBS\"\nfi\nif test \"x$alsa_found\" = \"xno\" ; then\n",
                      "markdown": "`if test \"x$alsa_found\" = \"xyes\" ; then\n   ifelse([$2], , :, [$2])\n   LIBS=`echo $LIBS | sed 's/-lasound//g'`\n   LIBS=`echo $LIBS | sed 's/  //'`\n   LIBS=\"-lasound $LIBS\"\nfi\nif test \"x$alsa_found\" = \"xno\" ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/alsa.m4"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 21,
                  "endLine": 178,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\nif test \"x$alsa_found\" = \"xyes\" ; then\n   ifelse([$2], , :, [$2])\n   LIBS=`echo $LIBS | sed 's/-lasound//g'`\n   LIBS=`echo $LIBS | sed 's/  //'`\n   LIBS=\"-lasound $LIBS\"\nfi\n",
                    "rendered": {
                      "text": "\nif test \"x$alsa_found\" = \"xyes\" ; then\n   ifelse([$2], , :, [$2])\n   LIBS=`echo $LIBS | sed 's/-lasound//g'`\n   LIBS=`echo $LIBS | sed 's/  //'`\n   LIBS=\"-lasound $LIBS\"\nfi\n",
                      "markdown": "`\nif test \"x$alsa_found\" = \"xyes\" ; then\n   ifelse([$2], , :, [$2])\n   LIBS=`echo $LIBS | sed 's/-lasound//g'`\n   LIBS=`echo $LIBS | sed 's/  //'`\n   LIBS=\"-lasound $LIBS\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/alsa.m4"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 10,
                  "endLine": 81,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    alsa_min_minor_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    alsa_min_micro_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\nAC_MSG_RESULT($alsa_min_major_version.$alsa_min_minor_version.$alsa_min_micro_version)\n\nAC_LANG_PUSH([C])\n",
                    "rendered": {
                      "text": "    alsa_min_minor_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    alsa_min_micro_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\nAC_MSG_RESULT($alsa_min_major_version.$alsa_min_minor_version.$alsa_min_micro_version)\n\nAC_LANG_PUSH([C])\n",
                      "markdown": "`    alsa_min_minor_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    alsa_min_micro_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\nAC_MSG_RESULT($alsa_min_major_version.$alsa_min_minor_version.$alsa_min_micro_version)\n\nAC_LANG_PUSH([C])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/alsa.m4"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 10,
                  "endLine": 79,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    alsa_min_major_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n    alsa_min_minor_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    alsa_min_micro_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\nAC_MSG_RESULT($alsa_min_major_version.$alsa_min_minor_version.$alsa_min_micro_version)\n",
                    "rendered": {
                      "text": "    alsa_min_major_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n    alsa_min_minor_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    alsa_min_micro_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\nAC_MSG_RESULT($alsa_min_major_version.$alsa_min_minor_version.$alsa_min_micro_version)\n",
                      "markdown": "`    alsa_min_major_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n    alsa_min_minor_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    alsa_min_micro_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\nAC_MSG_RESULT($alsa_min_major_version.$alsa_min_minor_version.$alsa_min_micro_version)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/alsa.m4"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 10,
                  "endLine": 77,
                  "endColumn": 15,
                  "snippet": {
                    "text": "min_alsa_version=ifelse([$1], , 0.1.1, $1)\nno_alsa=\"\"\n    alsa_min_major_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n    alsa_min_minor_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    alsa_min_micro_version=`echo $min_alsa_version | \\\n",
                    "rendered": {
                      "text": "min_alsa_version=ifelse([$1], , 0.1.1, $1)\nno_alsa=\"\"\n    alsa_min_major_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n    alsa_min_minor_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    alsa_min_micro_version=`echo $min_alsa_version | \\\n",
                      "markdown": "`min_alsa_version=ifelse([$1], , 0.1.1, $1)\nno_alsa=\"\"\n    alsa_min_major_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n    alsa_min_minor_version=`echo $min_alsa_version | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    alsa_min_micro_version=`echo $min_alsa_version | \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/latency.c"
                },
                "region": {
                  "startLine": 851,
                  "startColumn": 56,
                  "endLine": 851,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\t\tsnd_pcm_nonblock(phandle, !block ? 1 : 0);\n\t\tif (ok) {\n#if 1\n\t\t\tprintf(\"Playback time = %li.%i, Record time = %li.%i, diff = %li\\n\",\n\t\t\t       (long)p_tstamp.tv_sec,\n\t\t\t       (int)p_tstamp.tv_usec,\n\t\t\t       (long)c_tstamp.tv_sec,\n",
                    "rendered": {
                      "text": "\t\tsnd_pcm_nonblock(phandle, !block ? 1 : 0);\n\t\tif (ok) {\n#if 1\n\t\t\tprintf(\"Playback time = %li.%i, Record time = %li.%i, diff = %li\\n\",\n\t\t\t       (long)p_tstamp.tv_sec,\n\t\t\t       (int)p_tstamp.tv_usec,\n\t\t\t       (long)c_tstamp.tv_sec,\n",
                      "markdown": "`\t\tsnd_pcm_nonblock(phandle, !block ? 1 : 0);\n\t\tif (ok) {\n#if 1\n\t\t\tprintf(\"Playback time = %li.%i, Record time = %li.%i, diff = %li\\n\",\n\t\t\t       (long)p_tstamp.tv_sec,\n\t\t\t       (int)p_tstamp.tv_usec,\n\t\t\t       (long)c_tstamp.tv_sec,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/latency.c"
                },
                "region": {
                  "startLine": 851,
                  "startColumn": 41,
                  "endLine": 851,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\tsnd_pcm_nonblock(phandle, !block ? 1 : 0);\n\t\tif (ok) {\n#if 1\n\t\t\tprintf(\"Playback time = %li.%i, Record time = %li.%i, diff = %li\\n\",\n\t\t\t       (long)p_tstamp.tv_sec,\n\t\t\t       (int)p_tstamp.tv_usec,\n\t\t\t       (long)c_tstamp.tv_sec,\n",
                    "rendered": {
                      "text": "\t\tsnd_pcm_nonblock(phandle, !block ? 1 : 0);\n\t\tif (ok) {\n#if 1\n\t\t\tprintf(\"Playback time = %li.%i, Record time = %li.%i, diff = %li\\n\",\n\t\t\t       (long)p_tstamp.tv_sec,\n\t\t\t       (int)p_tstamp.tv_usec,\n\t\t\t       (long)c_tstamp.tv_sec,\n",
                      "markdown": "`\t\tsnd_pcm_nonblock(phandle, !block ? 1 : 0);\n\t\tif (ok) {\n#if 1\n\t\t\tprintf(\"Playback time = %li.%i, Record time = %li.%i, diff = %li\\n\",\n\t\t\t       (long)p_tstamp.tv_sec,\n\t\t\t       (int)p_tstamp.tv_usec,\n\t\t\t       (long)c_tstamp.tv_sec,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/latency.c"
                },
                "region": {
                  "startLine": 851,
                  "startColumn": 19,
                  "endLine": 851,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tsnd_pcm_nonblock(phandle, !block ? 1 : 0);\n\t\tif (ok) {\n#if 1\n\t\t\tprintf(\"Playback time = %li.%i, Record time = %li.%i, diff = %li\\n\",\n\t\t\t       (long)p_tstamp.tv_sec,\n\t\t\t       (int)p_tstamp.tv_usec,\n\t\t\t       (long)c_tstamp.tv_sec,\n",
                    "rendered": {
                      "text": "\t\tsnd_pcm_nonblock(phandle, !block ? 1 : 0);\n\t\tif (ok) {\n#if 1\n\t\t\tprintf(\"Playback time = %li.%i, Record time = %li.%i, diff = %li\\n\",\n\t\t\t       (long)p_tstamp.tv_sec,\n\t\t\t       (int)p_tstamp.tv_usec,\n\t\t\t       (long)c_tstamp.tv_sec,\n",
                      "markdown": "`\t\tsnd_pcm_nonblock(phandle, !block ? 1 : 0);\n\t\tif (ok) {\n#if 1\n\t\t\tprintf(\"Playback time = %li.%i, Record time = %li.%i, diff = %li\\n\",\n\t\t\t       (long)p_tstamp.tv_sec,\n\t\t\t       (int)p_tstamp.tv_usec,\n\t\t\t       (long)c_tstamp.tv_sec,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/latency.c"
                },
                "region": {
                  "startLine": 843,
                  "startColumn": 15,
                  "endLine": 843,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\tlong long mtime = frames_to_micro(frames_in);\n\t\t\tprintf(\"Elapsed real time: %lldus\\n\", diff);\n\t\t\tprintf(\"Elapsed device time: %lldus\\n\", mtime);\n\t\t\tprintf(\"Test time diff (device - real): %lldus\\n\", mtime - diff);\n\t\t}\n\t\tsnd_pcm_drop(chandle);\n\t\tsnd_pcm_nonblock(phandle, 0);\n",
                    "rendered": {
                      "text": "\t\t\tlong long mtime = frames_to_micro(frames_in);\n\t\t\tprintf(\"Elapsed real time: %lldus\\n\", diff);\n\t\t\tprintf(\"Elapsed device time: %lldus\\n\", mtime);\n\t\t\tprintf(\"Test time diff (device - real): %lldus\\n\", mtime - diff);\n\t\t}\n\t\tsnd_pcm_drop(chandle);\n\t\tsnd_pcm_nonblock(phandle, 0);\n",
                      "markdown": "`\t\t\tlong long mtime = frames_to_micro(frames_in);\n\t\t\tprintf(\"Elapsed real time: %lldus\\n\", diff);\n\t\t\tprintf(\"Elapsed device time: %lldus\\n\", mtime);\n\t\t\tprintf(\"Test time diff (device - real): %lldus\\n\", mtime - diff);\n\t\t}\n\t\tsnd_pcm_drop(chandle);\n\t\tsnd_pcm_nonblock(phandle, 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/latency.c"
                },
                "region": {
                  "startLine": 839,
                  "startColumn": 12,
                  "endLine": 839,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t    p_tstamp.tv_usec == c_tstamp.tv_usec)\n\t\t\tprintf(\"Hardware sync\\n\");\n\t\tif (realtime_check) {\n\t\t\tlong long diff = timestamp_diff_micro(&tstamp_start);\n\t\t\tlong long mtime = frames_to_micro(frames_in);\n\t\t\tprintf(\"Elapsed real time: %lldus\\n\", diff);\n\t\t\tprintf(\"Elapsed device time: %lldus\\n\", mtime);\n",
                    "rendered": {
                      "text": "\t\t    p_tstamp.tv_usec == c_tstamp.tv_usec)\n\t\t\tprintf(\"Hardware sync\\n\");\n\t\tif (realtime_check) {\n\t\t\tlong long diff = timestamp_diff_micro(&tstamp_start);\n\t\t\tlong long mtime = frames_to_micro(frames_in);\n\t\t\tprintf(\"Elapsed real time: %lldus\\n\", diff);\n\t\t\tprintf(\"Elapsed device time: %lldus\\n\", mtime);\n",
                      "markdown": "`\t\t    p_tstamp.tv_usec == c_tstamp.tv_usec)\n\t\t\tprintf(\"Hardware sync\\n\");\n\t\tif (realtime_check) {\n\t\t\tlong long diff = timestamp_diff_micro(&tstamp_start);\n\t\t\tlong long mtime = frames_to_micro(frames_in);\n\t\t\tprintf(\"Elapsed real time: %lldus\\n\", diff);\n\t\t\tprintf(\"Elapsed device time: %lldus\\n\", mtime);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/latency.c"
                },
                "region": {
                  "startLine": 806,
                  "startColumn": 14,
                  "endLine": 806,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t\tif (pbk_fill >= 0 && pbk_fill < pbk_fill_min)\n\t\t\t\t\tpbk_fill_min = pbk_fill;\n\t\t\t\tif (realtime_check) {\n\t\t\t\t\tlong long diff = timestamp_diff_micro(&tstamp_start);\n\t\t\t\t\tlong long cap_pos = frames_to_micro(frames_in + cap_avail);\n\t\t\t\t\tlong long pbk_pos = frames_to_micro(frames_out - pbk_fill);\n\t\t\t\t\tprintf(\"[%lldus] POS: p=%zd (min=%zd, rt=%lldus) c=%zd (max=%zd, rt=%lldus)\\n\",\n",
                    "rendered": {
                      "text": "\t\t\t\tif (pbk_fill >= 0 && pbk_fill < pbk_fill_min)\n\t\t\t\t\tpbk_fill_min = pbk_fill;\n\t\t\t\tif (realtime_check) {\n\t\t\t\t\tlong long diff = timestamp_diff_micro(&tstamp_start);\n\t\t\t\t\tlong long cap_pos = frames_to_micro(frames_in + cap_avail);\n\t\t\t\t\tlong long pbk_pos = frames_to_micro(frames_out - pbk_fill);\n\t\t\t\t\tprintf(\"[%lldus] POS: p=%zd (min=%zd, rt=%lldus) c=%zd (max=%zd, rt=%lldus)\\n\",\n",
                      "markdown": "`\t\t\t\tif (pbk_fill >= 0 && pbk_fill < pbk_fill_min)\n\t\t\t\t\tpbk_fill_min = pbk_fill;\n\t\t\t\tif (realtime_check) {\n\t\t\t\t\tlong long diff = timestamp_diff_micro(&tstamp_start);\n\t\t\t\t\tlong long cap_pos = frames_to_micro(frames_in + cap_avail);\n\t\t\t\t\tlong long pbk_pos = frames_to_micro(frames_out - pbk_fill);\n\t\t\t\t\tprintf(\"[%lldus] POS: p=%zd (min=%zd, rt=%lldus) c=%zd (max=%zd, rt=%lldus)\\n\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/setup.c"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 17,
                  "endLine": 510,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\tgoto _err;\n\t}\n\tif (value == NULL) {\n\t\tSNDERR(\"Missing control value\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n",
                    "rendered": {
                      "text": "\t\tgoto _err;\n\t}\n\tif (value == NULL) {\n\t\tSNDERR(\"Missing control value\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n",
                      "markdown": "`\t\tgoto _err;\n\t}\n\tif (value == NULL) {\n\t\tSNDERR(\"Missing control value\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/setup.c"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 17,
                  "endLine": 505,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\treturn -EINVAL;\n\t}\n\tif (name == NULL) {\n\t\tSNDERR(\"Missing control name\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn -EINVAL;\n\t}\n\tif (name == NULL) {\n\t\tSNDERR(\"Missing control name\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n",
                      "markdown": "`\t\treturn -EINVAL;\n\t}\n\tif (name == NULL) {\n\t\tSNDERR(\"Missing control name\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/setup.c"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 18,
                  "endLine": 296,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\tcase SND_CTL_ELEM_TYPE_IEC958:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSNDERR(\"Unknown control type: %d\", type);\n\t\t\treturn -EINVAL;\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\tcase SND_CTL_ELEM_TYPE_IEC958:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSNDERR(\"Unknown control type: %d\", type);\n\t\t\treturn -EINVAL;\n\t\t}\n\t}\n",
                      "markdown": "`\t\tcase SND_CTL_ELEM_TYPE_IEC958:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSNDERR(\"Unknown control type: %d\", type);\n\t\t\treturn -EINVAL;\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 49,
                  "endLine": 50,
                  "endColumn": 58,
                  "snippet": {
                    "text": "0.0.4 -> 0.0.5\n\n* added snd_cards_mask function\n* added info functions for pcm playback/record in control interface\n* fixed Makefile bugs for shared library (added -fPIC)\n\n0.0.3 -> 0.0.4\n",
                    "rendered": {
                      "text": "0.0.4 -> 0.0.5\n\n* added snd_cards_mask function\n* added info functions for pcm playback/record in control interface\n* fixed Makefile bugs for shared library (added -fPIC)\n\n0.0.3 -> 0.0.4\n",
                      "markdown": "`0.0.4 -> 0.0.5\n\n* added snd_cards_mask function\n* added info functions for pcm playback/record in control interface\n* fixed Makefile bugs for shared library (added -fPIC)\n\n0.0.3 -> 0.0.4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 32,
                  "endLine": 19,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n0.1.0 -> 0.1.1\n\n* added more switch functions to control interface\n\n0.0.9 -> 0.1.0\n\n",
                    "rendered": {
                      "text": "\n0.1.0 -> 0.1.1\n\n* added more switch functions to control interface\n\n0.0.9 -> 0.1.0\n\n",
                      "markdown": "`\n0.1.0 -> 0.1.1\n\n* added more switch functions to control interface\n\n0.0.9 -> 0.1.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* update to libtool 1.3.3\n\n0.1.3 -> 0.2.0\n\n",
                    "rendered": {
                      "text": "* update to libtool 1.3.3\n\n0.1.3 -> 0.2.0\n\n",
                      "markdown": "`* update to libtool 1.3.3\n\n0.1.3 -> 0.2.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 11,
                  "endLine": 58,
                  "endColumn": 17,
                  "snippet": {
                    "text": "* changed COPYING policy from GPL to LGPL\n* fixed bug in snd_mixer_channel_read & write\n* added mixer exact support\n* added pcm time mode support\n* 'make install' is now possible\n\n0.0.2 -> 0.0.3\n",
                    "rendered": {
                      "text": "* changed COPYING policy from GPL to LGPL\n* fixed bug in snd_mixer_channel_read & write\n* added mixer exact support\n* added pcm time mode support\n* 'make install' is now possible\n\n0.0.2 -> 0.0.3\n",
                      "markdown": "`* changed COPYING policy from GPL to LGPL\n* fixed bug in snd_mixer_channel_read & write\n* added mixer exact support\n* added pcm time mode support\n* 'make install' is now possible\n\n0.0.2 -> 0.0.3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 23,
                  "endLine": 34,
                  "snippet": {
                    "text": "\n* Makefile and configure.in changes\n  - added check for alsa driver package\n  - added spec file for RPM\n\n0.0.7 -> 0.0.8\n\n* added LGPL notice to all source and header files\n",
                    "rendered": {
                      "text": "\n* Makefile and configure.in changes\n  - added check for alsa driver package\n  - added spec file for RPM\n\n0.0.7 -> 0.0.8\n\n* added LGPL notice to all source and header files\n",
                      "markdown": "`\n* Makefile and configure.in changes\n  - added check for alsa driver package\n  - added spec file for RPM\n\n0.0.7 -> 0.0.8\n\n* added LGPL notice to all source and header files\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 35,
                  "endLine": 331,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 59,
                  "endLine": 290,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 30,
                  "endLine": 204,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 63,
                  "endLine": 159,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 51,
                  "endLine": 142,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 21,
                  "endLine": 126,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 43,
                  "endLine": 100,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 7,
                  "endLine": 88,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 63,
                  "endLine": 54,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 12,
                  "endLine": 250,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 34,
                  "endLine": 238,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 9,
                  "endLine": 189,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 12,
                  "endLine": 51,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/COPYING"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 4,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/aserver.c"
                },
                "region": {
                  "startLine": 620,
                  "endLine": 620,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\terr = read(client->ctrl_fd, buf, 1);\n\tif (err != 1)\n\t\treturn -EBADFD;\n\tcmd = ctrl->cmd;\n\tctrl->cmd = 0;\n\tctl = client->device.ctl.handle;\n\tswitch (cmd) {\n",
                    "rendered": {
                      "text": "\terr = read(client->ctrl_fd, buf, 1);\n\tif (err != 1)\n\t\treturn -EBADFD;\n\tcmd = ctrl->cmd;\n\tctrl->cmd = 0;\n\tctl = client->device.ctl.handle;\n\tswitch (cmd) {\n",
                      "markdown": "`\terr = read(client->ctrl_fd, buf, 1);\n\tif (err != 1)\n\t\treturn -EBADFD;\n\tcmd = ctrl->cmd;\n\tctrl->cmd = 0;\n\tctl = client->device.ctl.handle;\n\tswitch (cmd) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/aserver/aserver.c"
                },
                "region": {
                  "startLine": 401,
                  "endLine": 401,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\terr = read(client->ctrl_fd, buf, 1);\n\tif (err != 1)\n\t\treturn -EBADFD;\n\tcmd = ctrl->cmd;\n\tctrl->cmd = 0;\n\tpcm = client->device.pcm.handle;\n\tswitch (cmd) {\n",
                    "rendered": {
                      "text": "\terr = read(client->ctrl_fd, buf, 1);\n\tif (err != 1)\n\t\treturn -EBADFD;\n\tcmd = ctrl->cmd;\n\tctrl->cmd = 0;\n\tpcm = client->device.pcm.handle;\n\tswitch (cmd) {\n",
                      "markdown": "`\terr = read(client->ctrl_fd, buf, 1);\n\tif (err != 1)\n\t\treturn -EBADFD;\n\tcmd = ctrl->cmd;\n\tctrl->cmd = 0;\n\tpcm = client->device.pcm.handle;\n\tswitch (cmd) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/m4/attributes.m4"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 72,
                  "endLine": 189,
                  "endColumn": 77,
                  "snippet": {
                    "text": "AC_DEFUN([CC_ATTRIBUTE_FORMAT_ARG], [\n  CC_CHECK_ATTRIBUTE(\n    [format_arg], [format_arg(printf)],\n    [char *__attribute__((format_arg(1))) gettextlike(const char *fmt) { fmt = (void *)0; }],\n    [$1], [$2])\n])\n\n",
                    "rendered": {
                      "text": "AC_DEFUN([CC_ATTRIBUTE_FORMAT_ARG], [\n  CC_CHECK_ATTRIBUTE(\n    [format_arg], [format_arg(printf)],\n    [char *__attribute__((format_arg(1))) gettextlike(const char *fmt) { fmt = (void *)0; }],\n    [$1], [$2])\n])\n\n",
                      "markdown": "`AC_DEFUN([CC_ATTRIBUTE_FORMAT_ARG], [\n  CC_CHECK_ATTRIBUTE(\n    [format_arg], [format_arg(printf)],\n    [char *__attribute__((format_arg(1))) gettextlike(const char *fmt) { fmt = (void *)0; }],\n    [$1], [$2])\n])\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/m4/attributes.m4"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 82,
                  "endLine": 182,
                  "endColumn": 87,
                  "snippet": {
                    "text": "AC_DEFUN([CC_ATTRIBUTE_FORMAT], [\n  CC_CHECK_ATTRIBUTE(\n    [format], [format(printf, n, n)],\n    [void __attribute__((format(printf, 1, 2))) printflike(const char *fmt, ...) { fmt = (void *)0; }],\n    [$1], [$2])\n])\n\n",
                    "rendered": {
                      "text": "AC_DEFUN([CC_ATTRIBUTE_FORMAT], [\n  CC_CHECK_ATTRIBUTE(\n    [format], [format(printf, n, n)],\n    [void __attribute__((format(printf, 1, 2))) printflike(const char *fmt, ...) { fmt = (void *)0; }],\n    [$1], [$2])\n])\n\n",
                      "markdown": "`AC_DEFUN([CC_ATTRIBUTE_FORMAT], [\n  CC_CHECK_ATTRIBUTE(\n    [format], [format(printf, n, n)],\n    [void __attribute__((format(printf, 1, 2))) printflike(const char *fmt, ...) { fmt = (void *)0; }],\n    [$1], [$2])\n])\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/alsalisp/test.lisp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 31,
                  "snippet": {
                    "text": ";\n; Test code for all basic alsa lisp commands.\n; The test is indended to find memory leaks.\n;\n; Copyright (c) 2003 Jaroslav Kysela <perex@perex.cz>\n; License: GPL v2 (http://www.gnu.org/licenses/gpl.html)\n",
                    "rendered": {
                      "text": ";\n; Test code for all basic alsa lisp commands.\n; The test is indended to find memory leaks.\n;\n; Copyright (c) 2003 Jaroslav Kysela <perex@perex.cz>\n; License: GPL v2 (http://www.gnu.org/licenses/gpl.html)\n",
                      "markdown": "`;\n; Test code for all basic alsa lisp commands.\n; The test is indended to find memory leaks.\n;\n; Copyright (c) 2003 Jaroslav Kysela <perex@perex.cz>\n; License: GPL v2 (http://www.gnu.org/licenses/gpl.html)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/lsb/config.c"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 40,
                  "endLine": 53,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tcase SND_CONFIG_TYPE_COMPOUND:\n\t\treturn subset_of(c1, c2) && subset_of(c2, c1);\n\tdefault:\n\t\tfprintf(stderr, \"unknown configuration node type %d\\n\",\n\t\t\t(int)snd_config_get_type(c1));\n\t\treturn 0;\n\t}\n",
                    "rendered": {
                      "text": "\tcase SND_CONFIG_TYPE_COMPOUND:\n\t\treturn subset_of(c1, c2) && subset_of(c2, c1);\n\tdefault:\n\t\tfprintf(stderr, \"unknown configuration node type %d\\n\",\n\t\t\t(int)snd_config_get_type(c1));\n\t\treturn 0;\n\t}\n",
                      "markdown": "`\tcase SND_CONFIG_TYPE_COMPOUND:\n\t\treturn subset_of(c1, c2) && subset_of(c2, c1);\n\tdefault:\n\t\tfprintf(stderr, \"unknown configuration node type %d\\n\",\n\t\t\t(int)snd_config_get_type(c1));\n\t\treturn 0;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/lsb/midi_event.c"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 38,
                  "endLine": 231,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\tTEST_CHECK(ev.type == SND_SEQ_EVENT_SYSEX);\n\tTEST_CHECK((ev.flags & SND_SEQ_EVENT_LENGTH_MASK) == SND_SEQ_EVENT_LENGTH_VARIABLE);\n\tTEST_CHECK(ev.data.ext.len == 8);\n\tTEST_CHECK(!memcmp(ev.data.ext.ptr, \"\\xf0\\x7f\\x7f\\x04\\x01\\x7f\\x7f\\xf7\", 8));\n\n\tTEST_CHECK(ENCODE(\"\\xf1\\x04\") == 2);\n\tTEST_CHECK(ev.type == SND_SEQ_EVENT_QFRAME);\n",
                    "rendered": {
                      "text": "\tTEST_CHECK(ev.type == SND_SEQ_EVENT_SYSEX);\n\tTEST_CHECK((ev.flags & SND_SEQ_EVENT_LENGTH_MASK) == SND_SEQ_EVENT_LENGTH_VARIABLE);\n\tTEST_CHECK(ev.data.ext.len == 8);\n\tTEST_CHECK(!memcmp(ev.data.ext.ptr, \"\\xf0\\x7f\\x7f\\x04\\x01\\x7f\\x7f\\xf7\", 8));\n\n\tTEST_CHECK(ENCODE(\"\\xf1\\x04\") == 2);\n\tTEST_CHECK(ev.type == SND_SEQ_EVENT_QFRAME);\n",
                      "markdown": "`\tTEST_CHECK(ev.type == SND_SEQ_EVENT_SYSEX);\n\tTEST_CHECK((ev.flags & SND_SEQ_EVENT_LENGTH_MASK) == SND_SEQ_EVENT_LENGTH_VARIABLE);\n\tTEST_CHECK(ev.data.ext.len == 8);\n\tTEST_CHECK(!memcmp(ev.data.ext.ptr, \"\\xf0\\x7f\\x7f\\x04\\x01\\x7f\\x7f\\xf7\", 8));\n\n\tTEST_CHECK(ENCODE(\"\\xf1\\x04\") == 2);\n\tTEST_CHECK(ev.type == SND_SEQ_EVENT_QFRAME);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/lsb/midi_event.c"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 20,
                  "endLine": 227,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\tTEST_CHECK(ev.data.control.channel == 1);\n\tTEST_CHECK(ev.data.control.value == -1630);\n\n\tTEST_CHECK(ENCODE(\"\\xf0\\x7f\\x7f\\x04\\x01\\x7f\\x7f\\xf7\") == 8);\n\tTEST_CHECK(ev.type == SND_SEQ_EVENT_SYSEX);\n\tTEST_CHECK((ev.flags & SND_SEQ_EVENT_LENGTH_MASK) == SND_SEQ_EVENT_LENGTH_VARIABLE);\n\tTEST_CHECK(ev.data.ext.len == 8);\n",
                    "rendered": {
                      "text": "\tTEST_CHECK(ev.data.control.channel == 1);\n\tTEST_CHECK(ev.data.control.value == -1630);\n\n\tTEST_CHECK(ENCODE(\"\\xf0\\x7f\\x7f\\x04\\x01\\x7f\\x7f\\xf7\") == 8);\n\tTEST_CHECK(ev.type == SND_SEQ_EVENT_SYSEX);\n\tTEST_CHECK((ev.flags & SND_SEQ_EVENT_LENGTH_MASK) == SND_SEQ_EVENT_LENGTH_VARIABLE);\n\tTEST_CHECK(ev.data.ext.len == 8);\n",
                      "markdown": "`\tTEST_CHECK(ev.data.control.channel == 1);\n\tTEST_CHECK(ev.data.control.value == -1630);\n\n\tTEST_CHECK(ENCODE(\"\\xf0\\x7f\\x7f\\x04\\x01\\x7f\\x7f\\xf7\") == 8);\n\tTEST_CHECK(ev.type == SND_SEQ_EVENT_SYSEX);\n\tTEST_CHECK((ev.flags & SND_SEQ_EVENT_LENGTH_MASK) == SND_SEQ_EVENT_LENGTH_VARIABLE);\n\tTEST_CHECK(ev.data.ext.len == 8);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/lsb/midi_event.c"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 31,
                  "endLine": 137,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t/* no running status after SysEx */\n\tsnd_seq_ev_set_pgmchange(&ev, 0, 0x11);\n\tTEST_CHECK(DECODES_TO(\"c011\"));\n\tsnd_seq_ev_set_sysex(&ev, 6, \"\\xf0\\x7e\\x7f\\x09\\x02\\xf7\");\n\tTEST_CHECK(DECODES_TO(\"f07e7f0902f7\"));\n\tsnd_seq_ev_set_pgmchange(&ev, 0, 0x11);\n\tTEST_CHECK(DECODES_TO(\"c011\"));\n",
                    "rendered": {
                      "text": "\t/* no running status after SysEx */\n\tsnd_seq_ev_set_pgmchange(&ev, 0, 0x11);\n\tTEST_CHECK(DECODES_TO(\"c011\"));\n\tsnd_seq_ev_set_sysex(&ev, 6, \"\\xf0\\x7e\\x7f\\x09\\x02\\xf7\");\n\tTEST_CHECK(DECODES_TO(\"f07e7f0902f7\"));\n\tsnd_seq_ev_set_pgmchange(&ev, 0, 0x11);\n\tTEST_CHECK(DECODES_TO(\"c011\"));\n",
                      "markdown": "`\t/* no running status after SysEx */\n\tsnd_seq_ev_set_pgmchange(&ev, 0, 0x11);\n\tTEST_CHECK(DECODES_TO(\"c011\"));\n\tsnd_seq_ev_set_sysex(&ev, 6, \"\\xf0\\x7e\\x7f\\x09\\x02\\xf7\");\n\tTEST_CHECK(DECODES_TO(\"f07e7f0902f7\"));\n\tsnd_seq_ev_set_pgmchange(&ev, 0, 0x11);\n\tTEST_CHECK(DECODES_TO(\"c011\"));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/lsb/midi_event.c"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 31,
                  "endLine": 75,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\tsnd_seq_ev_set_pitchbend(&ev, 1, 0x222);\n\tTEST_CHECK(DECODES_TO(\"e12244\"));\n\n\tsnd_seq_ev_set_sysex(&ev, 6, \"\\xf0\\x7e\\x7f\\x06\\x01\\xf7\");\n\tTEST_CHECK(DECODES_TO(\"f07e7f0601f7\"));\n\n\tsnd_seq_ev_set_fixed(&ev);\n",
                    "rendered": {
                      "text": "\tsnd_seq_ev_set_pitchbend(&ev, 1, 0x222);\n\tTEST_CHECK(DECODES_TO(\"e12244\"));\n\n\tsnd_seq_ev_set_sysex(&ev, 6, \"\\xf0\\x7e\\x7f\\x06\\x01\\xf7\");\n\tTEST_CHECK(DECODES_TO(\"f07e7f0601f7\"));\n\n\tsnd_seq_ev_set_fixed(&ev);\n",
                      "markdown": "`\tsnd_seq_ev_set_pitchbend(&ev, 1, 0x222);\n\tTEST_CHECK(DECODES_TO(\"e12244\"));\n\n\tsnd_seq_ev_set_sysex(&ev, 6, \"\\xf0\\x7e\\x7f\\x06\\x01\\xf7\");\n\tTEST_CHECK(DECODES_TO(\"f07e7f0601f7\"));\n\n\tsnd_seq_ev_set_fixed(&ev);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/test/timer.c"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 25,
                  "endLine": 47,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t\tif (err == 0) {\n\t\t\tfprintf(stderr, \"timer time out!!\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t\twhile (snd_timer_read(handle, &tr, sizeof(tr)) == sizeof(tr)) {\n",
                    "rendered": {
                      "text": "\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t\tif (err == 0) {\n\t\t\tfprintf(stderr, \"timer time out!!\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t\twhile (snd_timer_read(handle, &tr, sizeof(tr)) == sizeof(tr)) {\n",
                      "markdown": "`\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t\tif (err == 0) {\n\t\t\tfprintf(stderr, \"timer time out!!\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t\twhile (snd_timer_read(handle, &tr, sizeof(tr)) == sizeof(tr)) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/HDA-Intel.conf"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 2,
                  "endLine": 60,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dsnoop:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"Digital Capture Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dsnoop:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"Digital Capture Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dsnoop:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"Digital Capture Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/HDA-Intel.conf"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 2,
                  "endLine": 46,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/HDA-Intel.conf"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\tcard $CARD\n\t\t\tsubdevice 0\n\t\t}\n\t\tcontrol {\n\t\t\tname \"PCM Playback Volume\"\n\t\t\tcard $CARD\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tcard $CARD\n\t\t\tsubdevice 0\n\t\t}\n\t\tcontrol {\n\t\t\tname \"PCM Playback Volume\"\n\t\t\tcard $CARD\n\t\t}\n",
                      "markdown": "`\t\t\tcard $CARD\n\t\t\tsubdevice 0\n\t\t}\n\t\tcontrol {\n\t\t\tname \"PCM Playback Volume\"\n\t\t\tcard $CARD\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/VIA8237.conf"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 2,
                  "endLine": 32,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\ttype hw\n\t\t\t\tcard $CARD\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\ttype hw\n\t\t\t\tcard $CARD\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\ttype hw\n\t\t\t\tcard $CARD\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/PMacToonie.conf"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 2,
                  "endLine": 38,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:CARD=\" $CARD \",FORMAT=S16_BE\" ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:CARD=\" $CARD \",FORMAT=S16_BE\" ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:CARD=\" $CARD \",FORMAT=S16_BE\" ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/PMacToonie.conf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/VIA8233.conf"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 2,
                  "endLine": 32,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\ttype hw\n\t\t\t\tcard $CARD\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\ttype hw\n\t\t\t\tcard $CARD\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\ttype hw\n\t\t\t\tcard $CARD\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/CMI8738-MC8.conf"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/CMI8738-MC8.conf"
                },
                "region": {
                  "startLine": 139,
                  "endLine": 139,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/CMI8738-MC8.conf"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/CMI8738-MC8.conf"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\tcard $CARD\n\t\tdevice 1\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\tcard $CARD\n\t\tdevice 1\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\tcard $CARD\n\t\tdevice 1\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/CMI8738-MC8.conf"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 2,
                  "endLine": 38,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/CMI8738-MC8.conf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/PS3.conf"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 2,
                  "endLine": 40,
                  "endColumn": 11,
                  "snippet": {
                    "text": "                                #strings [ \"dmix:CARD=\" $CARD ]\n                                strings [ \"dmix:CARD=\" $CARD \",FORMAT=S16\" ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "                                #strings [ \"dmix:CARD=\" $CARD ]\n                                strings [ \"dmix:CARD=\" $CARD \",FORMAT=S16\" ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`                                #strings [ \"dmix:CARD=\" $CARD ]\n                                strings [ \"dmix:CARD=\" $CARD \",FORMAT=S16\" ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/PS3.conf"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\tcard $CARD\n\t\tdevice 0\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\tcard $CARD\n\t\tdevice 0\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\tcard $CARD\n\t\tdevice 0\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/NFORCE.conf"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 3,
                  "endLine": 242,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        }\n        slave.channels 8\n    }\n    control {\n        name \"PCM Playback Volume\"\n        card $CARD\n    }\n",
                    "rendered": {
                      "text": "        }\n        slave.channels 8\n    }\n    control {\n        name \"PCM Playback Volume\"\n        card $CARD\n    }\n",
                      "markdown": "`        }\n        slave.channels 8\n    }\n    control {\n        name \"PCM Playback Volume\"\n        card $CARD\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/NFORCE.conf"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t}\n\t\tslave.channels 6\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tslave.channels 6\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\t}\n\t\tslave.channels 6\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/NFORCE.conf"
                },
                "region": {
                  "startLine": 95,
                  "endLine": 95,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/NFORCE.conf"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 2,
                  "endLine": 38,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/NFORCE.conf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/alsa.conf"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 25,
                  "endLine": 394,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t}\n\ttype hw\n\tcard $CARD\n\thint.description \"Direct control device\"\n}\n\nctl.shm {\n",
                    "rendered": {
                      "text": "\t}\n\ttype hw\n\tcard $CARD\n\thint.description \"Direct control device\"\n}\n\nctl.shm {\n",
                      "markdown": "`\t}\n\ttype hw\n\tcard $CARD\n\thint.description \"Direct control device\"\n}\n\nctl.shm {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/alsa.conf"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 2,
                  "endLine": 370,
                  "endColumn": 11,
                  "snippet": {
                    "text": "pcm.phoneline cards.pcm.phoneline\n\n#\n#  Control interface\n#\n\t\nctl.default cards.ctl.default\n",
                    "rendered": {
                      "text": "pcm.phoneline cards.pcm.phoneline\n\n#\n#  Control interface\n#\n\t\nctl.default cards.ctl.default\n",
                      "markdown": "`pcm.phoneline cards.pcm.phoneline\n\n#\n#  Control interface\n#\n\t\nctl.default cards.ctl.default\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/alsa.conf"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 61,
                  "endLine": 149,
                  "endColumn": 66,
                  "snippet": {
                    "text": "defaults.pcm.modem.card defaults.pcm.card\ndefaults.pcm.modem.device defaults.pcm.device\ndefaults.pcm.file_format raw\ndefaults.pcm.file_truncate true\t\t# truncate files via file or tee PCM\ndefaults.rawmidi.card 0\ndefaults.rawmidi.device 0\ndefaults.rawmidi.subdevice -1\n",
                    "rendered": {
                      "text": "defaults.pcm.modem.card defaults.pcm.card\ndefaults.pcm.modem.device defaults.pcm.device\ndefaults.pcm.file_format raw\ndefaults.pcm.file_truncate true\t\t# truncate files via file or tee PCM\ndefaults.rawmidi.card 0\ndefaults.rawmidi.device 0\ndefaults.rawmidi.subdevice -1\n",
                      "markdown": "`defaults.pcm.modem.card defaults.pcm.card\ndefaults.pcm.modem.device defaults.pcm.device\ndefaults.pcm.file_format raw\ndefaults.pcm.file_truncate true\t\t# truncate files via file or tee PCM\ndefaults.rawmidi.card 0\ndefaults.rawmidi.device 0\ndefaults.rawmidi.subdevice -1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/control/control_hw.c"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 7,
                  "endLine": 39,
                  "snippet": {
                    "text": "#include <fcntl.h>\n#include <sys/ioctl.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_hw = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <fcntl.h>\n#include <sys/ioctl.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_hw = \"\";\n#endif\n\n",
                      "markdown": "`#include <fcntl.h>\n#include <sys/ioctl.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_control_hw = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_misc.c"
                },
                "region": {
                  "startLine": 869,
                  "startColumn": 17,
                  "endLine": 869,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\treturn -EINVAL;\n\t}\n\tif (name == NULL) {\n\t\tSNDERR(\"Missing control name\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn -EINVAL;\n\t}\n\tif (name == NULL) {\n\t\tSNDERR(\"Missing control name\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n",
                      "markdown": "`\t\treturn -EINVAL;\n\t}\n\tif (name == NULL) {\n\t\tSNDERR(\"Missing control name\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_params.c"
                },
                "region": {
                  "startLine": 1475,
                  "startColumn": 7,
                  "endLine": 1475,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tdiff = p->best - value;\n\tif (diff < 0)\n\t\tdiff = -diff;\n\treturn diff * p->mul;\n}\n\t\nint snd_pcm_hw_strategy_simple_near_next_value(snd_pcm_hw_params_t *params,\n",
                    "rendered": {
                      "text": "\tdiff = p->best - value;\n\tif (diff < 0)\n\t\tdiff = -diff;\n\treturn diff * p->mul;\n}\n\t\nint snd_pcm_hw_strategy_simple_near_next_value(snd_pcm_hw_params_t *params,\n",
                      "markdown": "`\tdiff = p->best - value;\n\tif (diff < 0)\n\t\tdiff = -diff;\n\treturn diff * p->mul;\n}\n\t\nint snd_pcm_hw_strategy_simple_near_next_value(snd_pcm_hw_params_t *params,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_params.c"
                },
                "region": {
                  "startLine": 1474,
                  "startColumn": 1,
                  "endLine": 1474,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tassert(value >= 0);\n\tdiff = p->best - value;\n\tif (diff < 0)\n\t\tdiff = -diff;\n\treturn diff * p->mul;\n}\n\t\n",
                    "rendered": {
                      "text": "\tassert(value >= 0);\n\tdiff = p->best - value;\n\tif (diff < 0)\n\t\tdiff = -diff;\n\treturn diff * p->mul;\n}\n\t\n",
                      "markdown": "`\tassert(value >= 0);\n\tdiff = p->best - value;\n\tif (diff < 0)\n\t\tdiff = -diff;\n\treturn diff * p->mul;\n}\n\t\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_params.c"
                },
                "region": {
                  "startLine": 1472,
                  "endLine": 1472,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tint value = snd_pcm_hw_param_set_near(pcm, &params1, var, p->best, 0);\n\tint diff;\n\tassert(value >= 0);\n\tdiff = p->best - value;\n\tif (diff < 0)\n\t\tdiff = -diff;\n\treturn diff * p->mul;\n",
                    "rendered": {
                      "text": "\tint value = snd_pcm_hw_param_set_near(pcm, &params1, var, p->best, 0);\n\tint diff;\n\tassert(value >= 0);\n\tdiff = p->best - value;\n\tif (diff < 0)\n\t\tdiff = -diff;\n\treturn diff * p->mul;\n",
                      "markdown": "`\tint value = snd_pcm_hw_param_set_near(pcm, &params1, var, p->best, 0);\n\tint diff;\n\tassert(value >= 0);\n\tdiff = p->best - value;\n\tif (diff < 0)\n\t\tdiff = -diff;\n\treturn diff * p->mul;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_copy.c"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "#include \"pcm_plugin.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_copy = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"pcm_plugin.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_copy = \"\";\n#endif\n\n",
                      "markdown": "`#include \"pcm_plugin.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_copy = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_meter.c"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 7,
                  "endLine": 44,
                  "snippet": {
                    "text": "#define atomic_dec(ptr)     __atomic_sub_fetch(ptr, 1, __ATOMIC_SEQ_CST)\n#endif\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_meter = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#define atomic_dec(ptr)     __atomic_sub_fetch(ptr, 1, __ATOMIC_SEQ_CST)\n#endif\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_meter = \"\";\n#endif\n\n",
                      "markdown": "`#define atomic_dec(ptr)     __atomic_sub_fetch(ptr, 1, __ATOMIC_SEQ_CST)\n#endif\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_meter = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_ioplug.c"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 35,
                  "snippet": {
                    "text": "#include \"pcm_ext_parm.h\"\n#include \"pcm_generic.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_ioplug = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"pcm_ext_parm.h\"\n#include \"pcm_generic.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_ioplug = \"\";\n#endif\n\n",
                      "markdown": "`#include \"pcm_ext_parm.h\"\n#include \"pcm_generic.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_ioplug = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_rate.c"
                },
                "region": {
                  "startLine": 1581,
                  "startColumn": 16,
                  "endLine": 1581,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\treturn -EINVAL;\n\t}\n\tif (err < 0) {\n\t\tSNDERR(\"Cannot find rate converter\");\n\t\tsnd_pcm_free(pcm);\n\t\tfree(rate);\n\t\treturn -ENOENT;\n",
                    "rendered": {
                      "text": "\t\treturn -EINVAL;\n\t}\n\tif (err < 0) {\n\t\tSNDERR(\"Cannot find rate converter\");\n\t\tsnd_pcm_free(pcm);\n\t\tfree(rate);\n\t\treturn -ENOENT;\n",
                      "markdown": "`\t\treturn -EINVAL;\n\t}\n\tif (err < 0) {\n\t\tSNDERR(\"Cannot find rate converter\");\n\t\tsnd_pcm_free(pcm);\n\t\tfree(rate);\n\t\treturn -ENOENT;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_rate.c"
                },
                "region": {
                  "startLine": 1532,
                  "startColumn": 6,
                  "endLine": 1533,
                  "snippet": {
                    "text": "\t\treturn err;\n\t}\n\n#ifdef PIC\n\terr = -ENOENT;\n\tif (!converter) {\n\t\tconst char *const *types;\n\t\tfor (types = default_rate_plugins; *types; types++) {\n",
                    "rendered": {
                      "text": "\t\treturn err;\n\t}\n\n#ifdef PIC\n\terr = -ENOENT;\n\tif (!converter) {\n\t\tconst char *const *types;\n\t\tfor (types = default_rate_plugins; *types; types++) {\n",
                      "markdown": "`\t\treturn err;\n\t}\n\n#ifdef PIC\n\terr = -ENOENT;\n\tif (!converter) {\n\t\tconst char *const *types;\n\t\tfor (types = default_rate_plugins; *types; types++) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_rate.c"
                },
                "region": {
                  "startLine": 1504,
                  "startColumn": 7,
                  "endLine": 1505,
                  "snippet": {
                    "text": "\tsnd_pcm_rate_t *rate;\n\tconst char *type = NULL;\n\tint err;\n#ifndef PIC\n\tsnd_pcm_rate_open_func_t open_func;\n\textern int SND_PCM_RATE_PLUGIN_ENTRY(linear) (unsigned int version, void **objp, snd_pcm_rate_ops_t *ops);\n#endif\n\n",
                    "rendered": {
                      "text": "\tsnd_pcm_rate_t *rate;\n\tconst char *type = NULL;\n\tint err;\n#ifndef PIC\n\tsnd_pcm_rate_open_func_t open_func;\n\textern int SND_PCM_RATE_PLUGIN_ENTRY(linear) (unsigned int version, void **objp, snd_pcm_rate_ops_t *ops);\n#endif\n\n",
                      "markdown": "`\tsnd_pcm_rate_t *rate;\n\tconst char *type = NULL;\n\tint err;\n#ifndef PIC\n\tsnd_pcm_rate_open_func_t open_func;\n\textern int SND_PCM_RATE_PLUGIN_ENTRY(linear) (unsigned int version, void **objp, snd_pcm_rate_ops_t *ops);\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_rate.c"
                },
                "region": {
                  "startLine": 1395,
                  "startColumn": 6,
                  "endLine": 1396,
                  "snippet": {
                    "text": "\t}\n}\n\n#ifdef PIC\nstatic int is_builtin_plugin(const char *type)\n{\n\treturn strcmp(type, \"linear\") == 0;\n}\n",
                    "rendered": {
                      "text": "\t}\n}\n\n#ifdef PIC\nstatic int is_builtin_plugin(const char *type)\n{\n\treturn strcmp(type, \"linear\") == 0;\n}\n",
                      "markdown": "`\t}\n}\n\n#ifdef PIC\nstatic int is_builtin_plugin(const char *type)\n{\n\treturn strcmp(type, \"linear\") == 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_rate.c"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 7,
                  "endLine": 42,
                  "snippet": {
                    "text": "#define DEBUG_REFINE\n#endif\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_rate = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#define DEBUG_REFINE\n#endif\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_rate = \"\";\n#endif\n\n",
                      "markdown": "`#define DEBUG_REFINE\n#endif\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_rate = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_linear.c"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 35,
                  "snippet": {
                    "text": "#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_linear = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_linear = \"\";\n#endif\n\n",
                      "markdown": "`#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_linear = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_null.c"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 35,
                  "snippet": {
                    "text": "#include \"bswap.h\"\n#include <limits.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_null = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"bswap.h\"\n#include <limits.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_null = \"\";\n#endif\n\n",
                      "markdown": "`#include \"bswap.h\"\n#include <limits.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_null = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/main.c"
                },
                "region": {
                  "startLine": 688,
                  "startColumn": 28,
                  "endLine": 688,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\tdevice = find_device(uc_mgr, verb, name, 0);\n\tif (device == NULL) {\n\t\tuc_error(\"error: unable to find device '%s'\\n\", name);\n\t\treturn -ENOENT;\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tdevice = find_device(uc_mgr, verb, name, 0);\n\tif (device == NULL) {\n\t\tuc_error(\"error: unable to find device '%s'\\n\", name);\n\t\treturn -ENOENT;\n\t}\n\n",
                      "markdown": "`\n\tdevice = find_device(uc_mgr, verb, name, 0);\n\tif (device == NULL) {\n\t\tuc_error(\"error: unable to find device '%s'\\n\", name);\n\t\treturn -ENOENT;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/main.c"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 22,
                  "endLine": 612,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t}\n\t\terr = snd_config_search(config, root, &config);\n\t\tif (err < 0) {\n\t\t\tuc_error(\"Unable to find subtree '%s'\", root);\n\t\t\tgoto _err;\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t\terr = snd_config_search(config, root, &config);\n\t\tif (err < 0) {\n\t\t\tuc_error(\"Unable to find subtree '%s'\", root);\n\t\t\tgoto _err;\n\t\t}\n\t}\n",
                      "markdown": "`\t\t}\n\t\terr = snd_config_search(config, root, &config);\n\t\tif (err < 0) {\n\t\t\tuc_error(\"Unable to find subtree '%s'\", root);\n\t\t\tgoto _err;\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/mixer/simple_none.c"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 13,
                  "endLine": 101,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n\t{0, 0},\n};\n\n",
                    "rendered": {
                      "text": "\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n\t{0, 0},\n};\n\n",
                      "markdown": "`\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n\t{0, 0},\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/mixer/simple_none.c"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n\t{0, 0},\n};\n",
                    "rendered": {
                      "text": "\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n\t{0, 0},\n};\n",
                      "markdown": "`\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n\t{0, 0},\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/mixer/simple_none.c"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 13,
                  "endLine": 99,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n\t{0, 0},\n",
                    "rendered": {
                      "text": "\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n\t{0, 0},\n",
                      "markdown": "`\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n\t{0, 0},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/mixer/simple_none.c"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 7,
                  "endLine": 98,
                  "endColumn": 16,
                  "snippet": {
                    "text": "} name_table[] = {\n\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n",
                    "rendered": {
                      "text": "} name_table[] = {\n\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n",
                      "markdown": "`} name_table[] = {\n\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n\t{\"Synth Tone Control - Treble\", \"Synth Treble\"},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/mixer/simple_none.c"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 7,
                  "endLine": 97,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\tconst char *shortname;\n} name_table[] = {\n\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n",
                    "rendered": {
                      "text": "\tconst char *shortname;\n} name_table[] = {\n\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n",
                      "markdown": "`\tconst char *shortname;\n} name_table[] = {\n\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n\t{\"Synth Tone Control - Bass\", \"Synth Bass\"},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/mixer/simple_none.c"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 7,
                  "endLine": 96,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\tconst char *longname;\n\tconst char *shortname;\n} name_table[] = {\n\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n",
                    "rendered": {
                      "text": "\tconst char *longname;\n\tconst char *shortname;\n} name_table[] = {\n\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n",
                      "markdown": "`\tconst char *longname;\n\tconst char *shortname;\n} name_table[] = {\n\t{\"Tone Control - Switch\", \"Tone\"},\n\t{\"Tone Control - Bass\", \"Bass\"},\n\t{\"Tone Control - Treble\", \"Treble\"},\n\t{\"Synth Tone Control - Switch\", \"Synth Tone\"},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/dlmisc.c"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 14,
                  "endLine": 94,
                  "endColumn": 23,
                  "snippet": {
                    "text": "{\n\tsnd_dlpath_lock();\n\tif (!snd_plugin_dir_set) {\n\t\tconst char *env = getenv(\"ALSA_PLUGIN_DIR\");\n\t\tif (env) {\n\t\t\tsnd_plugin_dir = strdup(env);\n\t\t} else {\n",
                    "rendered": {
                      "text": "{\n\tsnd_dlpath_lock();\n\tif (!snd_plugin_dir_set) {\n\t\tconst char *env = getenv(\"ALSA_PLUGIN_DIR\");\n\t\tif (env) {\n\t\t\tsnd_plugin_dir = strdup(env);\n\t\t} else {\n",
                      "markdown": "`{\n\tsnd_dlpath_lock();\n\tif (!snd_plugin_dir_set) {\n\t\tconst char *env = getenv(\"ALSA_PLUGIN_DIR\");\n\t\tif (env) {\n\t\t\tsnd_plugin_dir = strdup(env);\n\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/dlmisc.c"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 7,
                  "endLine": 251,
                  "snippet": {
                    "text": "{\n\tint err;\n\n#ifndef PIC\n\tif (handle == &snd_dlsym_start) {\n\t\t/* it's the funny part: */\n\t\t/* we are looking for a symbol in a static library */\n\t\tstruct snd_dlsym_link *link = snd_dlsym_start;\n",
                    "rendered": {
                      "text": "{\n\tint err;\n\n#ifndef PIC\n\tif (handle == &snd_dlsym_start) {\n\t\t/* it's the funny part: */\n\t\t/* we are looking for a symbol in a static library */\n\t\tstruct snd_dlsym_link *link = snd_dlsym_start;\n",
                      "markdown": "`{\n\tint err;\n\n#ifndef PIC\n\tif (handle == &snd_dlsym_start) {\n\t\t/* it's the funny part: */\n\t\t/* we are looking for a symbol in a static library */\n\t\tstruct snd_dlsym_link *link = snd_dlsym_start;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/dlmisc.c"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 7,
                  "endLine": 189,
                  "snippet": {
                    "text": " */\nint snd_dlclose(void *handle)\n{\n#ifndef PIC\n\tif (handle == &snd_dlsym_start)\n\t\treturn 0;\n#endif\n#ifdef HAVE_LIBDL\n",
                    "rendered": {
                      "text": " */\nint snd_dlclose(void *handle)\n{\n#ifndef PIC\n\tif (handle == &snd_dlsym_start)\n\t\treturn 0;\n#endif\n#ifdef HAVE_LIBDL\n",
                      "markdown": "` */\nint snd_dlclose(void *handle)\n{\n#ifndef PIC\n\tif (handle == &snd_dlsym_start)\n\t\treturn 0;\n#endif\n#ifdef HAVE_LIBDL\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/dlmisc.c"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 7,
                  "endLine": 126,
                  "snippet": {
                    "text": "void *snd_dlopen(const char *name, int mode, char *errbuf, size_t errbuflen)\n#endif\n{\n#ifndef PIC\n\tif (name == NULL)\n\t\treturn &snd_dlsym_start;\n#else\n#ifdef HAVE_LIBDL\n",
                    "rendered": {
                      "text": "void *snd_dlopen(const char *name, int mode, char *errbuf, size_t errbuflen)\n#endif\n{\n#ifndef PIC\n\tif (name == NULL)\n\t\treturn &snd_dlsym_start;\n#else\n#ifdef HAVE_LIBDL\n",
                      "markdown": "`void *snd_dlopen(const char *name, int mode, char *errbuf, size_t errbuflen)\n#endif\n{\n#ifndef PIC\n\tif (name == NULL)\n\t\treturn &snd_dlsym_start;\n#else\n#ifdef HAVE_LIBDL\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/dlmisc.c"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 7,
                  "endLine": 43,
                  "snippet": {
                    "text": "#endif\n\n#ifndef DOC_HIDDEN\n#ifndef PIC\nstruct snd_dlsym_link *snd_dlsym_start = NULL;\n#endif\nstatic int snd_plugin_dir_set = 0;\nstatic char *snd_plugin_dir = NULL;\n",
                    "rendered": {
                      "text": "#endif\n\n#ifndef DOC_HIDDEN\n#ifndef PIC\nstruct snd_dlsym_link *snd_dlsym_start = NULL;\n#endif\nstatic int snd_plugin_dir_set = 0;\nstatic char *snd_plugin_dir = NULL;\n",
                      "markdown": "`#endif\n\n#ifndef DOC_HIDDEN\n#ifndef PIC\nstruct snd_dlsym_link *snd_dlsym_start = NULL;\n#endif\nstatic int snd_plugin_dir_set = 0;\nstatic char *snd_plugin_dir = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/Makefile.am"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 11,
                  "endLine": 70,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t$(COMPILE) -E $(VERSION_CPPFLAGS) -x assembler-with-cpp -o $@ $<\n\ncontrol/libcontrol.la:\n\t$(MAKE) -C control libcontrol.la\n\nmixer/libmixer.la:\n\t$(MAKE) -C mixer libmixer.la\n",
                    "rendered": {
                      "text": "\t$(COMPILE) -E $(VERSION_CPPFLAGS) -x assembler-with-cpp -o $@ $<\n\ncontrol/libcontrol.la:\n\t$(MAKE) -C control libcontrol.la\n\nmixer/libmixer.la:\n\t$(MAKE) -C mixer libmixer.la\n",
                      "markdown": "`\t$(COMPILE) -E $(VERSION_CPPFLAGS) -x assembler-with-cpp -o $@ $<\n\ncontrol/libcontrol.la:\n\t$(MAKE) -C control libcontrol.la\n\nmixer/libmixer.la:\n\t$(MAKE) -C mixer libmixer.la\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 15,
                  "endLine": 83,
                  "snippet": {
                    "text": "    - name: Prepare environment\n      run: |\n        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n",
                    "rendered": {
                      "text": "    - name: Prepare environment\n      run: |\n        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n",
                      "markdown": "`    - name: Prepare environment\n      run: |\n        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 26,
                  "endLine": 85,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n      run: |\n        libtoolize --force --copy --automake\n",
                    "rendered": {
                      "text": "        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n      run: |\n        libtoolize --force --copy --automake\n",
                      "markdown": "`        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n      run: |\n        libtoolize --force --copy --automake\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 7,
                  "endLine": 85,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n      run: |\n        libtoolize --force --copy --automake\n",
                    "rendered": {
                      "text": "        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n      run: |\n        libtoolize --force --copy --automake\n",
                      "markdown": "`        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n      run: |\n        libtoolize --force --copy --automake\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 7,
                  "endLine": 84,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n      run: |\n",
                    "rendered": {
                      "text": "        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n      run: |\n",
                      "markdown": "`        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 7,
                  "endLine": 83,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      run: |\n        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n",
                    "rendered": {
                      "text": "      run: |\n        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n",
                      "markdown": "`      run: |\n        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n    - name: Configure\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 7,
                  "endLine": 82,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    - name: Prepare environment\n      run: |\n        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n",
                    "rendered": {
                      "text": "    - name: Prepare environment\n      run: |\n        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n",
                      "markdown": "`    - name: Prepare environment\n      run: |\n        export DEBIAN_FRONTEND=noninteractive\n        apt-get update\n        apt-get -y install apt-utils\n        apt-get -y full-upgrade\n        apt-get install -y git build-essential m4 autoconf automake libtool\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 7,
                  "endLine": 52,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      run: |\n        tar xjf alsa-lib-$(cat version).tar.bz2\n        mkdir artifacts\n        cp alsa-lib-$(cat version).tar.bz2 artifacts\n    - name: Configure package\n      run: |\n        cd alsa-lib-$(cat version)\n",
                    "rendered": {
                      "text": "      run: |\n        tar xjf alsa-lib-$(cat version).tar.bz2\n        mkdir artifacts\n        cp alsa-lib-$(cat version).tar.bz2 artifacts\n    - name: Configure package\n      run: |\n        cd alsa-lib-$(cat version)\n",
                      "markdown": "`      run: |\n        tar xjf alsa-lib-$(cat version).tar.bz2\n        mkdir artifacts\n        cp alsa-lib-$(cat version).tar.bz2 artifacts\n    - name: Configure package\n      run: |\n        cd alsa-lib-$(cat version)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 7,
                  "endLine": 50,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        make dist-bzip2\n    - name: Unpack package\n      run: |\n        tar xjf alsa-lib-$(cat version).tar.bz2\n        mkdir artifacts\n        cp alsa-lib-$(cat version).tar.bz2 artifacts\n    - name: Configure package\n",
                    "rendered": {
                      "text": "        make dist-bzip2\n    - name: Unpack package\n      run: |\n        tar xjf alsa-lib-$(cat version).tar.bz2\n        mkdir artifacts\n        cp alsa-lib-$(cat version).tar.bz2 artifacts\n    - name: Configure package\n",
                      "markdown": "`        make dist-bzip2\n    - name: Unpack package\n      run: |\n        tar xjf alsa-lib-$(cat version).tar.bz2\n        mkdir artifacts\n        cp alsa-lib-$(cat version).tar.bz2 artifacts\n    - name: Configure package\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 7,
                  "endLine": 28,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n        grep AC_INIT configure.ac\n    - name: Configure\n      run: |\n        libtoolize --force --copy --automake\n",
                    "rendered": {
                      "text": "        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n        grep AC_INIT configure.ac\n    - name: Configure\n      run: |\n        libtoolize --force --copy --automake\n",
                      "markdown": "`        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n        grep AC_INIT configure.ac\n    - name: Configure\n      run: |\n        libtoolize --force --copy --automake\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 7,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        mv configure.ac configure.ac.old\n        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n        grep AC_INIT configure.ac\n    - name: Configure\n      run: |\n",
                    "rendered": {
                      "text": "        mv configure.ac configure.ac.old\n        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n        grep AC_INIT configure.ac\n    - name: Configure\n      run: |\n",
                      "markdown": "`        mv configure.ac configure.ac.old\n        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n        grep AC_INIT configure.ac\n    - name: Configure\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 32,
                  "endLine": 25,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    - name: Modify version\n      run: |\n        mv configure.ac configure.ac.old\n        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n        grep AC_INIT configure.ac\n",
                    "rendered": {
                      "text": "    - name: Modify version\n      run: |\n        mv configure.ac configure.ac.old\n        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n        grep AC_INIT configure.ac\n",
                      "markdown": "`    - name: Modify version\n      run: |\n        mv configure.ac configure.ac.old\n        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n        grep AC_INIT configure.ac\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 7,
                  "endLine": 24,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n    - name: Modify version\n      run: |\n        mv configure.ac configure.ac.old\n        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n",
                    "rendered": {
                      "text": "        git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n    - name: Modify version\n      run: |\n        mv configure.ac configure.ac.old\n        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n",
                      "markdown": "`        git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n    - name: Modify version\n      run: |\n        mv configure.ac configure.ac.old\n        version=$(git describe | sed -e 's/v//')\n        echo \"Version: ${version}\"\n        sed -r \"s/AC_INIT\\(alsa-lib,.*\\)/AC_INIT(alsa-lib, ${version})/\" < configure.ac.old > configure.ac\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        fetch-depth: 0\n    - name: Safe git directory\n      run: |\n        git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n    - name: Modify version\n      run: |\n        mv configure.ac configure.ac.old\n",
                    "rendered": {
                      "text": "        fetch-depth: 0\n    - name: Safe git directory\n      run: |\n        git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n    - name: Modify version\n      run: |\n        mv configure.ac configure.ac.old\n",
                      "markdown": "`        fetch-depth: 0\n    - name: Safe git directory\n      run: |\n        git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n    - name: Modify version\n      run: |\n        mv configure.ac configure.ac.old\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 16,
                  "endLine": 19,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      uses: actions/checkout@v4\n      with:\n        fetch-depth: 0\n    - name: Safe git directory\n      run: |\n        git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n    - name: Modify version\n",
                    "rendered": {
                      "text": "      uses: actions/checkout@v4\n      with:\n        fetch-depth: 0\n    - name: Safe git directory\n      run: |\n        git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n    - name: Modify version\n",
                      "markdown": "`      uses: actions/checkout@v4\n      with:\n        fetch-depth: 0\n    - name: Safe git directory\n      run: |\n        git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n    - name: Modify version\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    - name: Prepare environment\n      run: |\n        dnf -y upgrade\n        dnf -y install @development-tools libtool bzip2\n    - name: Checkout\n      uses: actions/checkout@v4\n      with:\n",
                    "rendered": {
                      "text": "    - name: Prepare environment\n      run: |\n        dnf -y upgrade\n        dnf -y install @development-tools libtool bzip2\n    - name: Checkout\n      uses: actions/checkout@v4\n      with:\n",
                      "markdown": "`    - name: Prepare environment\n      run: |\n        dnf -y upgrade\n        dnf -y install @development-tools libtool bzip2\n    - name: Checkout\n      uses: actions/checkout@v4\n      with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7,
                  "endLine": 13,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    steps:\n    - name: Prepare environment\n      run: |\n        dnf -y upgrade\n        dnf -y install @development-tools libtool bzip2\n    - name: Checkout\n      uses: actions/checkout@v4\n",
                    "rendered": {
                      "text": "    steps:\n    - name: Prepare environment\n      run: |\n        dnf -y upgrade\n        dnf -y install @development-tools libtool bzip2\n    - name: Checkout\n      uses: actions/checkout@v4\n",
                      "markdown": "`    steps:\n    - name: Prepare environment\n      run: |\n        dnf -y upgrade\n        dnf -y install @development-tools libtool bzip2\n    - name: Checkout\n      uses: actions/checkout@v4\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/NOTES"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 32,
                  "endLine": 43,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Blocking Open Mode\n==================\n\nThe default behavior of blocking at snd_pcm_open is changed to\nnon-blocking since version 1.0.11.  That is, snd_pcm_open() returns\n-EAGAIN immediately when the device is in use and cannot be opened,\nwhile the function was blocked in the former version.  This influences\n",
                    "rendered": {
                      "text": "Blocking Open Mode\n==================\n\nThe default behavior of blocking at snd_pcm_open is changed to\nnon-blocking since version 1.0.11.  That is, snd_pcm_open() returns\n-EAGAIN immediately when the device is in use and cannot be opened,\nwhile the function was blocked in the former version.  This influences\n",
                      "markdown": "`Blocking Open Mode\n==================\n\nThe default behavior of blocking at snd_pcm_open is changed to\nnon-blocking since version 1.0.11.  That is, snd_pcm_open() returns\n-EAGAIN immediately when the device is in use and cannot be opened,\nwhile the function was blocked in the former version.  This influences\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/INSTALL"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 69,
                  "endLine": 84,
                  "endColumn": 7,
                  "snippet": {
                    "text": "-----------------------------------\n\nWhen you would like to cross-compile ALSA library (e.g. compile on\ni686 host but for arm architecture) you will need to call ./configure\nscript with additional parameters:\n\nCC=arm-linux-gcc ./configure --host=arm-linux\n\n",
                    "rendered": {
                      "text": "-----------------------------------\n\nWhen you would like to cross-compile ALSA library (e.g. compile on\ni686 host but for arm architecture) you will need to call ./configure\nscript with additional parameters:\n\nCC=arm-linux-gcc ./configure --host=arm-linux\n\n",
                      "markdown": "`-----------------------------------\n\nWhen you would like to cross-compile ALSA library (e.g. compile on\ni686 host but for arm architecture) you will need to call ./configure\nscript with additional parameters:\n\nCC=arm-linux-gcc ./configure --host=arm-linux\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 679,
                  "startColumn": 10,
                  "endLine": 679,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nAC_ARG_WITH(ctl-plugins,\n  AS_HELP_STRING([--with-ctl-plugins=<list>],\n    [build control plugins (default = all)]),\n  [ctl_plugins=\"$withval\"], [ctl_plugins=\"all\"])\n\nCTL_PLUGIN_LIST=\"remap shm ext\"\n",
                    "rendered": {
                      "text": "\nAC_ARG_WITH(ctl-plugins,\n  AS_HELP_STRING([--with-ctl-plugins=<list>],\n    [build control plugins (default = all)]),\n  [ctl_plugins=\"$withval\"], [ctl_plugins=\"all\"])\n\nCTL_PLUGIN_LIST=\"remap shm ext\"\n",
                      "markdown": "`\nAC_ARG_WITH(ctl-plugins,\n  AS_HELP_STRING([--with-ctl-plugins=<list>],\n    [build control plugins (default = all)]),\n  [ctl_plugins=\"$withval\"], [ctl_plugins=\"all\"])\n\nCTL_PLUGIN_LIST=\"remap shm ext\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 675,
                  "startColumn": 3,
                  "endLine": 675,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  fi\ndone\n\ndnl Control Plugins\n\nAC_ARG_WITH(ctl-plugins,\n  AS_HELP_STRING([--with-ctl-plugins=<list>],\n",
                    "rendered": {
                      "text": "  fi\ndone\n\ndnl Control Plugins\n\nAC_ARG_WITH(ctl-plugins,\n  AS_HELP_STRING([--with-ctl-plugins=<list>],\n",
                      "markdown": "`  fi\ndone\n\ndnl Control Plugins\n\nAC_ARG_WITH(ctl-plugins,\n  AS_HELP_STRING([--with-ctl-plugins=<list>],\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 47,
                  "endLine": 206,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    debug_assert=\"$enableval\", debug_assert=\"no\")\n  if test \"$debug_assert\" = \"yes\"; then\n    AC_MSG_RESULT(yes)\n    AC_DEFINE(ALSA_DEBUG_ASSERT,,[Enable assert at error message handler])\n  else\n    AC_MSG_RESULT(no)\n  fi\n",
                    "rendered": {
                      "text": "    debug_assert=\"$enableval\", debug_assert=\"no\")\n  if test \"$debug_assert\" = \"yes\"; then\n    AC_MSG_RESULT(yes)\n    AC_DEFINE(ALSA_DEBUG_ASSERT,,[Enable assert at error message handler])\n  else\n    AC_MSG_RESULT(no)\n  fi\n",
                      "markdown": "`    debug_assert=\"$enableval\", debug_assert=\"no\")\n  if test \"$debug_assert\" = \"yes\"; then\n    AC_MSG_RESULT(yes)\n    AC_DEFINE(ALSA_DEBUG_ASSERT,,[Enable assert at error message handler])\n  else\n    AC_MSG_RESULT(no)\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 25,
                  "endLine": 202,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  AC_MSG_CHECKING(for debug assert)\n  AC_ARG_ENABLE(debug-assert,\n    AS_HELP_STRING([--enable-debug],\n      [enable assert call at the default error message handler]),\n    debug_assert=\"$enableval\", debug_assert=\"no\")\n  if test \"$debug_assert\" = \"yes\"; then\n    AC_MSG_RESULT(yes)\n",
                    "rendered": {
                      "text": "  AC_MSG_CHECKING(for debug assert)\n  AC_ARG_ENABLE(debug-assert,\n    AS_HELP_STRING([--enable-debug],\n      [enable assert call at the default error message handler]),\n    debug_assert=\"$enableval\", debug_assert=\"no\")\n  if test \"$debug_assert\" = \"yes\"; then\n    AC_MSG_RESULT(yes)\n",
                      "markdown": "`  AC_MSG_CHECKING(for debug assert)\n  AC_ARG_ENABLE(debug-assert,\n    AS_HELP_STRING([--enable-debug],\n      [enable assert call at the default error message handler]),\n    debug_assert=\"$enableval\", debug_assert=\"no\")\n  if test \"$debug_assert\" = \"yes\"; then\n    AC_MSG_RESULT(yes)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 817,
                  "startColumn": 91,
                  "endLine": 818,
                  "endColumn": 4,
                  "snippet": {
                    "text": "test \"$build_seq\" = \"yes\" && echo \"#include <alsa/seq_event.h>\" >> include/asoundlib.h\ntest \"$build_seq\" = \"yes\" && echo \"#include <alsa/seq.h>\" >> include/asoundlib.h\ntest \"$build_seq\" = \"yes\" && echo \"#include <alsa/seqmid.h>\" >> include/asoundlib.h\ntest \"$build_seq\" = \"yes\" && echo \"#include <alsa/seq_midi_event.h>\" >> include/asoundlib.h\ncat \"$srcdir\"/include/asoundlib-tail.h >> include/asoundlib.h\n",
                    "rendered": {
                      "text": "test \"$build_seq\" = \"yes\" && echo \"#include <alsa/seq_event.h>\" >> include/asoundlib.h\ntest \"$build_seq\" = \"yes\" && echo \"#include <alsa/seq.h>\" >> include/asoundlib.h\ntest \"$build_seq\" = \"yes\" && echo \"#include <alsa/seqmid.h>\" >> include/asoundlib.h\ntest \"$build_seq\" = \"yes\" && echo \"#include <alsa/seq_midi_event.h>\" >> include/asoundlib.h\ncat \"$srcdir\"/include/asoundlib-tail.h >> include/asoundlib.h\n",
                      "markdown": "`test \"$build_seq\" = \"yes\" && echo \"#include <alsa/seq_event.h>\" >> include/asoundlib.h\ntest \"$build_seq\" = \"yes\" && echo \"#include <alsa/seq.h>\" >> include/asoundlib.h\ntest \"$build_seq\" = \"yes\" && echo \"#include <alsa/seqmid.h>\" >> include/asoundlib.h\ntest \"$build_seq\" = \"yes\" && echo \"#include <alsa/seq_midi_event.h>\" >> include/asoundlib.h\ncat \"$srcdir\"/include/asoundlib-tail.h >> include/asoundlib.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 790,
                  "startColumn": 2,
                  "endLine": 791,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#define __BIG_ENDIAN BIG_ENDIAN\n#endif\nEOF\nfi\ncat >> include/asoundlib.h <<EOF\n\n#ifndef DOC_HIDDEN\n#ifndef __GNUC__\n",
                    "rendered": {
                      "text": "#define __BIG_ENDIAN BIG_ENDIAN\n#endif\nEOF\nfi\ncat >> include/asoundlib.h <<EOF\n\n#ifndef DOC_HIDDEN\n#ifndef __GNUC__\n",
                      "markdown": "`#define __BIG_ENDIAN BIG_ENDIAN\n#endif\nEOF\nfi\ncat >> include/asoundlib.h <<EOF\n\n#ifndef DOC_HIDDEN\n#ifndef __GNUC__\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 777,
                  "startColumn": 4,
                  "endLine": 778,
                  "endColumn": 4,
                  "snippet": {
                    "text": "cp \"$srcdir\"/include/asoundlib-head.h include/asoundlib.h\nif test \"$ac_cv_header_sys_endian_h\" != \"yes\"; then\ntest \"$ac_cv_header_endian_h\" = \"yes\" && echo \"#include <endian.h>\" >> include/asoundlib.h\nelse\ncat >> include/asoundlib.h <<EOF\n#include <sys/endian.h>\n#ifndef __BYTE_ORDER\n#define __BYTE_ORDER BYTE_ORDER\n",
                    "rendered": {
                      "text": "cp \"$srcdir\"/include/asoundlib-head.h include/asoundlib.h\nif test \"$ac_cv_header_sys_endian_h\" != \"yes\"; then\ntest \"$ac_cv_header_endian_h\" = \"yes\" && echo \"#include <endian.h>\" >> include/asoundlib.h\nelse\ncat >> include/asoundlib.h <<EOF\n#include <sys/endian.h>\n#ifndef __BYTE_ORDER\n#define __BYTE_ORDER BYTE_ORDER\n",
                      "markdown": "`cp \"$srcdir\"/include/asoundlib-head.h include/asoundlib.h\nif test \"$ac_cv_header_sys_endian_h\" != \"yes\"; then\ntest \"$ac_cv_header_endian_h\" = \"yes\" && echo \"#include <endian.h>\" >> include/asoundlib.h\nelse\ncat >> include/asoundlib.h <<EOF\n#include <sys/endian.h>\n#ifndef __BYTE_ORDER\n#define __BYTE_ORDER BYTE_ORDER\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 773,
                  "startColumn": 30,
                  "endLine": 774,
                  "endColumn": 3,
                  "snippet": {
                    "text": "AC_OUTPUT()\n\ndnl Create asoundlib.h dynamically according to configure options\necho \"Creating asoundlib.h...\"\ncp \"$srcdir\"/include/asoundlib-head.h include/asoundlib.h\nif test \"$ac_cv_header_sys_endian_h\" != \"yes\"; then\ntest \"$ac_cv_header_endian_h\" = \"yes\" && echo \"#include <endian.h>\" >> include/asoundlib.h\nelse\n",
                    "rendered": {
                      "text": "AC_OUTPUT()\n\ndnl Create asoundlib.h dynamically according to configure options\necho \"Creating asoundlib.h...\"\ncp \"$srcdir\"/include/asoundlib-head.h include/asoundlib.h\nif test \"$ac_cv_header_sys_endian_h\" != \"yes\"; then\ntest \"$ac_cv_header_endian_h\" = \"yes\" && echo \"#include <endian.h>\" >> include/asoundlib.h\nelse\n",
                      "markdown": "`AC_OUTPUT()\n\ndnl Create asoundlib.h dynamically according to configure options\necho \"Creating asoundlib.h...\"\ncp \"$srcdir\"/include/asoundlib-head.h include/asoundlib.h\nif test \"$ac_cv_header_sys_endian_h\" != \"yes\"; then\ntest \"$ac_cv_header_endian_h\" = \"yes\" && echo \"#include <endian.h>\" >> include/asoundlib.h\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 689,
                  "startColumn": 32,
                  "endLine": 689,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  eval build_ctl_$t=\"no\"\ndone\n\nctl_plugins=`echo $ctl_plugins | sed 's/,/ /g'`\nfor p in $ctl_plugins; do\n  for t in $CTL_PLUGIN_LIST; do\n    if test \"$p\" = \"$t\" -o \"$p\" = \"all\"; then\n",
                    "rendered": {
                      "text": "  eval build_ctl_$t=\"no\"\ndone\n\nctl_plugins=`echo $ctl_plugins | sed 's/,/ /g'`\nfor p in $ctl_plugins; do\n  for t in $CTL_PLUGIN_LIST; do\n    if test \"$p\" = \"$t\" -o \"$p\" = \"all\"; then\n",
                      "markdown": "`  eval build_ctl_$t=\"no\"\ndone\n\nctl_plugins=`echo $ctl_plugins | sed 's/,/ /g'`\nfor p in $ctl_plugins; do\n  for t in $CTL_PLUGIN_LIST; do\n    if test \"$p\" = \"$t\" -o \"$p\" = \"all\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 550,
                  "startColumn": 32,
                  "endLine": 550,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  eval build_pcm_$t=\"no\"\ndone\n\npcm_plugins=`echo $pcm_plugins | sed 's/,/ /g'`\nfor p in $pcm_plugins; do\n  for t in $PCM_PLUGIN_LIST; do\n    if test \"$p\" = \"$t\" -o \"$p\" = \"all\"; then\n",
                    "rendered": {
                      "text": "  eval build_pcm_$t=\"no\"\ndone\n\npcm_plugins=`echo $pcm_plugins | sed 's/,/ /g'`\nfor p in $pcm_plugins; do\n  for t in $PCM_PLUGIN_LIST; do\n    if test \"$p\" = \"$t\" -o \"$p\" = \"all\"; then\n",
                      "markdown": "`  eval build_pcm_$t=\"no\"\ndone\n\npcm_plugins=`echo $pcm_plugins | sed 's/,/ /g'`\nfor p in $pcm_plugins; do\n  for t in $PCM_PLUGIN_LIST; do\n    if test \"$p\" = \"$t\" -o \"$p\" = \"all\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 26,
                  "endLine": 385,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    [directory with aload* device files (default /dev)]),\n  [aload_dev_dir=\"$withval\"],\n  [aload_dev_dir=\"/dev\"])\nif echo \"$aload_dev_dir\" | grep -v '/$' > /dev/null; then\n  aload_dev_dir=\"$aload_dev_dir/\"\nfi\nAC_DEFINE_UNQUOTED(ALOAD_DEVICE_DIRECTORY, \"$aload_dev_dir\", [Directory with aload* device files])\n",
                    "rendered": {
                      "text": "    [directory with aload* device files (default /dev)]),\n  [aload_dev_dir=\"$withval\"],\n  [aload_dev_dir=\"/dev\"])\nif echo \"$aload_dev_dir\" | grep -v '/$' > /dev/null; then\n  aload_dev_dir=\"$aload_dev_dir/\"\nfi\nAC_DEFINE_UNQUOTED(ALOAD_DEVICE_DIRECTORY, \"$aload_dev_dir\", [Directory with aload* device files])\n",
                      "markdown": "`    [directory with aload* device files (default /dev)]),\n  [aload_dev_dir=\"$withval\"],\n  [aload_dev_dir=\"/dev\"])\nif echo \"$aload_dev_dir\" | grep -v '/$' > /dev/null; then\n  aload_dev_dir=\"$aload_dev_dir/\"\nfi\nAC_DEFINE_UNQUOTED(ALOAD_DEVICE_DIRECTORY, \"$aload_dev_dir\", [Directory with aload* device files])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 25,
                  "endLine": 373,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  [alsa_dev_dir=\"$withval\"],\n  [alsa_dev_dir=\"/dev/snd\"])\ndnl make sure it has a trailing slash\nif echo \"$alsa_dev_dir\" | grep -v '/$' > /dev/null; then\n  alsa_dev_dir=\"$alsa_dev_dir/\"\nfi\nAC_DEFINE_UNQUOTED(ALSA_DEVICE_DIRECTORY, \"$alsa_dev_dir\", [Directory with ALSA device files])\n",
                    "rendered": {
                      "text": "  [alsa_dev_dir=\"$withval\"],\n  [alsa_dev_dir=\"/dev/snd\"])\ndnl make sure it has a trailing slash\nif echo \"$alsa_dev_dir\" | grep -v '/$' > /dev/null; then\n  alsa_dev_dir=\"$alsa_dev_dir/\"\nfi\nAC_DEFINE_UNQUOTED(ALSA_DEVICE_DIRECTORY, \"$alsa_dev_dir\", [Directory with ALSA device files])\n",
                      "markdown": "`  [alsa_dev_dir=\"$withval\"],\n  [alsa_dev_dir=\"/dev/snd\"])\ndnl make sure it has a trailing slash\nif echo \"$alsa_dev_dir\" | grep -v '/$' > /dev/null; then\n  alsa_dev_dir=\"$alsa_dev_dir/\"\nfi\nAC_DEFINE_UNQUOTED(ALSA_DEVICE_DIRECTORY, \"$alsa_dev_dir\", [Directory with ALSA device files])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 20,
                  "endLine": 351,
                  "endColumn": 26,
                  "snippet": {
                    "text": "AC_MSG_RESULT($resmgr)\nif test \"$resmgr\" = \"yes\"; then\n  AC_CHECK_LIB(resmgr, rsm_open_device,,\n    AC_ERROR([Cannot find libresmgr]))\n  AC_DEFINE(SUPPORT_RESMGR, \"1\", [Support resmgr with alsa-lib])\nfi\n\n",
                    "rendered": {
                      "text": "AC_MSG_RESULT($resmgr)\nif test \"$resmgr\" = \"yes\"; then\n  AC_CHECK_LIB(resmgr, rsm_open_device,,\n    AC_ERROR([Cannot find libresmgr]))\n  AC_DEFINE(SUPPORT_RESMGR, \"1\", [Support resmgr with alsa-lib])\nfi\n\n",
                      "markdown": "`AC_MSG_RESULT($resmgr)\nif test \"$resmgr\" = \"yes\"; then\n  AC_CHECK_LIB(resmgr, rsm_open_device,,\n    AC_ERROR([Cannot find libresmgr]))\n  AC_DEFINE(SUPPORT_RESMGR, \"1\", [Support resmgr with alsa-lib])\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 57,
                  "endLine": 335,
                  "endColumn": 63,
                  "snippet": {
                    "text": "if test \"$wordexp\" = \"yes\" ; then\n  AC_DEFINE(HAVE_WORDEXP, \"1\", [Enable use of wordexp])\n  AC_MSG_RESULT(yes)\n  AC_CHECK_HEADER([wordexp.h],[], [AC_MSG_ERROR([Couldn't find wordexp.h])])\nelse\n  AC_MSG_RESULT(no)\nfi\n",
                    "rendered": {
                      "text": "if test \"$wordexp\" = \"yes\" ; then\n  AC_DEFINE(HAVE_WORDEXP, \"1\", [Enable use of wordexp])\n  AC_MSG_RESULT(yes)\n  AC_CHECK_HEADER([wordexp.h],[], [AC_MSG_ERROR([Couldn't find wordexp.h])])\nelse\n  AC_MSG_RESULT(no)\nfi\n",
                      "markdown": "`if test \"$wordexp\" = \"yes\" ; then\n  AC_DEFINE(HAVE_WORDEXP, \"1\", [Enable use of wordexp])\n  AC_MSG_RESULT(yes)\n  AC_CHECK_HEADER([wordexp.h],[], [AC_MSG_ERROR([Couldn't find wordexp.h])])\nelse\n  AC_MSG_RESULT(no)\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 16,
                  "endLine": 163,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    [use -Bsymbolic-functions option if available (optmization for size and speed)]),\n  symfuncs=\"$enableval\", symfuncs=\"no\")\nif test \"$symfuncs\" = \"yes\"; then\n  if ld --help | grep -q -- '-Bsymbolic-functions'; then\n    AC_MSG_RESULT(yes)\n  else\n    AC_MSG_RESULT(not supported by ld)\n",
                    "rendered": {
                      "text": "    [use -Bsymbolic-functions option if available (optmization for size and speed)]),\n  symfuncs=\"$enableval\", symfuncs=\"no\")\nif test \"$symfuncs\" = \"yes\"; then\n  if ld --help | grep -q -- '-Bsymbolic-functions'; then\n    AC_MSG_RESULT(yes)\n  else\n    AC_MSG_RESULT(not supported by ld)\n",
                      "markdown": "`    [use -Bsymbolic-functions option if available (optmization for size and speed)]),\n  symfuncs=\"$enableval\", symfuncs=\"no\")\nif test \"$symfuncs\" = \"yes\"; then\n  if ld --help | grep -q -- '-Bsymbolic-functions'; then\n    AC_MSG_RESULT(yes)\n  else\n    AC_MSG_RESULT(not supported by ld)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 21,
                  "endLine": 136,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n  if test $major -eq 1 && test $minor -gt 3; then\n    pass=1\n",
                    "rendered": {
                      "text": "  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n  if test $major -eq 1 && test $minor -gt 3; then\n    pass=1\n",
                      "markdown": "`  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n  if test $major -eq 1 && test $minor -gt 3; then\n    pass=1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 21,
                  "endLine": 135,
                  "endColumn": 26,
                  "snippet": {
                    "text": "if test \"$versioned\" = \"yes\"; then\n  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n  if test $major -eq 1 && test $minor -gt 3; then\n",
                    "rendered": {
                      "text": "if test \"$versioned\" = \"yes\"; then\n  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n  if test $major -eq 1 && test $minor -gt 3; then\n",
                      "markdown": "`if test \"$versioned\" = \"yes\"; then\n  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n  if test $major -eq 1 && test $minor -gt 3; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 62,
                  "endLine": 134,
                  "endColumn": 67,
                  "snippet": {
                    "text": "  versioned=\"$withval\", versioned=\"yes\")\nif test \"$versioned\" = \"yes\"; then\n  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n",
                    "rendered": {
                      "text": "  versioned=\"$withval\", versioned=\"yes\")\nif test \"$versioned\" = \"yes\"; then\n  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n",
                      "markdown": "`  versioned=\"$withval\", versioned=\"yes\")\nif test \"$versioned\" = \"yes\"; then\n  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 46,
                  "endLine": 134,
                  "endColumn": 51,
                  "snippet": {
                    "text": "  versioned=\"$withval\", versioned=\"yes\")\nif test \"$versioned\" = \"yes\"; then\n  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n",
                    "rendered": {
                      "text": "  versioned=\"$withval\", versioned=\"yes\")\nif test \"$versioned\" = \"yes\"; then\n  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n",
                      "markdown": "`  versioned=\"$withval\", versioned=\"yes\")\nif test \"$versioned\" = \"yes\"; then\n  # it seems that GNU ld versions since 2.10 are not broken\n  xres=`grep '^VERSION=' ${srcdir}/ltmain.sh | cut -d = -f 2 | cut -d \\\" -f 2`\n  major=`echo $xres | cut -d . -f 1`\n  minor=`echo $xres | cut -d . -f 2`\n  pass=0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/configure.ac"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 77,
                  "endLine": 66,
                  "endColumn": 4,
                  "snippet": {
                    "text": "test \"x$prefix\" = xNONE && prefix=$ac_default_prefix\n\ndnl Do not build static and shared libraries together\nif test \"$enable_static\" = \"$enable_shared\" -a \"$enable_static\" = \"yes\"; then\ncat <<EOF\n  Please, do not try to compile static and shared libraries together.\n  See INSTALL file for more details (do not use --enable-shared=yes with\n  --enable-static=yes).\n",
                    "rendered": {
                      "text": "test \"x$prefix\" = xNONE && prefix=$ac_default_prefix\n\ndnl Do not build static and shared libraries together\nif test \"$enable_static\" = \"$enable_shared\" -a \"$enable_static\" = \"yes\"; then\ncat <<EOF\n  Please, do not try to compile static and shared libraries together.\n  See INSTALL file for more details (do not use --enable-shared=yes with\n  --enable-static=yes).\n",
                      "markdown": "`test \"x$prefix\" = xNONE && prefix=$ac_default_prefix\n\ndnl Do not build static and shared libraries together\nif test \"$enable_static\" = \"$enable_shared\" -a \"$enable_static\" = \"yes\"; then\ncat <<EOF\n  Please, do not try to compile static and shared libraries together.\n  See INSTALL file for more details (do not use --enable-shared=yes with\n  --enable-static=yes).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/Makefile.am"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 27,
                  "snippet": {
                    "text": "AM_CPPFLAGS=-I$(top_srcdir)/include\n\nrpm: dist\n\t$(MAKE) -C utils rpm\n\ndist-hook:\n\t-chmod -R a+r $(distdir)\n\t@if ! test -z \"$(AMTAR)\"; then \\\n",
                    "rendered": {
                      "text": "AM_CPPFLAGS=-I$(top_srcdir)/include\n\nrpm: dist\n\t$(MAKE) -C utils rpm\n\ndist-hook:\n\t-chmod -R a+r $(distdir)\n\t@if ! test -z \"$(AMTAR)\"; then \\\n",
                      "markdown": "`AM_CPPFLAGS=-I$(top_srcdir)/include\n\nrpm: dist\n\t$(MAKE) -C utils rpm\n\ndist-hook:\n\t-chmod -R a+r $(distdir)\n\t@if ! test -z \"$(AMTAR)\"; then \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/parser.c"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 32,
                  "endLine": 156,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tint err;\n\n\tif (snd_config_get_type(cfg) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tSNDERR(\"compound type expected at top level\");\n\t\treturn -EINVAL;\n\t}\n\n",
                    "rendered": {
                      "text": "\tint err;\n\n\tif (snd_config_get_type(cfg) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tSNDERR(\"compound type expected at top level\");\n\t\treturn -EINVAL;\n\t}\n\n",
                      "markdown": "`\tint err;\n\n\tif (snd_config_get_type(cfg) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tSNDERR(\"compound type expected at top level\");\n\t\treturn -EINVAL;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/parser.c"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 35,
                  "endLine": 156,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tint err;\n\n\tif (snd_config_get_type(cfg) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tSNDERR(\"compound type expected at top level\");\n\t\treturn -EINVAL;\n\t}\n\n",
                    "rendered": {
                      "text": "\tint err;\n\n\tif (snd_config_get_type(cfg) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tSNDERR(\"compound type expected at top level\");\n\t\treturn -EINVAL;\n\t}\n\n",
                      "markdown": "`\tint err;\n\n\tif (snd_config_get_type(cfg) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tSNDERR(\"compound type expected at top level\");\n\t\treturn -EINVAL;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/save.c"
                },
                "region": {
                  "startLine": 632,
                  "startColumn": 1,
                  "endLine": 632,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tgoto _err;\n\t\t}\n\t\tsnd_config_delete(top);\n\t\ttop = top2;\n\t}\n\n\ttplg_buf_init(&buf2);\n",
                    "rendered": {
                      "text": "\t\t\tgoto _err;\n\t\t}\n\t\tsnd_config_delete(top);\n\t\ttop = top2;\n\t}\n\n\ttplg_buf_init(&buf2);\n",
                      "markdown": "`\t\t\tgoto _err;\n\t\t}\n\t\tsnd_config_delete(top);\n\t\ttop = top2;\n\t}\n\n\ttplg_buf_init(&buf2);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/save.c"
                },
                "region": {
                  "startLine": 626,
                  "startColumn": 20,
                  "endLine": 626,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tif (flags & SND_TPLG_SAVE_SORT) {\n\t\ttop2 = sort_config(NULL, top);\n\t\tif (top2 == NULL) {\n\t\t\tSNDERR(\"could not sort configuration\");\n\t\t\tsnd_config_delete(top);\n\t\t\terr = -EINVAL;\n\t\t\tgoto _err;\n",
                    "rendered": {
                      "text": "\tif (flags & SND_TPLG_SAVE_SORT) {\n\t\ttop2 = sort_config(NULL, top);\n\t\tif (top2 == NULL) {\n\t\t\tSNDERR(\"could not sort configuration\");\n\t\t\tsnd_config_delete(top);\n\t\t\terr = -EINVAL;\n\t\t\tgoto _err;\n",
                      "markdown": "`\tif (flags & SND_TPLG_SAVE_SORT) {\n\t\ttop2 = sort_config(NULL, top);\n\t\tif (top2 == NULL) {\n\t\t\tSNDERR(\"could not sort configuration\");\n\t\t\tsnd_config_delete(top);\n\t\t\terr = -EINVAL;\n\t\t\tgoto _err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/dapm.c"
                },
                "region": {
                  "startLine": 1013,
                  "startColumn": 29,
                  "endLine": 1013,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t bin, size2);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSNDERR(\"dapm widget: wrong control type %d\",\n\t\t\t       chdr->type);\n\t\t\terr = -EINVAL;\n\t\t\tgoto retval;\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t bin, size2);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSNDERR(\"dapm widget: wrong control type %d\",\n\t\t\t       chdr->type);\n\t\t\terr = -EINVAL;\n\t\t\tgoto retval;\n",
                      "markdown": "`\t\t\t\t\t\t\t bin, size2);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSNDERR(\"dapm widget: wrong control type %d\",\n\t\t\t       chdr->type);\n\t\t\terr = -EINVAL;\n\t\t\tgoto retval;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/dapm.c"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 29,
                  "endLine": 360,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tif (err < 0)\n\t\t\treturn err;\n\n\t\ttplg_dbg(\"route: sink '%s', control '%s', source '%s'\",\n\t\t\t\tline->sink, line->control, line->source);\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tif (err < 0)\n\t\t\treturn err;\n\n\t\ttplg_dbg(\"route: sink '%s', control '%s', source '%s'\",\n\t\t\t\tline->sink, line->control, line->source);\n\t}\n\n",
                      "markdown": "`\t\tif (err < 0)\n\t\t\treturn err;\n\n\t\ttplg_dbg(\"route: sink '%s', control '%s', source '%s'\",\n\t\t\t\tline->sink, line->control, line->source);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/dapm.c"
                },
                "region": {
                  "startLine": 314,
                  "endLine": 314,
                  "endColumn": 9,
                  "snippet": {
                    "text": "second:\n\t/* find second , */\n\tsink = buf;\n\tcontrol = &buf[i + 2];\n\tbuf[i] = 0;\n\n\tfor (; i < len; i++) {\n",
                    "rendered": {
                      "text": "second:\n\t/* find second , */\n\tsink = buf;\n\tcontrol = &buf[i + 2];\n\tbuf[i] = 0;\n\n\tfor (; i < len; i++) {\n",
                      "markdown": "`second:\n\t/* find second , */\n\tsink = buf;\n\tcontrol = &buf[i + 2];\n\tbuf[i] = 0;\n\n\tfor (; i < len; i++) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/dapm.c"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 32,
                  "endLine": 233,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\t\t\tSND_TPLG_TYPE_MIXER, elem->index) &&\n\t\t\t!tplg_elem_lookup(&tplg->enum_list, route->control,\n\t\t\t\t\tSND_TPLG_TYPE_ENUM, elem->index)) {\n\t\t\t\tSNDERR(\"undefined mixer/enum control '%s'\",\n\t\t\t\t       route->control);\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\tSND_TPLG_TYPE_MIXER, elem->index) &&\n\t\t\t!tplg_elem_lookup(&tplg->enum_list, route->control,\n\t\t\t\t\tSND_TPLG_TYPE_ENUM, elem->index)) {\n\t\t\t\tSNDERR(\"undefined mixer/enum control '%s'\",\n\t\t\t\t       route->control);\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\t\t\t\t\tSND_TPLG_TYPE_MIXER, elem->index) &&\n\t\t\t!tplg_elem_lookup(&tplg->enum_list, route->control,\n\t\t\t\t\tSND_TPLG_TYPE_ENUM, elem->index)) {\n\t\t\t\tSNDERR(\"undefined mixer/enum control '%s'\",\n\t\t\t\t       route->control);\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/dapm.c"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 35,
                  "endLine": 213,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t}\n\n\t\troute = elem->route;\n\t\ttplg_dbg(\"Check route: sink '%s', control '%s', source '%s'\",\n\t\t\t route->sink, route->control, route->source);\n\n\t\t/* validate sink */\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\troute = elem->route;\n\t\ttplg_dbg(\"Check route: sink '%s', control '%s', source '%s'\",\n\t\t\t route->sink, route->control, route->source);\n\n\t\t/* validate sink */\n",
                      "markdown": "`\t\t}\n\n\t\troute = elem->route;\n\t\ttplg_dbg(\"Check route: sink '%s', control '%s', source '%s'\",\n\t\t\t route->sink, route->control, route->source);\n\n\t\t/* validate sink */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/dapm.c"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 1,
                  "endLine": 450,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t} else if (block < 100) {\n\t\tfmt = \"\\tset%02u {\\n\";\n\t} else if (block < 1000) {\n\t\tfmt = \"\\tset%03u {\\n\";\n\t} else {\n\t\treturn -EINVAL;\n\t}\n",
                    "rendered": {
                      "text": "\t} else if (block < 100) {\n\t\tfmt = \"\\tset%02u {\\n\";\n\t} else if (block < 1000) {\n\t\tfmt = \"\\tset%03u {\\n\";\n\t} else {\n\t\treturn -EINVAL;\n\t}\n",
                      "markdown": "`\t} else if (block < 100) {\n\t\tfmt = \"\\tset%02u {\\n\";\n\t} else if (block < 1000) {\n\t\tfmt = \"\\tset%03u {\\n\";\n\t} else {\n\t\treturn -EINVAL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/dapm.c"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 1,
                  "endLine": 448,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (block < 10) {\n\t\tfmt = \"\\tset%u {\\n\";\n\t} else if (block < 100) {\n\t\tfmt = \"\\tset%02u {\\n\";\n\t} else if (block < 1000) {\n\t\tfmt = \"\\tset%03u {\\n\";\n\t} else {\n",
                    "rendered": {
                      "text": "\tif (block < 10) {\n\t\tfmt = \"\\tset%u {\\n\";\n\t} else if (block < 100) {\n\t\tfmt = \"\\tset%02u {\\n\";\n\t} else if (block < 1000) {\n\t\tfmt = \"\\tset%03u {\\n\";\n\t} else {\n",
                      "markdown": "`\tif (block < 10) {\n\t\tfmt = \"\\tset%u {\\n\";\n\t} else if (block < 100) {\n\t\tfmt = \"\\tset%02u {\\n\";\n\t} else if (block < 1000) {\n\t\tfmt = \"\\tset%03u {\\n\";\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/dapm.c"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 1,
                  "endLine": 446,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (count == 0)\n\t\treturn 0;\n\tif (block < 10) {\n\t\tfmt = \"\\tset%u {\\n\";\n\t} else if (block < 100) {\n\t\tfmt = \"\\tset%02u {\\n\";\n\t} else if (block < 1000) {\n",
                    "rendered": {
                      "text": "\tif (count == 0)\n\t\treturn 0;\n\tif (block < 10) {\n\t\tfmt = \"\\tset%u {\\n\";\n\t} else if (block < 100) {\n\t\tfmt = \"\\tset%02u {\\n\";\n\t} else if (block < 1000) {\n",
                      "markdown": "`\tif (count == 0)\n\t\treturn 0;\n\tif (block < 10) {\n\t\tfmt = \"\\tset%u {\\n\";\n\t} else if (block < 100) {\n\t\tfmt = \"\\tset%02u {\\n\";\n\t} else if (block < 1000) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/dapm.c"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 17,
                  "endLine": 157,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by widget '%s'\",\n\t\t\t\tref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by widget '%s'\",\n\t\t\t\tref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\t}\n\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by widget '%s'\",\n\t\t\t\tref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/channel.c"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 23,
                  "endLine": 102,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n\tchannel += tplg->channel_idx;\n\tsnd_config_get_id(cfg, &id);\n\ttplg_dbg(\"\\tChannel %s at index %d\", id, tplg->channel_idx);\n\n\tchannel_id = lookup_channel(id);\n\tif (channel_id < 0) {\n",
                    "rendered": {
                      "text": "\n\tchannel += tplg->channel_idx;\n\tsnd_config_get_id(cfg, &id);\n\ttplg_dbg(\"\\tChannel %s at index %d\", id, tplg->channel_idx);\n\n\tchannel_id = lookup_channel(id);\n\tif (channel_id < 0) {\n",
                      "markdown": "`\n\tchannel += tplg->channel_idx;\n\tsnd_config_get_id(cfg, &id);\n\ttplg_dbg(\"\\tChannel %s at index %d\", id, tplg->channel_idx);\n\n\tchannel_id = lookup_channel(id);\n\tif (channel_id < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/pcm.c"
                },
                "region": {
                  "startLine": 413,
                  "endLine": 413,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tif (!elem)\n\t\treturn -ENOMEM;\n\n\tsc = elem->stream_caps;\n\tsc->size = elem->size;\n\tsnd_strlcpy(sc->name, elem->id, SNDRV_CTL_ELEM_ID_NAME_MAXLEN);\n\n",
                    "rendered": {
                      "text": "\tif (!elem)\n\t\treturn -ENOMEM;\n\n\tsc = elem->stream_caps;\n\tsc->size = elem->size;\n\tsnd_strlcpy(sc->name, elem->id, SNDRV_CTL_ELEM_ID_NAME_MAXLEN);\n\n",
                      "markdown": "`\tif (!elem)\n\t\treturn -ENOMEM;\n\n\tsc = elem->stream_caps;\n\tsc->size = elem->size;\n\tsnd_strlcpy(sc->name, elem->id, SNDRV_CTL_ELEM_ID_NAME_MAXLEN);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/pcm.c"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 18,
                  "endLine": 253,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tref->elem = tplg_elem_lookup(&tplg->hw_cfg_list,\n\t\t\t\tref->id, SND_TPLG_TYPE_HW_CONFIG, elem->index);\n\t\t\tif (!ref->elem) {\n\t\t\t\tSNDERR(\"cannot find HW config '%s'\"\n\t\t\t\t       \" referenced by link '%s'\",\n\t\t\t\t       ref->id, elem->id);\n\t\t\t\treturn -EINVAL;\n",
                    "rendered": {
                      "text": "\t\t\tref->elem = tplg_elem_lookup(&tplg->hw_cfg_list,\n\t\t\t\tref->id, SND_TPLG_TYPE_HW_CONFIG, elem->index);\n\t\t\tif (!ref->elem) {\n\t\t\t\tSNDERR(\"cannot find HW config '%s'\"\n\t\t\t\t       \" referenced by link '%s'\",\n\t\t\t\t       ref->id, elem->id);\n\t\t\t\treturn -EINVAL;\n",
                      "markdown": "`\t\t\tref->elem = tplg_elem_lookup(&tplg->hw_cfg_list,\n\t\t\t\tref->id, SND_TPLG_TYPE_HW_CONFIG, elem->index);\n\t\t\tif (!ref->elem) {\n\t\t\t\tSNDERR(\"cannot find HW config '%s'\"\n\t\t\t\t       \" referenced by link '%s'\",\n\t\t\t\t       ref->id, elem->id);\n\t\t\t\treturn -EINVAL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/pcm.c"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 17,
                  "endLine": 118,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t\t\treturn err;\n\t\t}\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" PCM '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\treturn err;\n\t\t}\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" PCM '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\t\t\treturn err;\n\t\t}\n\t\tif (!ref->elem) {\n\t\t\tSNDERR(\"cannot find '%s' referenced by\"\n\t\t\t\t\" PCM '%s'\", ref->id, elem->id);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/builder.c"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 23,
                  "endLine": 53,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n\t/* make sure file offset is aligned with the calculated HDR offset */\n\tif (tplg->bin_pos != tplg->next_hdr_pos) {\n\t\tSNDERR(\"New header is at offset 0x%zx but file\"\n\t\t\t\" offset 0x%zx is %s by %ld bytes\",\n\t\t\ttplg->next_hdr_pos, tplg->bin_pos,\n\t\t\ttplg->bin_pos > tplg->next_hdr_pos ? \"ahead\" : \"behind\",\n",
                    "rendered": {
                      "text": "\n\t/* make sure file offset is aligned with the calculated HDR offset */\n\tif (tplg->bin_pos != tplg->next_hdr_pos) {\n\t\tSNDERR(\"New header is at offset 0x%zx but file\"\n\t\t\t\" offset 0x%zx is %s by %ld bytes\",\n\t\t\ttplg->next_hdr_pos, tplg->bin_pos,\n\t\t\ttplg->bin_pos > tplg->next_hdr_pos ? \"ahead\" : \"behind\",\n",
                      "markdown": "`\n\t/* make sure file offset is aligned with the calculated HDR offset */\n\tif (tplg->bin_pos != tplg->next_hdr_pos) {\n\t\tSNDERR(\"New header is at offset 0x%zx but file\"\n\t\t\t\" offset 0x%zx is %s by %ld bytes\",\n\t\t\ttplg->next_hdr_pos, tplg->bin_pos,\n\t\t\ttplg->bin_pos > tplg->next_hdr_pos ? \"ahead\" : \"behind\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/data.c"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 7,
                  "endLine": 167,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\tstruct snd_soc_tplg_private *priv = NULL;\n\tconst char *value = NULL;\n\tchar filename[PATH_MAX];\n\tchar *env = getenv(ALSA_CONFIG_TPLG_VAR);\n\tFILE *fp;\n\tsize_t size, bytes_read;\n\tint ret = 0;\n",
                    "rendered": {
                      "text": "\tstruct snd_soc_tplg_private *priv = NULL;\n\tconst char *value = NULL;\n\tchar filename[PATH_MAX];\n\tchar *env = getenv(ALSA_CONFIG_TPLG_VAR);\n\tFILE *fp;\n\tsize_t size, bytes_read;\n\tint ret = 0;\n",
                      "markdown": "`\tstruct snd_soc_tplg_private *priv = NULL;\n\tconst char *value = NULL;\n\tchar filename[PATH_MAX];\n\tchar *env = getenv(ALSA_CONFIG_TPLG_VAR);\n\tFILE *fp;\n\tsize_t size, bytes_read;\n\tint ret = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/data.c"
                },
                "region": {
                  "startLine": 1511,
                  "startColumn": 16,
                  "endLine": 1511,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tref_elem = tplg_elem_lookup(&tplg->pdata_list,\n\t\t\t\t     ref->id, SND_TPLG_TYPE_DATA, elem->index);\n\tif (!ref_elem) {\n\t\tSNDERR(\"cannot find data '%s' referenced by\"\n\t\t       \" element '%s'\", ref->id, elem->id);\n\t\treturn -EINVAL;\n\t}\n",
                    "rendered": {
                      "text": "\tref_elem = tplg_elem_lookup(&tplg->pdata_list,\n\t\t\t\t     ref->id, SND_TPLG_TYPE_DATA, elem->index);\n\tif (!ref_elem) {\n\t\tSNDERR(\"cannot find data '%s' referenced by\"\n\t\t       \" element '%s'\", ref->id, elem->id);\n\t\treturn -EINVAL;\n\t}\n",
                      "markdown": "`\tref_elem = tplg_elem_lookup(&tplg->pdata_list,\n\t\t\t\t     ref->id, SND_TPLG_TYPE_DATA, elem->index);\n\tif (!ref_elem) {\n\t\tSNDERR(\"cannot find data '%s' referenced by\"\n\t\t       \" element '%s'\", ref->id, elem->id);\n\t\treturn -EINVAL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/data.c"
                },
                "region": {
                  "startLine": 911,
                  "startColumn": 1,
                  "endLine": 911,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\telse if (tuples->num_sets < 100)\n\t\tfmt = \"%02u_\";\n\telse if (tuples->num_sets < 1000)\n\t\tfmt = \"%03u_\";\n\telse\n\t\treturn -EINVAL;\n\tif (set->num_tuples > 1) {\n",
                    "rendered": {
                      "text": "\telse if (tuples->num_sets < 100)\n\t\tfmt = \"%02u_\";\n\telse if (tuples->num_sets < 1000)\n\t\tfmt = \"%03u_\";\n\telse\n\t\treturn -EINVAL;\n\tif (set->num_tuples > 1) {\n",
                      "markdown": "`\telse if (tuples->num_sets < 100)\n\t\tfmt = \"%02u_\";\n\telse if (tuples->num_sets < 1000)\n\t\tfmt = \"%03u_\";\n\telse\n\t\treturn -EINVAL;\n\tif (set->num_tuples > 1) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/data.c"
                },
                "region": {
                  "startLine": 909,
                  "startColumn": 1,
                  "endLine": 909,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (tuples->num_sets < 10)\n\t\tfmt = \"%u_\";\n\telse if (tuples->num_sets < 100)\n\t\tfmt = \"%02u_\";\n\telse if (tuples->num_sets < 1000)\n\t\tfmt = \"%03u_\";\n\telse\n",
                    "rendered": {
                      "text": "\tif (tuples->num_sets < 10)\n\t\tfmt = \"%u_\";\n\telse if (tuples->num_sets < 100)\n\t\tfmt = \"%02u_\";\n\telse if (tuples->num_sets < 1000)\n\t\tfmt = \"%03u_\";\n\telse\n",
                      "markdown": "`\tif (tuples->num_sets < 10)\n\t\tfmt = \"%u_\";\n\telse if (tuples->num_sets < 100)\n\t\tfmt = \"%02u_\";\n\telse if (tuples->num_sets < 1000)\n\t\tfmt = \"%03u_\";\n\telse\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/data.c"
                },
                "region": {
                  "startLine": 907,
                  "startColumn": 1,
                  "endLine": 907,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (s == NULL)\n\t\treturn -EINVAL;\n\tif (tuples->num_sets < 10)\n\t\tfmt = \"%u_\";\n\telse if (tuples->num_sets < 100)\n\t\tfmt = \"%02u_\";\n\telse if (tuples->num_sets < 1000)\n",
                    "rendered": {
                      "text": "\tif (s == NULL)\n\t\treturn -EINVAL;\n\tif (tuples->num_sets < 10)\n\t\tfmt = \"%u_\";\n\telse if (tuples->num_sets < 100)\n\t\tfmt = \"%02u_\";\n\telse if (tuples->num_sets < 1000)\n",
                      "markdown": "`\tif (s == NULL)\n\t\treturn -EINVAL;\n\tif (tuples->num_sets < 10)\n\t\tfmt = \"%u_\";\n\telse if (tuples->num_sets < 100)\n\t\tfmt = \"%02u_\";\n\telse if (tuples->num_sets < 1000)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/data.c"
                },
                "region": {
                  "startLine": 702,
                  "startColumn": 17,
                  "endLine": 702,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n\t\ttokens = get_tokens(tplg, tuples);\n\t\tif (!tokens) {\n\t\t\tSNDERR(\"cannot find token for %s\", ref->id);\n\t\t\treturn -EINVAL;\n\t\t}\n\n",
                    "rendered": {
                      "text": "\n\t\ttokens = get_tokens(tplg, tuples);\n\t\tif (!tokens) {\n\t\t\tSNDERR(\"cannot find token for %s\", ref->id);\n\t\t\treturn -EINVAL;\n\t\t}\n\n",
                      "markdown": "`\n\t\ttokens = get_tokens(tplg, tuples);\n\t\tif (!tokens) {\n\t\t\tSNDERR(\"cannot find token for %s\", ref->id);\n\t\t\treturn -EINVAL;\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/data.c"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 17,
                  "endLine": 696,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t\t\tref->id, SND_TPLG_TYPE_TUPLE, elem->index);\n\t\ttuples = ref->elem;\n\t\tif (!tuples) {\n\t\t\tSNDERR(\"cannot find tuples %s\", ref->id);\n\t\t\treturn -EINVAL;\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tref->id, SND_TPLG_TYPE_TUPLE, elem->index);\n\t\ttuples = ref->elem;\n\t\tif (!tuples) {\n\t\t\tSNDERR(\"cannot find tuples %s\", ref->id);\n\t\t\treturn -EINVAL;\n\t\t}\n\n",
                      "markdown": "`\t\t\t\tref->id, SND_TPLG_TYPE_TUPLE, elem->index);\n\t\ttuples = ref->elem;\n\t\tif (!tuples) {\n\t\t\tSNDERR(\"cannot find tuples %s\", ref->id);\n\t\t\treturn -EINVAL;\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/topology/data.c"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 15,
                  "endLine": 524,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\treturn tokens->token[i].value;\n\t}\n\n\tSNDERR(\"cannot find token id '%s'\", token_id);\n\treturn -1;\n}\n\n",
                    "rendered": {
                      "text": "\t\t\treturn tokens->token[i].value;\n\t}\n\n\tSNDERR(\"cannot find token id '%s'\", token_id);\n\treturn -1;\n}\n\n",
                      "markdown": "`\t\t\treturn tokens->token[i].value;\n\t}\n\n\tSNDERR(\"cannot find token id '%s'\", token_id);\n\treturn -1;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/rawmidi/rawmidi_hw.c"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "#include \"../control/control_local.h\"\n#include \"rawmidi_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_rawmidi_hw = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"../control/control_local.h\"\n#include \"rawmidi_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_rawmidi_hw = \"\";\n#endif\n\n",
                      "markdown": "`#include \"../control/control_local.h\"\n#include \"rawmidi_local.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_rawmidi_hw = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/rawmidi/rawmidi_virt.c"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7,
                  "endLine": 31,
                  "snippet": {
                    "text": "#include \"seq.h\"\n#include \"seq_midi_event.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_rawmidi_virt = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"seq.h\"\n#include \"seq_midi_event.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_rawmidi_virt = \"\";\n#endif\n\n",
                      "markdown": "`#include \"seq.h\"\n#include \"seq_midi_event.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_rawmidi_virt = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/rawmidi/rawmidi_symbols.c"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 22,
                  "snippet": {
                    "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_rawmidi_hw;\n#ifdef BUILD_SEQ\nextern const char *_snd_module_rawmidi_virt;\n",
                    "rendered": {
                      "text": " *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_rawmidi_hw;\n#ifdef BUILD_SEQ\nextern const char *_snd_module_rawmidi_virt;\n",
                      "markdown": "` *\n */\n\n#ifndef PIC\n\nextern const char *_snd_module_rawmidi_hw;\n#ifdef BUILD_SEQ\nextern const char *_snd_module_rawmidi_virt;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/rawmidi/rawmidi.c"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 7,
                  "endLine": 251,
                  "snippet": {
                    "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_rawmidi_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_rawmidi_open_symbols();\n#endif\n\topen_func = snd_dlobj_cache_get2(lib, open_name,\n\t\t\tSND_DLSYM_VERSION(SND_RAWMIDI_DLSYM_VERSION), 1);\n",
                    "rendered": {
                      "text": "\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_rawmidi_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_rawmidi_open_symbols();\n#endif\n\topen_func = snd_dlobj_cache_get2(lib, open_name,\n\t\t\tSND_DLSYM_VERSION(SND_RAWMIDI_DLSYM_VERSION), 1);\n",
                      "markdown": "`\t\topen_name = buf;\n\t\tsnprintf(buf, sizeof(buf), \"_snd_rawmidi_%s_open\", str);\n\t}\n#ifndef PIC\n\tsnd_rawmidi_open_symbols();\n#endif\n\topen_func = snd_dlobj_cache_get2(lib, open_name,\n\t\t\tSND_DLSYM_VERSION(SND_RAWMIDI_DLSYM_VERSION), 1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/rawmidi/rawmidi.c"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 7,
                  "endLine": 187,
                  "snippet": {
                    "text": "\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_rawmidi_t **, snd_rawmidi_t **,\n\t\t\t const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_rawmidi_open_symbols(void);\n#endif\n\tif (snd_config_get_type(rawmidi_conf) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tif (name)\n",
                    "rendered": {
                      "text": "\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_rawmidi_t **, snd_rawmidi_t **,\n\t\t\t const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_rawmidi_open_symbols(void);\n#endif\n\tif (snd_config_get_type(rawmidi_conf) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tif (name)\n",
                      "markdown": "`\tconst char *lib = NULL, *open_name = NULL;\n\tint (*open_func)(snd_rawmidi_t **, snd_rawmidi_t **,\n\t\t\t const char *, snd_config_t *, snd_config_t *, int) = NULL;\n#ifndef PIC\n\textern void *snd_rawmidi_open_symbols(void);\n#endif\n\tif (snd_config_get_type(rawmidi_conf) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tif (name)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/PC-Speaker.conf"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 2,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\ttype plug\n\t\tslave.pcm {\n\t\t\ttype softvol\n\t\t\tcontrol {\n\t\t\t\tname \"Master Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\ttype plug\n\t\tslave.pcm {\n\t\t\ttype softvol\n\t\t\tcontrol {\n\t\t\t\tname \"Master Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\ttype plug\n\t\tslave.pcm {\n\t\t\ttype softvol\n\t\t\tcontrol {\n\t\t\t\tname \"Master Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/PC-Speaker.conf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"Master Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"Master Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"Master Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/vc4-hdmi.conf"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2,
                  "endLine": 74,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t\t\"AES3=0x01\"\t# IEC958_AES3_CON_FS_NOTID (iec958 plugin will fill in actual rate)\n\t\t\t\t]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\"AES3=0x01\"\t# IEC958_AES3_CON_FS_NOTID (iec958 plugin will fill in actual rate)\n\t\t\t\t]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t\t\"AES3=0x01\"\t# IEC958_AES3_CON_FS_NOTID (iec958 plugin will fill in actual rate)\n\t\t\t\t]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/ICH.conf"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t}\n\t\tslave.channels 6\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tslave.channels 6\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\t}\n\t\tslave.channels 6\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/ICH.conf"
                },
                "region": {
                  "startLine": 95,
                  "endLine": 95,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/ICH.conf"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 2,
                  "endLine": 38,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/ICH.conf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/Loopback.conf"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 2,
                  "endLine": 52,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dsnoop:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"Digital Capture Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dsnoop:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"Digital Capture Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dsnoop:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"Digital Capture Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/Loopback.conf"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 2,
                  "endLine": 38,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/Loopback.conf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/ICH4.conf"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/ICH4.conf"
                },
                "region": {
                  "startLine": 95,
                  "endLine": 95,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\t\t]\n\t\t}\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/ICH4.conf"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 2,
                  "endLine": 38,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t@func concat\n\t\t\t\tstrings [ \"dmix:\" $CARD ]\n\t\t\t}\n\t\t\tcontrol {\n\t\t\t\tname \"PCM Playback Volume\"\n\t\t\t\tcard $CARD\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/ICH4.conf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                    "rendered": {
                      "text": "\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n",
                      "markdown": "`\t\ttype hw\n\t\tcard $CARD\n\t}\n\tcontrol {\n\t\tname \"PCM Playback Volume\"\n\t\tcard $CARD\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/cards/pistachio-card.conf"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 5,
                  "endLine": 5,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# Configuration for the pistachio chip.\n#\n# The data sheet of the chip and technical reference manual can be \nfound at \nhttps://docs.creatordev.io/ci40/guides/hardwaredocs/cXT200_datasheet2.p\ndf # and \nhttps://docs.creatordev.io/ci40/guides/hardwaredocs/MIPS_Creator_cXT200_Technical_Reference_Manual_1.0.112.pdf.\n",
                    "rendered": {
                      "text": "# Configuration for the pistachio chip.\n#\n# The data sheet of the chip and technical reference manual can be \nfound at \nhttps://docs.creatordev.io/ci40/guides/hardwaredocs/cXT200_datasheet2.p\ndf # and \nhttps://docs.creatordev.io/ci40/guides/hardwaredocs/MIPS_Creator_cXT200_Technical_Reference_Manual_1.0.112.pdf.\n",
                      "markdown": "`# Configuration for the pistachio chip.\n#\n# The data sheet of the chip and technical reference manual can be \nfound at \nhttps://docs.creatordev.io/ci40/guides/hardwaredocs/cXT200_datasheet2.p\ndf # and \nhttps://docs.creatordev.io/ci40/guides/hardwaredocs/MIPS_Creator_cXT200_Technical_Reference_Manual_1.0.112.pdf.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/ctl/default.conf"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 26,
                  "endLine": 41,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\t\tcard $CARD\n\t\t}\n\t}\n\thint.description \"Default Control Device\"\n}\n",
                    "rendered": {
                      "text": "\t\t\tcard $CARD\n\t\t}\n\t}\n\thint.description \"Default Control Device\"\n}\n",
                      "markdown": "`\t\t\tcard $CARD\n\t\t}\n\t}\n\thint.description \"Default Control Device\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/conf/ctl/default.conf"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 9,
                  "endLine": 2,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# Default control device\n#\n\nctl.!default {\n",
                    "rendered": {
                      "text": "#\n# Default control device\n#\n\nctl.!default {\n",
                      "markdown": "`#\n# Default control device\n#\n\nctl.!default {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_dmix.c"
                },
                "region": {
                  "startLine": 397,
                  "endLine": 397,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\n\told_slave_hw_ptr = dmix->slave_hw_ptr;\n\tdmix->slave_hw_ptr = slave_hw_ptr;\n\tdiff = pcm_frame_diff(slave_hw_ptr, old_slave_hw_ptr, dmix->slave_boundary);\n\tif (diff == 0)\t\t/* fast path */\n\t\treturn 0;\n\tif (dmix->state != SND_PCM_STATE_RUNNING &&\n",
                    "rendered": {
                      "text": "\t\n\told_slave_hw_ptr = dmix->slave_hw_ptr;\n\tdmix->slave_hw_ptr = slave_hw_ptr;\n\tdiff = pcm_frame_diff(slave_hw_ptr, old_slave_hw_ptr, dmix->slave_boundary);\n\tif (diff == 0)\t\t/* fast path */\n\t\treturn 0;\n\tif (dmix->state != SND_PCM_STATE_RUNNING &&\n",
                      "markdown": "`\t\n\told_slave_hw_ptr = dmix->slave_hw_ptr;\n\tdmix->slave_hw_ptr = slave_hw_ptr;\n\tdiff = pcm_frame_diff(slave_hw_ptr, old_slave_hw_ptr, dmix->slave_boundary);\n\tif (diff == 0)\t\t/* fast path */\n\t\treturn 0;\n\tif (dmix->state != SND_PCM_STATE_RUNNING &&\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_dmix.c"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 7,
                  "endLine": 50,
                  "snippet": {
                    "text": "#include <sys/mman.h>\n#include \"pcm_direct.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_dmix = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <sys/mman.h>\n#include \"pcm_direct.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_dmix = \"\";\n#endif\n\n",
                      "markdown": "`#include <sys/mman.h>\n#include \"pcm_direct.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_dmix = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_mulaw.c"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 35,
                  "snippet": {
                    "text": "#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_mulaw = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_mulaw = \"\";\n#endif\n\n",
                      "markdown": "`#include \"plugin_ops.h\"\n#include \"bswap.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_mulaw = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_softvol.c"
                },
                "region": {
                  "startLine": 1178,
                  "startColumn": 2,
                  "endLine": 1178,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\tcontinue;\n\t\t}\n\t\tif (strcmp(id, \"control\") == 0) {\n\t\t\tcontrol = n;\n\t\t\tcontinue;\n\t\t}\n\t\tif (strcmp(id, \"resolution\") == 0) {\n",
                    "rendered": {
                      "text": "\t\t\tcontinue;\n\t\t}\n\t\tif (strcmp(id, \"control\") == 0) {\n\t\t\tcontrol = n;\n\t\t\tcontinue;\n\t\t}\n\t\tif (strcmp(id, \"resolution\") == 0) {\n",
                      "markdown": "`\t\t\tcontinue;\n\t\t}\n\t\tif (strcmp(id, \"control\") == 0) {\n\t\t\tcontrol = n;\n\t\t\tcontinue;\n\t\t}\n\t\tif (strcmp(id, \"resolution\") == 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_softvol.c"
                },
                "region": {
                  "startLine": 1066,
                  "startColumn": 17,
                  "endLine": 1066,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\treturn -EINVAL;\n\t}\n\tif (name == NULL) {\n\t\tSNDERR(\"Missing control name\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn -EINVAL;\n\t}\n\tif (name == NULL) {\n\t\tSNDERR(\"Missing control name\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n",
                      "markdown": "`\t\treturn -EINVAL;\n\t}\n\tif (name == NULL) {\n\t\tSNDERR(\"Missing control name\");\n\t\terr = -EINVAL;\n\t\tgoto _err;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_softvol.c"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 7,
                  "endLine": 36,
                  "snippet": {
                    "text": "#include <math.h>\n#include <sound/tlv.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_softvol = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <math.h>\n#include <sound/tlv.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_softvol = \"\";\n#endif\n\n",
                      "markdown": "`#include <math.h>\n#include <sound/tlv.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_softvol = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_dsnoop.c"
                },
                "region": {
                  "startLine": 146,
                  "endLine": 146,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\terr = snd_pcm_direct_check_xrun(dsnoop, pcm);\n\tif (err < 0)\n\t\treturn err;\n\tdiff = pcm_frame_diff(slave_hw_ptr, old_slave_hw_ptr, dsnoop->slave_boundary);\n\tif (diff == 0)\t\t/* fast path */\n\t\treturn 0;\n\tsnd_pcm_dsnoop_sync_area(pcm, old_slave_hw_ptr, diff);\n",
                    "rendered": {
                      "text": "\terr = snd_pcm_direct_check_xrun(dsnoop, pcm);\n\tif (err < 0)\n\t\treturn err;\n\tdiff = pcm_frame_diff(slave_hw_ptr, old_slave_hw_ptr, dsnoop->slave_boundary);\n\tif (diff == 0)\t\t/* fast path */\n\t\treturn 0;\n\tsnd_pcm_dsnoop_sync_area(pcm, old_slave_hw_ptr, diff);\n",
                      "markdown": "`\terr = snd_pcm_direct_check_xrun(dsnoop, pcm);\n\tif (err < 0)\n\t\treturn err;\n\tdiff = pcm_frame_diff(slave_hw_ptr, old_slave_hw_ptr, dsnoop->slave_boundary);\n\tif (diff == 0)\t\t/* fast path */\n\t\treturn 0;\n\tsnd_pcm_dsnoop_sync_area(pcm, old_slave_hw_ptr, diff);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_dsnoop.c"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 7,
                  "endLine": 50,
                  "snippet": {
                    "text": "#include <sys/mman.h>\n#include \"pcm_direct.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_dsnoop = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <sys/mman.h>\n#include \"pcm_direct.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_dsnoop = \"\";\n#endif\n\n",
                      "markdown": "`#include <sys/mman.h>\n#include \"pcm_direct.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_dsnoop = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_file.c"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 7,
                  "endLine": 36,
                  "snippet": {
                    "text": "#include <ctype.h>\n#include <string.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_file = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <ctype.h>\n#include <string.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_file = \"\";\n#endif\n\n",
                      "markdown": "`#include <ctype.h>\n#include <string.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_file = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_alaw.c"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 7,
                  "endLine": 36,
                  "snippet": {
                    "text": "\n#include \"plugin_ops.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_alaw = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "\n#include \"plugin_ops.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_alaw = \"\";\n#endif\n\n",
                      "markdown": "`\n#include \"plugin_ops.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_alaw = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2846,
                  "startColumn": 14,
                  "endLine": 2846,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\t/* set lock_enabled field depending on $LIBASOUND_THREAD_SAFE */\n\t\tstatic int do_lock_enable = -1; /* uninitialized */\n\n\t\t/* evaluate env var only once at the first open for consistency */\n\t\tif (do_lock_enable == -1) {\n\t\t\tchar *p = getenv(\"LIBASOUND_THREAD_SAFE\");\n\t\t\tdo_lock_enable = !p || *p != '0';\n",
                    "rendered": {
                      "text": "\t\t/* set lock_enabled field depending on $LIBASOUND_THREAD_SAFE */\n\t\tstatic int do_lock_enable = -1; /* uninitialized */\n\n\t\t/* evaluate env var only once at the first open for consistency */\n\t\tif (do_lock_enable == -1) {\n\t\t\tchar *p = getenv(\"LIBASOUND_THREAD_SAFE\");\n\t\t\tdo_lock_enable = !p || *p != '0';\n",
                      "markdown": "`\t\t/* set lock_enabled field depending on $LIBASOUND_THREAD_SAFE */\n\t\tstatic int do_lock_enable = -1; /* uninitialized */\n\n\t\t/* evaluate env var only once at the first open for consistency */\n\t\tif (do_lock_enable == -1) {\n\t\t\tchar *p = getenv(\"LIBASOUND_THREAD_SAFE\");\n\t\t\tdo_lock_enable = !p || *p != '0';\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 8931,
                  "startColumn": 31,
                  "endLine": 8931,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\terr = INTERNAL(snd_pcm_hw_params_set_period_time_near)(pcm,\n\t\t\t\t\t\t&params, &period_time, NULL);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to set period time %i for %s: %s\",\n\t\t\t       period_time, s, snd_strerror(err));\n\t\t\treturn err;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\terr = INTERNAL(snd_pcm_hw_params_set_period_time_near)(pcm,\n\t\t\t\t\t\t&params, &period_time, NULL);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to set period time %i for %s: %s\",\n\t\t\t       period_time, s, snd_strerror(err));\n\t\t\treturn err;\n\t\t}\n",
                      "markdown": "`\t\terr = INTERNAL(snd_pcm_hw_params_set_period_time_near)(pcm,\n\t\t\t\t\t\t&params, &period_time, NULL);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to set period time %i for %s: %s\",\n\t\t\t       period_time, s, snd_strerror(err));\n\t\t\treturn err;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 8922,
                  "startColumn": 31,
                  "endLine": 8922,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\terr = INTERNAL(snd_pcm_hw_params_get_buffer_time)(&params,\n\t\t\t\t\t\t\t&latency, NULL);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to get buffer time (latency) for %s: %s\",\n\t\t\t       s, snd_strerror(err));\n\t\t\treturn err;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\terr = INTERNAL(snd_pcm_hw_params_get_buffer_time)(&params,\n\t\t\t\t\t\t\t&latency, NULL);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to get buffer time (latency) for %s: %s\",\n\t\t\t       s, snd_strerror(err));\n\t\t\treturn err;\n\t\t}\n",
                      "markdown": "`\t\terr = INTERNAL(snd_pcm_hw_params_get_buffer_time)(&params,\n\t\t\t\t\t\t\t&latency, NULL);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to get buffer time (latency) for %s: %s\",\n\t\t\t       s, snd_strerror(err));\n\t\t\treturn err;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 8884,
                  "startColumn": 31,
                  "endLine": 8884,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\terr = INTERNAL(snd_pcm_hw_params_set_period_time_near)(pcm,\n\t\t\t\t\t\t&params, &period_time, NULL);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to set period time %i for %s: %s\",\n\t\t\t       period_time, s, snd_strerror(err));\n\t\t\treturn err;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\terr = INTERNAL(snd_pcm_hw_params_set_period_time_near)(pcm,\n\t\t\t\t\t\t&params, &period_time, NULL);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to set period time %i for %s: %s\",\n\t\t\t       period_time, s, snd_strerror(err));\n\t\t\treturn err;\n\t\t}\n",
                      "markdown": "`\t\terr = INTERNAL(snd_pcm_hw_params_set_period_time_near)(pcm,\n\t\t\t\t\t\t&params, &period_time, NULL);\n\t\tif (err < 0) {\n\t\t\tSNDERR(\"Unable to set period time %i for %s: %s\",\n\t\t\t       period_time, s, snd_strerror(err));\n\t\t\treturn err;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2991,
                  "startColumn": 30,
                  "endLine": 2991,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\telse if (timeout == SND_PCM_WAIT_DRAIN)\n\t\ttimeout = __snd_pcm_wait_drain_timeout(pcm);\n\telse if (timeout < -1)\n\t\tSNDMSG(\"invalid snd_pcm_wait timeout argument %d\", timeout);\n\tdo {\n\t\t__snd_pcm_unlock(pcm->fast_op_arg);\n\t\terr_poll = poll(pfd, npfds, timeout);\n",
                    "rendered": {
                      "text": "\telse if (timeout == SND_PCM_WAIT_DRAIN)\n\t\ttimeout = __snd_pcm_wait_drain_timeout(pcm);\n\telse if (timeout < -1)\n\t\tSNDMSG(\"invalid snd_pcm_wait timeout argument %d\", timeout);\n\tdo {\n\t\t__snd_pcm_unlock(pcm->fast_op_arg);\n\t\terr_poll = poll(pfd, npfds, timeout);\n",
                      "markdown": "`\telse if (timeout == SND_PCM_WAIT_DRAIN)\n\t\ttimeout = __snd_pcm_wait_drain_timeout(pcm);\n\telse if (timeout < -1)\n\t\tSNDMSG(\"invalid snd_pcm_wait timeout argument %d\", timeout);\n\tdo {\n\t\t__snd_pcm_unlock(pcm->fast_op_arg);\n\t\terr_poll = poll(pfd, npfds, timeout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2989,
                  "startColumn": 1,
                  "endLine": 2989,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tif (timeout == SND_PCM_WAIT_IO)\n\t\ttimeout = __snd_pcm_wait_io_timeout(pcm);\n\telse if (timeout == SND_PCM_WAIT_DRAIN)\n\t\ttimeout = __snd_pcm_wait_drain_timeout(pcm);\n\telse if (timeout < -1)\n\t\tSNDMSG(\"invalid snd_pcm_wait timeout argument %d\", timeout);\n\tdo {\n",
                    "rendered": {
                      "text": "\tif (timeout == SND_PCM_WAIT_IO)\n\t\ttimeout = __snd_pcm_wait_io_timeout(pcm);\n\telse if (timeout == SND_PCM_WAIT_DRAIN)\n\t\ttimeout = __snd_pcm_wait_drain_timeout(pcm);\n\telse if (timeout < -1)\n\t\tSNDMSG(\"invalid snd_pcm_wait timeout argument %d\", timeout);\n\tdo {\n",
                      "markdown": "`\tif (timeout == SND_PCM_WAIT_IO)\n\t\ttimeout = __snd_pcm_wait_io_timeout(pcm);\n\telse if (timeout == SND_PCM_WAIT_DRAIN)\n\t\ttimeout = __snd_pcm_wait_drain_timeout(pcm);\n\telse if (timeout < -1)\n\t\tSNDMSG(\"invalid snd_pcm_wait timeout argument %d\", timeout);\n\tdo {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2987,
                  "startColumn": 1,
                  "endLine": 2987,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\treturn -EIO;\n\t}\n\tif (timeout == SND_PCM_WAIT_IO)\n\t\ttimeout = __snd_pcm_wait_io_timeout(pcm);\n\telse if (timeout == SND_PCM_WAIT_DRAIN)\n\t\ttimeout = __snd_pcm_wait_drain_timeout(pcm);\n\telse if (timeout < -1)\n",
                    "rendered": {
                      "text": "\t\treturn -EIO;\n\t}\n\tif (timeout == SND_PCM_WAIT_IO)\n\t\ttimeout = __snd_pcm_wait_io_timeout(pcm);\n\telse if (timeout == SND_PCM_WAIT_DRAIN)\n\t\ttimeout = __snd_pcm_wait_drain_timeout(pcm);\n\telse if (timeout < -1)\n",
                      "markdown": "`\t\treturn -EIO;\n\t}\n\tif (timeout == SND_PCM_WAIT_IO)\n\t\ttimeout = __snd_pcm_wait_io_timeout(pcm);\n\telse if (timeout == SND_PCM_WAIT_DRAIN)\n\t\ttimeout = __snd_pcm_wait_drain_timeout(pcm);\n\telse if (timeout < -1)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2956,
                  "endLine": 2956,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n}\n\n",
                    "rendered": {
                      "text": "\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n}\n\n",
                      "markdown": "`\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2954,
                  "startColumn": 1,
                  "endLine": 2954,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\ttimeout = (snd_pcm_mmap_playback_delay(pcm) * 1000LL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n",
                    "rendered": {
                      "text": "\ttimeout = (snd_pcm_mmap_playback_delay(pcm) * 1000LL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n",
                      "markdown": "`\ttimeout = (snd_pcm_mmap_playback_delay(pcm) * 1000LL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2951,
                  "endLine": 2951,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tif (snd_pcm_stream(pcm) == SND_PCM_STREAM_CAPTURE)\n\t\treturn 0;\n\t/* result is in milliseconds */\n\ttimeout = (snd_pcm_mmap_playback_delay(pcm) * 1000LL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n",
                    "rendered": {
                      "text": "\tif (snd_pcm_stream(pcm) == SND_PCM_STREAM_CAPTURE)\n\t\treturn 0;\n\t/* result is in milliseconds */\n\ttimeout = (snd_pcm_mmap_playback_delay(pcm) * 1000LL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n",
                      "markdown": "`\tif (snd_pcm_stream(pcm) == SND_PCM_STREAM_CAPTURE)\n\t\treturn 0;\n\t/* result is in milliseconds */\n\ttimeout = (snd_pcm_mmap_playback_delay(pcm) * 1000LL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2939,
                  "endLine": 2939,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n}\n\n",
                    "rendered": {
                      "text": "\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n}\n\n",
                      "markdown": "`\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2937,
                  "startColumn": 1,
                  "endLine": 2937,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\ttimeout = (pcm->period_size * 1000ULL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n",
                    "rendered": {
                      "text": "\ttimeout = (pcm->period_size * 1000ULL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n",
                      "markdown": "`\ttimeout = (pcm->period_size * 1000ULL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n\t/* add extra time of 200 milliseconds */\n\ttimeout += 200;\n\treturn timeout;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2934,
                  "endLine": 2934,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tint timeout;\n\n\t/* period size is the time boundary */\n\ttimeout = (pcm->period_size * 1000ULL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n",
                    "rendered": {
                      "text": "\tint timeout;\n\n\t/* period size is the time boundary */\n\ttimeout = (pcm->period_size * 1000ULL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n",
                      "markdown": "`\tint timeout;\n\n\t/* period size is the time boundary */\n\ttimeout = (pcm->period_size * 1000ULL) / pcm->rate;\n\t/* should not happen */\n\tif (timeout < 0)\n\t\ttimeout = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2665,
                  "startColumn": 7,
                  "endLine": 2666,
                  "snippet": {
                    "text": "\t\t\tsprintf(buf1, \"libasound_module_pcm_%s.so\", str);\n\t\t}\n\t}\n#ifndef PIC\n\tsnd_pcm_open_symbols();\t/* this call is for static linking only */\n#endif\n\topen_func = snd_dlobj_cache_get(lib, open_name,\n\t\t\tSND_DLSYM_VERSION(SND_PCM_DLSYM_VERSION), 1);\n",
                    "rendered": {
                      "text": "\t\t\tsprintf(buf1, \"libasound_module_pcm_%s.so\", str);\n\t\t}\n\t}\n#ifndef PIC\n\tsnd_pcm_open_symbols();\t/* this call is for static linking only */\n#endif\n\topen_func = snd_dlobj_cache_get(lib, open_name,\n\t\t\tSND_DLSYM_VERSION(SND_PCM_DLSYM_VERSION), 1);\n",
                      "markdown": "`\t\t\tsprintf(buf1, \"libasound_module_pcm_%s.so\", str);\n\t\t}\n\t}\n#ifndef PIC\n\tsnd_pcm_open_symbols();\t/* this call is for static linking only */\n#endif\n\topen_func = snd_dlobj_cache_get(lib, open_name,\n\t\t\tSND_DLSYM_VERSION(SND_PCM_DLSYM_VERSION), 1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm.c"
                },
                "region": {
                  "startLine": 2576,
                  "startColumn": 7,
                  "endLine": 2577,
                  "snippet": {
                    "text": "\tint (*open_func)(snd_pcm_t **, const char *, \n\t\t\t snd_config_t *, snd_config_t *, \n\t\t\t snd_pcm_stream_t, int) = NULL;\n#ifndef PIC\n\textern void *snd_pcm_open_symbols(void);\n#endif\n\tif (snd_config_get_type(pcm_conf) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tchar *val;\n",
                    "rendered": {
                      "text": "\tint (*open_func)(snd_pcm_t **, const char *, \n\t\t\t snd_config_t *, snd_config_t *, \n\t\t\t snd_pcm_stream_t, int) = NULL;\n#ifndef PIC\n\textern void *snd_pcm_open_symbols(void);\n#endif\n\tif (snd_config_get_type(pcm_conf) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tchar *val;\n",
                      "markdown": "`\tint (*open_func)(snd_pcm_t **, const char *, \n\t\t\t snd_config_t *, snd_config_t *, \n\t\t\t snd_pcm_stream_t, int) = NULL;\n#ifndef PIC\n\textern void *snd_pcm_open_symbols(void);\n#endif\n\tif (snd_config_get_type(pcm_conf) != SND_CONFIG_TYPE_COMPOUND) {\n\t\tchar *val;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_empty.c"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7,
                  "endLine": 33,
                  "snippet": {
                    "text": "#include \"pcm_local.h\"\n#include \"pcm_plugin.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_empty = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include \"pcm_local.h\"\n#include \"pcm_plugin.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_empty = \"\";\n#endif\n\n",
                      "markdown": "`#include \"pcm_local.h\"\n#include \"pcm_plugin.h\"\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_pcm_empty = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/pcm/pcm_plugin.c"
                },
                "region": {
                  "startLine": 567,
                  "startColumn": 1,
                  "endLine": 567,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t *    snd_pcm_status()\n\t */\n\tif (pcm->stream == SND_PCM_STREAM_CAPTURE) {\n\t\tdiff = pcm_frame_diff(status->appl_ptr, *pcm->appl.ptr, pcm->boundary);\n\t\tstatus->appl_ptr = *pcm->appl.ptr;\n\t\tstatus->avail += diff;\n\t\tstatus->delay += diff;\n",
                    "rendered": {
                      "text": "\t *    snd_pcm_status()\n\t */\n\tif (pcm->stream == SND_PCM_STREAM_CAPTURE) {\n\t\tdiff = pcm_frame_diff(status->appl_ptr, *pcm->appl.ptr, pcm->boundary);\n\t\tstatus->appl_ptr = *pcm->appl.ptr;\n\t\tstatus->avail += diff;\n\t\tstatus->delay += diff;\n",
                      "markdown": "`\t *    snd_pcm_status()\n\t */\n\tif (pcm->stream == SND_PCM_STREAM_CAPTURE) {\n\t\tdiff = pcm_frame_diff(status->appl_ptr, *pcm->appl.ptr, pcm->boundary);\n\t\tstatus->appl_ptr = *pcm->appl.ptr;\n\t\tstatus->avail += diff;\n\t\tstatus->delay += diff;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/hwdep/hwdep_hw.c"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7,
                  "endLine": 31,
                  "snippet": {
                    "text": "#include <fcntl.h>\n#include <sys/ioctl.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_hwdep_hw = \"\";\n#endif\n\n",
                    "rendered": {
                      "text": "#include <fcntl.h>\n#include <sys/ioctl.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_hwdep_hw = \"\";\n#endif\n\n",
                      "markdown": "`#include <fcntl.h>\n#include <sys/ioctl.h>\n\n#ifndef PIC\n/* entry for static linking */\nconst char *_snd_module_hwdep_hw = \"\";\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/utils.c"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 21,
                  "endLine": 72,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tif (ctl_list2->slave)\n\t\t\tcontinue;\n\t\tif (ctl_list) {\n\t\t\tuc_error(\"multiple control device names were found!\");\n\t\t\treturn NULL;\n\t\t}\n\t\tctl_list = ctl_list2;\n",
                    "rendered": {
                      "text": "\t\tif (ctl_list2->slave)\n\t\t\tcontinue;\n\t\tif (ctl_list) {\n\t\t\tuc_error(\"multiple control device names were found!\");\n\t\t\treturn NULL;\n\t\t}\n\t\tctl_list = ctl_list2;\n",
                      "markdown": "`\t\tif (ctl_list2->slave)\n\t\t\tcontinue;\n\t\tif (ctl_list) {\n\t\t\tuc_error(\"multiple control device names were found!\");\n\t\t\treturn NULL;\n\t\t}\n\t\tctl_list = ctl_list2;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/parser.c"
                },
                "region": {
                  "startLine": 2903,
                  "startColumn": 7,
                  "endLine": 2903,
                  "endColumn": 16,
                  "snippet": {
                    "text": "int uc_mgr_scan_master_configs(const char **_list[])\n{\n\tchar filename[PATH_MAX], dfl[PATH_MAX], fn[FILENAME_MAX];\n\tchar *env = getenv(ALSA_CONFIG_UCM2_VAR);\n\tsnd_use_case_mgr_t *uc_mgr;\n\tconst char **list, *d_name;\n\tchar *s;\n",
                    "rendered": {
                      "text": "int uc_mgr_scan_master_configs(const char **_list[])\n{\n\tchar filename[PATH_MAX], dfl[PATH_MAX], fn[FILENAME_MAX];\n\tchar *env = getenv(ALSA_CONFIG_UCM2_VAR);\n\tsnd_use_case_mgr_t *uc_mgr;\n\tconst char **list, *d_name;\n\tchar *s;\n",
                      "markdown": "`int uc_mgr_scan_master_configs(const char **_list[])\n{\n\tchar filename[PATH_MAX], dfl[PATH_MAX], fn[FILENAME_MAX];\n\tchar *env = getenv(ALSA_CONFIG_UCM2_VAR);\n\tsnd_use_case_mgr_t *uc_mgr;\n\tconst char **list, *d_name;\n\tchar *s;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/parser.c"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 22,
                  "snippet": {
                    "text": "static void ucm_filename(char *fn, size_t fn_len, long version,\n\t\t\t  const char *dir, const char *file)\n{\n\tconst char *env = getenv(version > 1 ? ALSA_CONFIG_UCM2_VAR : ALSA_CONFIG_UCM_VAR);\n\n\tif (file[0] == '/')\n\t\tfile++;\n",
                    "rendered": {
                      "text": "static void ucm_filename(char *fn, size_t fn_len, long version,\n\t\t\t  const char *dir, const char *file)\n{\n\tconst char *env = getenv(version > 1 ? ALSA_CONFIG_UCM2_VAR : ALSA_CONFIG_UCM_VAR);\n\n\tif (file[0] == '/')\n\t\tfile++;\n",
                      "markdown": "`static void ucm_filename(char *fn, size_t fn_len, long version,\n\t\t\t  const char *dir, const char *file)\n{\n\tconst char *env = getenv(version > 1 ? ALSA_CONFIG_UCM2_VAR : ALSA_CONFIG_UCM_VAR);\n\n\tif (file[0] == '/')\n\t\tfile++;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/parser.c"
                },
                "region": {
                  "startLine": 2796,
                  "startColumn": 21,
                  "endLine": 2796,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tucm_filename(filename, sizeof(filename), 2, NULL, \"ucm.conf\");\n\n\tif (access(filename, R_OK) != 0) {\n\t\tuc_error(\"Unable to find the top-level configuration file '%s'.\", filename);\n\t\treturn -ENOENT;\n\t}\n\n",
                    "rendered": {
                      "text": "\tucm_filename(filename, sizeof(filename), 2, NULL, \"ucm.conf\");\n\n\tif (access(filename, R_OK) != 0) {\n\t\tuc_error(\"Unable to find the top-level configuration file '%s'.\", filename);\n\t\treturn -ENOENT;\n\t}\n\n",
                      "markdown": "`\tucm_filename(filename, sizeof(filename), 2, NULL, \"ucm.conf\");\n\n\tif (access(filename, R_OK) != 0) {\n\t\tuc_error(\"Unable to find the top-level configuration file '%s'.\", filename);\n\t\treturn -ENOENT;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/parser.c"
                },
                "region": {
                  "startLine": 1799,
                  "startColumn": 27,
                  "endLine": 1799,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t}\n\t\treturn uc_mgr_put_to_dev_list(&device->dev_list, src);\n\t}\n\tuc_error(\"error: unable to find device '%s'\", dst);\n\treturn -ENOENT;\n}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\t\treturn uc_mgr_put_to_dev_list(&device->dev_list, src);\n\t}\n\tuc_error(\"error: unable to find device '%s'\", dst);\n\treturn -ENOENT;\n}\n\n",
                      "markdown": "`\t\t}\n\t\treturn uc_mgr_put_to_dev_list(&device->dev_list, src);\n\t}\n\tuc_error(\"error: unable to find device '%s'\", dst);\n\treturn -ENOENT;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/src/ucm/parser.c"
                },
                "region": {
                  "startLine": 1034,
                  "startColumn": 25,
                  "endLine": 1034,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n\tcmpt_seq->device = find_component_dev(uc_mgr, val);\n\tif (!cmpt_seq->device) {\n\t\tuc_error(\"error: Cannot find component device %s\", val);\n\t\tfree(val);\n\t\treturn -EINVAL;\n\t}\n",
                    "rendered": {
                      "text": "\n\tcmpt_seq->device = find_component_dev(uc_mgr, val);\n\tif (!cmpt_seq->device) {\n\t\tuc_error(\"error: Cannot find component device %s\", val);\n\t\tfree(val);\n\t\treturn -EINVAL;\n\t}\n",
                      "markdown": "`\n\tcmpt_seq->device = find_component_dev(uc_mgr, val);\n\tif (!cmpt_seq->device) {\n\t\tuc_error(\"error: Cannot find component device %s\", val);\n\t\tfree(val);\n\t\treturn -EINVAL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/include/Makefile.am"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 13,
                  "endLine": 99,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t@echo >> ver.tmp\n\t@cmp -s version.h ver.tmp \\\n          || (echo \"Updating version.h\"; \\\n              cp ver.tmp version.h; \\\n              echo timestamp > stamp-vh)\n\t-@rm -f ver.tmp\n\n",
                    "rendered": {
                      "text": "\t@echo >> ver.tmp\n\t@cmp -s version.h ver.tmp \\\n          || (echo \"Updating version.h\"; \\\n              cp ver.tmp version.h; \\\n              echo timestamp > stamp-vh)\n\t-@rm -f ver.tmp\n\n",
                      "markdown": "`\t@echo >> ver.tmp\n\t@cmp -s version.h ver.tmp \\\n          || (echo \"Updating version.h\"; \\\n              cp ver.tmp version.h; \\\n              echo timestamp > stamp-vh)\n\t-@rm -f ver.tmp\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/buildrpm"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 43,
                  "endColumn": 3,
                  "snippet": {
                    "text": "  ./configure\n  cd utils\nfi\n\ncp -fv $source/alsa-lib.spec ${packagedir}/SPECS\ncd ${packagedir}/SPECS\n$xrpmbuild -ba alsa-lib.spec\ncd ${packagedir}\n",
                    "rendered": {
                      "text": "  ./configure\n  cd utils\nfi\n\ncp -fv $source/alsa-lib.spec ${packagedir}/SPECS\ncd ${packagedir}/SPECS\n$xrpmbuild -ba alsa-lib.spec\ncd ${packagedir}\n",
                      "markdown": "`  ./configure\n  cd utils\nfi\n\ncp -fv $source/alsa-lib.spec ${packagedir}/SPECS\ncd ${packagedir}/SPECS\n$xrpmbuild -ba alsa-lib.spec\ncd ${packagedir}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/buildrpm"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 25,
                  "endColumn": 3,
                  "snippet": {
                    "text": "    exit 1\n  fi\nfi\n\ncp -fv $package ${packagedir}/SOURCES\n\nif [ ! -r $source/buildrpm ]; then\n  echo \"Error: invalid directory: $source\"\n",
                    "rendered": {
                      "text": "    exit 1\n  fi\nfi\n\ncp -fv $package ${packagedir}/SOURCES\n\nif [ ! -r $source/buildrpm ]; then\n  echo \"Error: invalid directory: $source\"\n",
                      "markdown": "`    exit 1\n  fi\nfi\n\ncp -fv $package ${packagedir}/SOURCES\n\nif [ ! -r $source/buildrpm ]; then\n  echo \"Error: invalid directory: $source\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/alsa-lib.spec.in"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 18,
                  "endLine": 36,
                  "endColumn": 23,
                  "snippet": {
                    "text": "* Tue Nov 20 2001 Jaroslav Kysela <perex@perex.cz>\n\n- changed BuildRoot from /tmp to /var/tmp\n- use the standard RPM macros for prefix and paths\n- added DESTDIR for make install\n\n* Sun Nov 11 2001 Miroslav Benes <mbenes@tenez.cz>\n",
                    "rendered": {
                      "text": "* Tue Nov 20 2001 Jaroslav Kysela <perex@perex.cz>\n\n- changed BuildRoot from /tmp to /var/tmp\n- use the standard RPM macros for prefix and paths\n- added DESTDIR for make install\n\n* Sun Nov 11 2001 Miroslav Benes <mbenes@tenez.cz>\n",
                      "markdown": "`* Tue Nov 20 2001 Jaroslav Kysela <perex@perex.cz>\n\n- changed BuildRoot from /tmp to /var/tmp\n- use the standard RPM macros for prefix and paths\n- added DESTDIR for make install\n\n* Sun Nov 11 2001 Miroslav Benes <mbenes@tenez.cz>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/utils/alsa-lib.spec.in"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 14,
                  "endLine": 30,
                  "endColumn": 19,
                  "snippet": {
                    "text": "* Sat Feb 22 2003 Ronny V. Vindenes <sublett@dc-s.com>\n- split alsa-lib into alsa-lib and alsa-lib-devel\n- changed which files are installed (now includes alsa.pc)\n- use standard rpm macros for build and install\n- changed BuildRoot from /var/tmp to %{_tmppath}\n\n* Tue Nov 20 2001 Jaroslav Kysela <perex@perex.cz>\n",
                    "rendered": {
                      "text": "* Sat Feb 22 2003 Ronny V. Vindenes <sublett@dc-s.com>\n- split alsa-lib into alsa-lib and alsa-lib-devel\n- changed which files are installed (now includes alsa.pc)\n- use standard rpm macros for build and install\n- changed BuildRoot from /var/tmp to %{_tmppath}\n\n* Tue Nov 20 2001 Jaroslav Kysela <perex@perex.cz>\n",
                      "markdown": "`* Sat Feb 22 2003 Ronny V. Vindenes <sublett@dc-s.com>\n- split alsa-lib into alsa-lib and alsa-lib-devel\n- changed which files are installed (now includes alsa.pc)\n- use standard rpm macros for build and install\n- changed BuildRoot from /var/tmp to %{_tmppath}\n\n* Tue Nov 20 2001 Jaroslav Kysela <perex@perex.cz>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 59,
                  "endLine": 470,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 381,
                  "startColumn": 30,
                  "endLine": 381,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 57,
                  "endLine": 307,
                  "snippet": {
                    "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                    "rendered": {
                      "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                      "markdown": "`    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 55,
                  "endLine": 299,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 21,
                  "endLine": 203,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 58,
                  "endLine": 172,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                    "rendered": {
                      "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                      "markdown": "`    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 11,
                  "endLine": 159,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                    "rendered": {
                      "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                      "markdown": "`Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 52,
                  "endLine": 139,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                    "rendered": {
                      "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                      "markdown": "`  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 12,
                  "endLine": 426,
                  "endColumn": 18,
                  "snippet": {
                    "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                    "rendered": {
                      "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                      "markdown": "`license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 50,
                  "endLine": 414,
                  "endColumn": 56,
                  "snippet": {
                    "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                      "markdown": "`written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 10,
                  "endLine": 366,
                  "endColumn": 16,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 12,
                  "endLine": 347,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                    "rendered": {
                      "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                      "markdown": "`\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 62,
                  "endLine": 299,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 32,
                  "endLine": 224,
                  "endColumn": 38,
                  "snippet": {
                    "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                    "rendered": {
                      "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                      "markdown": "`that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 21,
                  "endLine": 60,
                  "endColumn": 27,
                  "snippet": {
                    "text": "introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                    "rendered": {
                      "text": "introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                      "markdown": "`introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/COPYING"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 8,
                  "endLine": 30,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 49,
                  "endLine": 14,
                  "endColumn": 54,
                  "snippet": {
                    "text": "SND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n  alpha) SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 10000` ;;\n",
                    "rendered": {
                      "text": "SND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n  alpha) SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 10000` ;;\n",
                      "markdown": "`SND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n  alpha) SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 10000` ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 33,
                  "endLine": 14,
                  "endColumn": 38,
                  "snippet": {
                    "text": "SND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n  alpha) SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 10000` ;;\n",
                    "rendered": {
                      "text": "SND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n  alpha) SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 10000` ;;\n",
                      "markdown": "`SND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n  alpha) SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 10000` ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 49,
                  "endLine": 13,
                  "endColumn": 54,
                  "snippet": {
                    "text": "AC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n",
                    "rendered": {
                      "text": "AC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n",
                      "markdown": "`AC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 33,
                  "endLine": 13,
                  "endColumn": 38,
                  "snippet": {
                    "text": "AC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n",
                    "rendered": {
                      "text": "AC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n",
                      "markdown": "`AC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\ncase \"$SND_LIB_EXTRASTR\" in\n  pre)   SND_LIB_EXTRAVER=`expr $SND_LIB_EXTRAVER + 00000` ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 49,
                  "endLine": 11,
                  "endColumn": 54,
                  "snippet": {
                    "text": "AC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\n",
                    "rendered": {
                      "text": "AC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\n",
                      "markdown": "`AC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 33,
                  "endLine": 11,
                  "endColumn": 38,
                  "snippet": {
                    "text": "AC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\n",
                    "rendered": {
                      "text": "AC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\n",
                      "markdown": "`AC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\nSND_LIB_EXTRASTR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\2/g'`\nSND_LIB_EXTRAVER=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\([[[:alpha:]]]*\\)\\([[[:digit:]]]*\\)\\(.*\\)$/\\3/g'`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 35,
                  "snippet": {
                    "text": "AC_SUBST(SND_LIB_VERSION)\nSND_LIB_MAJOR=`echo $VERSION | cut -d . -f 1`\nAC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\n",
                    "rendered": {
                      "text": "AC_SUBST(SND_LIB_VERSION)\nSND_LIB_MAJOR=`echo $VERSION | cut -d . -f 1`\nAC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\n",
                      "markdown": "`AC_SUBST(SND_LIB_VERSION)\nSND_LIB_MAJOR=`echo $VERSION | cut -d . -f 1`\nAC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\nSND_LIB_SUBMINOR=`echo $VERSION | cut -d . -f 3 | sed -e 's/^\\([[^[:alpha:]]]*\\)\\(.*\\)$/\\1/g'`\nAC_SUBST(SND_LIB_SUBMINOR)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 30,
                  "endLine": 7,
                  "endColumn": 35,
                  "snippet": {
                    "text": "echo $VERSION > $srcdir/version\nAC_DEFINE_UNQUOTED(VERSION, \"$SND_LIB_VERSION\", [sound library version string])\nAC_SUBST(SND_LIB_VERSION)\nSND_LIB_MAJOR=`echo $VERSION | cut -d . -f 1`\nAC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\n",
                    "rendered": {
                      "text": "echo $VERSION > $srcdir/version\nAC_DEFINE_UNQUOTED(VERSION, \"$SND_LIB_VERSION\", [sound library version string])\nAC_SUBST(SND_LIB_VERSION)\nSND_LIB_MAJOR=`echo $VERSION | cut -d . -f 1`\nAC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\n",
                      "markdown": "`echo $VERSION > $srcdir/version\nAC_DEFINE_UNQUOTED(VERSION, \"$SND_LIB_VERSION\", [sound library version string])\nAC_SUBST(SND_LIB_VERSION)\nSND_LIB_MAJOR=`echo $VERSION | cut -d . -f 1`\nAC_SUBST(SND_LIB_MAJOR)\nSND_LIB_MINOR=`echo $VERSION | cut -d . -f 2`\nAC_SUBST(SND_LIB_MINOR)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/alsa-lib.zip/README.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 32,
                  "endLine": 19,
                  "endColumn": 38,
                  "snippet": {
                    "text": "### Submitting patches\n\nThe preferred way to submit patches is by sending them by email to the\nalsa-devel mailing list. Sending mail to the list requires subscription,\nsubscribe here: https://mailman.alsa-project.org/mailman/listinfo/alsa-devel\n\nAdd Takashi Iwai `<tiwai@suse.de>` and/or Jaroslav Kysela `<perex@perex.cz>` to\n",
                    "rendered": {
                      "text": "### Submitting patches\n\nThe preferred way to submit patches is by sending them by email to the\nalsa-devel mailing list. Sending mail to the list requires subscription,\nsubscribe here: https://mailman.alsa-project.org/mailman/listinfo/alsa-devel\n\nAdd Takashi Iwai `<tiwai@suse.de>` and/or Jaroslav Kysela `<perex@perex.cz>` to\n",
                      "markdown": "`### Submitting patches\n\nThe preferred way to submit patches is by sending them by email to the\nalsa-devel mailing list. Sending mail to the list requires subscription,\nsubscribe here: https://mailman.alsa-project.org/mailman/listinfo/alsa-devel\n\nAdd Takashi Iwai `<tiwai@suse.de>` and/or Jaroslav Kysela `<perex@perex.cz>` to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}