{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Makefile"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tgo mod vendor\n\nbuild_all_docker: vendor\n\tdocker build \\\n\t\t--no-cache \\\n\t\t--build-arg GOLANG_VERSION=$(GOLANG_VERSION) \\\n\t\t--build-arg TAG=$(TAG) \\\n",
                    "rendered": {
                      "text": "\tgo mod vendor\n\nbuild_all_docker: vendor\n\tdocker build \\\n\t\t--no-cache \\\n\t\t--build-arg GOLANG_VERSION=$(GOLANG_VERSION) \\\n\t\t--build-arg TAG=$(TAG) \\\n",
                      "markdown": "`\tgo mod vendor\n\nbuild_all_docker: vendor\n\tdocker build \\\n\t\t--no-cache \\\n\t\t--build-arg GOLANG_VERSION=$(GOLANG_VERSION) \\\n\t\t--build-arg TAG=$(TAG) \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Makefile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 17,
                  "snippet": {
                    "text": "ARCH?=amd64\nSRC_DIR?=$(pwd)\nGO?=$(go)\nGOPATH?=$(go env GOPATH)\n\n# this is the upstream CNI plugin version used for testing\nTEST_TAG?=v1.4.1\n",
                    "rendered": {
                      "text": "ARCH?=amd64\nSRC_DIR?=$(pwd)\nGO?=$(go)\nGOPATH?=$(go env GOPATH)\n\n# this is the upstream CNI plugin version used for testing\nTEST_TAG?=v1.4.1\n",
                      "markdown": "`ARCH?=amd64\nSRC_DIR?=$(pwd)\nGO?=$(go)\nGOPATH?=$(go env GOPATH)\n\n# this is the upstream CNI plugin version used for testing\nTEST_TAG?=v1.4.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Makefile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 12,
                  "endLine": 7,
                  "endColumn": 17,
                  "snippet": {
                    "text": "REGISTRY?=docker.io/flannel/flannel-cni-plugin\n\n# Default tag and architecture. Can be overridden\nTAG?=$(shell git describe --tags --dirty --always)\nARCH?=amd64\nSRC_DIR?=$(pwd)\nGO?=$(go)\n",
                    "rendered": {
                      "text": "REGISTRY?=docker.io/flannel/flannel-cni-plugin\n\n# Default tag and architecture. Can be overridden\nTAG?=$(shell git describe --tags --dirty --always)\nARCH?=amd64\nSRC_DIR?=$(pwd)\nGO?=$(go)\n",
                      "markdown": "`REGISTRY?=docker.io/flannel/flannel-cni-plugin\n\n# Default tag and architecture. Can be overridden\nTAG?=$(shell git describe --tags --dirty --always)\nARCH?=amd64\nSRC_DIR?=$(pwd)\nGO?=$(go)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 39,
                  "endLine": 85,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and push Docker image\n        # if: github.repository_owner == 'flannel-io' && success()\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and push Docker image\n        # if: github.repository_owner == 'flannel-io' && success()\n",
                      "markdown": "`        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and push Docker image\n        # if: github.repository_owner == 'flannel-io' && success()\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 10,
                  "endLine": 85,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and push Docker image\n        # if: github.repository_owner == 'flannel-io' && success()\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and push Docker image\n        # if: github.repository_owner == 'flannel-io' && success()\n",
                      "markdown": "`        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and push Docker image\n        # if: github.repository_owner == 'flannel-io' && success()\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 28,
                  "endLine": 87,
                  "endColumn": 36,
                  "snippet": {
                    "text": "          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and push Docker image\n        # if: github.repository_owner == 'flannel-io' && success()\n        uses: docker/build-push-action@v5\n        with:\n",
                    "rendered": {
                      "text": "          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and push Docker image\n        # if: github.repository_owner == 'flannel-io' && success()\n        uses: docker/build-push-action@v5\n        with:\n",
                      "markdown": "`          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and push Docker image\n        # if: github.repository_owner == 'flannel-io' && success()\n        uses: docker/build-push-action@v5\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 23,
                  "endLine": 81,
                  "endColumn": 31,
                  "snippet": {
                    "text": "          tags: |\n            type=ref,event=tag\n\n      - name: Log in to Docker Hub\n        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n",
                    "rendered": {
                      "text": "          tags: |\n            type=ref,event=tag\n\n      - name: Log in to Docker Hub\n        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n",
                      "markdown": "`          tags: |\n            type=ref,event=tag\n\n      - name: Log in to Docker Hub\n        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 13,
                  "endLine": 72,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Docker meta\n        id: meta\n        uses: docker/metadata-action@v4\n        with:\n",
                    "rendered": {
                      "text": "      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Docker meta\n        id: meta\n        uses: docker/metadata-action@v4\n        with:\n",
                      "markdown": "`      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Docker meta\n        id: meta\n        uses: docker/metadata-action@v4\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 20,
                  "endLine": 69,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        uses: actions/checkout@v3\n        if: success()\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Docker meta\n",
                    "rendered": {
                      "text": "        uses: actions/checkout@v3\n        if: success()\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Docker meta\n",
                      "markdown": "`        uses: actions/checkout@v3\n        if: success()\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Docker meta\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 61,
                  "endLine": 4,
                  "endColumn": 66,
                  "snippet": {
                    "text": "name: release flannel cni-plugin\n  \non:\n  # You must provide a tag either via the action input or the git ref (i.e push / create a tag).\n  # If you do not provide a tag the action will fail.\n\n  # If the tag of the release you are creating does not yet exist, you should set\n",
                    "rendered": {
                      "text": "name: release flannel cni-plugin\n  \non:\n  # You must provide a tag either via the action input or the git ref (i.e push / create a tag).\n  # If you do not provide a tag the action will fail.\n\n  # If the tag of the release you are creating does not yet exist, you should set\n",
                      "markdown": "`name: release flannel cni-plugin\n  \non:\n  # You must provide a tag either via the action input or the git ref (i.e push / create a tag).\n  # If you do not provide a tag the action will fail.\n\n  # If the tag of the release you are creating does not yet exist, you should set\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/build_flannel.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\n\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/build_flannel.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\n\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 22,
                  "endLine": 27,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    mkdir -p release;\n    mkdir -p dist;\n    umask 0022;\n    apk --no-cache add bash tar git; \\\n    source ./scripts/version.sh; \\\n        chmod +x ./scripts/* ; \n\n",
                    "rendered": {
                      "text": "    mkdir -p release;\n    mkdir -p dist;\n    umask 0022;\n    apk --no-cache add bash tar git; \\\n    source ./scripts/version.sh; \\\n        chmod +x ./scripts/* ; \n\n",
                      "markdown": "`    mkdir -p release;\n    mkdir -p dist;\n    umask 0022;\n    apk --no-cache add bash tar git; \\\n    source ./scripts/version.sh; \\\n        chmod +x ./scripts/* ; \n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ex\n\ncd \"$(dirname \"${0}\")\"/..\nsource ./scripts/version.sh\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ex\n\ncd \"$(dirname \"${0}\")\"/..\nsource ./scripts/version.sh\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ex\n\ncd \"$(dirname \"${0}\")\"/..\nsource ./scripts/version.sh\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 7,
                  "endLine": 47,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    for format in tgz; do \\\n        FILENAME=cni-plugin-flannel-windows-${GOARCH}-${TAG}.\\$format; \\\n        FILEPATH=${RELEASE_DIR}/\\$FILENAME; \\\n        tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf \\$FILEPATH . ; \\\n    done;\n\n    for arch in amd64 386 arm arm64 s390x ppc64le riscv64; do \\\n",
                    "rendered": {
                      "text": "    for format in tgz; do \\\n        FILENAME=cni-plugin-flannel-windows-${GOARCH}-${TAG}.\\$format; \\\n        FILEPATH=${RELEASE_DIR}/\\$FILENAME; \\\n        tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf \\$FILEPATH . ; \\\n    done;\n\n    for arch in amd64 386 arm arm64 s390x ppc64le riscv64; do \\\n",
                      "markdown": "`    for format in tgz; do \\\n        FILENAME=cni-plugin-flannel-windows-${GOARCH}-${TAG}.\\$format; \\\n        FILEPATH=${RELEASE_DIR}/\\$FILENAME; \\\n        tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf \\$FILEPATH . ; \\\n    done;\n\n    for arch in amd64 386 arm arm64 s390x ppc64le riscv64; do \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 11,
                  "endLine": 39,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        for format in tgz; do \\\n            FILENAME=cni-plugin-flannel-linux-\\$arch-${TAG}.\\$format; \\\n            FILEPATH=${RELEASE_DIR}/\\$FILENAME; \\\n            tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf \\$FILEPATH . ; \\\n        done; \\\n    done;\n\n",
                    "rendered": {
                      "text": "        for format in tgz; do \\\n            FILENAME=cni-plugin-flannel-linux-\\$arch-${TAG}.\\$format; \\\n            FILEPATH=${RELEASE_DIR}/\\$FILENAME; \\\n            tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf \\$FILEPATH . ; \\\n        done; \\\n    done;\n\n",
                      "markdown": "`        for format in tgz; do \\\n            FILENAME=cni-plugin-flannel-linux-\\$arch-${TAG}.\\$format; \\\n            FILEPATH=${RELEASE_DIR}/\\$FILENAME; \\\n            tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf \\$FILEPATH . ; \\\n        done; \\\n    done;\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 29,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    umask 0022;\n    apk --no-cache add bash tar git; \\\n    source ./scripts/version.sh; \\\n        chmod +x ./scripts/* ; \n\n    go mod vendor && go mod tidy\n\n",
                    "rendered": {
                      "text": "    umask 0022;\n    apk --no-cache add bash tar git; \\\n    source ./scripts/version.sh; \\\n        chmod +x ./scripts/* ; \n\n    go mod vendor && go mod tidy\n\n",
                      "markdown": "`    umask 0022;\n    apk --no-cache add bash tar git; \\\n    source ./scripts/version.sh; \\\n        chmod +x ./scripts/* ; \n\n    go mod vendor && go mod tidy\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 22,
                  "endLine": 27,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    mkdir -p release;\n    mkdir -p dist;\n    umask 0022;\n    apk --no-cache add bash tar git; \\\n    source ./scripts/version.sh; \\\n        chmod +x ./scripts/* ; \n\n",
                    "rendered": {
                      "text": "    mkdir -p release;\n    mkdir -p dist;\n    umask 0022;\n    apk --no-cache add bash tar git; \\\n    source ./scripts/version.sh; \\\n        chmod +x ./scripts/* ; \n\n",
                      "markdown": "`    mkdir -p release;\n    mkdir -p dist;\n    umask 0022;\n    apk --no-cache add bash tar git; \\\n    source ./scripts/version.sh; \\\n        chmod +x ./scripts/* ; \n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 21,
                  "endLine": 10,
                  "endColumn": 26,
                  "snippet": {
                    "text": "SRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\nGO=${GO:-go}\nGOPATH=${GOPATH:-$(go env GOPATH)}\n\nRELEASE_DIR=release\nOUTPUT_DIR=dist\n",
                    "rendered": {
                      "text": "SRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\nGO=${GO:-go}\nGOPATH=${GOPATH:-$(go env GOPATH)}\n\nRELEASE_DIR=release\nOUTPUT_DIR=dist\n",
                      "markdown": "`SRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\nGO=${GO:-go}\nGOPATH=${GOPATH:-$(go env GOPATH)}\n\nRELEASE_DIR=release\nOUTPUT_DIR=dist\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ex\n\ncd \"$(dirname \"${0}\")\"/..\nsource ./scripts/version.sh\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ex\n\ncd \"$(dirname \"${0}\")\"/..\nsource ./scripts/version.sh\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ex\n\ncd \"$(dirname \"${0}\")\"/..\nsource ./scripts/version.sh\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/package.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/package.sh"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 24,
                  "endLine": 29,
                  "endColumn": 29,
                  "snippet": {
                    "text": "cd \"${SRC_DIR}\"\n# linux\nfor arch in amd64 386 arm arm64 s390x ppc64le riscv64; do\n  GOOS=${GOOS:-$(\"${GO}\" env GOOS)}\n  RELEASE_DIR=release \\\n  OUTPUT_DIR=dist \\\n  GOARCH=$arch ./scripts/check_static.sh >> static-check.log\n",
                    "rendered": {
                      "text": "cd \"${SRC_DIR}\"\n# linux\nfor arch in amd64 386 arm arm64 s390x ppc64le riscv64; do\n  GOOS=${GOOS:-$(\"${GO}\" env GOOS)}\n  RELEASE_DIR=release \\\n  OUTPUT_DIR=dist \\\n  GOARCH=$arch ./scripts/check_static.sh >> static-check.log\n",
                      "markdown": "`cd \"${SRC_DIR}\"\n# linux\nfor arch in amd64 386 arm arm64 s390x ppc64le riscv64; do\n  GOOS=${GOOS:-$(\"${GO}\" env GOOS)}\n  RELEASE_DIR=release \\\n  OUTPUT_DIR=dist \\\n  GOARCH=$arch ./scripts/check_static.sh >> static-check.log\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/package.sh"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 35,
                  "endLine": 24,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# windows archive\nFILENAME=cni-plugin-flannel-windows-\"${GOARCH}\"-\"${TAG}\".$format\nFILEPATH=\"${RELEASE_DIR}\"/$FILENAME\ntar -C \"${OUTPUT_DIR}\" --owner=0 --group=0 -caf \"$FILEPATH\" flannel-amd64.exe\n\ncd \"${SRC_DIR}\"\n# linux\n",
                    "rendered": {
                      "text": "\n# windows archive\nFILENAME=cni-plugin-flannel-windows-\"${GOARCH}\"-\"${TAG}\".$format\nFILEPATH=\"${RELEASE_DIR}\"/$FILENAME\ntar -C \"${OUTPUT_DIR}\" --owner=0 --group=0 -caf \"$FILEPATH\" flannel-amd64.exe\n\ncd \"${SRC_DIR}\"\n# linux\n",
                      "markdown": "`\n# windows archive\nFILENAME=cni-plugin-flannel-windows-\"${GOARCH}\"-\"${TAG}\".$format\nFILEPATH=\"${RELEASE_DIR}\"/$FILENAME\ntar -C \"${OUTPUT_DIR}\" --owner=0 --group=0 -caf \"$FILEPATH\" flannel-amd64.exe\n\ncd \"${SRC_DIR}\"\n# linux\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/package.sh"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7,
                  "endLine": 17,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    for format in tgz; do\n        FILENAME=cni-plugin-flannel-linux-$arch-\"${TAG}\".$format\n        FILEPATH=\"${RELEASE_DIR}\"/$FILENAME\n        tar -C \"${OUTPUT_DIR}\" --owner=0 --group=0 -caf \"$FILEPATH\" flannel-$arch\n    done\ndone\n\n",
                    "rendered": {
                      "text": "    for format in tgz; do\n        FILENAME=cni-plugin-flannel-linux-$arch-\"${TAG}\".$format\n        FILEPATH=\"${RELEASE_DIR}\"/$FILENAME\n        tar -C \"${OUTPUT_DIR}\" --owner=0 --group=0 -caf \"$FILEPATH\" flannel-$arch\n    done\ndone\n\n",
                      "markdown": "`    for format in tgz; do\n        FILENAME=cni-plugin-flannel-linux-$arch-\"${TAG}\".$format\n        FILEPATH=\"${RELEASE_DIR}\"/$FILENAME\n        tar -C \"${OUTPUT_DIR}\" --owner=0 --group=0 -caf \"$FILEPATH\" flannel-$arch\n    done\ndone\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/package.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/version.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 30,
                  "endLine": 50,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n    COMMIT=$(git log -n3 --pretty=format:\"%H %ae\" | cut -f1 -d\\  | head -1)\n    if [ -z \"${COMMIT}\" ]; then\n        COMMIT=$(git rev-parse HEAD || true)\n    fi\nfi\n\n",
                    "rendered": {
                      "text": "\n    COMMIT=$(git log -n3 --pretty=format:\"%H %ae\" | cut -f1 -d\\  | head -1)\n    if [ -z \"${COMMIT}\" ]; then\n        COMMIT=$(git rev-parse HEAD || true)\n    fi\nfi\n\n",
                      "markdown": "`\n    COMMIT=$(git log -n3 --pretty=format:\"%H %ae\" | cut -f1 -d\\  | head -1)\n    if [ -z \"${COMMIT}\" ]; then\n        COMMIT=$(git rev-parse HEAD || true)\n    fi\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/version.sh"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 66,
                  "endLine": 48,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        TREE_STATE=dirty\n    fi\n\n    COMMIT=$(git log -n3 --pretty=format:\"%H %ae\" | cut -f1 -d\\  | head -1)\n    if [ -z \"${COMMIT}\" ]; then\n        COMMIT=$(git rev-parse HEAD || true)\n    fi\n",
                    "rendered": {
                      "text": "        TREE_STATE=dirty\n    fi\n\n    COMMIT=$(git log -n3 --pretty=format:\"%H %ae\" | cut -f1 -d\\  | head -1)\n    if [ -z \"${COMMIT}\" ]; then\n        COMMIT=$(git rev-parse HEAD || true)\n    fi\n",
                      "markdown": "`        TREE_STATE=dirty\n    fi\n\n    COMMIT=$(git log -n3 --pretty=format:\"%H %ae\" | cut -f1 -d\\  | head -1)\n    if [ -z \"${COMMIT}\" ]; then\n        COMMIT=$(git rev-parse HEAD || true)\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/version.sh"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 51,
                  "endLine": 48,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        TREE_STATE=dirty\n    fi\n\n    COMMIT=$(git log -n3 --pretty=format:\"%H %ae\" | cut -f1 -d\\  | head -1)\n    if [ -z \"${COMMIT}\" ]; then\n        COMMIT=$(git rev-parse HEAD || true)\n    fi\n",
                    "rendered": {
                      "text": "        TREE_STATE=dirty\n    fi\n\n    COMMIT=$(git log -n3 --pretty=format:\"%H %ae\" | cut -f1 -d\\  | head -1)\n    if [ -z \"${COMMIT}\" ]; then\n        COMMIT=$(git rev-parse HEAD || true)\n    fi\n",
                      "markdown": "`        TREE_STATE=dirty\n    fi\n\n    COMMIT=$(git log -n3 --pretty=format:\"%H %ae\" | cut -f1 -d\\  | head -1)\n    if [ -z \"${COMMIT}\" ]; then\n        COMMIT=$(git rev-parse HEAD || true)\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/version.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 46,
                  "endLine": 41,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nif [ -d .git ]; then\n    if [ -z \"${GIT_TAG}\" ]; then\n        GIT_TAG=$(git tag -l --contains HEAD | head -n 1)\n    fi\n    if [ -n \"$(git status --porcelain --untracked-files=no)\" ]; then\n        DIRTY=\"-dirty\"\n",
                    "rendered": {
                      "text": "\nif [ -d .git ]; then\n    if [ -z \"${GIT_TAG}\" ]; then\n        GIT_TAG=$(git tag -l --contains HEAD | head -n 1)\n    fi\n    if [ -n \"$(git status --porcelain --untracked-files=no)\" ]; then\n        DIRTY=\"-dirty\"\n",
                      "markdown": "`\nif [ -d .git ]; then\n    if [ -z \"${GIT_TAG}\" ]; then\n        GIT_TAG=$(git tag -l --contains HEAD | head -n 1)\n    fi\n    if [ -n \"$(git status --porcelain --untracked-files=no)\" ]; then\n        DIRTY=\"-dirty\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/version.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 39,
                  "endLine": 41,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\nif [ -d .git ]; then\n    if [ -z \"${GIT_TAG}\" ]; then\n        GIT_TAG=$(git tag -l --contains HEAD | head -n 1)\n    fi\n    if [ -n \"$(git status --porcelain --untracked-files=no)\" ]; then\n        DIRTY=\"-dirty\"\n",
                    "rendered": {
                      "text": "\nif [ -d .git ]; then\n    if [ -z \"${GIT_TAG}\" ]; then\n        GIT_TAG=$(git tag -l --contains HEAD | head -n 1)\n    fi\n    if [ -n \"$(git status --porcelain --untracked-files=no)\" ]; then\n        DIRTY=\"-dirty\"\n",
                      "markdown": "`\nif [ -d .git ]; then\n    if [ -z \"${GIT_TAG}\" ]; then\n        GIT_TAG=$(git tag -l --contains HEAD | head -n 1)\n    fi\n    if [ -n \"$(git status --porcelain --untracked-files=no)\" ]; then\n        DIRTY=\"-dirty\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/version.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 34,
                  "endLine": 32,
                  "endColumn": 39,
                  "snippet": {
                    "text": "GIT_TAG=${TAG}\nTREE_STATE=clean\nBUILD_DATE=$(date -u \"+%Y-%m-%dT%H:%M:%SZ\")\nCOMMIT=$(git rev-parse HEAD)$(if ! git diff --no-ext-diff --quiet --exit-code; then echo .dirty; fi)\nPLATFORM=${GOOS}-${GOARCH}\nRELEASE=${PROG}-${GOARCH}\n# hardcode versions unless set specifically\n",
                    "rendered": {
                      "text": "GIT_TAG=${TAG}\nTREE_STATE=clean\nBUILD_DATE=$(date -u \"+%Y-%m-%dT%H:%M:%SZ\")\nCOMMIT=$(git rev-parse HEAD)$(if ! git diff --no-ext-diff --quiet --exit-code; then echo .dirty; fi)\nPLATFORM=${GOOS}-${GOARCH}\nRELEASE=${PROG}-${GOARCH}\n# hardcode versions unless set specifically\n",
                      "markdown": "`GIT_TAG=${TAG}\nTREE_STATE=clean\nBUILD_DATE=$(date -u \"+%Y-%m-%dT%H:%M:%SZ\")\nCOMMIT=$(git rev-parse HEAD)$(if ! git diff --no-ext-diff --quiet --exit-code; then echo .dirty; fi)\nPLATFORM=${GOOS}-${GOARCH}\nRELEASE=${PROG}-${GOARCH}\n# hardcode versions unless set specifically\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/version.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 21,
                  "endLine": 12,
                  "endColumn": 26,
                  "snippet": {
                    "text": "GOOS=${GOOS:-$(\"${GO}\" env GOOS)}\nSRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\nGOPATH=${GOPATH:-$(go env GOPATH)}\n\nif [ -z \"$GOOS\" ]; then\n    if [ \"${OS}\" == \"Windows_NT\" ]; then\n",
                    "rendered": {
                      "text": "GOOS=${GOOS:-$(\"${GO}\" env GOOS)}\nSRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\nGOPATH=${GOPATH:-$(go env GOPATH)}\n\nif [ -z \"$GOOS\" ]; then\n    if [ \"${OS}\" == \"Windows_NT\" ]; then\n",
                      "markdown": "`GOOS=${GOOS:-$(\"${GO}\" env GOOS)}\nSRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\nGOPATH=${GOPATH:-$(go env GOPATH)}\n\nif [ -z \"$GOOS\" ]; then\n    if [ \"${OS}\" == \"Windows_NT\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/version.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 22,
                  "endLine": 9,
                  "endColumn": 27,
                  "snippet": {
                    "text": "REPO=${REPO:-rancher}\nGO=${GO-go}\nGOARCH=${GOARCH:-$(\"${GO}\" env GOARCH)}\nGOOS=${GOOS:-$(\"${GO}\" env GOOS)}\nSRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\nGOPATH=${GOPATH:-$(go env GOPATH)}\n",
                    "rendered": {
                      "text": "REPO=${REPO:-rancher}\nGO=${GO-go}\nGOARCH=${GOARCH:-$(\"${GO}\" env GOARCH)}\nGOOS=${GOOS:-$(\"${GO}\" env GOOS)}\nSRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\nGOPATH=${GOPATH:-$(go env GOPATH)}\n",
                      "markdown": "`REPO=${REPO:-rancher}\nGO=${GO-go}\nGOARCH=${GOARCH:-$(\"${GO}\" env GOARCH)}\nGOOS=${GOOS:-$(\"${GO}\" env GOOS)}\nSRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\nGOPATH=${GOPATH:-$(go env GOPATH)}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/version.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 8,
                  "endColumn": 31,
                  "snippet": {
                    "text": "REGISTRY=${REGISTRY:-docker.io/flannel/flannel-cni-plugin}\nREPO=${REPO:-rancher}\nGO=${GO-go}\nGOARCH=${GOARCH:-$(\"${GO}\" env GOARCH)}\nGOOS=${GOOS:-$(\"${GO}\" env GOOS)}\nSRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\n",
                    "rendered": {
                      "text": "REGISTRY=${REGISTRY:-docker.io/flannel/flannel-cni-plugin}\nREPO=${REPO:-rancher}\nGO=${GO-go}\nGOARCH=${GOARCH:-$(\"${GO}\" env GOARCH)}\nGOOS=${GOOS:-$(\"${GO}\" env GOOS)}\nSRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\n",
                      "markdown": "`REGISTRY=${REGISTRY:-docker.io/flannel/flannel-cni-plugin}\nREPO=${REPO:-rancher}\nGO=${GO-go}\nGOARCH=${GOARCH:-$(\"${GO}\" env GOARCH)}\nGOOS=${GOOS:-$(\"${GO}\" env GOOS)}\nSRC_DIR=${SRC_DIR:-$PWD}\nDOCKER=${DOCKER:-docker}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/check_static.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/check_static.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ex\n\ncd $(dirname $0)/..\nsource ./scripts/version.sh\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/go-assert-static.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 120,
                  "endLine": 20,
                  "endColumn": 126,
                  "snippet": {
                    "text": "            fi\n        ;;\n        windows)\n            if ! ldd \"${exe}\"  2>&1 | grep -qE '.*not a dynamic executable' && ! objdump -T \"${exe}\" 2>&1 | tr -d '\\n' | grep -E '.*pei-x86-64.*not a dynamic object.*no symbols'; then\n                file \"${exe}\" >&2\n                echo \"${exe}: not a statically linked Windows executable\" >&2\n                exit 1\n",
                    "rendered": {
                      "text": "            fi\n        ;;\n        windows)\n            if ! ldd \"${exe}\"  2>&1 | grep -qE '.*not a dynamic executable' && ! objdump -T \"${exe}\" 2>&1 | tr -d '\\n' | grep -E '.*pei-x86-64.*not a dynamic object.*no symbols'; then\n                file \"${exe}\" >&2\n                echo \"${exe}: not a statically linked Windows executable\" >&2\n                exit 1\n",
                      "markdown": "`            fi\n        ;;\n        windows)\n            if ! ldd \"${exe}\"  2>&1 | grep -qE '.*not a dynamic executable' && ! objdump -T \"${exe}\" 2>&1 | tr -d '\\n' | grep -E '.*pei-x86-64.*not a dynamic object.*no symbols'; then\n                file \"${exe}\" >&2\n                echo \"${exe}: not a statically linked Windows executable\" >&2\n                exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/go-assert-static.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 37,
                  "endLine": 20,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            fi\n        ;;\n        windows)\n            if ! ldd \"${exe}\"  2>&1 | grep -qE '.*not a dynamic executable' && ! objdump -T \"${exe}\" 2>&1 | tr -d '\\n' | grep -E '.*pei-x86-64.*not a dynamic object.*no symbols'; then\n                file \"${exe}\" >&2\n                echo \"${exe}: not a statically linked Windows executable\" >&2\n                exit 1\n",
                    "rendered": {
                      "text": "            fi\n        ;;\n        windows)\n            if ! ldd \"${exe}\"  2>&1 | grep -qE '.*not a dynamic executable' && ! objdump -T \"${exe}\" 2>&1 | tr -d '\\n' | grep -E '.*pei-x86-64.*not a dynamic object.*no symbols'; then\n                file \"${exe}\" >&2\n                echo \"${exe}: not a statically linked Windows executable\" >&2\n                exit 1\n",
                      "markdown": "`            fi\n        ;;\n        windows)\n            if ! ldd \"${exe}\"  2>&1 | grep -qE '.*not a dynamic executable' && ! objdump -T \"${exe}\" 2>&1 | tr -d '\\n' | grep -E '.*pei-x86-64.*not a dynamic object.*no symbols'; then\n                file \"${exe}\" >&2\n                echo \"${exe}: not a statically linked Windows executable\" >&2\n                exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/go-assert-static.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 33,
                  "endLine": 13,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n    case $GOOS in\n        linux)\n            if  ! file \"${exe}\" | grep -E '.*ELF.*executable, .*, statically linked,.*'; then\n                file \"${exe}\" >&2\n                echo \"${exe}: not a statically linked executable\" >&2\n                exit 1\n",
                    "rendered": {
                      "text": "\n    case $GOOS in\n        linux)\n            if  ! file \"${exe}\" | grep -E '.*ELF.*executable, .*, statically linked,.*'; then\n                file \"${exe}\" >&2\n                echo \"${exe}: not a statically linked executable\" >&2\n                exit 1\n",
                      "markdown": "`\n    case $GOOS in\n        linux)\n            if  ! file \"${exe}\" | grep -E '.*ELF.*executable, .*, statically linked,.*'; then\n                file \"${exe}\" >&2\n                echo \"${exe}: not a statically linked executable\" >&2\n                exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux.go"
                },
                "region": {
                  "startLine": 136,
                  "endLine": 136,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\tcleanup(err)\n\t}()\n\n\tnc := &types.NetConf{}\n\tif err = json.Unmarshal(netConfBytes, nc); err != nil {\n\t\t// Interface will remain in the bridge but will be removed when rebooting the node\n\t\tfmt.Fprintf(os.Stderr, \"failed to parse netconf: %v\", err)\n",
                    "rendered": {
                      "text": "\t\tcleanup(err)\n\t}()\n\n\tnc := &types.NetConf{}\n\tif err = json.Unmarshal(netConfBytes, nc); err != nil {\n\t\t// Interface will remain in the bridge but will be removed when rebooting the node\n\t\tfmt.Fprintf(os.Stderr, \"failed to parse netconf: %v\", err)\n",
                      "markdown": "`\t\tcleanup(err)\n\t}()\n\n\tnc := &types.NetConf{}\n\tif err = json.Unmarshal(netConfBytes, nc); err != nil {\n\t\t// Interface will remain in the bridge but will be removed when rebooting the node\n\t\tfmt.Fprintf(os.Stderr, \"failed to parse netconf: %v\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 32,
                  "endLine": 629,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with dual stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tdualStackSubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with dual stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tdualStackSubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with dual stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tdualStackSubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 619,
                  "startColumn": 32,
                  "endLine": 619,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv6 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv6SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv6 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv6SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv6 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv6SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 609,
                  "startColumn": 32,
                  "endLine": 609,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv4 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv4SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv4 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv4SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv4 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv4SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 595,
                  "startColumn": 32,
                  "endLine": 595,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with dual stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with dual stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(dualStackSubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with dual stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with dual stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(dualStackSubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with dual stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with dual stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(dualStackSubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 583,
                  "startColumn": 32,
                  "endLine": 583,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with ipv6 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv6 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv6SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with ipv6 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv6 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv6SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with ipv6 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv6 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv6SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 571,
                  "startColumn": 32,
                  "endLine": 571,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t\t})\n\n\t\tDescribe(\"loadFlannelSubnetEnv\", func() {\n\t\t\tContext(\"when flannel subnet env is valid with ipv4 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv4 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv4SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                    "rendered": {
                      "text": "\t\t})\n\n\t\tDescribe(\"loadFlannelSubnetEnv\", func() {\n\t\t\tContext(\"when flannel subnet env is valid with ipv4 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv4 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv4SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                      "markdown": "`\t\t})\n\n\t\tDescribe(\"loadFlannelSubnetEnv\", func() {\n\t\t\tContext(\"when flannel subnet env is valid with ipv4 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv4 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv4SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 29,
                  "endLine": 570,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\t})\n\t\t})\n\n\t\tDescribe(\"loadFlannelSubnetEnv\", func() {\n\t\t\tContext(\"when flannel subnet env is valid with ipv4 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv4 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv4SubnetFile)\n",
                    "rendered": {
                      "text": "\t\t\t})\n\t\t})\n\n\t\tDescribe(\"loadFlannelSubnetEnv\", func() {\n\t\t\tContext(\"when flannel subnet env is valid with ipv4 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv4 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv4SubnetFile)\n",
                      "markdown": "`\t\t\t})\n\t\t})\n\n\t\tDescribe(\"loadFlannelSubnetEnv\", func() {\n\t\t\tContext(\"when flannel subnet env is valid with ipv4 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv4 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv4SubnetFile)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 16,
                  "endLine": 101,
                  "endColumn": 26,
                  "snippet": {
                    "text": "FLANNEL_MTU=1472\nFLANNEL_IPMASQ=true\n`\n\tvar writeSubnetEnv = func(contents string) string {\n\t\tfile, err := os.CreateTemp(\"\", \"subnet.env\")\n\t\tExpect(err).NotTo(HaveOccurred())\n\t\t_, err = file.WriteString(contents)\n",
                    "rendered": {
                      "text": "FLANNEL_MTU=1472\nFLANNEL_IPMASQ=true\n`\n\tvar writeSubnetEnv = func(contents string) string {\n\t\tfile, err := os.CreateTemp(\"\", \"subnet.env\")\n\t\tExpect(err).NotTo(HaveOccurred())\n\t\t_, err = file.WriteString(contents)\n",
                      "markdown": "`FLANNEL_MTU=1472\nFLANNEL_IPMASQ=true\n`\n\tvar writeSubnetEnv = func(contents string) string {\n\t\tfile, err := os.CreateTemp(\"\", \"subnet.env\")\n\t\tExpect(err).NotTo(HaveOccurred())\n\t\t_, err = file.WriteString(contents)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 39,
                  "endLine": 6,
                  "snippet": {
                    "text": "//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//\thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//\thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//\thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 31,
                  "endLine": 629,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with dual stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tdualStackSubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with dual stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tdualStackSubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with dual stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tdualStackSubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 619,
                  "startColumn": 31,
                  "endLine": 619,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv6 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv6SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv6 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv6SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv6 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv6SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 609,
                  "startColumn": 31,
                  "endLine": 609,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv4 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv4SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv4 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv4SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is invalid with ipv4 stack\", func() {\n\t\t\t\tBeforeEach(func() {\n\t\t\t\t\tonlyIpv4SubnetFile = writeSubnetEnv(\"foo=bar\")\n\t\t\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 595,
                  "startColumn": 31,
                  "endLine": 595,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with dual stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with dual stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(dualStackSubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with dual stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with dual stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(dualStackSubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with dual stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with dual stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(dualStackSubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 583,
                  "startColumn": 31,
                  "endLine": 583,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with ipv6 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv6 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv6SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                    "rendered": {
                      "text": "\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with ipv6 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv6 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv6SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                      "markdown": "`\t\t\t\t})\n\t\t\t})\n\n\t\t\tContext(\"when flannel subnet env is valid with ipv6 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv6 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv6SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_linux_test.go"
                },
                "region": {
                  "startLine": 571,
                  "startColumn": 31,
                  "endLine": 571,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t})\n\n\t\tDescribe(\"loadFlannelSubnetEnv\", func() {\n\t\t\tContext(\"when flannel subnet env is valid with ipv4 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv4 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv4SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                    "rendered": {
                      "text": "\t\t})\n\n\t\tDescribe(\"loadFlannelSubnetEnv\", func() {\n\t\t\tContext(\"when flannel subnet env is valid with ipv4 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv4 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv4SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n",
                      "markdown": "`\t\t})\n\n\t\tDescribe(\"loadFlannelSubnetEnv\", func() {\n\t\t\tContext(\"when flannel subnet env is valid with ipv4 stack\", func() {\n\t\t\t\tIt(\"loads flannel subnet config with ipv4 stack\", func() {\n\t\t\t\t\tconf, err := loadFlannelSubnetEnv(onlyIpv4SubnetFile)\n\t\t\t\t\tExpect(err).ShouldNot(HaveOccurred())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/.github/dependabot.yml"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 23,
                  "endLine": 2,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# To get started with Dependabot version updates, you'll need to specify which\n# package ecosystems to update and where the package manifests are located.\n# Please see the documentation for all configuration options:\n# https://docs.github.com/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file\n\n",
                    "rendered": {
                      "text": "# To get started with Dependabot version updates, you'll need to specify which\n# package ecosystems to update and where the package manifests are located.\n# Please see the documentation for all configuration options:\n# https://docs.github.com/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file\n\n",
                      "markdown": "`# To get started with Dependabot version updates, you'll need to specify which\n# package ecosystems to update and where the package manifests are located.\n# Please see the documentation for all configuration options:\n# https://docs.github.com/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 11,
                  "endLine": 26,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nfunction testrun {\n    download_cnis\n    sudo -E bash -c \"umask 0; PATH=${GOPATH}/dist:$(pwd)/dist:${PATH} go test $@\"\n}\n\nCOVERALLS=${COVERALLS:-\"\"}\n",
                    "rendered": {
                      "text": "\nfunction testrun {\n    download_cnis\n    sudo -E bash -c \"umask 0; PATH=${GOPATH}/dist:$(pwd)/dist:${PATH} go test $@\"\n}\n\nCOVERALLS=${COVERALLS:-\"\"}\n",
                      "markdown": "`\nfunction testrun {\n    download_cnis\n    sudo -E bash -c \"umask 0; PATH=${GOPATH}/dist:$(pwd)/dist:${PATH} go test $@\"\n}\n\nCOVERALLS=${COVERALLS:-\"\"}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# Run CNI plugin tests.\n#\n# This needs sudo, as we'll be creating net interfaces.\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# Run CNI plugin tests.\n#\n# This needs sudo, as we'll be creating net interfaces.\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# Run CNI plugin tests.\n#\n# This needs sudo, as we'll be creating net interfaces.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 55,
                  "endLine": 66,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# TODO: Figure out how to run this outside of the containernetworking\n# Run the pkg/ns tests as non root user\n#mkdir /tmp/cni-rootless\n#(export XDG_RUNTIME_DIR=/tmp/cni-rootless; cd pkg/ns/; unshare -rmn go test)\n",
                    "rendered": {
                      "text": "# TODO: Figure out how to run this outside of the containernetworking\n# Run the pkg/ns tests as non root user\n#mkdir /tmp/cni-rootless\n#(export XDG_RUNTIME_DIR=/tmp/cni-rootless; cd pkg/ns/; unshare -rmn go test)\n",
                      "markdown": "`# TODO: Figure out how to run this outside of the containernetworking\n# Run the pkg/ns tests as non root user\n#mkdir /tmp/cni-rootless\n#(export XDG_RUNTIME_DIR=/tmp/cni-rootless; cd pkg/ns/; unshare -rmn go test)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 15,
                  "endLine": 52,
                  "endColumn": 20,
                  "snippet": {
                    "text": "echo \"Checking gofmt...\"\nfmtRes=$(go fmt $PKG)\nif [ -n \"${fmtRes}\" ]; then\n    echo -e \"go fmt checking failed:\\n${fmtRes}\"\n    exit 255\nfi\n\n",
                    "rendered": {
                      "text": "echo \"Checking gofmt...\"\nfmtRes=$(go fmt $PKG)\nif [ -n \"${fmtRes}\" ]; then\n    echo -e \"go fmt checking failed:\\n${fmtRes}\"\n    exit 255\nfi\n\n",
                      "markdown": "`echo \"Checking gofmt...\"\nfmtRes=$(go fmt $PKG)\nif [ -n \"${fmtRes}\" ]; then\n    echo -e \"go fmt checking failed:\\n${fmtRes}\"\n    exit 255\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 11,
                  "endLine": 50,
                  "endColumn": 16,
                  "snippet": {
                    "text": "done\n\necho \"Checking gofmt...\"\nfmtRes=$(go fmt $PKG)\nif [ -n \"${fmtRes}\" ]; then\n    echo -e \"go fmt checking failed:\\n${fmtRes}\"\n    exit 255\n",
                    "rendered": {
                      "text": "done\n\necho \"Checking gofmt...\"\nfmtRes=$(go fmt $PKG)\nif [ -n \"${fmtRes}\" ]; then\n    echo -e \"go fmt checking failed:\\n${fmtRes}\"\n    exit 255\n",
                      "markdown": "`done\n\necho \"Checking gofmt...\"\nfmtRes=$(go fmt $PKG)\nif [ -n \"${fmtRes}\" ]; then\n    echo -e \"go fmt checking failed:\\n${fmtRes}\"\n    exit 255\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 28,
                  "endLine": 37,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    echo \"without coverage profile generation...\"\nfi\n\nPKG=${PKG:-$(go list ./... | xargs echo)}\n\ni=0\nfor t in ${PKG}; do\n",
                    "rendered": {
                      "text": "    echo \"without coverage profile generation...\"\nfi\n\nPKG=${PKG:-$(go list ./... | xargs echo)}\n\ni=0\nfor t in ${PKG}; do\n",
                      "markdown": "`    echo \"without coverage profile generation...\"\nfi\n\nPKG=${PKG:-$(go list ./... | xargs echo)}\n\ni=0\nfor t in ${PKG}; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 11,
                  "endLine": 26,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nfunction testrun {\n    download_cnis\n    sudo -E bash -c \"umask 0; PATH=${GOPATH}/dist:$(pwd)/dist:${PATH} go test $@\"\n}\n\nCOVERALLS=${COVERALLS:-\"\"}\n",
                    "rendered": {
                      "text": "\nfunction testrun {\n    download_cnis\n    sudo -E bash -c \"umask 0; PATH=${GOPATH}/dist:$(pwd)/dist:${PATH} go test $@\"\n}\n\nCOVERALLS=${COVERALLS:-\"\"}\n",
                      "markdown": "`\nfunction testrun {\n    download_cnis\n    sudo -E bash -c \"umask 0; PATH=${GOPATH}/dist:$(pwd)/dist:${PATH} go test $@\"\n}\n\nCOVERALLS=${COVERALLS:-\"\"}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 132,
                  "endLine": 20,
                  "endColumn": 137,
                  "snippet": {
                    "text": "\nfunction download_cnis {\n    pushd dist/\n    curl -L https://github.com/containernetworking/plugins/releases/download/$CNI_VERSION/cni-plugins-linux-amd64-$CNI_VERSION.tgz | tar -xz\n    popd\n}\n\n",
                    "rendered": {
                      "text": "\nfunction download_cnis {\n    pushd dist/\n    curl -L https://github.com/containernetworking/plugins/releases/download/$CNI_VERSION/cni-plugins-linux-amd64-$CNI_VERSION.tgz | tar -xz\n    popd\n}\n\n",
                      "markdown": "`\nfunction download_cnis {\n    pushd dist/\n    curl -L https://github.com/containernetworking/plugins/releases/download/$CNI_VERSION/cni-plugins-linux-amd64-$CNI_VERSION.tgz | tar -xz\n    popd\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nfunction download_cnis {\n    pushd dist/\n    curl -L https://github.com/containernetworking/plugins/releases/download/$CNI_VERSION/cni-plugins-linux-amd64-$CNI_VERSION.tgz | tar -xz\n    popd\n}\n\n",
                    "rendered": {
                      "text": "\nfunction download_cnis {\n    pushd dist/\n    curl -L https://github.com/containernetworking/plugins/releases/download/$CNI_VERSION/cni-plugins-linux-amd64-$CNI_VERSION.tgz | tar -xz\n    popd\n}\n\n",
                      "markdown": "`\nfunction download_cnis {\n    pushd dist/\n    curl -L https://github.com/containernetworking/plugins/releases/download/$CNI_VERSION/cni-plugins-linux-amd64-$CNI_VERSION.tgz | tar -xz\n    popd\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/scripts/test_linux.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# Run CNI plugin tests.\n#\n# This needs sudo, as we'll be creating net interfaces.\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# Run CNI plugin tests.\n#\n# This needs sudo, as we'll be creating net interfaces.\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# Run CNI plugin tests.\n#\n# This needs sudo, as we'll be creating net interfaces.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile.image"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 22,
                  "endLine": 9,
                  "snippet": {
                    "text": "COPY --from=xx / /\nARG TARGETPLATFORM\nARG BUILDPLATFORM\nRUN apk --no-cache add bash\nCOPY go.mod go.sum *.go /build/\nCOPY scripts /build/scripts\nWORKDIR /build\nRUN xx-info env\n",
                    "rendered": {
                      "text": "COPY --from=xx / /\nARG TARGETPLATFORM\nARG BUILDPLATFORM\nRUN apk --no-cache add bash\nCOPY go.mod go.sum *.go /build/\nCOPY scripts /build/scripts\nWORKDIR /build\nRUN xx-info env\n",
                      "markdown": "`COPY --from=xx / /\nARG TARGETPLATFORM\nARG BUILDPLATFORM\nRUN apk --no-cache add bash\nCOPY go.mod go.sum *.go /build/\nCOPY scripts /build/scripts\nWORKDIR /build\nRUN xx-info env\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile.image"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN export GOOS=$(xx-info os) &&\\\n    export GOARCH=$(xx-info arch) &&\\\n    ./scripts/build_flannel.sh &&\\\n    mv ./dist/flannel-${GOARCH} /flannel\n\nFROM alpine:20240807\nARG GOARCH\n",
                    "rendered": {
                      "text": "RUN export GOOS=$(xx-info os) &&\\\n    export GOARCH=$(xx-info arch) &&\\\n    ./scripts/build_flannel.sh &&\\\n    mv ./dist/flannel-${GOARCH} /flannel\n\nFROM alpine:20240807\nARG GOARCH\n",
                      "markdown": "`RUN export GOOS=$(xx-info os) &&\\\n    export GOARCH=$(xx-info arch) &&\\\n    ./scripts/build_flannel.sh &&\\\n    mv ./dist/flannel-${GOARCH} /flannel\n\nFROM alpine:20240807\nARG GOARCH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile.image"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 11,
                  "endLine": 13,
                  "snippet": {
                    "text": "COPY go.mod go.sum *.go /build/\nCOPY scripts /build/scripts\nWORKDIR /build\nRUN xx-info env\nRUN go mod tidy && go mod vendor\nRUN export GOOS=$(xx-info os) &&\\\n    export GOARCH=$(xx-info arch) &&\\\n    ./scripts/build_flannel.sh &&\\\n",
                    "rendered": {
                      "text": "COPY go.mod go.sum *.go /build/\nCOPY scripts /build/scripts\nWORKDIR /build\nRUN xx-info env\nRUN go mod tidy && go mod vendor\nRUN export GOOS=$(xx-info os) &&\\\n    export GOARCH=$(xx-info arch) &&\\\n    ./scripts/build_flannel.sh &&\\\n",
                      "markdown": "`COPY go.mod go.sum *.go /build/\nCOPY scripts /build/scripts\nWORKDIR /build\nRUN xx-info env\nRUN go mod tidy && go mod vendor\nRUN export GOOS=$(xx-info os) &&\\\n    export GOARCH=$(xx-info arch) &&\\\n    ./scripts/build_flannel.sh &&\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile.image"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 22,
                  "endLine": 9,
                  "snippet": {
                    "text": "COPY --from=xx / /\nARG TARGETPLATFORM\nARG BUILDPLATFORM\nRUN apk --no-cache add bash\nCOPY go.mod go.sum *.go /build/\nCOPY scripts /build/scripts\nWORKDIR /build\nRUN xx-info env\n",
                    "rendered": {
                      "text": "COPY --from=xx / /\nARG TARGETPLATFORM\nARG BUILDPLATFORM\nRUN apk --no-cache add bash\nCOPY go.mod go.sum *.go /build/\nCOPY scripts /build/scripts\nWORKDIR /build\nRUN xx-info env\n",
                      "markdown": "`COPY --from=xx / /\nARG TARGETPLATFORM\nARG BUILDPLATFORM\nRUN apk --no-cache add bash\nCOPY go.mod go.sum *.go /build/\nCOPY scripts /build/scripts\nWORKDIR /build\nRUN xx-info env\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ARG TAG\nRUN set -x \\\n    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\n",
                    "rendered": {
                      "text": "ARG TAG\nRUN set -x \\\n    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\n",
                      "markdown": "`ARG TAG\nRUN set -x \\\n    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 7,
                  "endLine": 59,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    for format in tgz; do \\\n        FILENAME=cni-plugin-flannel-windows-${GOARCH}-${TAG}.${format}; \\\n        FILEPATH=${RELEASE_DIR}/${FILENAME}; \\\n        tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf ${FILEPATH} . ; \\\n    done\n\nRUN \\\n",
                    "rendered": {
                      "text": "    for format in tgz; do \\\n        FILENAME=cni-plugin-flannel-windows-${GOARCH}-${TAG}.${format}; \\\n        FILEPATH=${RELEASE_DIR}/${FILENAME}; \\\n        tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf ${FILEPATH} . ; \\\n    done\n\nRUN \\\n",
                      "markdown": "`    for format in tgz; do \\\n        FILENAME=cni-plugin-flannel-windows-${GOARCH}-${TAG}.${format}; \\\n        FILEPATH=${RELEASE_DIR}/${FILENAME}; \\\n        tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf ${FILEPATH} . ; \\\n    done\n\nRUN \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 11,
                  "endLine": 50,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        for format in tgz; do \\\n            FILENAME=cni-plugin-flannel-linux-${arch}-${TAG}.${format}; \\\n            FILEPATH=${RELEASE_DIR}/${FILENAME}; \\\n            tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf ${FILEPATH} . ; \\\n        done; \\\n    done\n\n",
                    "rendered": {
                      "text": "        for format in tgz; do \\\n            FILENAME=cni-plugin-flannel-linux-${arch}-${TAG}.${format}; \\\n            FILEPATH=${RELEASE_DIR}/${FILENAME}; \\\n            tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf ${FILEPATH} . ; \\\n        done; \\\n    done\n\n",
                      "markdown": "`        for format in tgz; do \\\n            FILENAME=cni-plugin-flannel-linux-${arch}-${TAG}.${format}; \\\n            FILEPATH=${RELEASE_DIR}/${FILENAME}; \\\n            tar -C ${OUTPUT_DIR} --owner=0 --group=0 -caf ${FILEPATH} . ; \\\n        done; \\\n    done\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 77,
                  "endLine": 32,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n# Always clean first\nRUN \\\n",
                    "rendered": {
                      "text": "ENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n# Always clean first\nRUN \\\n",
                      "markdown": "`ENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n# Always clean first\nRUN \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 40,
                  "endLine": 31,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n# Always clean first\n",
                    "rendered": {
                      "text": "ENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n# Always clean first\n",
                      "markdown": "`ENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n# Always clean first\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 26,
                  "endLine": 30,
                  "endColumn": 31,
                  "snippet": {
                    "text": "ENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n",
                    "rendered": {
                      "text": "ENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n",
                      "markdown": "`ENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 16,
                  "endLine": 30,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n",
                    "rendered": {
                      "text": "\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n",
                      "markdown": "`\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 28,
                  "endLine": 29,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n",
                    "rendered": {
                      "text": "    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n",
                      "markdown": "`    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\nENV OUTPUT_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/dist\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 30,
                  "endLine": 28,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    source ./scripts/version.sh; \\\n    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\n",
                    "rendered": {
                      "text": "    source ./scripts/version.sh; \\\n    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\n",
                      "markdown": "`    source ./scripts/version.sh; \\\n    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\nENV RELEASE_DIR=${GOPATH}/src/github.com/flannel-io/cni-plugin/release-${TAG}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 27,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    set -ex; \\\n    source ./scripts/version.sh; \\\n    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\n",
                    "rendered": {
                      "text": "    set -ex; \\\n    source ./scripts/version.sh; \\\n    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\n",
                      "markdown": "`    set -ex; \\\n    source ./scripts/version.sh; \\\n    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\nENV GO=${GO:-go}\nENV GOPATH=${GOPATH:-'${go env GOPATH}'}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN \\\n    set -ex; \\\n    source ./scripts/version.sh; \\\n    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\n",
                    "rendered": {
                      "text": "RUN \\\n    set -ex; \\\n    source ./scripts/version.sh; \\\n    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\n",
                      "markdown": "`RUN \\\n    set -ex; \\\n    source ./scripts/version.sh; \\\n    chmod +x ./scripts/*\n\nENV SRC_DIR=${SRC_DIR:-${pwd}}\nENV DOCKER=${DOCKER:-docker}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "COPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\nWORKDIR ${GOPATH}/src/github.com/flannel-io/cni-plugin\n\n\n",
                    "rendered": {
                      "text": "COPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\nWORKDIR ${GOPATH}/src/github.com/flannel-io/cni-plugin\n\n\n",
                      "markdown": "`COPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\nWORKDIR ${GOPATH}/src/github.com/flannel-io/cni-plugin\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\nWORKDIR ${GOPATH}/src/github.com/flannel-io/cni-plugin\n\n",
                    "rendered": {
                      "text": "    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\nWORKDIR ${GOPATH}/src/github.com/flannel-io/cni-plugin\n\n",
                      "markdown": "`    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\nWORKDIR ${GOPATH}/src/github.com/flannel-io/cni-plugin\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\nWORKDIR ${GOPATH}/src/github.com/flannel-io/cni-plugin\n",
                    "rendered": {
                      "text": "    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\nWORKDIR ${GOPATH}/src/github.com/flannel-io/cni-plugin\n",
                      "markdown": "`    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\nWORKDIR ${GOPATH}/src/github.com/flannel-io/cni-plugin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 3,
                  "endLine": 10,
                  "snippet": {
                    "text": "    bash \\\n    curl \\\n    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\n",
                    "rendered": {
                      "text": "    bash \\\n    curl \\\n    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\n",
                      "markdown": "`    bash \\\n    curl \\\n    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\nRUN curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.43.0\nRUN git clone -b $(/semver-parse.sh ${TAG} all) --depth=1 https://github.com/flannel-io/cni-plugin ${GOPATH}/src/github.com/flannel-io/cni-plugin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 3,
                  "endLine": 8,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\n",
                    "rendered": {
                      "text": "    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\n",
                      "markdown": "`    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\nRUN chmod +x /semver-parse.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3,
                  "endLine": 7,
                  "endColumn": 9,
                  "snippet": {
                    "text": "RUN set -x \\\n    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\n",
                    "rendered": {
                      "text": "RUN set -x \\\n    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\n",
                      "markdown": "`RUN set -x \\\n    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\nCOPY ./scripts/semver-parse.sh /semver-parse.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ARG TAG\nRUN set -x \\\n    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\n",
                    "rendered": {
                      "text": "ARG TAG\nRUN set -x \\\n    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\n",
                      "markdown": "`ARG TAG\nRUN set -x \\\n    && apk --no-cache add \\\n    bash \\\n    curl \\\n    git \\\n    tar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/RELEASING.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 3,
                  "endLine": 33,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  - Create a draft of the release note\n  - Discuss the level of testing that's needed and create a test plan if sensible\n  - Check what version of `go` is used in the build container, updating it if there's a new stable release.\n  - Update the vendor directory and Godeps to pin to the corresponding containernetworking/cni release. Create a PR, makes sure it passes CI and get it merged.\n\n## Creating the release artifacts\n1. Make sure you are on the master branch and don't have any local uncommitted changes.\n",
                    "rendered": {
                      "text": "  - Create a draft of the release note\n  - Discuss the level of testing that's needed and create a test plan if sensible\n  - Check what version of `go` is used in the build container, updating it if there's a new stable release.\n  - Update the vendor directory and Godeps to pin to the corresponding containernetworking/cni release. Create a PR, makes sure it passes CI and get it merged.\n\n## Creating the release artifacts\n1. Make sure you are on the master branch and don't have any local uncommitted changes.\n",
                      "markdown": "`  - Create a draft of the release note\n  - Discuss the level of testing that's needed and create a test plan if sensible\n  - Check what version of `go` is used in the build container, updating it if there's a new stable release.\n  - Update the vendor directory and Godeps to pin to the corresponding containernetworking/cni release. Create a PR, makes sure it passes CI and get it merged.\n\n## Creating the release artifacts\n1. Make sure you are on the master branch and don't have any local uncommitted changes.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/RELEASING.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 84,
                  "endLine": 27,
                  "endColumn": 88,
                  "snippet": {
                    "text": "  - `.sha1`, `.sha256`, and `.sha512` files for the above files.\n\n## Preparing for a release\n1. Releases are performed by maintainers and should usually be discussed and planned at a maintainer meeting.\n  - Choose the version number. It should be prefixed with `v`, e.g. `v1.2.3`\n  - Take a quick scan through the PRs and issues to make sure there isn't anything crucial that _must_ be in the next release.\n  - Create a draft of the release note\n",
                    "rendered": {
                      "text": "  - `.sha1`, `.sha256`, and `.sha512` files for the above files.\n\n## Preparing for a release\n1. Releases are performed by maintainers and should usually be discussed and planned at a maintainer meeting.\n  - Choose the version number. It should be prefixed with `v`, e.g. `v1.2.3`\n  - Take a quick scan through the PRs and issues to make sure there isn't anything crucial that _must_ be in the next release.\n  - Create a draft of the release note\n",
                      "markdown": "`  - `.sha1`, `.sha256`, and `.sha512` files for the above files.\n\n## Preparing for a release\n1. Releases are performed by maintainers and should usually be discussed and planned at a maintainer meeting.\n  - Choose the version number. It should be prefixed with `v`, e.g. `v1.2.3`\n  - Take a quick scan through the PRs and issues to make sure there isn't anything crucial that _must_ be in the next release.\n  - Create a draft of the release note\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/RELEASING.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 18,
                  "endLine": 45,
                  "endColumn": 23,
                  "snippet": {
                    "text": "4. Test these binaries according to the test plan.\n\n## Publishing the release\n1. Push the tag to git `git push origin <TAG>`\n2. Create a release on Github, using the tag which was just pushed.\n3. Attach all the artifacts from the release directory.\n4. Add the release note to the release.\n",
                    "rendered": {
                      "text": "4. Test these binaries according to the test plan.\n\n## Publishing the release\n1. Push the tag to git `git push origin <TAG>`\n2. Create a release on Github, using the tag which was just pushed.\n3. Attach all the artifacts from the release directory.\n4. Add the release note to the release.\n",
                      "markdown": "`4. Test these binaries according to the test plan.\n\n## Publishing the release\n1. Push the tag to git `git push origin <TAG>`\n2. Create a release on Github, using the tag which was just pushed.\n3. Attach all the artifacts from the release directory.\n4. Add the release note to the release.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/RELEASING.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 23,
                  "endLine": 40,
                  "endColumn": 31,
                  "snippet": {
                    "text": "2. Create a signed tag for the release `git tag -s $VERSION` (Ensure that GPG keys are created and added to GitHub)\n3. Run the release script from the root of the repository\n  - `scripts/release.sh`\n  - The script requires Docker and ensures that a consistent environment is used.\n  - The artifacts will now be present in the `release-<TAG>` directory.\n4. Test these binaries according to the test plan.\n\n",
                    "rendered": {
                      "text": "2. Create a signed tag for the release `git tag -s $VERSION` (Ensure that GPG keys are created and added to GitHub)\n3. Run the release script from the root of the repository\n  - `scripts/release.sh`\n  - The script requires Docker and ensures that a consistent environment is used.\n  - The artifacts will now be present in the `release-<TAG>` directory.\n4. Test these binaries according to the test plan.\n\n",
                      "markdown": "`2. Create a signed tag for the release `git tag -s $VERSION` (Ensure that GPG keys are created and added to GitHub)\n3. Run the release script from the root of the repository\n  - `scripts/release.sh`\n  - The script requires Docker and ensures that a consistent environment is used.\n  - The artifacts will now be present in the `release-<TAG>` directory.\n4. Test these binaries according to the test plan.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/RELEASING.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 7,
                  "endLine": 40,
                  "endColumn": 15,
                  "snippet": {
                    "text": "2. Create a signed tag for the release `git tag -s $VERSION` (Ensure that GPG keys are created and added to GitHub)\n3. Run the release script from the root of the repository\n  - `scripts/release.sh`\n  - The script requires Docker and ensures that a consistent environment is used.\n  - The artifacts will now be present in the `release-<TAG>` directory.\n4. Test these binaries according to the test plan.\n\n",
                    "rendered": {
                      "text": "2. Create a signed tag for the release `git tag -s $VERSION` (Ensure that GPG keys are created and added to GitHub)\n3. Run the release script from the root of the repository\n  - `scripts/release.sh`\n  - The script requires Docker and ensures that a consistent environment is used.\n  - The artifacts will now be present in the `release-<TAG>` directory.\n4. Test these binaries according to the test plan.\n\n",
                      "markdown": "`2. Create a signed tag for the release `git tag -s $VERSION` (Ensure that GPG keys are created and added to GitHub)\n3. Run the release script from the root of the repository\n  - `scripts/release.sh`\n  - The script requires Docker and ensures that a consistent environment is used.\n  - The artifacts will now be present in the `release-<TAG>` directory.\n4. Test these binaries according to the test plan.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/RELEASING.md"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 18,
                  "endLine": 38,
                  "endColumn": 26,
                  "snippet": {
                    "text": "## Creating the release artifacts\n1. Make sure you are on the master branch and don't have any local uncommitted changes.\n2. Create a signed tag for the release `git tag -s $VERSION` (Ensure that GPG keys are created and added to GitHub)\n3. Run the release script from the root of the repository\n  - `scripts/release.sh`\n  - The script requires Docker and ensures that a consistent environment is used.\n  - The artifacts will now be present in the `release-<TAG>` directory.\n",
                    "rendered": {
                      "text": "## Creating the release artifacts\n1. Make sure you are on the master branch and don't have any local uncommitted changes.\n2. Create a signed tag for the release `git tag -s $VERSION` (Ensure that GPG keys are created and added to GitHub)\n3. Run the release script from the root of the repository\n  - `scripts/release.sh`\n  - The script requires Docker and ensures that a consistent environment is used.\n  - The artifacts will now be present in the `release-<TAG>` directory.\n",
                      "markdown": "`## Creating the release artifacts\n1. Make sure you are on the master branch and don't have any local uncommitted changes.\n2. Create a signed tag for the release `git tag -s $VERSION` (Ensure that GPG keys are created and added to GitHub)\n3. Run the release script from the root of the repository\n  - `scripts/release.sh`\n  - The script requires Docker and ensures that a consistent environment is used.\n  - The artifacts will now be present in the `release-<TAG>` directory.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/RELEASING.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 26,
                  "endLine": 18,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    - `cni-plugin-flannel-<OS>-<ARCH>-<TAG>.tar.gz` tarfiles containing one binary\n    - `.sha1`, `.sha256`, and `.sha512` files for each tarfile.\n\n### [Manual] Release using Docker artifacts\nCreating a new release via `make release_docker` produces the following artifacts:\n\n- Binaries (stored in the `release-<TAG>` directory) :\n",
                    "rendered": {
                      "text": "    - `cni-plugin-flannel-<OS>-<ARCH>-<TAG>.tar.gz` tarfiles containing one binary\n    - `.sha1`, `.sha256`, and `.sha512` files for each tarfile.\n\n### [Manual] Release using Docker artifacts\nCreating a new release via `make release_docker` produces the following artifacts:\n\n- Binaries (stored in the `release-<TAG>` directory) :\n",
                      "markdown": "`    - `cni-plugin-flannel-<OS>-<ARCH>-<TAG>.tar.gz` tarfiles containing one binary\n    - `.sha1`, `.sha256`, and `.sha512` files for each tarfile.\n\n### [Manual] Release using Docker artifacts\nCreating a new release via `make release_docker` produces the following artifacts:\n\n- Binaries (stored in the `release-<TAG>` directory) :\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flannel-cni-plugin.zip/flannel_windows.go"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\tcleanup(err)\n\t}()\n\n\tnc := &types.NetConf{}\n\tif err = json.Unmarshal(netConfBytes, nc); err != nil {\n\t\treturn fmt.Errorf(\"failed to parse netconf: %v\", err)\n\t}\n",
                    "rendered": {
                      "text": "\t\tcleanup(err)\n\t}()\n\n\tnc := &types.NetConf{}\n\tif err = json.Unmarshal(netConfBytes, nc); err != nil {\n\t\treturn fmt.Errorf(\"failed to parse netconf: %v\", err)\n\t}\n",
                      "markdown": "`\t\tcleanup(err)\n\t}()\n\n\tnc := &types.NetConf{}\n\tif err = json.Unmarshal(netConfBytes, nc); err != nil {\n\t\treturn fmt.Errorf(\"failed to parse netconf: %v\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}