{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/btf.c"
                },
                "region": {
                  "startLine": 5215,
                  "startColumn": 32,
                  "endLine": 5215,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\t/* is canonical sysfs location accessible? */\n\tif (faccessat(AT_FDCWD, sysfs_btf_path, F_OK, AT_EACCESS) < 0) {\n\t\tpr_warn(\"kernel BTF is missing at '%s', was CONFIG_DEBUG_INFO_BTF enabled?\\n\",\n\t\t\tsysfs_btf_path);\n\t} else {\n\t\tbtf = btf__parse(sysfs_btf_path, NULL);\n",
                    "rendered": {
                      "text": "\n\t/* is canonical sysfs location accessible? */\n\tif (faccessat(AT_FDCWD, sysfs_btf_path, F_OK, AT_EACCESS) < 0) {\n\t\tpr_warn(\"kernel BTF is missing at '%s', was CONFIG_DEBUG_INFO_BTF enabled?\\n\",\n\t\t\tsysfs_btf_path);\n\t} else {\n\t\tbtf = btf__parse(sysfs_btf_path, NULL);\n",
                      "markdown": "`\n\t/* is canonical sysfs location accessible? */\n\tif (faccessat(AT_FDCWD, sysfs_btf_path, F_OK, AT_EACCESS) < 0) {\n\t\tpr_warn(\"kernel BTF is missing at '%s', was CONFIG_DEBUG_INFO_BTF enabled?\\n\",\n\t\t\tsysfs_btf_path);\n\t} else {\n\t\tbtf = btf__parse(sysfs_btf_path, NULL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/btf.c"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 80,
                  "endLine": 259,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\t}\n\n\tif ((long long)hdr->type_off + hdr->type_len > hdr->str_off) {\n\t\tpr_debug(\"Invalid BTF data sections layout: type data at %u + %u, strings data at %u + %u\\n\",\n\t\t\t hdr->type_off, hdr->type_len, hdr->str_off, hdr->str_len);\n\t\treturn -EINVAL;\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif ((long long)hdr->type_off + hdr->type_len > hdr->str_off) {\n\t\tpr_debug(\"Invalid BTF data sections layout: type data at %u + %u, strings data at %u + %u\\n\",\n\t\t\t hdr->type_off, hdr->type_len, hdr->str_off, hdr->str_len);\n\t\treturn -EINVAL;\n\t}\n",
                      "markdown": "`\t}\n\n\tif ((long long)hdr->type_off + hdr->type_len > hdr->str_off) {\n\t\tpr_debug(\"Invalid BTF data sections layout: type data at %u + %u, strings data at %u + %u\\n\",\n\t\t\t hdr->type_off, hdr->type_len, hdr->str_off, hdr->str_len);\n\t\treturn -EINVAL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/btf.c"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 55,
                  "endLine": 259,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t}\n\n\tif ((long long)hdr->type_off + hdr->type_len > hdr->str_off) {\n\t\tpr_debug(\"Invalid BTF data sections layout: type data at %u + %u, strings data at %u + %u\\n\",\n\t\t\t hdr->type_off, hdr->type_len, hdr->str_off, hdr->str_len);\n\t\treturn -EINVAL;\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif ((long long)hdr->type_off + hdr->type_len > hdr->str_off) {\n\t\tpr_debug(\"Invalid BTF data sections layout: type data at %u + %u, strings data at %u + %u\\n\",\n\t\t\t hdr->type_off, hdr->type_len, hdr->str_off, hdr->str_len);\n\t\treturn -EINVAL;\n\t}\n",
                      "markdown": "`\t}\n\n\tif ((long long)hdr->type_off + hdr->type_len > hdr->str_off) {\n\t\tpr_debug(\"Invalid BTF data sections layout: type data at %u + %u, strings data at %u + %u\\n\",\n\t\t\t hdr->type_off, hdr->type_len, hdr->str_off, hdr->str_len);\n\t\treturn -EINVAL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/btf.c"
                },
                "region": {
                  "startLine": 5245,
                  "startColumn": 19,
                  "endLine": 5245,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\treturn btf;\n\t}\n\n\tpr_warn(\"failed to find valid kernel BTF\\n\");\n\treturn libbpf_err_ptr(-ESRCH);\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn btf;\n\t}\n\n\tpr_warn(\"failed to find valid kernel BTF\\n\");\n\treturn libbpf_err_ptr(-ESRCH);\n}\n\n",
                      "markdown": "`\t\treturn btf;\n\t}\n\n\tpr_warn(\"failed to find valid kernel BTF\\n\");\n\treturn libbpf_err_ptr(-ESRCH);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/btf.c"
                },
                "region": {
                  "startLine": 1197,
                  "startColumn": 20,
                  "endLine": 1197,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\tgoto done;\n\n\tif (!secs.btf_data) {\n\t\tpr_warn(\"failed to find '%s' ELF section in %s\\n\", BTF_ELF_SEC, path);\n\t\terr = -ENODATA;\n\t\tgoto done;\n\t}\n",
                    "rendered": {
                      "text": "\t\tgoto done;\n\n\tif (!secs.btf_data) {\n\t\tpr_warn(\"failed to find '%s' ELF section in %s\\n\", BTF_ELF_SEC, path);\n\t\terr = -ENODATA;\n\t\tgoto done;\n\t}\n",
                      "markdown": "`\t\tgoto done;\n\n\tif (!secs.btf_data) {\n\t\tpr_warn(\"failed to find '%s' ELF section in %s\\n\", BTF_ELF_SEC, path);\n\t\terr = -ENODATA;\n\t\tgoto done;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 759,
                  "startColumn": 113,
                  "endLine": 759,
                  "endColumn": 117,
                  "snippet": {
                    "text": "\n\t\t\tusdt_sema_off = note.sema_addr - seg->start + seg->offset;\n\n\t\t\tpr_debug(\"usdt: sema  for '%s:%s' in %s '%s': addr 0x%lx base 0x%lx (resolved 0x%lx) in segment [0x%lx, 0x%lx] at offset 0x%lx\\n\",\n\t\t\t\t usdt_provider, usdt_name, ehdr.e_type == ET_EXEC ? \"exec\" : \"lib \",\n\t\t\t\t path, note.sema_addr, note.base_addr, usdt_sema_off,\n\t\t\t\t seg->start, seg->end, seg->offset);\n",
                    "rendered": {
                      "text": "\n\t\t\tusdt_sema_off = note.sema_addr - seg->start + seg->offset;\n\n\t\t\tpr_debug(\"usdt: sema  for '%s:%s' in %s '%s': addr 0x%lx base 0x%lx (resolved 0x%lx) in segment [0x%lx, 0x%lx] at offset 0x%lx\\n\",\n\t\t\t\t usdt_provider, usdt_name, ehdr.e_type == ET_EXEC ? \"exec\" : \"lib \",\n\t\t\t\t path, note.sema_addr, note.base_addr, usdt_sema_off,\n\t\t\t\t seg->start, seg->end, seg->offset);\n",
                      "markdown": "`\n\t\t\tusdt_sema_off = note.sema_addr - seg->start + seg->offset;\n\n\t\t\tpr_debug(\"usdt: sema  for '%s:%s' in %s '%s': addr 0x%lx base 0x%lx (resolved 0x%lx) in segment [0x%lx, 0x%lx] at offset 0x%lx\\n\",\n\t\t\t\t usdt_provider, usdt_name, ehdr.e_type == ET_EXEC ? \"exec\" : \"lib \",\n\t\t\t\t path, note.sema_addr, note.base_addr, usdt_sema_off,\n\t\t\t\t seg->start, seg->end, seg->offset);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 90,
                  "endLine": 751,
                  "endColumn": 94,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tif (seg->is_exec) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: matched ELF binary '%s' segment [0x%lx, 0x%lx] for semaphore of '%s:%s' at 0x%lx is executable\\n\",\n\t\t\t\t\tpath, seg->start, seg->end, usdt_provider, usdt_name,\n\t\t\t\t\tnote.sema_addr);\n\t\t\t\tgoto err_out;\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tif (seg->is_exec) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: matched ELF binary '%s' segment [0x%lx, 0x%lx] for semaphore of '%s:%s' at 0x%lx is executable\\n\",\n\t\t\t\t\tpath, seg->start, seg->end, usdt_provider, usdt_name,\n\t\t\t\t\tnote.sema_addr);\n\t\t\t\tgoto err_out;\n",
                      "markdown": "`\t\t\t}\n\t\t\tif (seg->is_exec) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: matched ELF binary '%s' segment [0x%lx, 0x%lx] for semaphore of '%s:%s' at 0x%lx is executable\\n\",\n\t\t\t\t\tpath, seg->start, seg->end, usdt_provider, usdt_name,\n\t\t\t\t\tnote.sema_addr);\n\t\t\t\tgoto err_out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 745,
                  "startColumn": 88,
                  "endLine": 745,
                  "endColumn": 92,
                  "snippet": {
                    "text": "\t\t\tseg = find_elf_seg(segs, seg_cnt, note.sema_addr);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find ELF loadable segment with semaphore of '%s:%s' in '%s' at 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, note.sema_addr);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tseg = find_elf_seg(segs, seg_cnt, note.sema_addr);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find ELF loadable segment with semaphore of '%s:%s' in '%s' at 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, note.sema_addr);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                      "markdown": "`\t\t\tseg = find_elf_seg(segs, seg_cnt, note.sema_addr);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find ELF loadable segment with semaphore of '%s:%s' in '%s' at 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, note.sema_addr);\n\t\t\t\tgoto err_out;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 728,
                  "startColumn": 142,
                  "endLine": 728,
                  "endColumn": 146,
                  "snippet": {
                    "text": "\t\t\tusdt_abs_ip = seg->start - seg->offset + usdt_rel_ip;\n\t\t}\n\n\t\tpr_debug(\"usdt: probe for '%s:%s' in %s '%s': addr 0x%lx base 0x%lx (resolved abs_ip 0x%lx rel_ip 0x%lx) args '%s' in segment [0x%lx, 0x%lx) at offset 0x%lx\\n\",\n\t\t\t usdt_provider, usdt_name, ehdr.e_type == ET_EXEC ? \"exec\" : \"lib \", path,\n\t\t\t note.loc_addr, note.base_addr, usdt_abs_ip, usdt_rel_ip, note.args,\n\t\t\t seg ? seg->start : 0, seg ? seg->end : 0, seg ? seg->offset : 0);\n",
                    "rendered": {
                      "text": "\t\t\tusdt_abs_ip = seg->start - seg->offset + usdt_rel_ip;\n\t\t}\n\n\t\tpr_debug(\"usdt: probe for '%s:%s' in %s '%s': addr 0x%lx base 0x%lx (resolved abs_ip 0x%lx rel_ip 0x%lx) args '%s' in segment [0x%lx, 0x%lx) at offset 0x%lx\\n\",\n\t\t\t usdt_provider, usdt_name, ehdr.e_type == ET_EXEC ? \"exec\" : \"lib \", path,\n\t\t\t note.loc_addr, note.base_addr, usdt_abs_ip, usdt_rel_ip, note.args,\n\t\t\t seg ? seg->start : 0, seg ? seg->end : 0, seg ? seg->offset : 0);\n",
                      "markdown": "`\t\t\tusdt_abs_ip = seg->start - seg->offset + usdt_rel_ip;\n\t\t}\n\n\t\tpr_debug(\"usdt: probe for '%s:%s' in %s '%s': addr 0x%lx base 0x%lx (resolved abs_ip 0x%lx rel_ip 0x%lx) args '%s' in segment [0x%lx, 0x%lx) at offset 0x%lx\\n\",\n\t\t\t usdt_provider, usdt_name, ehdr.e_type == ET_EXEC ? \"exec\" : \"lib \", path,\n\t\t\t note.loc_addr, note.base_addr, usdt_abs_ip, usdt_rel_ip, note.args,\n\t\t\t seg ? seg->start : 0, seg ? seg->end : 0, seg ? seg->offset : 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 720,
                  "startColumn": 79,
                  "endLine": 720,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\t\t\tseg = find_vma_seg(vma_segs, vma_seg_cnt, usdt_rel_ip);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find shared lib memory segment for '%s:%s' in '%s' at relative IP 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, usdt_rel_ip);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tseg = find_vma_seg(vma_segs, vma_seg_cnt, usdt_rel_ip);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find shared lib memory segment for '%s:%s' in '%s' at relative IP 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, usdt_rel_ip);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                      "markdown": "`\t\t\tseg = find_vma_seg(vma_segs, vma_seg_cnt, usdt_rel_ip);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find shared lib memory segment for '%s:%s' in '%s' at relative IP 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, usdt_rel_ip);\n\t\t\t\tgoto err_out;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 679,
                  "startColumn": 76,
                  "endLine": 679,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\t\t}\n\t\tif (!seg->is_exec) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: matched ELF binary '%s' segment [0x%lx, 0x%lx) for '%s:%s' at IP 0x%lx is not executable\\n\",\n\t\t\t\tpath, seg->start, seg->end, usdt_provider, usdt_name,\n\t\t\t\tusdt_abs_ip);\n\t\t\tgoto err_out;\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tif (!seg->is_exec) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: matched ELF binary '%s' segment [0x%lx, 0x%lx) for '%s:%s' at IP 0x%lx is not executable\\n\",\n\t\t\t\tpath, seg->start, seg->end, usdt_provider, usdt_name,\n\t\t\t\tusdt_abs_ip);\n\t\t\tgoto err_out;\n",
                      "markdown": "`\t\t}\n\t\tif (!seg->is_exec) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: matched ELF binary '%s' segment [0x%lx, 0x%lx) for '%s:%s' at IP 0x%lx is not executable\\n\",\n\t\t\t\tpath, seg->start, seg->end, usdt_provider, usdt_name,\n\t\t\t\tusdt_abs_ip);\n\t\t\tgoto err_out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 673,
                  "startColumn": 72,
                  "endLine": 673,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\t\tseg = find_elf_seg(segs, seg_cnt, usdt_abs_ip);\n\t\tif (!seg) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: failed to find ELF program segment for '%s:%s' in '%s' at IP 0x%lx\\n\",\n\t\t\t\tusdt_provider, usdt_name, path, usdt_abs_ip);\n\t\t\tgoto err_out;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tseg = find_elf_seg(segs, seg_cnt, usdt_abs_ip);\n\t\tif (!seg) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: failed to find ELF program segment for '%s:%s' in '%s' at IP 0x%lx\\n\",\n\t\t\t\tusdt_provider, usdt_name, path, usdt_abs_ip);\n\t\t\tgoto err_out;\n\t\t}\n",
                      "markdown": "`\t\tseg = find_elf_seg(segs, seg_cnt, usdt_abs_ip);\n\t\tif (!seg) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: failed to find ELF program segment for '%s:%s' in '%s' at IP 0x%lx\\n\",\n\t\t\t\tusdt_provider, usdt_name, path, usdt_abs_ip);\n\t\t\tgoto err_out;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 1061,
                  "startColumn": 32,
                  "endLine": 1061,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t\tpr_warn(\"usdt: IP collision detected for spec #%d for '%s:%s' in '%s'\\n\",\n\t\t\t\t        spec_id, usdt_provider, usdt_name, path);\n\t\t\t} else {\n\t\t\t\tpr_warn(\"usdt: failed to map IP 0x%lx to spec #%d for '%s:%s' in '%s': %d\\n\",\n\t\t\t\t\ttarget->abs_ip, spec_id, usdt_provider, usdt_name,\n\t\t\t\t\tpath, err);\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tpr_warn(\"usdt: IP collision detected for spec #%d for '%s:%s' in '%s'\\n\",\n\t\t\t\t        spec_id, usdt_provider, usdt_name, path);\n\t\t\t} else {\n\t\t\t\tpr_warn(\"usdt: failed to map IP 0x%lx to spec #%d for '%s:%s' in '%s': %d\\n\",\n\t\t\t\t\ttarget->abs_ip, spec_id, usdt_provider, usdt_name,\n\t\t\t\t\tpath, err);\n\t\t\t}\n",
                      "markdown": "`\t\t\t\tpr_warn(\"usdt: IP collision detected for spec #%d for '%s:%s' in '%s'\\n\",\n\t\t\t\t        spec_id, usdt_provider, usdt_name, path);\n\t\t\t} else {\n\t\t\t\tpr_warn(\"usdt: failed to map IP 0x%lx to spec #%d for '%s:%s' in '%s': %d\\n\",\n\t\t\t\t\ttarget->abs_ip, spec_id, usdt_provider, usdt_name,\n\t\t\t\t\tpath, err);\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 1058,
                  "startColumn": 18,
                  "endLine": 1058,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t    bpf_map_update_elem(ip_map_fd, &target->abs_ip, &spec_id, BPF_NOEXIST)) {\n\t\t\terr = -errno;\n\t\t\tif (err == -EEXIST) {\n\t\t\t\tpr_warn(\"usdt: IP collision detected for spec #%d for '%s:%s' in '%s'\\n\",\n\t\t\t\t        spec_id, usdt_provider, usdt_name, path);\n\t\t\t} else {\n\t\t\t\tpr_warn(\"usdt: failed to map IP 0x%lx to spec #%d for '%s:%s' in '%s': %d\\n\",\n",
                    "rendered": {
                      "text": "\t\t    bpf_map_update_elem(ip_map_fd, &target->abs_ip, &spec_id, BPF_NOEXIST)) {\n\t\t\terr = -errno;\n\t\t\tif (err == -EEXIST) {\n\t\t\t\tpr_warn(\"usdt: IP collision detected for spec #%d for '%s:%s' in '%s'\\n\",\n\t\t\t\t        spec_id, usdt_provider, usdt_name, path);\n\t\t\t} else {\n\t\t\t\tpr_warn(\"usdt: failed to map IP 0x%lx to spec #%d for '%s:%s' in '%s': %d\\n\",\n",
                      "markdown": "`\t\t    bpf_map_update_elem(ip_map_fd, &target->abs_ip, &spec_id, BPF_NOEXIST)) {\n\t\t\terr = -errno;\n\t\t\tif (err == -EEXIST) {\n\t\t\t\tpr_warn(\"usdt: IP collision detected for spec #%d for '%s:%s' in '%s'\\n\",\n\t\t\t\t        spec_id, usdt_provider, usdt_name, path);\n\t\t\t} else {\n\t\t\t\tpr_warn(\"usdt: failed to map IP 0x%lx to spec #%d for '%s:%s' in '%s': %d\\n\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 745,
                  "startColumn": 28,
                  "endLine": 745,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\tseg = find_elf_seg(segs, seg_cnt, note.sema_addr);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find ELF loadable segment with semaphore of '%s:%s' in '%s' at 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, note.sema_addr);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tseg = find_elf_seg(segs, seg_cnt, note.sema_addr);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find ELF loadable segment with semaphore of '%s:%s' in '%s' at 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, note.sema_addr);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                      "markdown": "`\t\t\tseg = find_elf_seg(segs, seg_cnt, note.sema_addr);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find ELF loadable segment with semaphore of '%s:%s' in '%s' at 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, note.sema_addr);\n\t\t\t\tgoto err_out;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 720,
                  "startColumn": 91,
                  "endLine": 720,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\t\t\tseg = find_vma_seg(vma_segs, vma_seg_cnt, usdt_rel_ip);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find shared lib memory segment for '%s:%s' in '%s' at relative IP 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, usdt_rel_ip);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tseg = find_vma_seg(vma_segs, vma_seg_cnt, usdt_rel_ip);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find shared lib memory segment for '%s:%s' in '%s' at relative IP 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, usdt_rel_ip);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                      "markdown": "`\t\t\tseg = find_vma_seg(vma_segs, vma_seg_cnt, usdt_rel_ip);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find shared lib memory segment for '%s:%s' in '%s' at relative IP 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, usdt_rel_ip);\n\t\t\t\tgoto err_out;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 720,
                  "startColumn": 28,
                  "endLine": 720,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\tseg = find_vma_seg(vma_segs, vma_seg_cnt, usdt_rel_ip);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find shared lib memory segment for '%s:%s' in '%s' at relative IP 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, usdt_rel_ip);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tseg = find_vma_seg(vma_segs, vma_seg_cnt, usdt_rel_ip);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find shared lib memory segment for '%s:%s' in '%s' at relative IP 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, usdt_rel_ip);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                      "markdown": "`\t\t\tseg = find_vma_seg(vma_segs, vma_seg_cnt, usdt_rel_ip);\n\t\t\tif (!seg) {\n\t\t\t\terr = -ESRCH;\n\t\t\t\tpr_warn(\"usdt: failed to find shared lib memory segment for '%s:%s' in '%s' at relative IP 0x%lx\\n\",\n\t\t\t\t\tusdt_provider, usdt_name, path, usdt_rel_ip);\n\t\t\t\tgoto err_out;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 679,
                  "startColumn": 79,
                  "endLine": 679,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\t\t}\n\t\tif (!seg->is_exec) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: matched ELF binary '%s' segment [0x%lx, 0x%lx) for '%s:%s' at IP 0x%lx is not executable\\n\",\n\t\t\t\tpath, seg->start, seg->end, usdt_provider, usdt_name,\n\t\t\t\tusdt_abs_ip);\n\t\t\tgoto err_out;\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tif (!seg->is_exec) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: matched ELF binary '%s' segment [0x%lx, 0x%lx) for '%s:%s' at IP 0x%lx is not executable\\n\",\n\t\t\t\tpath, seg->start, seg->end, usdt_provider, usdt_name,\n\t\t\t\tusdt_abs_ip);\n\t\t\tgoto err_out;\n",
                      "markdown": "`\t\t}\n\t\tif (!seg->is_exec) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: matched ELF binary '%s' segment [0x%lx, 0x%lx) for '%s:%s' at IP 0x%lx is not executable\\n\",\n\t\t\t\tpath, seg->start, seg->end, usdt_provider, usdt_name,\n\t\t\t\tusdt_abs_ip);\n\t\t\tgoto err_out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 673,
                  "startColumn": 75,
                  "endLine": 673,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\t\tseg = find_elf_seg(segs, seg_cnt, usdt_abs_ip);\n\t\tif (!seg) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: failed to find ELF program segment for '%s:%s' in '%s' at IP 0x%lx\\n\",\n\t\t\t\tusdt_provider, usdt_name, path, usdt_abs_ip);\n\t\t\tgoto err_out;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tseg = find_elf_seg(segs, seg_cnt, usdt_abs_ip);\n\t\tif (!seg) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: failed to find ELF program segment for '%s:%s' in '%s' at IP 0x%lx\\n\",\n\t\t\t\tusdt_provider, usdt_name, path, usdt_abs_ip);\n\t\t\tgoto err_out;\n\t\t}\n",
                      "markdown": "`\t\tseg = find_elf_seg(segs, seg_cnt, usdt_abs_ip);\n\t\tif (!seg) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: failed to find ELF program segment for '%s:%s' in '%s' at IP 0x%lx\\n\",\n\t\t\t\tusdt_provider, usdt_name, path, usdt_abs_ip);\n\t\t\tgoto err_out;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 673,
                  "startColumn": 27,
                  "endLine": 673,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\tseg = find_elf_seg(segs, seg_cnt, usdt_abs_ip);\n\t\tif (!seg) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: failed to find ELF program segment for '%s:%s' in '%s' at IP 0x%lx\\n\",\n\t\t\t\tusdt_provider, usdt_name, path, usdt_abs_ip);\n\t\t\tgoto err_out;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tseg = find_elf_seg(segs, seg_cnt, usdt_abs_ip);\n\t\tif (!seg) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: failed to find ELF program segment for '%s:%s' in '%s' at IP 0x%lx\\n\",\n\t\t\t\tusdt_provider, usdt_name, path, usdt_abs_ip);\n\t\t\tgoto err_out;\n\t\t}\n",
                      "markdown": "`\t\tseg = find_elf_seg(segs, seg_cnt, usdt_abs_ip);\n\t\tif (!seg) {\n\t\t\terr = -ESRCH;\n\t\t\tpr_warn(\"usdt: failed to find ELF program segment for '%s:%s' in '%s' at IP 0x%lx\\n\",\n\t\t\t\tusdt_provider, usdt_name, path, usdt_abs_ip);\n\t\t\tgoto err_out;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 527,
                  "startColumn": 26,
                  "endLine": 527,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t}\n\n\tif (*seg_cnt == 0) {\n\t\tpr_warn(\"usdt: failed to find '%s' (resolved to '%s') within PID %d memory mappings\\n\",\n\t\t\tlib_path, path, pid);\n\t\terr = -ESRCH;\n\t\tgoto err_out;\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (*seg_cnt == 0) {\n\t\tpr_warn(\"usdt: failed to find '%s' (resolved to '%s') within PID %d memory mappings\\n\",\n\t\t\tlib_path, path, pid);\n\t\terr = -ESRCH;\n\t\tgoto err_out;\n",
                      "markdown": "`\t}\n\n\tif (*seg_cnt == 0) {\n\t\tpr_warn(\"usdt: failed to find '%s' (resolved to '%s') within PID %d memory mappings\\n\",\n\t\t\tlib_path, path, pid);\n\t\terr = -ESRCH;\n\t\tgoto err_out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 26,
                  "endLine": 442,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t}\n\n\tif (*seg_cnt == 0) {\n\t\tpr_warn(\"usdt: failed to find PT_LOAD program headers in '%s'\\n\", path);\n\t\treturn -ESRCH;\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (*seg_cnt == 0) {\n\t\tpr_warn(\"usdt: failed to find PT_LOAD program headers in '%s'\\n\", path);\n\t\treturn -ESRCH;\n\t}\n\n",
                      "markdown": "`\t}\n\n\tif (*seg_cnt == 0) {\n\t\tpr_warn(\"usdt: failed to find PT_LOAD program headers in '%s'\\n\", path);\n\t\treturn -ESRCH;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.c"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 26,
                  "endLine": 265,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tspecs_map = bpf_object__find_map_by_name(obj, \"__bpf_usdt_specs\");\n\tip_to_spec_id_map = bpf_object__find_map_by_name(obj, \"__bpf_usdt_ip_to_spec_id\");\n\tif (!specs_map || !ip_to_spec_id_map) {\n\t\tpr_warn(\"usdt: failed to find USDT support BPF maps, did you forget to include bpf/usdt.bpf.h?\\n\");\n\t\treturn ERR_PTR(-ESRCH);\n\t}\n\n",
                    "rendered": {
                      "text": "\tspecs_map = bpf_object__find_map_by_name(obj, \"__bpf_usdt_specs\");\n\tip_to_spec_id_map = bpf_object__find_map_by_name(obj, \"__bpf_usdt_ip_to_spec_id\");\n\tif (!specs_map || !ip_to_spec_id_map) {\n\t\tpr_warn(\"usdt: failed to find USDT support BPF maps, did you forget to include bpf/usdt.bpf.h?\\n\");\n\t\treturn ERR_PTR(-ESRCH);\n\t}\n\n",
                      "markdown": "`\tspecs_map = bpf_object__find_map_by_name(obj, \"__bpf_usdt_specs\");\n\tip_to_spec_id_map = bpf_object__find_map_by_name(obj, \"__bpf_usdt_ip_to_spec_id\");\n\tif (!specs_map || !ip_to_spec_id_map) {\n\t\tpr_warn(\"usdt: failed to find USDT support BPF maps, did you forget to include bpf/usdt.bpf.h?\\n\");\n\t\treturn ERR_PTR(-ESRCH);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/vmtest/run_selftests.sh"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tif [[ \"${KERNEL}\" != '4.9.0' ]]; then\n\t\tfoldable start test_progs \"Testing test_progs\"\n\t\t# \"&& true\" does not change the return code (it is not executed\n\t\t# if the Python script fails), but it prevents exiting on a\n\t\t# failure due to the \"set -e\".\n\t\t./test_progs ${DENYLIST:+-d\"$DENYLIST\"} ${ALLOWLIST:+-a\"$ALLOWLIST\"} && true\n\t\techo \"test_progs:$?\" >> \"${STATUS_FILE}\"\n",
                    "rendered": {
                      "text": "\tif [[ \"${KERNEL}\" != '4.9.0' ]]; then\n\t\tfoldable start test_progs \"Testing test_progs\"\n\t\t# \"&& true\" does not change the return code (it is not executed\n\t\t# if the Python script fails), but it prevents exiting on a\n\t\t# failure due to the \"set -e\".\n\t\t./test_progs ${DENYLIST:+-d\"$DENYLIST\"} ${ALLOWLIST:+-a\"$ALLOWLIST\"} && true\n\t\techo \"test_progs:$?\" >> \"${STATUS_FILE}\"\n",
                      "markdown": "`\tif [[ \"${KERNEL}\" != '4.9.0' ]]; then\n\t\tfoldable start test_progs \"Testing test_progs\"\n\t\t# \"&& true\" does not change the return code (it is not executed\n\t\t# if the Python script fails), but it prevents exiting on a\n\t\t# failure due to the \"set -e\".\n\t\t./test_progs ${DENYLIST:+-d\"$DENYLIST\"} ${ALLOWLIST:+-a\"$ALLOWLIST\"} && true\n\t\techo \"test_progs:$?\" >> \"${STATUS_FILE}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/vmtest/run_selftests.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 24,
                  "endLine": 16,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\tif [[ -s \"$path\" ]]; then\n\t\t\tcat \"$path\"\n\t\tfi;\n\tdone) | cut -d'#' -f1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -s '\\n' ','\n}\n\ntest_progs() {\n",
                    "rendered": {
                      "text": "\t\tif [[ -s \"$path\" ]]; then\n\t\t\tcat \"$path\"\n\t\tfi;\n\tdone) | cut -d'#' -f1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -s '\\n' ','\n}\n\ntest_progs() {\n",
                      "markdown": "`\t\tif [[ -s \"$path\" ]]; then\n\t\t\tcat \"$path\"\n\t\tfi;\n\tdone) | cut -d'#' -f1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -s '\\n' ','\n}\n\ntest_progs() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/vmtest/run_selftests.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 8,
                  "endLine": 16,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\tif [[ -s \"$path\" ]]; then\n\t\t\tcat \"$path\"\n\t\tfi;\n\tdone) | cut -d'#' -f1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -s '\\n' ','\n}\n\ntest_progs() {\n",
                    "rendered": {
                      "text": "\t\tif [[ -s \"$path\" ]]; then\n\t\t\tcat \"$path\"\n\t\tfi;\n\tdone) | cut -d'#' -f1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -s '\\n' ','\n}\n\ntest_progs() {\n",
                      "markdown": "`\t\tif [[ -s \"$path\" ]]; then\n\t\t\tcat \"$path\"\n\t\tfi;\n\tdone) | cut -d'#' -f1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -s '\\n' ','\n}\n\ntest_progs() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/vmtest/run_selftests.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 2,
                  "endLine": 14,
                  "endColumn": 7,
                  "snippet": {
                    "text": "read_lists() {\n\t(for path in \"$@\"; do\n\t\tif [[ -s \"$path\" ]]; then\n\t\t\tcat \"$path\"\n\t\tfi;\n\tdone) | cut -d'#' -f1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -s '\\n' ','\n}\n",
                    "rendered": {
                      "text": "read_lists() {\n\t(for path in \"$@\"; do\n\t\tif [[ -s \"$path\" ]]; then\n\t\t\tcat \"$path\"\n\t\tfi;\n\tdone) | cut -d'#' -f1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -s '\\n' ','\n}\n",
                      "markdown": "`read_lists() {\n\t(for path in \"$@\"; do\n\t\tif [[ -s \"$path\" ]]; then\n\t\t\tcat \"$path\"\n\t\tfi;\n\tdone) | cut -d'#' -f1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -s '\\n' ','\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/diffs/0001-selftests-bpf-fix-inet_csk_accept-prototype-in-test_.patch"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 17,
                  "endColumn": 5,
                  "snippet": {
                    "text": "---\n tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c b/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c\nindex 02e718f06e0f..40531e56776e 100644\n--- a/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c\n+++ b/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c\n",
                    "rendered": {
                      "text": "---\n tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c b/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c\nindex 02e718f06e0f..40531e56776e 100644\n--- a/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c\n+++ b/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c\n",
                      "markdown": "`---\n tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c b/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c\nindex 02e718f06e0f..40531e56776e 100644\n--- a/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c\n+++ b/tools/testing/selftests/bpf/progs/test_sk_storage_tracing.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/diffs/0002-xdp-bonding-Fix-feature-flags-when-there-are-no-slav.patch"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 41,
                  "endColumn": 5,
                  "snippet": {
                    "text": "---\n drivers/net/bonding/bond_main.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c\nindex a11748b8d69b..cd0683bcca03 100644\n--- a/drivers/net/bonding/bond_main.c\n+++ b/drivers/net/bonding/bond_main.c\n",
                    "rendered": {
                      "text": "---\n drivers/net/bonding/bond_main.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c\nindex a11748b8d69b..cd0683bcca03 100644\n--- a/drivers/net/bonding/bond_main.c\n+++ b/drivers/net/bonding/bond_main.c\n",
                      "markdown": "`---\n drivers/net/bonding/bond_main.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c\nindex a11748b8d69b..cd0683bcca03 100644\n--- a/drivers/net/bonding/bond_main.c\n+++ b/drivers/net/bonding/bond_main.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/diffs/0001-arch-Kconfig-Move-SPECULATION_MITIGATIONS-to-arch-Kc.patch"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 8,
                  "endLine": 46,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+\t  If you say N, all mitigations will be disabled. You really\n+\t  should know what you are doing to say so.\n+\n endmenu\ndiff --git a/arch/x86/Kconfig b/arch/x86/Kconfig\nindex 39886bab943a..50c890fce5e0 100644\n--- a/arch/x86/Kconfig\n+++ b/arch/x86/Kconfig\n",
                    "rendered": {
                      "text": "+\t  If you say N, all mitigations will be disabled. You really\n+\t  should know what you are doing to say so.\n+\n endmenu\ndiff --git a/arch/x86/Kconfig b/arch/x86/Kconfig\nindex 39886bab943a..50c890fce5e0 100644\n--- a/arch/x86/Kconfig\n+++ b/arch/x86/Kconfig\n",
                      "markdown": "`+\t  If you say N, all mitigations will be disabled. You really\n+\t  should know what you are doing to say so.\n+\n endmenu\ndiff --git a/arch/x86/Kconfig b/arch/x86/Kconfig\nindex 39886bab943a..50c890fce5e0 100644\n--- a/arch/x86/Kconfig\n+++ b/arch/x86/Kconfig\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/diffs/0001-arch-Kconfig-Move-SPECULATION_MITIGATIONS-to-arch-Kc.patch"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 27,
                  "endColumn": 5,
                  "snippet": {
                    "text": " arch/Kconfig     | 10 ++++++++++\n arch/x86/Kconfig | 10 ----------\n 2 files changed, 10 insertions(+), 10 deletions(-)\n\ndiff --git a/arch/Kconfig b/arch/Kconfig\nindex 9f066785bb71..8f4af75005f8 100644\n--- a/arch/Kconfig\n+++ b/arch/Kconfig\n",
                    "rendered": {
                      "text": " arch/Kconfig     | 10 ++++++++++\n arch/x86/Kconfig | 10 ----------\n 2 files changed, 10 insertions(+), 10 deletions(-)\n\ndiff --git a/arch/Kconfig b/arch/Kconfig\nindex 9f066785bb71..8f4af75005f8 100644\n--- a/arch/Kconfig\n+++ b/arch/Kconfig\n",
                      "markdown": "` arch/Kconfig     | 10 ++++++++++\n arch/x86/Kconfig | 10 ----------\n 2 files changed, 10 insertions(+), 10 deletions(-)\n\ndiff --git a/arch/Kconfig b/arch/Kconfig\nindex 9f066785bb71..8f4af75005f8 100644\n--- a/arch/Kconfig\n+++ b/arch/Kconfig\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_overview.rst"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 53,
                  "endLine": 161,
                  "endColumn": 57,
                  "snippet": {
                    "text": "``vmlinux.h`` in your BPF program eliminates dependency on system-wide kernel\nheaders.\n\nlibbpf enables portability of BPF programs by looking at the BPF program’s\nrecorded BTF type and relocation information and matching them to BTF\ninformation (vmlinux) provided by the running kernel. libbpf then resolves and\nmatches all the types and fields, and updates necessary offsets and other\n",
                    "rendered": {
                      "text": "``vmlinux.h`` in your BPF program eliminates dependency on system-wide kernel\nheaders.\n\nlibbpf enables portability of BPF programs by looking at the BPF program’s\nrecorded BTF type and relocation information and matching them to BTF\ninformation (vmlinux) provided by the running kernel. libbpf then resolves and\nmatches all the types and fields, and updates necessary offsets and other\n",
                      "markdown": "```vmlinux.h`` in your BPF program eliminates dependency on system-wide kernel\nheaders.\n\nlibbpf enables portability of BPF programs by looking at the BPF program’s\nrecorded BTF type and relocation information and matching them to BTF\ninformation (vmlinux) provided by the running kernel. libbpf then resolves and\nmatches all the types and fields, and updates necessary offsets and other\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_overview.rst"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 29,
                  "endLine": 147,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\nTo make BPF programs portable libbpf relies on the BTF type information of the\nrunning kernel. Kernel also exposes this self-describing authoritative BTF\ninformation through ``sysfs`` at ``/sys/kernel/btf/vmlinux``.\n\nYou can generate the BTF information for the running kernel with the following\ncommand:\n",
                    "rendered": {
                      "text": "\nTo make BPF programs portable libbpf relies on the BTF type information of the\nrunning kernel. Kernel also exposes this self-describing authoritative BTF\ninformation through ``sysfs`` at ``/sys/kernel/btf/vmlinux``.\n\nYou can generate the BTF information for the running kernel with the following\ncommand:\n",
                      "markdown": "`\nTo make BPF programs portable libbpf relies on the BTF type information of the\nrunning kernel. Kernel also exposes this self-describing authoritative BTF\ninformation through ``sysfs`` at ``/sys/kernel/btf/vmlinux``.\n\nYou can generate the BTF information for the running kernel with the following\ncommand:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_overview.rst"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 54,
                  "endLine": 104,
                  "endColumn": 62,
                  "snippet": {
                    "text": "* BPF skeleton provides an interface for user space programs to work with BPF\n  global variables. The skeleton code memory maps global variables as a struct\n  into user space. The struct interface allows user space programs to initialize\n  BPF programs before the BPF load phase and fetch and update data from user\n  space afterward.\n\n* The ``skel.h`` file reflects the object file structure by listing out the\n",
                    "rendered": {
                      "text": "* BPF skeleton provides an interface for user space programs to work with BPF\n  global variables. The skeleton code memory maps global variables as a struct\n  into user space. The struct interface allows user space programs to initialize\n  BPF programs before the BPF load phase and fetch and update data from user\n  space afterward.\n\n* The ``skel.h`` file reflects the object file structure by listing out the\n",
                      "markdown": "`* BPF skeleton provides an interface for user space programs to work with BPF\n  global variables. The skeleton code memory maps global variables as a struct\n  into user space. The struct interface allows user space programs to initialize\n  BPF programs before the BPF load phase and fetch and update data from user\n  space afterward.\n\n* The ``skel.h`` file reflects the object file structure by listing out the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_overview.rst"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 29,
                  "endLine": 88,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  the specific bpf object name)\n* ``<name>__load()`` – instantiates, loads,and verifies BPF application parts\n* ``<name>__attach()`` – attaches all auto-attachable BPF programs (it’s\n  optional, you can have more control by using libbpf APIs directly)\n* ``<name>__destroy()`` – detaches all BPF programs and\n  frees up all used resources\n\n",
                    "rendered": {
                      "text": "  the specific bpf object name)\n* ``<name>__load()`` – instantiates, loads,and verifies BPF application parts\n* ``<name>__attach()`` – attaches all auto-attachable BPF programs (it’s\n  optional, you can have more control by using libbpf APIs directly)\n* ``<name>__destroy()`` – detaches all BPF programs and\n  frees up all used resources\n\n",
                      "markdown": "`  the specific bpf object name)\n* ``<name>__load()`` – instantiates, loads,and verifies BPF application parts\n* ``<name>__attach()`` – attaches all auto-attachable BPF programs (it’s\n  optional, you can have more control by using libbpf APIs directly)\n* ``<name>__destroy()`` – detaches all BPF programs and\n  frees up all used resources\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_overview.rst"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13,
                  "endLine": 53,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n* **Load phase**: In the load phase, libbpf creates BPF\n  maps, resolves various relocations, and verifies and loads BPF programs into\n  the kernel. At this point, libbpf validates all the parts of a BPF application\n  and loads the BPF program into the kernel, but no BPF program has yet been\n  executed. After the load phase, it’s possible to set up the initial BPF map\n  state without racing with the BPF program code execution.\n",
                    "rendered": {
                      "text": "\n* **Load phase**: In the load phase, libbpf creates BPF\n  maps, resolves various relocations, and verifies and loads BPF programs into\n  the kernel. At this point, libbpf validates all the parts of a BPF application\n  and loads the BPF program into the kernel, but no BPF program has yet been\n  executed. After the load phase, it’s possible to set up the initial BPF map\n  state without racing with the BPF program code execution.\n",
                      "markdown": "`\n* **Load phase**: In the load phase, libbpf creates BPF\n  maps, resolves various relocations, and verifies and loads BPF programs into\n  the kernel. At this point, libbpf validates all the parts of a BPF application\n  and loads the BPF program into the kernel, but no BPF program has yet been\n  executed. After the load phase, it’s possible to set up the initial BPF map\n  state without racing with the BPF program code execution.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_overview.rst"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 66,
                  "endLine": 18,
                  "snippet": {
                    "text": "\n* Provides high-level and low-level APIs for user space programs to interact\n  with BPF programs. The low-level APIs wrap all the bpf system call\n  functionality, which is useful when users need more fine-grained control\n  over the interactions between user space and BPF programs.\n* Provides overall support for the BPF object skeleton generated by bpftool.\n  The skeleton file simplifies the process for the user space programs to access\n  global variables and work with BPF programs.\n",
                    "rendered": {
                      "text": "\n* Provides high-level and low-level APIs for user space programs to interact\n  with BPF programs. The low-level APIs wrap all the bpf system call\n  functionality, which is useful when users need more fine-grained control\n  over the interactions between user space and BPF programs.\n* Provides overall support for the BPF object skeleton generated by bpftool.\n  The skeleton file simplifies the process for the user space programs to access\n  global variables and work with BPF programs.\n",
                      "markdown": "`\n* Provides high-level and low-level APIs for user space programs to interact\n  with BPF programs. The low-level APIs wrap all the bpf system call\n  functionality, which is useful when users need more fine-grained control\n  over the interactions between user space and BPF programs.\n* Provides overall support for the BPF object skeleton generated by bpftool.\n  The skeleton file simplifies the process for the user space programs to access\n  global variables and work with BPF programs.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_overview.rst"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 27,
                  "endLine": 123,
                  "endColumn": 33,
                  "snippet": {
                    "text": "libbpf provides BPF-side APIs that BPF programs can use to interact with the\nsystem. The BPF helpers definition allows developers to use them in BPF code as\nany other plain C function. For example, there are helper functions to print\ndebugging messages, get the time since the system was booted, interact with BPF\nmaps, manipulate network packets, etc.\n\nFor a complete description of what the helpers do, the arguments they take, and\n",
                    "rendered": {
                      "text": "libbpf provides BPF-side APIs that BPF programs can use to interact with the\nsystem. The BPF helpers definition allows developers to use them in BPF code as\nany other plain C function. For example, there are helper functions to print\ndebugging messages, get the time since the system was booted, interact with BPF\nmaps, manipulate network packets, etc.\n\nFor a complete description of what the helpers do, the arguments they take, and\n",
                      "markdown": "`libbpf provides BPF-side APIs that BPF programs can use to interact with the\nsystem. The BPF helpers definition allows developers to use them in BPF code as\nany other plain C function. For example, there are helper functions to print\ndebugging messages, get the time since the system was booted, interact with BPF\nmaps, manipulate network packets, etc.\n\nFor a complete description of what the helpers do, the arguments they take, and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 2601,
                  "startColumn": 17,
                  "endLine": 2601,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tsec_name = btf__name_by_offset(obj->btf, ext_sec->sec_name_off);\n\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\tif (!src_sec) {\n\t\t\tpr_warn(\"can't find section '%s' referenced from .BTF.ext\\n\", sec_name);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tdst_sec = &linker->secs[src_sec->dst_id];\n",
                    "rendered": {
                      "text": "\t\tsec_name = btf__name_by_offset(obj->btf, ext_sec->sec_name_off);\n\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\tif (!src_sec) {\n\t\t\tpr_warn(\"can't find section '%s' referenced from .BTF.ext\\n\", sec_name);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tdst_sec = &linker->secs[src_sec->dst_id];\n",
                      "markdown": "`\t\tsec_name = btf__name_by_offset(obj->btf, ext_sec->sec_name_off);\n\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\tif (!src_sec) {\n\t\t\tpr_warn(\"can't find section '%s' referenced from .BTF.ext\\n\", sec_name);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tdst_sec = &linker->secs[src_sec->dst_id];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 2559,
                  "startColumn": 17,
                  "endLine": 2559,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tsec_name = btf__name_by_offset(obj->btf, ext_sec->sec_name_off);\n\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\tif (!src_sec) {\n\t\t\tpr_warn(\"can't find section '%s' referenced from .BTF.ext\\n\", sec_name);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tdst_sec = &linker->secs[src_sec->dst_id];\n",
                    "rendered": {
                      "text": "\t\tsec_name = btf__name_by_offset(obj->btf, ext_sec->sec_name_off);\n\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\tif (!src_sec) {\n\t\t\tpr_warn(\"can't find section '%s' referenced from .BTF.ext\\n\", sec_name);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tdst_sec = &linker->secs[src_sec->dst_id];\n",
                      "markdown": "`\t\tsec_name = btf__name_by_offset(obj->btf, ext_sec->sec_name_off);\n\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\tif (!src_sec) {\n\t\t\tpr_warn(\"can't find section '%s' referenced from .BTF.ext\\n\", sec_name);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tdst_sec = &linker->secs[src_sec->dst_id];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 2530,
                  "startColumn": 17,
                  "endLine": 2530,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tsec_name = btf__name_by_offset(obj->btf, ext_sec->sec_name_off);\n\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\tif (!src_sec) {\n\t\t\tpr_warn(\"can't find section '%s' referenced from .BTF.ext\\n\", sec_name);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tdst_sec = &linker->secs[src_sec->dst_id];\n",
                    "rendered": {
                      "text": "\t\tsec_name = btf__name_by_offset(obj->btf, ext_sec->sec_name_off);\n\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\tif (!src_sec) {\n\t\t\tpr_warn(\"can't find section '%s' referenced from .BTF.ext\\n\", sec_name);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tdst_sec = &linker->secs[src_sec->dst_id];\n",
                      "markdown": "`\t\tsec_name = btf__name_by_offset(obj->btf, ext_sec->sec_name_off);\n\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\tif (!src_sec) {\n\t\t\tpr_warn(\"can't find section '%s' referenced from .BTF.ext\\n\", sec_name);\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tdst_sec = &linker->secs[src_sec->dst_id];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 2380,
                  "startColumn": 22,
                  "endLine": 2380,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n\t\t\t/* Error out if the type wasn't remapped. Ignore VOID which stays VOID. */\n\t\t\tif (new_id == 0 && *type_id != 0) {\n\t\t\t\tpr_warn(\"failed to find new ID mapping for original BTF type ID %u\\n\",\n\t\t\t\t\t*type_id);\n\t\t\t\treturn -EINVAL;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\n\t\t\t/* Error out if the type wasn't remapped. Ignore VOID which stays VOID. */\n\t\t\tif (new_id == 0 && *type_id != 0) {\n\t\t\t\tpr_warn(\"failed to find new ID mapping for original BTF type ID %u\\n\",\n\t\t\t\t\t*type_id);\n\t\t\t\treturn -EINVAL;\n\t\t\t}\n",
                      "markdown": "`\n\t\t\t/* Error out if the type wasn't remapped. Ignore VOID which stays VOID. */\n\t\t\tif (new_id == 0 && *type_id != 0) {\n\t\t\t\tpr_warn(\"failed to find new ID mapping for original BTF type ID %u\\n\",\n\t\t\t\t\t*type_id);\n\t\t\t\treturn -EINVAL;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 2283,
                  "startColumn": 22,
                  "endLine": 2283,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n\t\t\tsym = find_sym_by_name(obj, sec->sec_idx, STT_OBJECT, var_name);\n\t\t\tif (!sym) {\n\t\t\t\tpr_warn(\"failed to find symbol for variable '%s' in section '%s'\\n\", var_name, sec_name);\n\t\t\t\treturn -ENOENT;\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\n\t\t\tsym = find_sym_by_name(obj, sec->sec_idx, STT_OBJECT, var_name);\n\t\t\tif (!sym) {\n\t\t\t\tpr_warn(\"failed to find symbol for variable '%s' in section '%s'\\n\", var_name, sec_name);\n\t\t\t\treturn -ENOENT;\n\t\t\t}\n\n",
                      "markdown": "`\n\t\t\tsym = find_sym_by_name(obj, sec->sec_idx, STT_OBJECT, var_name);\n\t\t\tif (!sym) {\n\t\t\t\tpr_warn(\"failed to find symbol for variable '%s' in section '%s'\\n\", var_name, sec_name);\n\t\t\t\treturn -ENOENT;\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 2263,
                  "startColumn": 1,
                  "endLine": 2263,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tsec->sec_type_id = i;\n\n\t\t/* fix up variable offsets */\n\t\tvi = btf_var_secinfos(t);\n\t\tfor (j = 0, m = btf_vlen(t); j < m; j++, vi++) {\n\t\t\tconst struct btf_type *vt = btf__type_by_id(obj->btf, vi->type);\n\t\t\tconst char *var_name;\n",
                    "rendered": {
                      "text": "\t\tsec->sec_type_id = i;\n\n\t\t/* fix up variable offsets */\n\t\tvi = btf_var_secinfos(t);\n\t\tfor (j = 0, m = btf_vlen(t); j < m; j++, vi++) {\n\t\t\tconst struct btf_type *vt = btf__type_by_id(obj->btf, vi->type);\n\t\t\tconst char *var_name;\n",
                      "markdown": "`\t\tsec->sec_type_id = i;\n\n\t\t/* fix up variable offsets */\n\t\tvi = btf_var_secinfos(t);\n\t\tfor (j = 0, m = btf_vlen(t); j < m; j++, vi++) {\n\t\t\tconst struct btf_type *vt = btf__type_by_id(obj->btf, vi->type);\n\t\t\tconst char *var_name;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 1939,
                  "startColumn": 22,
                  "endLine": 1939,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\tif (strcmp(sec_name, BTF_EXTERN_SEC) != 0) {\n\t\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\t\tif (!src_sec) {\n\t\t\t\tpr_warn(\"failed to find matching ELF sec '%s'\\n\", sec_name);\n\t\t\t\treturn -ENOENT;\n\t\t\t}\n\t\t\tdst_sec = &linker->secs[src_sec->dst_id];\n",
                    "rendered": {
                      "text": "\t\tif (strcmp(sec_name, BTF_EXTERN_SEC) != 0) {\n\t\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\t\tif (!src_sec) {\n\t\t\t\tpr_warn(\"failed to find matching ELF sec '%s'\\n\", sec_name);\n\t\t\t\treturn -ENOENT;\n\t\t\t}\n\t\t\tdst_sec = &linker->secs[src_sec->dst_id];\n",
                      "markdown": "`\t\tif (strcmp(sec_name, BTF_EXTERN_SEC) != 0) {\n\t\t\tsrc_sec = find_src_sec_by_name(obj, sec_name);\n\t\t\tif (!src_sec) {\n\t\t\t\tpr_warn(\"failed to find matching ELF sec '%s'\\n\", sec_name);\n\t\t\t\treturn -ENOENT;\n\t\t\t}\n\t\t\tdst_sec = &linker->secs[src_sec->dst_id];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 1792,
                  "startColumn": 19,
                  "endLine": 1792,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\treturn 0;\n\t}\n\n\tpr_warn(\"failed to find BTF info for global/extern symbol '%s'\\n\", sym_name);\n\treturn -ENOENT;\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn 0;\n\t}\n\n\tpr_warn(\"failed to find BTF info for global/extern symbol '%s'\\n\", sym_name);\n\treturn -ENOENT;\n}\n\n",
                      "markdown": "`\t\treturn 0;\n\t}\n\n\tpr_warn(\"failed to find BTF info for global/extern symbol '%s'\\n\", sym_name);\n\treturn -ENOENT;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 1760,
                  "startColumn": 1,
                  "endLine": 1760,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tif (!btf_is_datasec(t))\n\t\t\tcontinue;\n\n\t\tvi = btf_var_secinfos(t);\n\t\tfor (j = 0, m = btf_vlen(t); j < m; j++, vi++) {\n\t\t\tt = btf__type_by_id(obj->btf, vi->type);\n\t\t\tname = btf__str_by_offset(obj->btf, t->name_off);\n",
                    "rendered": {
                      "text": "\t\tif (!btf_is_datasec(t))\n\t\t\tcontinue;\n\n\t\tvi = btf_var_secinfos(t);\n\t\tfor (j = 0, m = btf_vlen(t); j < m; j++, vi++) {\n\t\t\tt = btf__type_by_id(obj->btf, vi->type);\n\t\t\tname = btf__str_by_offset(obj->btf, t->name_off);\n",
                      "markdown": "`\t\tif (!btf_is_datasec(t))\n\t\t\tcontinue;\n\n\t\tvi = btf_var_secinfos(t);\n\t\tfor (j = 0, m = btf_vlen(t); j < m; j++, vi++) {\n\t\t\tt = btf__type_by_id(obj->btf, vi->type);\n\t\t\tname = btf__str_by_offset(obj->btf, t->name_off);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 1736,
                  "startColumn": 20,
                  "endLine": 1736,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tconst char *name;\n\n\tif (!obj->btf) {\n\t\tpr_warn(\"failed to find BTF info for object '%s'\\n\", obj->filename);\n\t\treturn -EINVAL;\n\t}\n\n",
                    "rendered": {
                      "text": "\tconst char *name;\n\n\tif (!obj->btf) {\n\t\tpr_warn(\"failed to find BTF info for object '%s'\\n\", obj->filename);\n\t\treturn -EINVAL;\n\t}\n\n",
                      "markdown": "`\tconst char *name;\n\n\tif (!obj->btf) {\n\t\tpr_warn(\"failed to find BTF info for object '%s'\\n\", obj->filename);\n\t\treturn -EINVAL;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/linker.c"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 37,
                  "endLine": 157,
                  "endColumn": 42,
                  "snippet": {
                    "text": "};\n\n#define pr_warn_elf(fmt, ...)\t\t\t\t\t\t\t\t\t\\\n\tlibbpf_print(LIBBPF_WARN, \"libbpf: \" fmt \": %s\\n\", ##__VA_ARGS__, elf_errmsg(-1))\n\nstatic int init_output_elf(struct bpf_linker *linker, const char *file);\n\n",
                    "rendered": {
                      "text": "};\n\n#define pr_warn_elf(fmt, ...)\t\t\t\t\t\t\t\t\t\\\n\tlibbpf_print(LIBBPF_WARN, \"libbpf: \" fmt \": %s\\n\", ##__VA_ARGS__, elf_errmsg(-1))\n\nstatic int init_output_elf(struct bpf_linker *linker, const char *file);\n\n",
                      "markdown": "`};\n\n#define pr_warn_elf(fmt, ...)\t\t\t\t\t\t\t\t\t\\\n\tlibbpf_print(LIBBPF_WARN, \"libbpf: \" fmt \": %s\\n\", ##__VA_ARGS__, elf_errmsg(-1))\n\nstatic int init_output_elf(struct bpf_linker *linker, const char *file);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/features.c"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 1,
                  "endLine": 288,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tmap = bpf_map_create(BPF_MAP_TYPE_ARRAY, \"libbpf_det_bind\", sizeof(int), 32, 1, &map_opts);\n\tif (map < 0) {\n\t\tret = -errno;\n\t\tcp = libbpf_strerror_r(ret, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in %s():%s(%d). Couldn't create simple array map.\\n\",\n\t\t\t__func__, cp, -ret);\n\t\treturn ret;\n",
                    "rendered": {
                      "text": "\tmap = bpf_map_create(BPF_MAP_TYPE_ARRAY, \"libbpf_det_bind\", sizeof(int), 32, 1, &map_opts);\n\tif (map < 0) {\n\t\tret = -errno;\n\t\tcp = libbpf_strerror_r(ret, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in %s():%s(%d). Couldn't create simple array map.\\n\",\n\t\t\t__func__, cp, -ret);\n\t\treturn ret;\n",
                      "markdown": "`\tmap = bpf_map_create(BPF_MAP_TYPE_ARRAY, \"libbpf_det_bind\", sizeof(int), 32, 1, &map_opts);\n\tif (map < 0) {\n\t\tret = -errno;\n\t\tcp = libbpf_strerror_r(ret, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in %s():%s(%d). Couldn't create simple array map.\\n\",\n\t\t\t__func__, cp, -ret);\n\t\treturn ret;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/features.c"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tmap = bpf_map_create(BPF_MAP_TYPE_ARRAY, \"libbpf_global\", sizeof(int), 32, 1, &map_opts);\n\tif (map < 0) {\n\t\tret = -errno;\n\t\tcp = libbpf_strerror_r(ret, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in %s():%s(%d). Couldn't create simple array map.\\n\",\n\t\t\t__func__, cp, -ret);\n\t\treturn ret;\n",
                    "rendered": {
                      "text": "\tmap = bpf_map_create(BPF_MAP_TYPE_ARRAY, \"libbpf_global\", sizeof(int), 32, 1, &map_opts);\n\tif (map < 0) {\n\t\tret = -errno;\n\t\tcp = libbpf_strerror_r(ret, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in %s():%s(%d). Couldn't create simple array map.\\n\",\n\t\t\t__func__, cp, -ret);\n\t\treturn ret;\n",
                      "markdown": "`\tmap = bpf_map_create(BPF_MAP_TYPE_ARRAY, \"libbpf_global\", sizeof(int), 32, 1, &map_opts);\n\tif (map < 0) {\n\t\tret = -errno;\n\t\tcp = libbpf_strerror_r(ret, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in %s():%s(%d). Couldn't create simple array map.\\n\",\n\t\t\t__func__, cp, -ret);\n\t\treturn ret;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/nlattr.h"
                },
                "region": {
                  "startLine": 164,
                  "endLine": 164,
                  "endColumn": 6,
                  "snippet": {
                    "text": "{\n\tstruct nlattr *tail;\n\n\ttail = req_tail(req);\n\tif (nlattr_add(req, type | NLA_F_NESTED, NULL, 0))\n\t\treturn NULL;\n\treturn tail;\n",
                    "rendered": {
                      "text": "{\n\tstruct nlattr *tail;\n\n\ttail = req_tail(req);\n\tif (nlattr_add(req, type | NLA_F_NESTED, NULL, 0))\n\t\treturn NULL;\n\treturn tail;\n",
                      "markdown": "`{\n\tstruct nlattr *tail;\n\n\ttail = req_tail(req);\n\tif (nlattr_add(req, type | NLA_F_NESTED, NULL, 0))\n\t\treturn NULL;\n\treturn tail;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/build_selftests.sh"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 27,
                  "endLine": 57,
                  "endColumn": 4,
                  "snippet": {
                    "text": "cp -R \"${REPO_ROOT}/${REPO_PATH}/tools/testing/selftests/bpf\" \\\n\t${LIBBPF_PATH}/selftests\ncd ${LIBBPF_PATH}\nrm selftests/bpf/.gitignore\ngit add selftests\n\nfoldable end prepare_selftests\n",
                    "rendered": {
                      "text": "cp -R \"${REPO_ROOT}/${REPO_PATH}/tools/testing/selftests/bpf\" \\\n\t${LIBBPF_PATH}/selftests\ncd ${LIBBPF_PATH}\nrm selftests/bpf/.gitignore\ngit add selftests\n\nfoldable end prepare_selftests\n",
                      "markdown": "`cp -R \"${REPO_ROOT}/${REPO_PATH}/tools/testing/selftests/bpf\" \\\n\t${LIBBPF_PATH}/selftests\ncd ${LIBBPF_PATH}\nrm selftests/bpf/.gitignore\ngit add selftests\n\nfoldable end prepare_selftests\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/build_selftests.sh"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 30,
                  "endLine": 53,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\t-C \"${REPO_ROOT}/${REPO_PATH}/tools/testing/selftests/bpf\" \\\n\t-j $((4*$(nproc))) > /dev/null\ncd -\nmkdir ${LIBBPF_PATH}/selftests\ncp -R \"${REPO_ROOT}/${REPO_PATH}/tools/testing/selftests/bpf\" \\\n\t${LIBBPF_PATH}/selftests\ncd ${LIBBPF_PATH}\nrm selftests/bpf/.gitignore\n",
                    "rendered": {
                      "text": "\t-C \"${REPO_ROOT}/${REPO_PATH}/tools/testing/selftests/bpf\" \\\n\t-j $((4*$(nproc))) > /dev/null\ncd -\nmkdir ${LIBBPF_PATH}/selftests\ncp -R \"${REPO_ROOT}/${REPO_PATH}/tools/testing/selftests/bpf\" \\\n\t${LIBBPF_PATH}/selftests\ncd ${LIBBPF_PATH}\nrm selftests/bpf/.gitignore\n",
                      "markdown": "`\t-C \"${REPO_ROOT}/${REPO_PATH}/tools/testing/selftests/bpf\" \\\n\t-j $((4*$(nproc))) > /dev/null\ncd -\nmkdir ${LIBBPF_PATH}/selftests\ncp -R \"${REPO_ROOT}/${REPO_PATH}/tools/testing/selftests/bpf\" \\\n\t${LIBBPF_PATH}/selftests\ncd ${LIBBPF_PATH}\nrm selftests/bpf/.gitignore\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/build_selftests.sh"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 7,
                  "endLine": 28,
                  "endColumn": 12,
                  "snippet": {
                    "text": "echo \"${DISTRIB_CODENAME}\"\n\necho \"deb https://apt.llvm.org/${DISTRIB_CODENAME}/ llvm-toolchain-${DISTRIB_CODENAME}${REPO_DISTRO_SUFFIX} main\" \\\n\t| sudo tee /etc/apt/sources.list.d/llvm.list\n\nPREPARE_SELFTESTS_SCRIPT=${THISDIR}/prepare_selftests-${KERNEL}.sh\nif [ -f \"${PREPARE_SELFTESTS_SCRIPT}\" ]; then\n",
                    "rendered": {
                      "text": "echo \"${DISTRIB_CODENAME}\"\n\necho \"deb https://apt.llvm.org/${DISTRIB_CODENAME}/ llvm-toolchain-${DISTRIB_CODENAME}${REPO_DISTRO_SUFFIX} main\" \\\n\t| sudo tee /etc/apt/sources.list.d/llvm.list\n\nPREPARE_SELFTESTS_SCRIPT=${THISDIR}/prepare_selftests-${KERNEL}.sh\nif [ -f \"${PREPARE_SELFTESTS_SCRIPT}\" ]; then\n",
                      "markdown": "`echo \"${DISTRIB_CODENAME}\"\n\necho \"deb https://apt.llvm.org/${DISTRIB_CODENAME}/ llvm-toolchain-${DISTRIB_CODENAME}${REPO_DISTRO_SUFFIX} main\" \\\n\t| sudo tee /etc/apt/sources.list.d/llvm.list\n\nPREPARE_SELFTESTS_SCRIPT=${THISDIR}/prepare_selftests-${KERNEL}.sh\nif [ -f \"${PREPARE_SELFTESTS_SCRIPT}\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/debian/action.yml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 16,
                  "snippet": {
                    "text": "        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                    "rendered": {
                      "text": "        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                      "markdown": "`        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/debian/action.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                    "rendered": {
                      "text": "        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                      "markdown": "`        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/debian/action.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                    "rendered": {
                      "text": "    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                      "markdown": "`    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/debian/action.yml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 7,
                  "endLine": 12,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  steps:\n    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n",
                    "rendered": {
                      "text": "  steps:\n    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n",
                      "markdown": "`  steps:\n    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/debian/action.yml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 16,
                  "snippet": {
                    "text": "        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                    "rendered": {
                      "text": "        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                      "markdown": "`        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/debian/action.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                    "rendered": {
                      "text": "        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                      "markdown": "`        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/debian/action.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                    "rendered": {
                      "text": "    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n",
                      "markdown": "`    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/debian/action.yml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 7,
                  "endLine": 12,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  steps:\n    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n",
                    "rendered": {
                      "text": "  steps:\n    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n",
                      "markdown": "`  steps:\n    - run: |\n        source /tmp/ci_setup\n        bash -x $CI_ROOT/managers/debian.sh SETUP\n        bash -x $CI_ROOT/managers/debian.sh ${{ inputs.target }}\n        bash -x $CI_ROOT/managers/debian.sh CLEANUP\n      shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 308,
                  "endLine": 309,
                  "endColumn": 7,
                  "snippet": {
                    "text": "if ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n.mailmap version in the upstream repository.\n\" -- .mailmap\nfi\n",
                    "rendered": {
                      "text": "if ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n.mailmap version in the upstream repository.\n\" -- .mailmap\nfi\n",
                      "markdown": "`if ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n.mailmap version in the upstream repository.\n\" -- .mailmap\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 24,
                  "endLine": 307,
                  "endColumn": 32,
                  "snippet": {
                    "text": "mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n.mailmap version in the upstream repository.\n",
                    "rendered": {
                      "text": "mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n.mailmap version in the upstream repository.\n",
                      "markdown": "`mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n.mailmap version in the upstream repository.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 29,
                  "endLine": 215,
                  "endColumn": 33,
                  "snippet": {
                    "text": "VIEW_TAG=libbpf-view-${SUFFIX}\nLIBBPF_SYNC_TAG=libbpf-sync-${SUFFIX}\n\n# Squash state of kernel repo at baseline into single commit\nSQUASH_BASE_TAG=libbpf-squash-base-${SUFFIX}\nSQUASH_TIP_TAG=libbpf-squash-tip-${SUFFIX}\nSQUASH_COMMIT=$(git commit-tree ${BASELINE_COMMIT}^{tree} -m \"BASELINE SQUASH ${BASELINE_COMMIT}\")\n",
                    "rendered": {
                      "text": "VIEW_TAG=libbpf-view-${SUFFIX}\nLIBBPF_SYNC_TAG=libbpf-sync-${SUFFIX}\n\n# Squash state of kernel repo at baseline into single commit\nSQUASH_BASE_TAG=libbpf-squash-base-${SUFFIX}\nSQUASH_TIP_TAG=libbpf-squash-tip-${SUFFIX}\nSQUASH_COMMIT=$(git commit-tree ${BASELINE_COMMIT}^{tree} -m \"BASELINE SQUASH ${BASELINE_COMMIT}\")\n",
                      "markdown": "`VIEW_TAG=libbpf-view-${SUFFIX}\nLIBBPF_SYNC_TAG=libbpf-sync-${SUFFIX}\n\n# Squash state of kernel repo at baseline into single commit\nSQUASH_BASE_TAG=libbpf-squash-base-${SUFFIX}\nSQUASH_TIP_TAG=libbpf-squash-tip-${SUFFIX}\nSQUASH_COMMIT=$(git commit-tree ${BASELINE_COMMIT}^{tree} -m \"BASELINE SQUASH ${BASELINE_COMMIT}\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 32,
                  "endLine": 174,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\tfi\n\t\t# Append signature of just cherry-picked commit to avoid\n\t\t# potentially cherry-picking the same commit twice later when\n\t\t# processing bpf tree commits. At this point we don't know yet\n\t\t# the final commit sha in libbpf repo, so we record Linux SHA\n\t\t# instead as LINUX_<sha>.\n\t\techo LINUX_$(git log --pretty='%h' -n1) \"${signature}\" >> ${TMP_DIR}/libbpf_commits.txt\n",
                    "rendered": {
                      "text": "\t\tfi\n\t\t# Append signature of just cherry-picked commit to avoid\n\t\t# potentially cherry-picking the same commit twice later when\n\t\t# processing bpf tree commits. At this point we don't know yet\n\t\t# the final commit sha in libbpf repo, so we record Linux SHA\n\t\t# instead as LINUX_<sha>.\n\t\techo LINUX_$(git log --pretty='%h' -n1) \"${signature}\" >> ${TMP_DIR}/libbpf_commits.txt\n",
                      "markdown": "`\t\tfi\n\t\t# Append signature of just cherry-picked commit to avoid\n\t\t# potentially cherry-picking the same commit twice later when\n\t\t# processing bpf tree commits. At this point we don't know yet\n\t\t# the final commit sha in libbpf repo, so we record Linux SHA\n\t\t# instead as LINUX_<sha>.\n\t\techo LINUX_$(git log --pretty='%h' -n1) \"${signature}\" >> ${TMP_DIR}/libbpf_commits.txt\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 22,
                  "endLine": 84,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# - full commit subject\n# - author date in ISO8601 format\n# - full commit body with newlines replaced with vertical bars (|)\n# - shortstat appended at the end\n# The idea is that this single-line signature is good enough to make final\n# decision about whether two commits are the same, across different repos.\n# $1 - commit ref\n",
                    "rendered": {
                      "text": "# - full commit subject\n# - author date in ISO8601 format\n# - full commit body with newlines replaced with vertical bars (|)\n# - shortstat appended at the end\n# The idea is that this single-line signature is good enough to make final\n# decision about whether two commits are the same, across different repos.\n# $1 - commit ref\n",
                      "markdown": "`# - full commit subject\n# - author date in ISO8601 format\n# - full commit body with newlines replaced with vertical bars (|)\n# - shortstat appended at the end\n# The idea is that this single-line signature is good enough to make final\n# decision about whether two commits are the same, across different repos.\n# $1 - commit ref\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 39,
                  "endLine": 8,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\techo \"\"\n\techo \"Set BPF_NEXT_BASELINE to override bpf-next tree commit, otherwise read from <libbpf-repo>/CHECKPOINT-COMMIT.\"\n\techo \"Set BPF_BASELINE to override bpf tree commit, otherwise read from <libbpf-repo>/BPF-CHECKPOINT-COMMIT.\"\n\techo \"Set MANUAL_MODE to 1 to manually control every cherry-picked commits.\"\n\texit 1\n}\n\n",
                    "rendered": {
                      "text": "\techo \"\"\n\techo \"Set BPF_NEXT_BASELINE to override bpf-next tree commit, otherwise read from <libbpf-repo>/CHECKPOINT-COMMIT.\"\n\techo \"Set BPF_BASELINE to override bpf tree commit, otherwise read from <libbpf-repo>/BPF-CHECKPOINT-COMMIT.\"\n\techo \"Set MANUAL_MODE to 1 to manually control every cherry-picked commits.\"\n\texit 1\n}\n\n",
                      "markdown": "`\techo \"\"\n\techo \"Set BPF_NEXT_BASELINE to override bpf-next tree commit, otherwise read from <libbpf-repo>/CHECKPOINT-COMMIT.\"\n\techo \"Set BPF_BASELINE to override bpf tree commit, otherwise read from <libbpf-repo>/BPF-CHECKPOINT-COMMIT.\"\n\techo \"Set MANUAL_MODE to 1 to manually control every cherry-picked commits.\"\n\texit 1\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 5,
                  "endLine": 350,
                  "endColumn": 11,
                  "snippet": {
                    "text": "echo \"Comparing file contents...\"\nCONSISTENT=1\nfor F in $(cat ${TMP_DIR}/linux-view.ls); do\n\tif ! diff -u \"${LINUX_ABS_DIR}/${F}\" \"${GITHUB_ABS_DIR}/${F}\"; then\n\t\techo \"${LINUX_ABS_DIR}/${F} and ${GITHUB_ABS_DIR}/${F} are different!\"\n\t\tCONSISTENT=0\n\tfi\n",
                    "rendered": {
                      "text": "echo \"Comparing file contents...\"\nCONSISTENT=1\nfor F in $(cat ${TMP_DIR}/linux-view.ls); do\n\tif ! diff -u \"${LINUX_ABS_DIR}/${F}\" \"${GITHUB_ABS_DIR}/${F}\"; then\n\t\techo \"${LINUX_ABS_DIR}/${F} and ${GITHUB_ABS_DIR}/${F} are different!\"\n\t\tCONSISTENT=0\n\tfi\n",
                      "markdown": "`echo \"Comparing file contents...\"\nCONSISTENT=1\nfor F in $(cat ${TMP_DIR}/linux-view.ls); do\n\tif ! diff -u \"${LINUX_ABS_DIR}/${F}\" \"${GITHUB_ABS_DIR}/${F}\"; then\n\t\techo \"${LINUX_ABS_DIR}/${F} and ${GITHUB_ABS_DIR}/${F} are different!\"\n\t\tCONSISTENT=0\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 33,
                  "endLine": 346,
                  "endColumn": 5,
                  "snippet": {
                    "text": "cd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u ${TMP_DIR}/linux-view.ls ${TMP_DIR}/github-view.ls\necho \"Comparing file contents...\"\nCONSISTENT=1\nfor F in $(cat ${TMP_DIR}/linux-view.ls); do\n",
                    "rendered": {
                      "text": "cd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u ${TMP_DIR}/linux-view.ls ${TMP_DIR}/github-view.ls\necho \"Comparing file contents...\"\nCONSISTENT=1\nfor F in $(cat ${TMP_DIR}/linux-view.ls); do\n",
                      "markdown": "`cd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u ${TMP_DIR}/linux-view.ls ${TMP_DIR}/github-view.ls\necho \"Comparing file contents...\"\nCONSISTENT=1\nfor F in $(cat ${TMP_DIR}/linux-view.ls); do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 43,
                  "endLine": 343,
                  "endColumn": 49,
                  "snippet": {
                    "text": "git ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u ${TMP_DIR}/linux-view.ls ${TMP_DIR}/github-view.ls\n",
                    "rendered": {
                      "text": "git ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u ${TMP_DIR}/linux-view.ls ${TMP_DIR}/github-view.ls\n",
                      "markdown": "`git ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u ${TMP_DIR}/linux-view.ls ${TMP_DIR}/github-view.ls\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 20,
                  "endLine": 343,
                  "endColumn": 4,
                  "snippet": {
                    "text": "FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u ${TMP_DIR}/linux-view.ls ${TMP_DIR}/github-view.ls\n",
                    "rendered": {
                      "text": "FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u ${TMP_DIR}/linux-view.ls ${TMP_DIR}/github-view.ls\n",
                      "markdown": "`FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u ${TMP_DIR}/linux-view.ls ${TMP_DIR}/github-view.ls\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 43,
                  "endLine": 340,
                  "endColumn": 49,
                  "snippet": {
                    "text": "git checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n",
                    "rendered": {
                      "text": "git checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n",
                      "markdown": "`git checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 109,
                  "endLine": 340,
                  "endColumn": 4,
                  "snippet": {
                    "text": "cd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n",
                    "rendered": {
                      "text": "cd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n",
                      "markdown": "`cd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LIBBPF_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/github-view.ls\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 31,
                  "endLine": 339,
                  "endColumn": 36,
                  "snippet": {
                    "text": "cd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\n",
                    "rendered": {
                      "text": "cd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\n",
                      "markdown": "`cd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\ncd_to ${LIBBPF_REPO}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 31,
                  "endLine": 338,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\ncd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\n",
                    "rendered": {
                      "text": "\ncd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\n",
                      "markdown": "`\ncd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 19,
                  "endLine": 337,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\necho \"Verifying Linux's and Github's libbpf state\"\n\ncd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n",
                    "rendered": {
                      "text": "\necho \"Verifying Linux's and Github's libbpf state\"\n\ncd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n",
                      "markdown": "`\necho \"Verifying Linux's and Github's libbpf state\"\n\ncd_to ${LINUX_REPO}\ngit checkout -b ${VIEW_TAG} ${TIP_COMMIT}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${VIEW_TAG}^..${VIEW_TAG}\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __libbpf ${VIEW_TAG}^..${VIEW_TAG}\ngit ls-files -- \"${LIBBPF_VIEW_PATHS[@]}\" | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > ${TMP_DIR}/linux-view.ls\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 60,
                  "endLine": 330,
                  "endColumn": 4,
                  "snippet": {
                    "text": "Baseline bpf-next commit:   ${BASELINE_COMMIT}\\n\\\nCheckpoint bpf-next commit: ${TIP_COMMIT}\\n\\\nBaseline bpf commit:        ${BPF_BASELINE_COMMIT}\\n\\\nCheckpoint bpf commit:      ${BPF_TIP_COMMIT}/\" |\t\t\t\t      \\\ngit commit -s --file=-\n\necho \"SUCCESS! ${COMMIT_CNT} commits synced.\"\n\n",
                    "rendered": {
                      "text": "Baseline bpf-next commit:   ${BASELINE_COMMIT}\\n\\\nCheckpoint bpf-next commit: ${TIP_COMMIT}\\n\\\nBaseline bpf commit:        ${BPF_BASELINE_COMMIT}\\n\\\nCheckpoint bpf commit:      ${BPF_TIP_COMMIT}/\" |\t\t\t\t      \\\ngit commit -s --file=-\n\necho \"SUCCESS! ${COMMIT_CNT} commits synced.\"\n\n",
                      "markdown": "`Baseline bpf-next commit:   ${BASELINE_COMMIT}\\n\\\nCheckpoint bpf-next commit: ${TIP_COMMIT}\\n\\\nBaseline bpf commit:        ${BPF_BASELINE_COMMIT}\\n\\\nCheckpoint bpf commit:      ${BPF_TIP_COMMIT}/\" |\t\t\t\t      \\\ngit commit -s --file=-\n\necho \"SUCCESS! ${COMMIT_CNT} commits synced.\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 87,
                  "endLine": 322,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: latest libbpf changes from kernel\\n\\\n\\n\\\nSyncing latest libbpf commits from kernel repository.\\n\\\n",
                    "rendered": {
                      "text": "echo ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: latest libbpf changes from kernel\\n\\\n\\n\\\nSyncing latest libbpf commits from kernel repository.\\n\\\n",
                      "markdown": "`echo ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: latest libbpf changes from kernel\\n\\\n\\n\\\nSyncing latest libbpf commits from kernel repository.\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 45,
                  "endLine": 321,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo ${TIP_COMMIT} > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: latest libbpf changes from kernel\\n\\\n\\n\\\n",
                    "rendered": {
                      "text": "echo ${TIP_COMMIT} > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: latest libbpf changes from kernel\\n\\\n\\n\\\n",
                      "markdown": "`echo ${TIP_COMMIT} > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: latest libbpf changes from kernel\\n\\\n\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 42,
                  "endLine": 320,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# from cover letter intact, of course)\necho ${TIP_COMMIT} > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: latest libbpf changes from kernel\\n\\\n",
                    "rendered": {
                      "text": "# from cover letter intact, of course)\necho ${TIP_COMMIT} > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: latest libbpf changes from kernel\\n\\\n",
                      "markdown": "`# from cover letter intact, of course)\necho ${TIP_COMMIT} > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: latest libbpf changes from kernel\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 60,
                  "endLine": 319,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# baseline and checkpoint commits from kernel repo (and leave summary\n# from cover letter intact, of course)\necho ${TIP_COMMIT} > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\n",
                    "rendered": {
                      "text": "# baseline and checkpoint commits from kernel repo (and leave summary\n# from cover letter intact, of course)\necho ${TIP_COMMIT} > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\n",
                      "markdown": "`# baseline and checkpoint commits from kernel repo (and leave summary\n# from cover letter intact, of course)\necho ${TIP_COMMIT} > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho ${BPF_TIP_COMMIT} > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' ${TMP_DIR}/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 307,
                  "endLine": 307,
                  "endColumn": 5,
                  "snippet": {
                    "text": "mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n.mailmap version in the upstream repository.\n",
                    "rendered": {
                      "text": "mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n.mailmap version in the upstream repository.\n",
                      "markdown": "`mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n.mailmap version in the upstream repository.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 306,
                  "endLine": 306,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# if anything changed, commit it\nmailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n",
                    "rendered": {
                      "text": "# if anything changed, commit it\nmailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n",
                      "markdown": "`# if anything changed, commit it\nmailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((${mailmap_changes} == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on libbpf's list of contributors and on the latest\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 21,
                  "endLine": 300,
                  "endColumn": 4,
                  "snippet": {
                    "text": "fi\n\necho \"Regenerating .mailmap...\"\ncd_to \"${LINUX_REPO}\"\ngit checkout \"${TIP_SYM_REF}\"\ncd_to \"${LIBBPF_REPO}\"\n\"${LIBBPF_REPO}\"/scripts/mailmap-update.sh \"${LIBBPF_REPO}\" \"${LINUX_REPO}\"\n# if anything changed, commit it\n",
                    "rendered": {
                      "text": "fi\n\necho \"Regenerating .mailmap...\"\ncd_to \"${LINUX_REPO}\"\ngit checkout \"${TIP_SYM_REF}\"\ncd_to \"${LIBBPF_REPO}\"\n\"${LIBBPF_REPO}\"/scripts/mailmap-update.sh \"${LIBBPF_REPO}\" \"${LINUX_REPO}\"\n# if anything changed, commit it\n",
                      "markdown": "`fi\n\necho \"Regenerating .mailmap...\"\ncd_to \"${LINUX_REPO}\"\ngit checkout \"${TIP_SYM_REF}\"\ncd_to \"${LIBBPF_REPO}\"\n\"${LIBBPF_REPO}\"/scripts/mailmap-update.sh \"${LIBBPF_REPO}\" \"${LINUX_REPO}\"\n# if anything changed, commit it\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 292,
                  "endLine": 292,
                  "endColumn": 5,
                  "snippet": {
                    "text": "helpers_changes=$(git status --porcelain src/bpf_helper_defs.h | wc -l)\nif ((${helpers_changes} == 1)); then\n\tgit add src/bpf_helper_defs.h\n\tgit commit -s -m \"sync: auto-generate latest BPF helpers\n\nLatest changes to BPF helper definitions.\n\" -- src/bpf_helper_defs.h\n",
                    "rendered": {
                      "text": "helpers_changes=$(git status --porcelain src/bpf_helper_defs.h | wc -l)\nif ((${helpers_changes} == 1)); then\n\tgit add src/bpf_helper_defs.h\n\tgit commit -s -m \"sync: auto-generate latest BPF helpers\n\nLatest changes to BPF helper definitions.\n\" -- src/bpf_helper_defs.h\n",
                      "markdown": "`helpers_changes=$(git status --porcelain src/bpf_helper_defs.h | wc -l)\nif ((${helpers_changes} == 1)); then\n\tgit add src/bpf_helper_defs.h\n\tgit commit -s -m \"sync: auto-generate latest BPF helpers\n\nLatest changes to BPF helper definitions.\n\" -- src/bpf_helper_defs.h\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 291,
                  "endLine": 291,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# if anything changed, commit it\nhelpers_changes=$(git status --porcelain src/bpf_helper_defs.h | wc -l)\nif ((${helpers_changes} == 1)); then\n\tgit add src/bpf_helper_defs.h\n\tgit commit -s -m \"sync: auto-generate latest BPF helpers\n\nLatest changes to BPF helper definitions.\n",
                    "rendered": {
                      "text": "# if anything changed, commit it\nhelpers_changes=$(git status --porcelain src/bpf_helper_defs.h | wc -l)\nif ((${helpers_changes} == 1)); then\n\tgit add src/bpf_helper_defs.h\n\tgit commit -s -m \"sync: auto-generate latest BPF helpers\n\nLatest changes to BPF helper definitions.\n",
                      "markdown": "`# if anything changed, commit it\nhelpers_changes=$(git status --porcelain src/bpf_helper_defs.h | wc -l)\nif ((${helpers_changes} == 1)); then\n\tgit add src/bpf_helper_defs.h\n\tgit commit -s -m \"sync: auto-generate latest BPF helpers\n\nLatest changes to BPF helper definitions.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 19,
                  "endLine": 283,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# Generate bpf_helper_defs.h and commit, if anything changed\n# restore Linux tip to use bpf_doc.py\ncd_to ${LINUX_REPO}\ngit checkout ${TIP_TAG}\n# re-generate bpf_helper_defs.h\ncd_to ${LIBBPF_REPO}\n\"${LINUX_ABS_DIR}/scripts/bpf_doc.py\" --header\t\t\t\t\t      \\\n",
                    "rendered": {
                      "text": "\n# Generate bpf_helper_defs.h and commit, if anything changed\n# restore Linux tip to use bpf_doc.py\ncd_to ${LINUX_REPO}\ngit checkout ${TIP_TAG}\n# re-generate bpf_helper_defs.h\ncd_to ${LIBBPF_REPO}\n\"${LINUX_ABS_DIR}/scripts/bpf_doc.py\" --header\t\t\t\t\t      \\\n",
                      "markdown": "`\n# Generate bpf_helper_defs.h and commit, if anything changed\n# restore Linux tip to use bpf_doc.py\ncd_to ${LINUX_REPO}\ngit checkout ${TIP_TAG}\n# re-generate bpf_helper_defs.h\ncd_to ${LIBBPF_REPO}\n\"${LINUX_ABS_DIR}/scripts/bpf_doc.py\" --header\t\t\t\t\t      \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 1,
                  "endLine": 276,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tif ! patch -p1 --merge < \"${TMP_DIR}/patches/${patch}\"; then\n\t\t\tread -p \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\t\tfi\n\t\tgit am --continue\n\tfi\ndone\n\n",
                    "rendered": {
                      "text": "\t\tif ! patch -p1 --merge < \"${TMP_DIR}/patches/${patch}\"; then\n\t\t\tread -p \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\t\tfi\n\t\tgit am --continue\n\tfi\ndone\n\n",
                      "markdown": "`\t\tif ! patch -p1 --merge < \"${TMP_DIR}/patches/${patch}\"; then\n\t\t\tread -p \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\t\tfi\n\t\tgit am --continue\n\tfi\ndone\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 5,
                  "endLine": 272,
                  "endColumn": 10,
                  "snippet": {
                    "text": "git checkout -b ${LIBBPF_SYNC_TAG}\n\nfor patch in $(ls -1 ${TMP_DIR}/patches | tail -n +2); do\n\tif ! git am -3 --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tif ! patch -p1 --merge < \"${TMP_DIR}/patches/${patch}\"; then\n\t\t\tread -p \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\t\tfi\n",
                    "rendered": {
                      "text": "git checkout -b ${LIBBPF_SYNC_TAG}\n\nfor patch in $(ls -1 ${TMP_DIR}/patches | tail -n +2); do\n\tif ! git am -3 --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tif ! patch -p1 --merge < \"${TMP_DIR}/patches/${patch}\"; then\n\t\t\tread -p \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\t\tfi\n",
                      "markdown": "`git checkout -b ${LIBBPF_SYNC_TAG}\n\nfor patch in $(ls -1 ${TMP_DIR}/patches | tail -n +2); do\n\tif ! git am -3 --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tif ! patch -p1 --merge < \"${TMP_DIR}/patches/${patch}\"; then\n\t\t\tread -p \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\t\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 41,
                  "endLine": 271,
                  "endColumn": 47,
                  "snippet": {
                    "text": "cd_to ${LIBBPF_REPO}\ngit checkout -b ${LIBBPF_SYNC_TAG}\n\nfor patch in $(ls -1 ${TMP_DIR}/patches | tail -n +2); do\n\tif ! git am -3 --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tif ! patch -p1 --merge < \"${TMP_DIR}/patches/${patch}\"; then\n\t\t\tread -p \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n",
                    "rendered": {
                      "text": "cd_to ${LIBBPF_REPO}\ngit checkout -b ${LIBBPF_SYNC_TAG}\n\nfor patch in $(ls -1 ${TMP_DIR}/patches | tail -n +2); do\n\tif ! git am -3 --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tif ! patch -p1 --merge < \"${TMP_DIR}/patches/${patch}\"; then\n\t\t\tread -p \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n",
                      "markdown": "`cd_to ${LIBBPF_REPO}\ngit checkout -b ${LIBBPF_SYNC_TAG}\n\nfor patch in $(ls -1 ${TMP_DIR}/patches | tail -n +2); do\n\tif ! git am -3 --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tif ! patch -p1 --merge < \"${TMP_DIR}/patches/${patch}\"; then\n\t\t\tread -p \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 20,
                  "endLine": 269,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\ncd_to ${LIBBPF_REPO}\ngit checkout -b ${LIBBPF_SYNC_TAG}\n\nfor patch in $(ls -1 ${TMP_DIR}/patches | tail -n +2); do\n\tif ! git am -3 --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n",
                    "rendered": {
                      "text": "git format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\ncd_to ${LIBBPF_REPO}\ngit checkout -b ${LIBBPF_SYNC_TAG}\n\nfor patch in $(ls -1 ${TMP_DIR}/patches | tail -n +2); do\n\tif ! git am -3 --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n",
                      "markdown": "`git format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\ncd_to ${LIBBPF_REPO}\ngit checkout -b ${LIBBPF_SYNC_TAG}\n\nfor patch in $(ls -1 ${TMP_DIR}/patches | tail -n +2); do\n\tif ! git am -3 --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 8,
                  "endLine": 267,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\ncd_to ${LIBBPF_REPO}\ngit checkout -b ${LIBBPF_SYNC_TAG}\n\n",
                    "rendered": {
                      "text": "# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\ncd_to ${LIBBPF_REPO}\ngit checkout -b ${LIBBPF_SYNC_TAG}\n\n",
                      "markdown": "`# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\ncd_to ${LIBBPF_REPO}\ngit checkout -b ${LIBBPF_SYNC_TAG}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 69,
                  "endLine": 265,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    exit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\ncd_to ${LIBBPF_REPO}\n",
                    "rendered": {
                      "text": "    exit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\ncd_to ${LIBBPF_REPO}\n",
                      "markdown": "`    exit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\ncd_to ${LIBBPF_REPO}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 38,
                  "endLine": 264,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    exit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\n",
                    "rendered": {
                      "text": "    exit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\n",
                      "markdown": "`    exit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG} --cover-letter -o ${TMP_DIR}/patches\n\n# Now is time to re-apply libbpf-related linux patches to libbpf repo\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 31,
                  "endLine": 254,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# Move all libbpf files into __libbpf directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n# Make __libbpf a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __libbpf ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n\n# If there are no new commits with  libbpf-related changes, bail out\nCOMMIT_CNT=$(git rev-list --count ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG})\n",
                    "rendered": {
                      "text": "# Move all libbpf files into __libbpf directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n# Make __libbpf a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __libbpf ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n\n# If there are no new commits with  libbpf-related changes, bail out\nCOMMIT_CNT=$(git rev-list --count ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG})\n",
                      "markdown": "`# Move all libbpf files into __libbpf directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n# Make __libbpf a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __libbpf ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n\n# If there are no new commits with  libbpf-related changes, bail out\nCOMMIT_CNT=$(git rev-list --count ${SQUASH_BASE_TAG}..${SQUASH_TIP_TAG})\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 31,
                  "endLine": 252,
                  "endColumn": 36,
                  "snippet": {
                    "text": "cherry_pick_commits ${BPF_BASELINE_TAG} ${BPF_TIP_TAG}\n\n# Move all libbpf files into __libbpf directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n# Make __libbpf a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __libbpf ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n\n",
                    "rendered": {
                      "text": "cherry_pick_commits ${BPF_BASELINE_TAG} ${BPF_TIP_TAG}\n\n# Move all libbpf files into __libbpf directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n# Make __libbpf a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __libbpf ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n\n",
                      "markdown": "`cherry_pick_commits ${BPF_BASELINE_TAG} ${BPF_TIP_TAG}\n\n# Move all libbpf files into __libbpf directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${LIBBPF_TREE_FILTER}\" ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n# Make __libbpf a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __libbpf ${SQUASH_TIP_TAG} ${SQUASH_BASE_TAG}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 46,
                  "endLine": 245,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n\n# Cherry-pick new commits onto squashed baseline commit\ncherry_pick_commits ${BASELINE_TAG} ${TIP_TAG}\n",
                    "rendered": {
                      "text": "git branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n\n# Cherry-pick new commits onto squashed baseline commit\ncherry_pick_commits ${BASELINE_TAG} ${TIP_TAG}\n",
                      "markdown": "`git branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n\n# Cherry-pick new commits onto squashed baseline commit\ncherry_pick_commits ${BASELINE_TAG} ${TIP_TAG}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 43,
                  "endLine": 244,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n\n# Cherry-pick new commits onto squashed baseline commit\n",
                    "rendered": {
                      "text": "git branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n\n# Cherry-pick new commits onto squashed baseline commit\n",
                      "markdown": "`git branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n\n# Cherry-pick new commits onto squashed baseline commit\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 53,
                  "endLine": 243,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n\n",
                    "rendered": {
                      "text": "\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n\n",
                      "markdown": "`\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 35,
                  "endLine": 242,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n",
                    "rendered": {
                      "text": "echo \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n",
                      "markdown": "`echo \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\ngit checkout -b ${SQUASH_TIP_TAG} ${SQUASH_COMMIT}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 45,
                  "endLine": 241,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"LIBBPF SYNC TAG:  ${LIBBPF_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\n",
                    "rendered": {
                      "text": "echo \"LIBBPF SYNC TAG:  ${LIBBPF_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\n",
                      "markdown": "`echo \"LIBBPF SYNC TAG:  ${LIBBPF_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\ngit branch ${SQUASH_BASE_TAG} ${SQUASH_COMMIT}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 239,
                  "endLine": 240,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"VIEW TAG:         ${VIEW_TAG}\"\necho \"LIBBPF SYNC TAG:  ${LIBBPF_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\n",
                    "rendered": {
                      "text": "echo \"VIEW TAG:         ${VIEW_TAG}\"\necho \"LIBBPF SYNC TAG:  ${LIBBPF_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\n",
                      "markdown": "`echo \"VIEW TAG:         ${VIEW_TAG}\"\necho \"LIBBPF SYNC TAG:  ${LIBBPF_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch ${BASELINE_TAG} ${BASELINE_COMMIT}\ngit branch ${TIP_TAG} ${TIP_COMMIT}\ngit branch ${BPF_BASELINE_TAG} ${BPF_BASELINE_COMMIT}\ngit branch ${BPF_TIP_TAG} ${BPF_TIP_COMMIT}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 49,
                  "endLine": 205,
                  "endColumn": 54,
                  "snippet": {
                    "text": "# Use current kernel repo HEAD as a source of patches\ncd_to ${LINUX_REPO}\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nTIP_COMMIT=$(git rev-parse HEAD)\nBPF_TIP_COMMIT=$(git rev-parse ${BPF_BRANCH})\nBASELINE_TAG=libbpf-baseline-${SUFFIX}\n",
                    "rendered": {
                      "text": "# Use current kernel repo HEAD as a source of patches\ncd_to ${LINUX_REPO}\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nTIP_COMMIT=$(git rev-parse HEAD)\nBPF_TIP_COMMIT=$(git rev-parse ${BPF_BRANCH})\nBASELINE_TAG=libbpf-baseline-${SUFFIX}\n",
                      "markdown": "`# Use current kernel repo HEAD as a source of patches\ncd_to ${LINUX_REPO}\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nTIP_COMMIT=$(git rev-parse HEAD)\nBPF_TIP_COMMIT=$(git rev-parse ${BPF_BRANCH})\nBASELINE_TAG=libbpf-baseline-${SUFFIX}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 41,
                  "endLine": 205,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# Use current kernel repo HEAD as a source of patches\ncd_to ${LINUX_REPO}\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nTIP_COMMIT=$(git rev-parse HEAD)\nBPF_TIP_COMMIT=$(git rev-parse ${BPF_BRANCH})\nBASELINE_TAG=libbpf-baseline-${SUFFIX}\n",
                    "rendered": {
                      "text": "# Use current kernel repo HEAD as a source of patches\ncd_to ${LINUX_REPO}\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nTIP_COMMIT=$(git rev-parse HEAD)\nBPF_TIP_COMMIT=$(git rev-parse ${BPF_BRANCH})\nBASELINE_TAG=libbpf-baseline-${SUFFIX}\n",
                      "markdown": "`# Use current kernel repo HEAD as a source of patches\ncd_to ${LINUX_REPO}\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nTIP_COMMIT=$(git rev-parse HEAD)\nBPF_TIP_COMMIT=$(git rev-parse ${BPF_BRANCH})\nBASELINE_TAG=libbpf-baseline-${SUFFIX}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 25,
                  "endLine": 202,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\techo $h \"$(commit_signature $h)\" >> ${TMP_DIR}/libbpf_commits.txt\ndone\n\n# Use current kernel repo HEAD as a source of patches\ncd_to ${LINUX_REPO}\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\n",
                    "rendered": {
                      "text": "\techo $h \"$(commit_signature $h)\" >> ${TMP_DIR}/libbpf_commits.txt\ndone\n\n# Use current kernel repo HEAD as a source of patches\ncd_to ${LINUX_REPO}\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\n",
                      "markdown": "`\techo $h \"$(commit_signature $h)\" >> ${TMP_DIR}/libbpf_commits.txt\ndone\n\n# Use current kernel repo HEAD as a source of patches\ncd_to ${LINUX_REPO}\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 187,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\trm -r ${TMP_DIR}\n\tcd_to ${LINUX_REPO}\n\tgit checkout ${TIP_SYM_REF}\n\tgit branch -D ${BASELINE_TAG} ${TIP_TAG} ${BPF_BASELINE_TAG} ${BPF_TIP_TAG} \\\n\t\t      ${SQUASH_BASE_TAG} ${SQUASH_TIP_TAG} ${VIEW_TAG} || true\n\n\tcd_to .\n",
                    "rendered": {
                      "text": "\trm -r ${TMP_DIR}\n\tcd_to ${LINUX_REPO}\n\tgit checkout ${TIP_SYM_REF}\n\tgit branch -D ${BASELINE_TAG} ${TIP_TAG} ${BPF_BASELINE_TAG} ${BPF_TIP_TAG} \\\n\t\t      ${SQUASH_BASE_TAG} ${SQUASH_TIP_TAG} ${VIEW_TAG} || true\n\n\tcd_to .\n",
                      "markdown": "`\trm -r ${TMP_DIR}\n\tcd_to ${LINUX_REPO}\n\tgit checkout ${TIP_SYM_REF}\n\tgit branch -D ${BASELINE_TAG} ${TIP_TAG} ${BPF_BASELINE_TAG} ${BPF_TIP_TAG} \\\n\t\t      ${SQUASH_BASE_TAG} ${SQUASH_TIP_TAG} ${VIEW_TAG} || true\n\n\tcd_to .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 186,
                  "endLine": 186,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\techo \"Cleaning up...\"\n\trm -r ${TMP_DIR}\n\tcd_to ${LINUX_REPO}\n\tgit checkout ${TIP_SYM_REF}\n\tgit branch -D ${BASELINE_TAG} ${TIP_TAG} ${BPF_BASELINE_TAG} ${BPF_TIP_TAG} \\\n\t\t      ${SQUASH_BASE_TAG} ${SQUASH_TIP_TAG} ${VIEW_TAG} || true\n\n",
                    "rendered": {
                      "text": "\techo \"Cleaning up...\"\n\trm -r ${TMP_DIR}\n\tcd_to ${LINUX_REPO}\n\tgit checkout ${TIP_SYM_REF}\n\tgit branch -D ${BASELINE_TAG} ${TIP_TAG} ${BPF_BASELINE_TAG} ${BPF_TIP_TAG} \\\n\t\t      ${SQUASH_BASE_TAG} ${SQUASH_TIP_TAG} ${VIEW_TAG} || true\n\n",
                      "markdown": "`\techo \"Cleaning up...\"\n\trm -r ${TMP_DIR}\n\tcd_to ${LINUX_REPO}\n\tgit checkout ${TIP_SYM_REF}\n\tgit branch -D ${BASELINE_TAG} ${TIP_TAG} ${BPF_BASELINE_TAG} ${BPF_TIP_TAG} \\\n\t\t      ${SQUASH_BASE_TAG} ${SQUASH_TIP_TAG} ${VIEW_TAG} || true\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 24,
                  "endLine": 160,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n\t\t\t\telse\n\t\t\t\t\techo \"Success! All cherry-pick conflicts were resolved for '${desc}'!\"\n",
                    "rendered": {
                      "text": "\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n\t\t\t\telse\n\t\t\t\t\techo \"Success! All cherry-pick conflicts were resolved for '${desc}'!\"\n",
                      "markdown": "`\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n\t\t\t\telse\n\t\t\t\t\techo \"Success! All cherry-pick conflicts were resolved for '${desc}'!\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 3,
                  "endLine": 158,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n",
                    "rendered": {
                      "text": "\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n",
                      "markdown": "`\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 4,
                  "endLine": 154,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t\techo \"Looks like only non-libbpf files have conflicts, ignoring...\"\n\t\t\t\tif ((${conflict_cnt} == 0)); then\n\t\t\t\t\techo \"Empty cherry-pick, skipping it...\"\n\t\t\t\t\tgit cherry-pick --abort\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t\techo \"Looks like only non-libbpf files have conflicts, ignoring...\"\n\t\t\t\tif ((${conflict_cnt} == 0)); then\n\t\t\t\t\techo \"Empty cherry-pick, skipping it...\"\n\t\t\t\t\tgit cherry-pick --abort\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n",
                      "markdown": "`\t\t\t\techo \"Looks like only non-libbpf files have conflicts, ignoring...\"\n\t\t\t\tif ((${conflict_cnt} == 0)); then\n\t\t\t\t\techo \"Empty cherry-pick, skipping it...\"\n\t\t\t\t\tgit cherry-pick --abort\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 21,
                  "endLine": 147,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\tif ! git cherry-pick ${new_commit} &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-libbpf files causing problems...\"\n\t\t\tlibbpf_conflict_cnt=$(git diff --name-only --diff-filter=U -- \"${LIBBPF_PATHS[@]}\" | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n\t\t\tif ((${libbpf_conflict_cnt} == 0)); then\n",
                    "rendered": {
                      "text": "\t\tif ! git cherry-pick ${new_commit} &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-libbpf files causing problems...\"\n\t\t\tlibbpf_conflict_cnt=$(git diff --name-only --diff-filter=U -- \"${LIBBPF_PATHS[@]}\" | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n\t\t\tif ((${libbpf_conflict_cnt} == 0)); then\n",
                      "markdown": "`\t\tif ! git cherry-pick ${new_commit} &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-libbpf files causing problems...\"\n\t\t\tlibbpf_conflict_cnt=$(git diff --name-only --diff-filter=U -- \"${LIBBPF_PATHS[@]}\" | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n\t\t\tif ((${libbpf_conflict_cnt} == 0)); then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 28,
                  "endLine": 146,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\techo \"Picking '${desc}'...\"\n\t\tif ! git cherry-pick ${new_commit} &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-libbpf files causing problems...\"\n\t\t\tlibbpf_conflict_cnt=$(git diff --name-only --diff-filter=U -- \"${LIBBPF_PATHS[@]}\" | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n",
                    "rendered": {
                      "text": "\t\techo \"Picking '${desc}'...\"\n\t\tif ! git cherry-pick ${new_commit} &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-libbpf files causing problems...\"\n\t\t\tlibbpf_conflict_cnt=$(git diff --name-only --diff-filter=U -- \"${LIBBPF_PATHS[@]}\" | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n",
                      "markdown": "`\t\techo \"Picking '${desc}'...\"\n\t\tif ! git cherry-pick ${new_commit} &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-libbpf files causing problems...\"\n\t\t\tlibbpf_conflict_cnt=$(git diff --name-only --diff-filter=U -- \"${LIBBPF_PATHS[@]}\" | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 6,
                  "endLine": 144,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\tfi\n\t\t# commit hasn't been synced into libbpf yet\n\t\techo \"Picking '${desc}'...\"\n\t\tif ! git cherry-pick ${new_commit} &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-libbpf files causing problems...\"\n\t\t\tlibbpf_conflict_cnt=$(git diff --name-only --diff-filter=U -- \"${LIBBPF_PATHS[@]}\" | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n",
                    "rendered": {
                      "text": "\t\tfi\n\t\t# commit hasn't been synced into libbpf yet\n\t\techo \"Picking '${desc}'...\"\n\t\tif ! git cherry-pick ${new_commit} &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-libbpf files causing problems...\"\n\t\t\tlibbpf_conflict_cnt=$(git diff --name-only --diff-filter=U -- \"${LIBBPF_PATHS[@]}\" | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n",
                      "markdown": "`\t\tfi\n\t\t# commit hasn't been synced into libbpf yet\n\t\techo \"Picking '${desc}'...\"\n\t\tif ! git cherry-pick ${new_commit} &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-libbpf files causing problems...\"\n\t\t\tlibbpf_conflict_cnt=$(git diff --name-only --diff-filter=U -- \"${LIBBPF_PATHS[@]}\" | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 19,
                  "endLine": 123,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into libbpf as:\"\n\t\t\tgrep -F \"${signature}\" ${TMP_DIR}/libbpf_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((${manual_mode} != 1 && ${synced_cnt} == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n",
                    "rendered": {
                      "text": "\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into libbpf as:\"\n\t\t\tgrep -F \"${signature}\" ${TMP_DIR}/libbpf_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((${manual_mode} != 1 && ${synced_cnt} == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n",
                      "markdown": "`\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into libbpf as:\"\n\t\t\tgrep -F \"${signature}\" ${TMP_DIR}/libbpf_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((${manual_mode} != 1 && ${synced_cnt} == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 3,
                  "endLine": 123,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into libbpf as:\"\n\t\t\tgrep -F \"${signature}\" ${TMP_DIR}/libbpf_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((${manual_mode} != 1 && ${synced_cnt} == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n",
                    "rendered": {
                      "text": "\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into libbpf as:\"\n\t\t\tgrep -F \"${signature}\" ${TMP_DIR}/libbpf_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((${manual_mode} != 1 && ${synced_cnt} == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n",
                      "markdown": "`\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into libbpf as:\"\n\t\t\tgrep -F \"${signature}\" ${TMP_DIR}/libbpf_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((${manual_mode} != 1 && ${synced_cnt} == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 2,
                  "endLine": 122,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t# commit with the same subject is already in libbpf, but it's\n\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into libbpf as:\"\n\t\t\tgrep -F \"${signature}\" ${TMP_DIR}/libbpf_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((${manual_mode} != 1 && ${synced_cnt} == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n",
                    "rendered": {
                      "text": "\t\t\t# commit with the same subject is already in libbpf, but it's\n\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into libbpf as:\"\n\t\t\tgrep -F \"${signature}\" ${TMP_DIR}/libbpf_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((${manual_mode} != 1 && ${synced_cnt} == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n",
                      "markdown": "`\t\t\t# commit with the same subject is already in libbpf, but it's\n\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into libbpf as:\"\n\t\t\tgrep -F \"${signature}\" ${TMP_DIR}/libbpf_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((${manual_mode} != 1 && ${synced_cnt} == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "endColumn": 5,
                  "snippet": {
                    "text": "{\n\tlocal ref=$1\n\tshift\n\tgit show --pretty='(\"%s\")|%aI|%b' --shortstat $ref -- \"${@-.}\" | tr '\\n' '|'\n}\n\n# Cherry-pick commits touching libbpf-related files\n",
                    "rendered": {
                      "text": "{\n\tlocal ref=$1\n\tshift\n\tgit show --pretty='(\"%s\")|%aI|%b' --shortstat $ref -- \"${@-.}\" | tr '\\n' '|'\n}\n\n# Cherry-pick commits touching libbpf-related files\n",
                      "markdown": "`{\n\tlocal ref=$1\n\tshift\n\tgit show --pretty='(\"%s\")|%aI|%b' --shortstat $ref -- \"${@-.}\" | tr '\\n' '|'\n}\n\n# Cherry-pick commits touching libbpf-related files\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# $1 - commit ref\ncommit_desc()\n{\n\tgit log -n1 --pretty='%h (\"%s\")' $1\n}\n\n# Create commit single-line signature, which consists of:\n",
                    "rendered": {
                      "text": "# $1 - commit ref\ncommit_desc()\n{\n\tgit log -n1 --pretty='%h (\"%s\")' $1\n}\n\n# Create commit single-line signature, which consists of:\n",
                      "markdown": "`# $1 - commit ref\ncommit_desc()\n{\n\tgit log -n1 --pretty='%h (\"%s\")' $1\n}\n\n# Create commit single-line signature, which consists of:\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 25,
                  "endLine": 64,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\nLIBBPF_TREE_FILTER=\"mkdir -p __libbpf/include/uapi/linux __libbpf/include/tools && \"$'\\\\\\n'\nfor p in \"${!PATH_MAP[@]}\"; do\n\tLIBBPF_TREE_FILTER+=\"git mv -kf ${p} __libbpf/${PATH_MAP[${p}]} && \"$'\\\\\\n'\ndone\nLIBBPF_TREE_FILTER+=\"git rm --ignore-unmatch -f __libbpf/src/{Makefile,Build,test_libbpf.c,.gitignore} >/dev/null\"\n\n",
                    "rendered": {
                      "text": "\nLIBBPF_TREE_FILTER=\"mkdir -p __libbpf/include/uapi/linux __libbpf/include/tools && \"$'\\\\\\n'\nfor p in \"${!PATH_MAP[@]}\"; do\n\tLIBBPF_TREE_FILTER+=\"git mv -kf ${p} __libbpf/${PATH_MAP[${p}]} && \"$'\\\\\\n'\ndone\nLIBBPF_TREE_FILTER+=\"git rm --ignore-unmatch -f __libbpf/src/{Makefile,Build,test_libbpf.c,.gitignore} >/dev/null\"\n\n",
                      "markdown": "`\nLIBBPF_TREE_FILTER=\"mkdir -p __libbpf/include/uapi/linux __libbpf/include/tools && \"$'\\\\\\n'\nfor p in \"${!PATH_MAP[@]}\"; do\n\tLIBBPF_TREE_FILTER+=\"git mv -kf ${p} __libbpf/${PATH_MAP[${p}]} && \"$'\\\\\\n'\ndone\nLIBBPF_TREE_FILTER+=\"git rm --ignore-unmatch -f __libbpf/src/{Makefile,Build,test_libbpf.c,.gitignore} >/dev/null\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 13852,
                  "startColumn": 35,
                  "endLine": 13852,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n\tbtf = bpf_object__btf(s->obj);\n\tif (!btf) {\n\t\tpr_warn(\"subskeletons require BTF at runtime (object %s)\\n\",\n\t\t\tbpf_object__name(s->obj));\n\t\treturn libbpf_err(-errno);\n\t}\n",
                    "rendered": {
                      "text": "\n\tbtf = bpf_object__btf(s->obj);\n\tif (!btf) {\n\t\tpr_warn(\"subskeletons require BTF at runtime (object %s)\\n\",\n\t\t\tbpf_object__name(s->obj));\n\t\treturn libbpf_err(-errno);\n\t}\n",
                      "markdown": "`\n\tbtf = bpf_object__btf(s->obj);\n\tif (!btf) {\n\t\tpr_warn(\"subskeletons require BTF at runtime (object %s)\\n\",\n\t\t\tbpf_object__name(s->obj));\n\t\treturn libbpf_err(-errno);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 12776,
                  "startColumn": 63,
                  "endLine": 12776,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n\tif (relative_fd && relative_id) {\n\t\tpr_warn(\"prog '%s': relative_fd and relative_id cannot be set at the same time\\n\",\n\t\t\tprog->name);\n\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n\tif (relative_fd && relative_id) {\n\t\tpr_warn(\"prog '%s': relative_fd and relative_id cannot be set at the same time\\n\",\n\t\t\tprog->name);\n\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n",
                      "markdown": "`\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n\tif (relative_fd && relative_id) {\n\t\tpr_warn(\"prog '%s': relative_fd and relative_id cannot be set at the same time\\n\",\n\t\t\tprog->name);\n\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 12741,
                  "startColumn": 63,
                  "endLine": 12741,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n\tif (relative_fd && relative_id) {\n\t\tpr_warn(\"prog '%s': relative_fd and relative_id cannot be set at the same time\\n\",\n\t\t\tprog->name);\n\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n\tif (relative_fd && relative_id) {\n\t\tpr_warn(\"prog '%s': relative_fd and relative_id cannot be set at the same time\\n\",\n\t\t\tprog->name);\n\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n",
                      "markdown": "`\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n\tif (relative_fd && relative_id) {\n\t\tpr_warn(\"prog '%s': relative_fd and relative_id cannot be set at the same time\\n\",\n\t\t\tprog->name);\n\t\treturn libbpf_err_ptr(-EINVAL);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 11862,
                  "startColumn": 40,
                  "endLine": 11862,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t\tarchive_path, ret);\n\t\tgoto out;\n\t}\n\tpr_debug(\"zip: found entry for %s in %s at 0x%lx\\n\", file_name, archive_path,\n\t\t (unsigned long)entry.data_offset);\n\n\tif (entry.compression) {\n",
                    "rendered": {
                      "text": "\t\t\tarchive_path, ret);\n\t\tgoto out;\n\t}\n\tpr_debug(\"zip: found entry for %s in %s at 0x%lx\\n\", file_name, archive_path,\n\t\t (unsigned long)entry.data_offset);\n\n\tif (entry.compression) {\n",
                      "markdown": "`\t\t\tarchive_path, ret);\n\t\tgoto out;\n\t}\n\tpr_debug(\"zip: found entry for %s in %s at 0x%lx\\n\", file_name, archive_path,\n\t\t (unsigned long)entry.data_offset);\n\n\tif (entry.compression) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 10725,
                  "startColumn": 29,
                  "endLine": 10725,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\treturn libbpf_err(err);\n\t}\n\n\tpr_debug(\"link fd=%d: pinned at %s\\n\", link->fd, link->pin_path);\n\treturn 0;\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn libbpf_err(err);\n\t}\n\n\tpr_debug(\"link fd=%d: pinned at %s\\n\", link->fd, link->pin_path);\n\treturn 0;\n}\n\n",
                      "markdown": "`\t\treturn libbpf_err(err);\n\t}\n\n\tpr_debug(\"link fd=%d: pinned at %s\\n\", link->fd, link->pin_path);\n\treturn 0;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 10676,
                  "startColumn": 30,
                  "endLine": 10676,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tfd = bpf_obj_get(path);\n\tif (fd < 0) {\n\t\tfd = -errno;\n\t\tpr_warn(\"failed to open link at %s: %d\\n\", path, fd);\n\t\treturn libbpf_err_ptr(fd);\n\t}\n\n",
                    "rendered": {
                      "text": "\tfd = bpf_obj_get(path);\n\tif (fd < 0) {\n\t\tfd = -errno;\n\t\tpr_warn(\"failed to open link at %s: %d\\n\", path, fd);\n\t\treturn libbpf_err_ptr(fd);\n\t}\n\n",
                      "markdown": "`\tfd = bpf_obj_get(path);\n\tif (fd < 0) {\n\t\tfd = -errno;\n\t\tpr_warn(\"failed to open link at %s: %d\\n\", path, fd);\n\t\treturn libbpf_err_ptr(fd);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 9840,
                  "startColumn": 49,
                  "endLine": 9840,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n\t\tprog = find_prog_by_sec_insn(obj, shdr_idx, insn_idx);\n\t\tif (!prog) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find prog at shdr_idx %u to relocate func ptr %s\\n\",\n\t\t\t\tmap->name, shdr_idx, name);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\tprog = find_prog_by_sec_insn(obj, shdr_idx, insn_idx);\n\t\tif (!prog) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find prog at shdr_idx %u to relocate func ptr %s\\n\",\n\t\t\t\tmap->name, shdr_idx, name);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\n\t\tprog = find_prog_by_sec_insn(obj, shdr_idx, insn_idx);\n\t\tif (!prog) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find prog at shdr_idx %u to relocate func ptr %s\\n\",\n\t\t\t\tmap->name, shdr_idx, name);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 9825,
                  "startColumn": 51,
                  "endLine": 9825,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t\ttype = btf__type_by_id(btf, st_ops->type_id);\n\t\tmember = find_member_by_offset(type, moff * 8);\n\t\tif (!member) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find member at moff %u\\n\",\n\t\t\t\tmap->name, moff);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\ttype = btf__type_by_id(btf, st_ops->type_id);\n\t\tmember = find_member_by_offset(type, moff * 8);\n\t\tif (!member) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find member at moff %u\\n\",\n\t\t\t\tmap->name, moff);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\ttype = btf__type_by_id(btf, st_ops->type_id);\n\t\tmember = find_member_by_offset(type, moff * 8);\n\t\tif (!member) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find member at moff %u\\n\",\n\t\t\t\tmap->name, moff);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 9795,
                  "startColumn": 45,
                  "endLine": 9795,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t\tname = elf_sym_str(obj, sym->st_name) ?: \"<?>\";\n\t\tmap = find_struct_ops_map_by_offset(obj, shdr->sh_info, rel->r_offset);\n\t\tif (!map) {\n\t\t\tpr_warn(\"struct_ops reloc: cannot find map at rel->r_offset %zu\\n\",\n\t\t\t\t(size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tname = elf_sym_str(obj, sym->st_name) ?: \"<?>\";\n\t\tmap = find_struct_ops_map_by_offset(obj, shdr->sh_info, rel->r_offset);\n\t\tif (!map) {\n\t\t\tpr_warn(\"struct_ops reloc: cannot find map at rel->r_offset %zu\\n\",\n\t\t\t\t(size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\tname = elf_sym_str(obj, sym->st_name) ?: \"<?>\";\n\t\tmap = find_struct_ops_map_by_offset(obj, shdr->sh_info, rel->r_offset);\n\t\tif (!map) {\n\t\t\tpr_warn(\"struct_ops reloc: cannot find map at rel->r_offset %zu\\n\",\n\t\t\t\t(size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 8724,
                  "startColumn": 36,
                  "endLine": 8724,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\t\t\tbpf_map__name(map), map->pin_path, path);\n\t\t\treturn libbpf_err(-EINVAL);\n\t\t} else if (map->pinned) {\n\t\t\tpr_debug(\"map '%s' already pinned at '%s'; not re-pinning\\n\",\n\t\t\t\t bpf_map__name(map), map->pin_path);\n\t\t\treturn 0;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tbpf_map__name(map), map->pin_path, path);\n\t\t\treturn libbpf_err(-EINVAL);\n\t\t} else if (map->pinned) {\n\t\t\tpr_debug(\"map '%s' already pinned at '%s'; not re-pinning\\n\",\n\t\t\t\t bpf_map__name(map), map->pin_path);\n\t\t\treturn 0;\n\t\t}\n",
                      "markdown": "`\t\t\t\tbpf_map__name(map), map->pin_path, path);\n\t\t\treturn libbpf_err(-EINVAL);\n\t\t} else if (map->pinned) {\n\t\t\tpr_debug(\"map '%s' already pinned at '%s'; not re-pinning\\n\",\n\t\t\t\t bpf_map__name(map), map->pin_path);\n\t\t\treturn 0;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 8678,
                  "startColumn": 28,
                  "endLine": 8678,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\treturn libbpf_err(err);\n\t}\n\n\tpr_debug(\"prog '%s': pinned at '%s'\\n\", prog->name, path);\n\treturn 0;\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn libbpf_err(err);\n\t}\n\n\tpr_debug(\"prog '%s': pinned at '%s'\\n\", prog->name, path);\n\treturn 0;\n}\n\n",
                      "markdown": "`\t\treturn libbpf_err(err);\n\t}\n\n\tpr_debug(\"prog '%s': pinned at '%s'\\n\", prog->name, path);\n\treturn 0;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 8674,
                  "startColumn": 35,
                  "endLine": 8674,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tif (bpf_obj_pin(prog->fd, path)) {\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"prog '%s': failed to pin at '%s': %s\\n\", prog->name, path, cp);\n\t\treturn libbpf_err(err);\n\t}\n\n",
                    "rendered": {
                      "text": "\tif (bpf_obj_pin(prog->fd, path)) {\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"prog '%s': failed to pin at '%s': %s\\n\", prog->name, path, cp);\n\t\treturn libbpf_err(err);\n\t}\n\n",
                      "markdown": "`\tif (bpf_obj_pin(prog->fd, path)) {\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"prog '%s': failed to pin at '%s': %s\\n\", prog->name, path, cp);\n\t\treturn libbpf_err(err);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 7297,
                  "startColumn": 26,
                  "endLine": 7297,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tidx = shdr->sh_info;\n\n\t\tif (shdr->sh_type != SHT_REL || idx < 0 || idx >= obj->efile.sec_cnt) {\n\t\t\tpr_warn(\"internal error at %d\\n\", __LINE__);\n\t\t\treturn -LIBBPF_ERRNO__INTERNAL;\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\tidx = shdr->sh_info;\n\n\t\tif (shdr->sh_type != SHT_REL || idx < 0 || idx >= obj->efile.sec_cnt) {\n\t\t\tpr_warn(\"internal error at %d\\n\", __LINE__);\n\t\t\treturn -LIBBPF_ERRNO__INTERNAL;\n\t\t}\n\n",
                      "markdown": "`\t\tidx = shdr->sh_info;\n\n\t\tif (shdr->sh_type != SHT_REL || idx < 0 || idx >= obj->efile.sec_cnt) {\n\t\t\tpr_warn(\"internal error at %d\\n\", __LINE__);\n\t\t\treturn -LIBBPF_ERRNO__INTERNAL;\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 7196,
                  "startColumn": 48,
                  "endLine": 7196,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t\t\tbreak;\n\t\t}\n\t\tif (j == obj->nr_maps) {\n\t\t\tpr_warn(\".maps relo #%d: cannot find map '%s' at rel->r_offset %zu\\n\",\n\t\t\t\ti, name, (size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tbreak;\n\t\t}\n\t\tif (j == obj->nr_maps) {\n\t\t\tpr_warn(\".maps relo #%d: cannot find map '%s' at rel->r_offset %zu\\n\",\n\t\t\t\ti, name, (size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\t\t\tbreak;\n\t\t}\n\t\tif (j == obj->nr_maps) {\n\t\t\tpr_warn(\".maps relo #%d: cannot find map '%s' at rel->r_offset %zu\\n\",\n\t\t\t\ti, name, (size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 6475,
                  "startColumn": 78,
                  "endLine": 6475,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\t\t */\n\t\tinsn->imm = subprog->sub_insn_off - (prog->sub_insn_off + insn_idx) - 1;\n\n\t\tpr_debug(\"prog '%s': insn #%zu relocated, imm %d points to subprog '%s' (now at %zu offset)\\n\",\n\t\t\t prog->name, insn_idx, insn->imm, subprog->name, subprog->sub_insn_off);\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t */\n\t\tinsn->imm = subprog->sub_insn_off - (prog->sub_insn_off + insn_idx) - 1;\n\n\t\tpr_debug(\"prog '%s': insn #%zu relocated, imm %d points to subprog '%s' (now at %zu offset)\\n\",\n\t\t\t prog->name, insn_idx, insn->imm, subprog->name, subprog->sub_insn_off);\n\t}\n\n",
                      "markdown": "`\t\t */\n\t\tinsn->imm = subprog->sub_insn_off - (prog->sub_insn_off + insn_idx) - 1;\n\n\t\tpr_debug(\"prog '%s': insn #%zu relocated, imm %d points to subprog '%s' (now at %zu offset)\\n\",\n\t\t\t prog->name, insn_idx, insn->imm, subprog->name, subprog->sub_insn_off);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5502,
                  "startColumn": 41,
                  "endLine": 5502,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\t\t\t\tretried = true;\n\t\t\t\t\tgoto retry;\n\t\t\t\t}\n\t\t\t\tpr_warn(\"map '%s': failed to auto-pin at '%s': %d\\n\",\n\t\t\t\t\tmap->name, map->pin_path, err);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\tretried = true;\n\t\t\t\t\tgoto retry;\n\t\t\t\t}\n\t\t\t\tpr_warn(\"map '%s': failed to auto-pin at '%s': %d\\n\",\n\t\t\t\t\tmap->name, map->pin_path, err);\n\t\t\t\tgoto err_out;\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t\tretried = true;\n\t\t\t\t\tgoto retry;\n\t\t\t\t}\n\t\t\t\tpr_warn(\"map '%s': failed to auto-pin at '%s': %d\\n\",\n\t\t\t\t\tmap->name, map->pin_path, err);\n\t\t\t\tgoto err_out;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5114,
                  "startColumn": 28,
                  "endLine": 5114,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\treturn err;\n\n\tmap->pinned = true;\n\tpr_debug(\"reused pinned map at '%s'\\n\", map->pin_path);\n\n\treturn 0;\n}\n",
                    "rendered": {
                      "text": "\t\treturn err;\n\n\tmap->pinned = true;\n\tpr_debug(\"reused pinned map at '%s'\\n\", map->pin_path);\n\n\treturn 0;\n}\n",
                      "markdown": "`\t\treturn err;\n\n\tmap->pinned = true;\n\tpr_debug(\"reused pinned map at '%s'\\n\", map->pin_path);\n\n\treturn 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5102,
                  "startColumn": 36,
                  "endLine": 5102,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t}\n\n\tif (!map_is_reuse_compat(map, pin_fd)) {\n\t\tpr_warn(\"couldn't reuse pinned map at '%s': parameter mismatch\\n\",\n\t\t\tmap->pin_path);\n\t\tclose(pin_fd);\n\t\treturn -EINVAL;\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (!map_is_reuse_compat(map, pin_fd)) {\n\t\tpr_warn(\"couldn't reuse pinned map at '%s': parameter mismatch\\n\",\n\t\t\tmap->pin_path);\n\t\tclose(pin_fd);\n\t\treturn -EINVAL;\n",
                      "markdown": "`\t}\n\n\tif (!map_is_reuse_compat(map, pin_fd)) {\n\t\tpr_warn(\"couldn't reuse pinned map at '%s': parameter mismatch\\n\",\n\t\t\tmap->pin_path);\n\t\tclose(pin_fd);\n\t\treturn -EINVAL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5090,
                  "startColumn": 41,
                  "endLine": 5090,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\tif (pin_fd < 0) {\n\t\terr = -errno;\n\t\tif (err == -ENOENT) {\n\t\t\tpr_debug(\"found no pinned map to reuse at '%s'\\n\",\n\t\t\t\t map->pin_path);\n\t\t\treturn 0;\n\t\t}\n",
                    "rendered": {
                      "text": "\tif (pin_fd < 0) {\n\t\terr = -errno;\n\t\tif (err == -ENOENT) {\n\t\t\tpr_debug(\"found no pinned map to reuse at '%s'\\n\",\n\t\t\t\t map->pin_path);\n\t\t\treturn 0;\n\t\t}\n",
                      "markdown": "`\tif (pin_fd < 0) {\n\t\terr = -errno;\n\t\tif (err == -ENOENT) {\n\t\t\tpr_debug(\"found no pinned map to reuse at '%s'\\n\",\n\t\t\t\t map->pin_path);\n\t\t\treturn 0;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4980,
                  "startColumn": 32,
                  "endLine": 4980,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tclose(bpffs_fd);\n\tif (token_fd < 0) {\n\t\tif (!mandatory && token_fd == -ENOENT) {\n\t\t\tpr_debug(\"object '%s': BPF FS at '%s' doesn't have BPF token delegation set up, skipping...\\n\",\n\t\t\t\t obj->name, bpffs_path);\n\t\t\treturn 0;\n\t\t}\n",
                    "rendered": {
                      "text": "\tclose(bpffs_fd);\n\tif (token_fd < 0) {\n\t\tif (!mandatory && token_fd == -ENOENT) {\n\t\t\tpr_debug(\"object '%s': BPF FS at '%s' doesn't have BPF token delegation set up, skipping...\\n\",\n\t\t\t\t obj->name, bpffs_path);\n\t\t\treturn 0;\n\t\t}\n",
                      "markdown": "`\tclose(bpffs_fd);\n\tif (token_fd < 0) {\n\t\tif (!mandatory && token_fd == -ENOENT) {\n\t\t\tpr_debug(\"object '%s': BPF FS at '%s' doesn't have BPF token delegation set up, skipping...\\n\",\n\t\t\t\t obj->name, bpffs_path);\n\t\t\treturn 0;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4970,
                  "startColumn": 60,
                  "endLine": 4970,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\tbpffs_fd = open(bpffs_path, O_DIRECTORY, O_RDWR);\n\tif (bpffs_fd < 0) {\n\t\terr = -errno;\n\t\t__pr(level, \"object '%s': failed (%d) to open BPF FS mount at '%s'%s\\n\",\n\t\t     obj->name, err, bpffs_path,\n\t\t     mandatory ? \"\" : \", skipping optional step...\");\n\t\treturn mandatory ? err : 0;\n",
                    "rendered": {
                      "text": "\tbpffs_fd = open(bpffs_path, O_DIRECTORY, O_RDWR);\n\tif (bpffs_fd < 0) {\n\t\terr = -errno;\n\t\t__pr(level, \"object '%s': failed (%d) to open BPF FS mount at '%s'%s\\n\",\n\t\t     obj->name, err, bpffs_path,\n\t\t     mandatory ? \"\" : \", skipping optional step...\");\n\t\treturn mandatory ? err : 0;\n",
                      "markdown": "`\tbpffs_fd = open(bpffs_path, O_DIRECTORY, O_RDWR);\n\tif (bpffs_fd < 0) {\n\t\terr = -errno;\n\t\t__pr(level, \"object '%s': failed (%d) to open BPF FS mount at '%s'%s\\n\",\n\t\t     obj->name, err, bpffs_path,\n\t\t     mandatory ? \"\" : \", skipping optional step...\");\n\t\treturn mandatory ? err : 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4556,
                  "startColumn": 57,
                  "endLine": 4556,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t\t * local_func: sym->st_value = 0, insn->imm = offset in the section.\n\t\t */\n\t\tif ((sym->st_value % BPF_INSN_SZ) || (insn->imm % BPF_INSN_SZ)) {\n\t\t\tpr_warn(\"prog '%s': bad subprog addr relo against '%s' at offset %zu+%d\\n\",\n\t\t\t\tprog->name, sym_name, (size_t)sym->st_value, insn->imm);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t * local_func: sym->st_value = 0, insn->imm = offset in the section.\n\t\t */\n\t\tif ((sym->st_value % BPF_INSN_SZ) || (insn->imm % BPF_INSN_SZ)) {\n\t\t\tpr_warn(\"prog '%s': bad subprog addr relo against '%s' at offset %zu+%d\\n\",\n\t\t\t\tprog->name, sym_name, (size_t)sym->st_value, insn->imm);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n",
                      "markdown": "`\t\t * local_func: sym->st_value = 0, insn->imm = offset in the section.\n\t\t */\n\t\tif ((sym->st_value % BPF_INSN_SZ) || (insn->imm % BPF_INSN_SZ)) {\n\t\t\tpr_warn(\"prog '%s': bad subprog addr relo against '%s' at offset %zu+%d\\n\",\n\t\t\t\tprog->name, sym_name, (size_t)sym->st_value, insn->imm);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4534,
                  "startColumn": 49,
                  "endLine": 4534,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n\t\tif (sym->st_value % BPF_INSN_SZ) {\n\t\t\tpr_warn(\"prog '%s': bad call relo against '%s' at offset %zu\\n\",\n\t\t\t\tprog->name, sym_name, (size_t)sym->st_value);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n\t\tif (sym->st_value % BPF_INSN_SZ) {\n\t\t\tpr_warn(\"prog '%s': bad call relo against '%s' at offset %zu\\n\",\n\t\t\t\tprog->name, sym_name, (size_t)sym->st_value);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n",
                      "markdown": "`\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n\t\tif (sym->st_value % BPF_INSN_SZ) {\n\t\t\tpr_warn(\"prog '%s': bad call relo against '%s' at offset %zu\\n\",\n\t\t\t\tprog->name, sym_name, (size_t)sym->st_value);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 3637,
                  "startColumn": 49,
                  "endLine": 3637,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n\tname = elf_strptr(obj->efile.elf, obj->efile.shstrndx, off);\n\tif (!name) {\n\t\tpr_warn(\"elf: failed to get section name string at offset %zu from %s: %s\\n\",\n\t\t\toff, obj->path, elf_errmsg(-1));\n\t\treturn NULL;\n\t}\n",
                    "rendered": {
                      "text": "\n\tname = elf_strptr(obj->efile.elf, obj->efile.shstrndx, off);\n\tif (!name) {\n\t\tpr_warn(\"elf: failed to get section name string at offset %zu from %s: %s\\n\",\n\t\t\toff, obj->path, elf_errmsg(-1));\n\t\treturn NULL;\n\t}\n",
                      "markdown": "`\n\tname = elf_strptr(obj->efile.elf, obj->efile.shstrndx, off);\n\tif (!name) {\n\t\tpr_warn(\"elf: failed to get section name string at offset %zu from %s: %s\\n\",\n\t\t\toff, obj->path, elf_errmsg(-1));\n\t\treturn NULL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 3623,
                  "startColumn": 49,
                  "endLine": 3623,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n\tname = elf_strptr(obj->efile.elf, obj->efile.strtabidx, off);\n\tif (!name) {\n\t\tpr_warn(\"elf: failed to get section name string at offset %zu from %s: %s\\n\",\n\t\t\toff, obj->path, elf_errmsg(-1));\n\t\treturn NULL;\n\t}\n",
                    "rendered": {
                      "text": "\n\tname = elf_strptr(obj->efile.elf, obj->efile.strtabidx, off);\n\tif (!name) {\n\t\tpr_warn(\"elf: failed to get section name string at offset %zu from %s: %s\\n\",\n\t\t\toff, obj->path, elf_errmsg(-1));\n\t\treturn NULL;\n\t}\n",
                      "markdown": "`\n\tname = elf_strptr(obj->efile.elf, obj->efile.strtabidx, off);\n\tif (!name) {\n\t\tpr_warn(\"elf: failed to get section name string at offset %zu from %s: %s\\n\",\n\t\t\toff, obj->path, elf_errmsg(-1));\n\t\treturn NULL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 2912,
                  "startColumn": 20,
                  "endLine": 2912,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\tmap->sec_idx = sec_idx;\n\tmap->sec_offset = vi->offset;\n\tmap->btf_var_idx = var_idx;\n\tpr_debug(\"map '%s': at sec_idx %d, offset %zu.\\n\",\n\t\t map_name, map->sec_idx, map->sec_offset);\n\n\terr = parse_btf_map_def(map->name, obj->btf, def, strict, &map_def, &inner_def);\n",
                    "rendered": {
                      "text": "\tmap->sec_idx = sec_idx;\n\tmap->sec_offset = vi->offset;\n\tmap->btf_var_idx = var_idx;\n\tpr_debug(\"map '%s': at sec_idx %d, offset %zu.\\n\",\n\t\t map_name, map->sec_idx, map->sec_offset);\n\n\terr = parse_btf_map_def(map->name, obj->btf, def, strict, &map_def, &inner_def);\n",
                      "markdown": "`\tmap->sec_idx = sec_idx;\n\tmap->sec_offset = vi->offset;\n\tmap->btf_var_idx = var_idx;\n\tpr_debug(\"map '%s': at sec_idx %d, offset %zu.\\n\",\n\t\t map_name, map->sec_idx, map->sec_offset);\n\n\terr = parse_btf_map_def(map->name, obj->btf, def, strict, &map_def, &inner_def);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 1954,
                  "startColumn": 34,
                  "endLine": 1954,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tif (map_is_mmapable(obj, map))\n\t\tdef->map_flags |= BPF_F_MMAPABLE;\n\n\tpr_debug(\"map '%s' (global data): at sec_idx %d, offset %zu, flags %x.\\n\",\n\t\t map->name, map->sec_idx, map->sec_offset, def->map_flags);\n\n\tmmap_sz = bpf_map_mmap_sz(map);\n",
                    "rendered": {
                      "text": "\tif (map_is_mmapable(obj, map))\n\t\tdef->map_flags |= BPF_F_MMAPABLE;\n\n\tpr_debug(\"map '%s' (global data): at sec_idx %d, offset %zu, flags %x.\\n\",\n\t\t map->name, map->sec_idx, map->sec_offset, def->map_flags);\n\n\tmmap_sz = bpf_map_mmap_sz(map);\n",
                      "markdown": "`\tif (map_is_mmapable(obj, map))\n\t\tdef->map_flags |= BPF_F_MMAPABLE;\n\n\tpr_debug(\"map '%s' (global data): at sec_idx %d, offset %zu, flags %x.\\n\",\n\t\t map->name, map->sec_idx, map->sec_offset, def->map_flags);\n\n\tmmap_sz = bpf_map_mmap_sz(map);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 1445,
                  "startColumn": 59,
                  "endLine": 1445,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t\t       type->size);\n\t\tst_ops->type_id = type_id;\n\n\t\tpr_debug(\"struct_ops init: struct %s(type_id=%u) %s found at offset %u\\n\",\n\t\t\t tname, type_id, var_name, vsi->offset);\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t       type->size);\n\t\tst_ops->type_id = type_id;\n\n\t\tpr_debug(\"struct_ops init: struct %s(type_id=%u) %s found at offset %u\\n\",\n\t\t\t tname, type_id, var_name, vsi->offset);\n\t}\n\n",
                      "markdown": "`\t\t       type->size);\n\t\tst_ops->type_id = type_id;\n\n\t\tpr_debug(\"struct_ops init: struct %s(type_id=%u) %s found at offset %u\\n\",\n\t\t\t tname, type_id, var_name, vsi->offset);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 903,
                  "startColumn": 40,
                  "endLine": 903,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t\treturn -ENOTSUP;\n\t\t}\n\n\t\tpr_debug(\"sec '%s': found program '%s' at insn offset %zu (%zu bytes), code size %zu insns (%zu bytes)\\n\",\n\t\t\t sec_name, name, sec_off / BPF_INSN_SZ, sec_off, prog_sz / BPF_INSN_SZ, prog_sz);\n\n\t\tprogs = libbpf_reallocarray(progs, nr_progs + 1, sizeof(*progs));\n",
                    "rendered": {
                      "text": "\t\t\treturn -ENOTSUP;\n\t\t}\n\n\t\tpr_debug(\"sec '%s': found program '%s' at insn offset %zu (%zu bytes), code size %zu insns (%zu bytes)\\n\",\n\t\t\t sec_name, name, sec_off / BPF_INSN_SZ, sec_off, prog_sz / BPF_INSN_SZ, prog_sz);\n\n\t\tprogs = libbpf_reallocarray(progs, nr_progs + 1, sizeof(*progs));\n",
                      "markdown": "`\t\t\treturn -ENOTSUP;\n\t\t}\n\n\t\tpr_debug(\"sec '%s': found program '%s' at insn offset %zu (%zu bytes), code size %zu insns (%zu bytes)\\n\",\n\t\t\t sec_name, name, sec_off / BPF_INSN_SZ, sec_off, prog_sz / BPF_INSN_SZ, prog_sz);\n\n\t\tprogs = libbpf_reallocarray(progs, nr_progs + 1, sizeof(*progs));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 29,
                  "endLine": 893,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif (sec_off + prog_sz > sec_sz) {\n\t\t\tpr_warn(\"sec '%s': program at offset %zu crosses section boundary\\n\",\n\t\t\t\tsec_name, sec_off);\n\t\t\treturn -LIBBPF_ERRNO__FORMAT;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif (sec_off + prog_sz > sec_sz) {\n\t\t\tpr_warn(\"sec '%s': program at offset %zu crosses section boundary\\n\",\n\t\t\t\tsec_name, sec_off);\n\t\t\treturn -LIBBPF_ERRNO__FORMAT;\n\t\t}\n",
                      "markdown": "`\t\t}\n\n\t\tif (sec_off + prog_sz > sec_sz) {\n\t\t\tpr_warn(\"sec '%s': program at offset %zu crosses section boundary\\n\",\n\t\t\t\tsec_name, sec_off);\n\t\t\treturn -LIBBPF_ERRNO__FORMAT;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 13800,
                  "startColumn": 21,
                  "endLine": 13800,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n\t\t*prog = bpf_object__find_program_by_name(obj, name);\n\t\tif (!*prog) {\n\t\t\tpr_warn(\"failed to find skeleton program '%s'\\n\", name);\n\t\t\treturn -ESRCH;\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\n\t\t*prog = bpf_object__find_program_by_name(obj, name);\n\t\tif (!*prog) {\n\t\t\tpr_warn(\"failed to find skeleton program '%s'\\n\", name);\n\t\t\treturn -ESRCH;\n\t\t}\n\t}\n",
                      "markdown": "`\n\t\t*prog = bpf_object__find_program_by_name(obj, name);\n\t\tif (!*prog) {\n\t\t\tpr_warn(\"failed to find skeleton program '%s'\\n\", name);\n\t\t\treturn -ESRCH;\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 13776,
                  "startColumn": 21,
                  "endLine": 13776,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n\t\t*map = bpf_object__find_map_by_name(obj, name);\n\t\tif (!*map) {\n\t\t\tpr_warn(\"failed to find skeleton map '%s'\\n\", name);\n\t\t\treturn -ESRCH;\n\t\t}\n\n",
                    "rendered": {
                      "text": "\n\t\t*map = bpf_object__find_map_by_name(obj, name);\n\t\tif (!*map) {\n\t\t\tpr_warn(\"failed to find skeleton map '%s'\\n\", name);\n\t\t\treturn -ESRCH;\n\t\t}\n\n",
                      "markdown": "`\n\t\t*map = bpf_object__find_map_by_name(obj, name);\n\t\tif (!*map) {\n\t\t\tpr_warn(\"failed to find skeleton map '%s'\\n\", name);\n\t\t\treturn -ESRCH;\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 11858,
                  "startColumn": 25,
                  "endLine": 11858,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n\tret = zip_archive_find_entry(archive, file_name, &entry);\n\tif (ret) {\n\t\tpr_warn(\"zip: could not find archive member %s in %s: %ld\\n\", file_name,\n\t\t\tarchive_path, ret);\n\t\tgoto out;\n\t}\n",
                    "rendered": {
                      "text": "\n\tret = zip_archive_find_entry(archive, file_name, &entry);\n\tif (ret) {\n\t\tpr_warn(\"zip: could not find archive member %s in %s: %ld\\n\", file_name,\n\t\t\tarchive_path, ret);\n\t\tgoto out;\n\t}\n",
                      "markdown": "`\n\tret = zip_archive_find_entry(archive, file_name, &entry);\n\tif (ret) {\n\t\tpr_warn(\"zip: could not find archive member %s in %s: %ld\\n\", file_name,\n\t\t\tarchive_path, ret);\n\t\tgoto out;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 10067,
                  "startColumn": 31,
                  "endLine": 10067,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t\t\t\t btf_type_id);\n\t}\n\tif (err) {\n\t\tpr_warn(\"prog '%s': failed to find kernel BTF type ID of '%s': %d\\n\",\n\t\t\tprog->name, attach_name, err);\n\t\treturn err;\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\t btf_type_id);\n\t}\n\tif (err) {\n\t\tpr_warn(\"prog '%s': failed to find kernel BTF type ID of '%s': %d\\n\",\n\t\t\tprog->name, attach_name, err);\n\t\treturn err;\n\t}\n",
                      "markdown": "`\t\t\t\t\t btf_type_id);\n\t}\n\tif (err) {\n\t\tpr_warn(\"prog '%s': failed to find kernel BTF type ID of '%s': %d\\n\",\n\t\t\tprog->name, attach_name, err);\n\t\treturn err;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 10047,
                  "startColumn": 32,
                  "endLine": 10047,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t}\n\t\terr = libbpf_find_prog_btf_id(attach_name, attach_prog_fd);\n\t\tif (err < 0) {\n\t\t\tpr_warn(\"prog '%s': failed to find BPF program (FD %d) BTF ID for '%s': %d\\n\",\n\t\t\t\t prog->name, attach_prog_fd, attach_name, err);\n\t\t\treturn err;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t\terr = libbpf_find_prog_btf_id(attach_name, attach_prog_fd);\n\t\tif (err < 0) {\n\t\t\tpr_warn(\"prog '%s': failed to find BPF program (FD %d) BTF ID for '%s': %d\\n\",\n\t\t\t\t prog->name, attach_prog_fd, attach_name, err);\n\t\t\treturn err;\n\t\t}\n",
                      "markdown": "`\t\t}\n\t\terr = libbpf_find_prog_btf_id(attach_name, attach_prog_fd);\n\t\tif (err < 0) {\n\t\t\tpr_warn(\"prog '%s': failed to find BPF program (FD %d) BTF ID for '%s': %d\\n\",\n\t\t\t\t prog->name, attach_prog_fd, attach_name, err);\n\t\t\treturn err;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 9840,
                  "startColumn": 39,
                  "endLine": 9840,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n\t\tprog = find_prog_by_sec_insn(obj, shdr_idx, insn_idx);\n\t\tif (!prog) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find prog at shdr_idx %u to relocate func ptr %s\\n\",\n\t\t\t\tmap->name, shdr_idx, name);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\tprog = find_prog_by_sec_insn(obj, shdr_idx, insn_idx);\n\t\tif (!prog) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find prog at shdr_idx %u to relocate func ptr %s\\n\",\n\t\t\t\tmap->name, shdr_idx, name);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\n\t\tprog = find_prog_by_sec_insn(obj, shdr_idx, insn_idx);\n\t\tif (!prog) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find prog at shdr_idx %u to relocate func ptr %s\\n\",\n\t\t\t\tmap->name, shdr_idx, name);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 9825,
                  "startColumn": 39,
                  "endLine": 9825,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\ttype = btf__type_by_id(btf, st_ops->type_id);\n\t\tmember = find_member_by_offset(type, moff * 8);\n\t\tif (!member) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find member at moff %u\\n\",\n\t\t\t\tmap->name, moff);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\ttype = btf__type_by_id(btf, st_ops->type_id);\n\t\tmember = find_member_by_offset(type, moff * 8);\n\t\tif (!member) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find member at moff %u\\n\",\n\t\t\t\tmap->name, moff);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\ttype = btf__type_by_id(btf, st_ops->type_id);\n\t\tmember = find_member_by_offset(type, moff * 8);\n\t\tif (!member) {\n\t\t\tpr_warn(\"struct_ops reloc %s: cannot find member at moff %u\\n\",\n\t\t\t\tmap->name, moff);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 9795,
                  "startColumn": 36,
                  "endLine": 9795,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\tname = elf_sym_str(obj, sym->st_name) ?: \"<?>\";\n\t\tmap = find_struct_ops_map_by_offset(obj, shdr->sh_info, rel->r_offset);\n\t\tif (!map) {\n\t\t\tpr_warn(\"struct_ops reloc: cannot find map at rel->r_offset %zu\\n\",\n\t\t\t\t(size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tname = elf_sym_str(obj, sym->st_name) ?: \"<?>\";\n\t\tmap = find_struct_ops_map_by_offset(obj, shdr->sh_info, rel->r_offset);\n\t\tif (!map) {\n\t\t\tpr_warn(\"struct_ops reloc: cannot find map at rel->r_offset %zu\\n\",\n\t\t\t\t(size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\tname = elf_sym_str(obj, sym->st_name) ?: \"<?>\";\n\t\tmap = find_struct_ops_map_by_offset(obj, shdr->sh_info, rel->r_offset);\n\t\tif (!map) {\n\t\t\tpr_warn(\"struct_ops reloc: cannot find map at rel->r_offset %zu\\n\",\n\t\t\t\t(size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 8764,
                  "endLine": 8764,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\treturn 0;\n\nout_err:\n\tcp = libbpf_strerror_r(-err, errmsg, sizeof(errmsg));\n\tpr_warn(\"failed to pin map: %s\\n\", cp);\n\treturn libbpf_err(err);\n}\n",
                    "rendered": {
                      "text": "\treturn 0;\n\nout_err:\n\tcp = libbpf_strerror_r(-err, errmsg, sizeof(errmsg));\n\tpr_warn(\"failed to pin map: %s\\n\", cp);\n\treturn libbpf_err(err);\n}\n",
                      "markdown": "`\treturn 0;\n\nout_err:\n\tcp = libbpf_strerror_r(-err, errmsg, sizeof(errmsg));\n\tpr_warn(\"failed to pin map: %s\\n\", cp);\n\treturn libbpf_err(err);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 8673,
                  "startColumn": 1,
                  "endLine": 8673,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\tif (bpf_obj_pin(prog->fd, path)) {\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"prog '%s': failed to pin at '%s': %s\\n\", prog->name, path, cp);\n\t\treturn libbpf_err(err);\n\t}\n",
                    "rendered": {
                      "text": "\n\tif (bpf_obj_pin(prog->fd, path)) {\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"prog '%s': failed to pin at '%s': %s\\n\", prog->name, path, cp);\n\t\treturn libbpf_err(err);\n\t}\n",
                      "markdown": "`\n\tif (bpf_obj_pin(prog->fd, path)) {\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"prog '%s': failed to pin at '%s': %s\\n\", prog->name, path, cp);\n\t\treturn libbpf_err(err);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 8639,
                  "startColumn": 1,
                  "endLine": 8639,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\tdir = dirname(dname);\n\tif (statfs(dir, &st_fs)) {\n\t\tcp = libbpf_strerror_r(errno, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"failed to statfs %s: %s\\n\", dir, cp);\n\t\terr = -errno;\n\t}\n",
                    "rendered": {
                      "text": "\n\tdir = dirname(dname);\n\tif (statfs(dir, &st_fs)) {\n\t\tcp = libbpf_strerror_r(errno, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"failed to statfs %s: %s\\n\", dir, cp);\n\t\terr = -errno;\n\t}\n",
                      "markdown": "`\n\tdir = dirname(dname);\n\tif (statfs(dir, &st_fs)) {\n\t\tcp = libbpf_strerror_r(errno, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"failed to statfs %s: %s\\n\", dir, cp);\n\t\terr = -errno;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 8617,
                  "startColumn": 1,
                  "endLine": 8617,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\tfree(dname);\n\tif (err) {\n\t\tcp = libbpf_strerror_r(-err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"failed to mkdir %s: %s\\n\", path, cp);\n\t}\n\treturn err;\n",
                    "rendered": {
                      "text": "\n\tfree(dname);\n\tif (err) {\n\t\tcp = libbpf_strerror_r(-err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"failed to mkdir %s: %s\\n\", path, cp);\n\t}\n\treturn err;\n",
                      "markdown": "`\n\tfree(dname);\n\tif (err) {\n\t\tcp = libbpf_strerror_r(-err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"failed to mkdir %s: %s\\n\", path, cp);\n\t}\n\treturn err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 7601,
                  "endLine": 7601,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t/* post-process verifier log to improve error descriptions */\n\tfixup_verifier_log(prog, log_buf, log_buf_size);\n\n\tcp = libbpf_strerror_r(errno, errmsg, sizeof(errmsg));\n\tpr_warn(\"prog '%s': BPF program load failed: %s\\n\", prog->name, cp);\n\tpr_perm_msg(ret);\n\n",
                    "rendered": {
                      "text": "\t/* post-process verifier log to improve error descriptions */\n\tfixup_verifier_log(prog, log_buf, log_buf_size);\n\n\tcp = libbpf_strerror_r(errno, errmsg, sizeof(errmsg));\n\tpr_warn(\"prog '%s': BPF program load failed: %s\\n\", prog->name, cp);\n\tpr_perm_msg(ret);\n\n",
                      "markdown": "`\t/* post-process verifier log to improve error descriptions */\n\tfixup_verifier_log(prog, log_buf, log_buf_size);\n\n\tcp = libbpf_strerror_r(errno, errmsg, sizeof(errmsg));\n\tpr_warn(\"prog '%s': BPF program load failed: %s\\n\", prog->name, cp);\n\tpr_perm_msg(ret);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 7569,
                  "startColumn": 4,
                  "endLine": 7569,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\t\tcontinue;\n\n\t\t\t\tif (bpf_prog_bind_map(ret, map->fd, NULL)) {\n\t\t\t\t\tcp = libbpf_strerror_r(errno, errmsg, sizeof(errmsg));\n\t\t\t\t\tpr_warn(\"prog '%s': failed to bind map '%s': %s\\n\",\n\t\t\t\t\t\tprog->name, map->real_name, cp);\n\t\t\t\t\t/* Don't fail hard if can't bind rodata. */\n",
                    "rendered": {
                      "text": "\t\t\t\t\tcontinue;\n\n\t\t\t\tif (bpf_prog_bind_map(ret, map->fd, NULL)) {\n\t\t\t\t\tcp = libbpf_strerror_r(errno, errmsg, sizeof(errmsg));\n\t\t\t\t\tpr_warn(\"prog '%s': failed to bind map '%s': %s\\n\",\n\t\t\t\t\t\tprog->name, map->real_name, cp);\n\t\t\t\t\t/* Don't fail hard if can't bind rodata. */\n",
                      "markdown": "`\t\t\t\t\tcontinue;\n\n\t\t\t\tif (bpf_prog_bind_map(ret, map->fd, NULL)) {\n\t\t\t\t\tcp = libbpf_strerror_r(errno, errmsg, sizeof(errmsg));\n\t\t\t\t\tpr_warn(\"prog '%s': failed to bind map '%s': %s\\n\",\n\t\t\t\t\t\tprog->name, map->real_name, cp);\n\t\t\t\t\t/* Don't fail hard if can't bind rodata. */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 7196,
                  "startColumn": 34,
                  "endLine": 7196,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\t\t\tbreak;\n\t\t}\n\t\tif (j == obj->nr_maps) {\n\t\t\tpr_warn(\".maps relo #%d: cannot find map '%s' at rel->r_offset %zu\\n\",\n\t\t\t\ti, name, (size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tbreak;\n\t\t}\n\t\tif (j == obj->nr_maps) {\n\t\t\tpr_warn(\".maps relo #%d: cannot find map '%s' at rel->r_offset %zu\\n\",\n\t\t\t\ti, name, (size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\t\t\tbreak;\n\t\t}\n\t\tif (j == obj->nr_maps) {\n\t\t\tpr_warn(\".maps relo #%d: cannot find map '%s' at rel->r_offset %zu\\n\",\n\t\t\t\ti, name, (size_t)rel->r_offset);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 7190,
                  "startColumn": 2,
                  "endLine": 7190,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tif (map->sec_idx != obj->efile.btf_maps_shndx)\n\t\t\t\tcontinue;\n\n\t\t\tvi = btf_var_secinfos(sec) + map->btf_var_idx;\n\t\t\tif (vi->offset <= rel->r_offset &&\n\t\t\t    rel->r_offset + bpf_ptr_sz <= vi->offset + vi->size)\n\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tif (map->sec_idx != obj->efile.btf_maps_shndx)\n\t\t\t\tcontinue;\n\n\t\t\tvi = btf_var_secinfos(sec) + map->btf_var_idx;\n\t\t\tif (vi->offset <= rel->r_offset &&\n\t\t\t    rel->r_offset + bpf_ptr_sz <= vi->offset + vi->size)\n\t\t\t\tbreak;\n",
                      "markdown": "`\t\t\tif (map->sec_idx != obj->efile.btf_maps_shndx)\n\t\t\t\tcontinue;\n\n\t\t\tvi = btf_var_secinfos(sec) + map->btf_var_idx;\n\t\t\tif (vi->offset <= rel->r_offset &&\n\t\t\t    rel->r_offset + bpf_ptr_sz <= vi->offset + vi->size)\n\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 6705,
                  "startColumn": 28,
                  "endLine": 6705,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\tif (prog->exception_cb_idx >= 0)\n\t\t\tcontinue;\n\n\t\tpr_warn(\"prog '%s': cannot find exception callback '%s'\\n\", prog->name, name);\n\t\treturn -ENOENT;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tif (prog->exception_cb_idx >= 0)\n\t\t\tcontinue;\n\n\t\tpr_warn(\"prog '%s': cannot find exception callback '%s'\\n\", prog->name, name);\n\t\treturn -ENOENT;\n\t}\n\n",
                      "markdown": "`\t\tif (prog->exception_cb_idx >= 0)\n\t\t\tcontinue;\n\n\t\tpr_warn(\"prog '%s': cannot find exception callback '%s'\\n\", prog->name, name);\n\t\treturn -ENOENT;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5512,
                  "endLine": 5512,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\treturn 0;\n\nerr_out:\n\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\tpr_warn(\"map '%s': failed to create: %s(%d)\\n\", map->name, cp, err);\n\tpr_perm_msg(err);\n\tfor (j = 0; j < i; j++)\n",
                    "rendered": {
                      "text": "\treturn 0;\n\nerr_out:\n\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\tpr_warn(\"map '%s': failed to create: %s(%d)\\n\", map->name, cp, err);\n\tpr_perm_msg(err);\n\tfor (j = 0; j < i; j++)\n",
                      "markdown": "`\treturn 0;\n\nerr_out:\n\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\tpr_warn(\"map '%s': failed to create: %s(%d)\\n\", map->name, cp, err);\n\tpr_perm_msg(err);\n\tfor (j = 0; j < i; j++)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5448,
                  "startColumn": 29,
                  "endLine": 5448,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\t\t\tgoto err_out;\n\t\t\t}\n\t\t\tif (retried && map->fd < 0) {\n\t\t\t\tpr_warn(\"map '%s': cannot find pinned map\\n\",\n\t\t\t\t\tmap->name);\n\t\t\t\terr = -ENOENT;\n\t\t\t\tgoto err_out;\n",
                    "rendered": {
                      "text": "\t\t\t\tgoto err_out;\n\t\t\t}\n\t\t\tif (retried && map->fd < 0) {\n\t\t\t\tpr_warn(\"map '%s': cannot find pinned map\\n\",\n\t\t\t\t\tmap->name);\n\t\t\t\terr = -ENOENT;\n\t\t\t\tgoto err_out;\n",
                      "markdown": "`\t\t\t\tgoto err_out;\n\t\t\t}\n\t\t\tif (retried && map->fd < 0) {\n\t\t\t\tpr_warn(\"map '%s': cannot find pinned map\\n\",\n\t\t\t\t\tmap->name);\n\t\t\t\terr = -ENOENT;\n\t\t\t\tgoto err_out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5260,
                  "startColumn": 1,
                  "endLine": 5260,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tchar *cp, errmsg[STRERR_BUFSIZE];\n\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in bpf_create_map_xattr(%s):%s(%d). Retrying without BTF.\\n\",\n\t\t\tmap->name, cp, err);\n\t\tcreate_attr.btf_fd = 0;\n",
                    "rendered": {
                      "text": "\t\tchar *cp, errmsg[STRERR_BUFSIZE];\n\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in bpf_create_map_xattr(%s):%s(%d). Retrying without BTF.\\n\",\n\t\t\tmap->name, cp, err);\n\t\tcreate_attr.btf_fd = 0;\n",
                      "markdown": "`\t\tchar *cp, errmsg[STRERR_BUFSIZE];\n\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in bpf_create_map_xattr(%s):%s(%d). Retrying without BTF.\\n\",\n\t\t\tmap->name, cp, err);\n\t\tcreate_attr.btf_fd = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5148,
                  "startColumn": 2,
                  "endLine": 5148,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\terr = bpf_map_freeze(map->fd);\n\t\tif (err) {\n\t\t\terr = -errno;\n\t\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\t\tpr_warn(\"Error freezing map(%s) as read-only: %s\\n\",\n\t\t\t\tmap->name, cp);\n\t\t\treturn err;\n",
                    "rendered": {
                      "text": "\t\terr = bpf_map_freeze(map->fd);\n\t\tif (err) {\n\t\t\terr = -errno;\n\t\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\t\tpr_warn(\"Error freezing map(%s) as read-only: %s\\n\",\n\t\t\t\tmap->name, cp);\n\t\t\treturn err;\n",
                      "markdown": "`\t\terr = bpf_map_freeze(map->fd);\n\t\tif (err) {\n\t\t\terr = -errno;\n\t\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\t\tpr_warn(\"Error freezing map(%s) as read-only: %s\\n\",\n\t\t\t\tmap->name, cp);\n\t\t\treturn err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5137,
                  "startColumn": 1,
                  "endLine": 5137,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\terr = bpf_map_update_elem(map->fd, &zero, map->mmaped, 0);\n\tif (err) {\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error setting initial map(%s) contents: %s\\n\",\n\t\t\tmap->name, cp);\n\t\treturn err;\n",
                    "rendered": {
                      "text": "\terr = bpf_map_update_elem(map->fd, &zero, map->mmaped, 0);\n\tif (err) {\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error setting initial map(%s) contents: %s\\n\",\n\t\t\tmap->name, cp);\n\t\treturn err;\n",
                      "markdown": "`\terr = bpf_map_update_elem(map->fd, &zero, map->mmaped, 0);\n\tif (err) {\n\t\terr = -errno;\n\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error setting initial map(%s) contents: %s\\n\",\n\t\t\tmap->name, cp);\n\t\treturn err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5095,
                  "startColumn": 1,
                  "endLine": 5095,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\t\treturn 0;\n\t\t}\n\n\t\tcp = libbpf_strerror_r(-err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"couldn't retrieve pinned map '%s': %s\\n\",\n\t\t\tmap->pin_path, cp);\n\t\treturn err;\n",
                    "rendered": {
                      "text": "\t\t\treturn 0;\n\t\t}\n\n\t\tcp = libbpf_strerror_r(-err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"couldn't retrieve pinned map '%s': %s\\n\",\n\t\t\tmap->pin_path, cp);\n\t\treturn err;\n",
                      "markdown": "`\t\t\treturn 0;\n\t\t}\n\n\t\tcp = libbpf_strerror_r(-err, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"couldn't retrieve pinned map '%s': %s\\n\",\n\t\t\tmap->pin_path, cp);\n\t\treturn err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 5029,
                  "startColumn": 1,
                  "endLine": 5029,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tret = bpf_prog_load(BPF_PROG_TYPE_TRACEPOINT, NULL, \"GPL\", insns, insn_cnt, &opts);\n\tif (ret < 0) {\n\t\tret = errno;\n\t\tcp = libbpf_strerror_r(ret, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in %s():%s(%d). Couldn't load trivial BPF \"\n\t\t\t\"program. Make sure your kernel supports BPF \"\n\t\t\t\"(CONFIG_BPF_SYSCALL=y) and/or that RLIMIT_MEMLOCK is \"\n",
                    "rendered": {
                      "text": "\t\tret = bpf_prog_load(BPF_PROG_TYPE_TRACEPOINT, NULL, \"GPL\", insns, insn_cnt, &opts);\n\tif (ret < 0) {\n\t\tret = errno;\n\t\tcp = libbpf_strerror_r(ret, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in %s():%s(%d). Couldn't load trivial BPF \"\n\t\t\t\"program. Make sure your kernel supports BPF \"\n\t\t\t\"(CONFIG_BPF_SYSCALL=y) and/or that RLIMIT_MEMLOCK is \"\n",
                      "markdown": "`\t\tret = bpf_prog_load(BPF_PROG_TYPE_TRACEPOINT, NULL, \"GPL\", insns, insn_cnt, &opts);\n\tif (ret < 0) {\n\t\tret = errno;\n\t\tcp = libbpf_strerror_r(ret, errmsg, sizeof(errmsg));\n\t\tpr_warn(\"Error in %s():%s(%d). Couldn't load trivial BPF \"\n\t\t\t\"program. Make sure your kernel supports BPF \"\n\t\t\t\"(CONFIG_BPF_SYSCALL=y) and/or that RLIMIT_MEMLOCK is \"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4970,
                  "startColumn": 54,
                  "endLine": 4970,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\tbpffs_fd = open(bpffs_path, O_DIRECTORY, O_RDWR);\n\tif (bpffs_fd < 0) {\n\t\terr = -errno;\n\t\t__pr(level, \"object '%s': failed (%d) to open BPF FS mount at '%s'%s\\n\",\n\t\t     obj->name, err, bpffs_path,\n\t\t     mandatory ? \"\" : \", skipping optional step...\");\n\t\treturn mandatory ? err : 0;\n",
                    "rendered": {
                      "text": "\tbpffs_fd = open(bpffs_path, O_DIRECTORY, O_RDWR);\n\tif (bpffs_fd < 0) {\n\t\terr = -errno;\n\t\t__pr(level, \"object '%s': failed (%d) to open BPF FS mount at '%s'%s\\n\",\n\t\t     obj->name, err, bpffs_path,\n\t\t     mandatory ? \"\" : \", skipping optional step...\");\n\t\treturn mandatory ? err : 0;\n",
                      "markdown": "`\tbpffs_fd = open(bpffs_path, O_DIRECTORY, O_RDWR);\n\tif (bpffs_fd < 0) {\n\t\terr = -errno;\n\t\t__pr(level, \"object '%s': failed (%d) to open BPF FS mount at '%s'%s\\n\",\n\t\t     obj->name, err, bpffs_path,\n\t\t     mandatory ? \"\" : \", skipping optional step...\");\n\t\treturn mandatory ? err : 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4748,
                  "startColumn": 41,
                  "endLine": 4748,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n\t\tprog = find_prog_by_sec_insn(obj, sec_idx, insn_idx);\n\t\tif (!prog) {\n\t\t\tpr_debug(\"sec '%s': relo #%d: couldn't find program in section '%s' for insn #%u, probably overridden weak function, skipping...\\n\",\n\t\t\t\trelo_sec_name, i, sec_name, insn_idx);\n\t\t\tcontinue;\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\tprog = find_prog_by_sec_insn(obj, sec_idx, insn_idx);\n\t\tif (!prog) {\n\t\t\tpr_debug(\"sec '%s': relo #%d: couldn't find program in section '%s' for insn #%u, probably overridden weak function, skipping...\\n\",\n\t\t\t\trelo_sec_name, i, sec_name, insn_idx);\n\t\t\tcontinue;\n\t\t}\n",
                      "markdown": "`\n\t\tprog = find_prog_by_sec_insn(obj, sec_idx, insn_idx);\n\t\tif (!prog) {\n\t\t\tpr_debug(\"sec '%s': relo #%d: couldn't find program in section '%s' for insn #%u, probably overridden weak function, skipping...\\n\",\n\t\t\t\trelo_sec_name, i, sec_name, insn_idx);\n\t\t\tcontinue;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4625,
                  "startColumn": 41,
                  "endLine": 4625,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\tbreak;\n\t}\n\tif (map_idx >= nr_maps) {\n\t\tpr_warn(\"prog '%s': data relo failed to find map for section '%s'\\n\",\n\t\t\tprog->name, sym_sec_name);\n\t\treturn -LIBBPF_ERRNO__RELOC;\n\t}\n",
                    "rendered": {
                      "text": "\t\tbreak;\n\t}\n\tif (map_idx >= nr_maps) {\n\t\tpr_warn(\"prog '%s': data relo failed to find map for section '%s'\\n\",\n\t\t\tprog->name, sym_sec_name);\n\t\treturn -LIBBPF_ERRNO__RELOC;\n\t}\n",
                      "markdown": "`\t\tbreak;\n\t}\n\tif (map_idx >= nr_maps) {\n\t\tpr_warn(\"prog '%s': data relo failed to find map for section '%s'\\n\",\n\t\t\tprog->name, sym_sec_name);\n\t\treturn -LIBBPF_ERRNO__RELOC;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4598,
                  "startColumn": 41,
                  "endLine": 4598,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\t\t}\n\t\tif (map_idx >= nr_maps) {\n\t\t\tpr_warn(\"prog '%s': map relo failed to find map for section '%s', off %zu\\n\",\n\t\t\t\tprog->name, sym_sec_name, (size_t)sym->st_value);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\t\t}\n\t\tif (map_idx >= nr_maps) {\n\t\t\tpr_warn(\"prog '%s': map relo failed to find map for section '%s', off %zu\\n\",\n\t\t\t\tprog->name, sym_sec_name, (size_t)sym->st_value);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n",
                      "markdown": "`\t\t\tbreak;\n\t\t}\n\t\tif (map_idx >= nr_maps) {\n\t\t\tpr_warn(\"prog '%s': map relo failed to find map for section '%s', off %zu\\n\",\n\t\t\t\tprog->name, sym_sec_name, (size_t)sym->st_value);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4505,
                  "startColumn": 44,
                  "endLine": 4505,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\t\t\tbreak;\n\t\t}\n\t\tif (i >= n) {\n\t\t\tpr_warn(\"prog '%s': extern relo failed to find extern for '%s' (%d)\\n\",\n\t\t\t\tprog->name, sym_name, sym_idx);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tbreak;\n\t\t}\n\t\tif (i >= n) {\n\t\t\tpr_warn(\"prog '%s': extern relo failed to find extern for '%s' (%d)\\n\",\n\t\t\t\tprog->name, sym_name, sym_idx);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n",
                      "markdown": "`\t\t\t\tbreak;\n\t\t}\n\t\tif (i >= n) {\n\t\t\tpr_warn(\"prog '%s': extern relo failed to find extern for '%s' (%d)\\n\",\n\t\t\t\tprog->name, sym_name, sym_idx);\n\t\t\treturn -LIBBPF_ERRNO__RELOC;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4407,
                  "startColumn": 22,
                  "endLine": 4407,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t\text_name = btf__name_by_offset(obj->btf, t->name_off);\n\t\t\text = find_extern_by_name(obj, ext_name);\n\t\t\tif (!ext) {\n\t\t\t\tpr_warn(\"failed to find extern definition for BTF var '%s'\\n\",\n\t\t\t\t\text_name);\n\t\t\t\treturn -ESRCH;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\text_name = btf__name_by_offset(obj->btf, t->name_off);\n\t\t\text = find_extern_by_name(obj, ext_name);\n\t\t\tif (!ext) {\n\t\t\t\tpr_warn(\"failed to find extern definition for BTF var '%s'\\n\",\n\t\t\t\t\text_name);\n\t\t\t\treturn -ESRCH;\n\t\t\t}\n",
                      "markdown": "`\t\t\text_name = btf__name_by_offset(obj->btf, t->name_off);\n\t\t\text = find_extern_by_name(obj, ext_name);\n\t\t\tif (!ext) {\n\t\t\t\tpr_warn(\"failed to find extern definition for BTF var '%s'\\n\",\n\t\t\t\t\text_name);\n\t\t\t\treturn -ESRCH;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4352,
                  "startColumn": 22,
                  "endLine": 4352,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t\text_name = btf__name_by_offset(obj->btf, vt->name_off);\n\t\t\text = find_extern_by_name(obj, ext_name);\n\t\t\tif (!ext) {\n\t\t\t\tpr_warn(\"failed to find extern definition for BTF %s '%s'\\n\",\n\t\t\t\t\tbtf_kind_str(vt), ext_name);\n\t\t\t\treturn -ESRCH;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\text_name = btf__name_by_offset(obj->btf, vt->name_off);\n\t\t\text = find_extern_by_name(obj, ext_name);\n\t\t\tif (!ext) {\n\t\t\t\tpr_warn(\"failed to find extern definition for BTF %s '%s'\\n\",\n\t\t\t\t\tbtf_kind_str(vt), ext_name);\n\t\t\t\treturn -ESRCH;\n\t\t\t}\n",
                      "markdown": "`\t\t\text_name = btf__name_by_offset(obj->btf, vt->name_off);\n\t\t\text = find_extern_by_name(obj, ext_name);\n\t\t\tif (!ext) {\n\t\t\t\tpr_warn(\"failed to find extern definition for BTF %s '%s'\\n\",\n\t\t\t\t\tbtf_kind_str(vt), ext_name);\n\t\t\t\treturn -ESRCH;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4266,
                  "startColumn": 21,
                  "endLine": 4266,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n\t\text->sec_btf_id = find_extern_sec_btf_id(obj->btf, ext->btf_id);\n\t\tif (ext->sec_btf_id <= 0) {\n\t\t\tpr_warn(\"failed to find BTF for extern '%s' [%d] section: %d\\n\",\n\t\t\t\text_name, ext->btf_id, ext->sec_btf_id);\n\t\t\treturn ext->sec_btf_id;\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\text->sec_btf_id = find_extern_sec_btf_id(obj->btf, ext->btf_id);\n\t\tif (ext->sec_btf_id <= 0) {\n\t\t\tpr_warn(\"failed to find BTF for extern '%s' [%d] section: %d\\n\",\n\t\t\t\text_name, ext->btf_id, ext->sec_btf_id);\n\t\t\treturn ext->sec_btf_id;\n\t\t}\n",
                      "markdown": "`\n\t\text->sec_btf_id = find_extern_sec_btf_id(obj->btf, ext->btf_id);\n\t\tif (ext->sec_btf_id <= 0) {\n\t\t\tpr_warn(\"failed to find BTF for extern '%s' [%d] section: %d\\n\",\n\t\t\t\text_name, ext->btf_id, ext->sec_btf_id);\n\t\t\treturn ext->sec_btf_id;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 4247,
                  "startColumn": 21,
                  "endLine": 4247,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n\t\text->btf_id = find_extern_btf_id(obj->btf, ext_name);\n\t\tif (ext->btf_id <= 0) {\n\t\t\tpr_warn(\"failed to find BTF for extern '%s': %d\\n\",\n\t\t\t\text_name, ext->btf_id);\n\t\t\treturn ext->btf_id;\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\text->btf_id = find_extern_btf_id(obj->btf, ext_name);\n\t\tif (ext->btf_id <= 0) {\n\t\t\tpr_warn(\"failed to find BTF for extern '%s': %d\\n\",\n\t\t\t\text_name, ext->btf_id);\n\t\t\treturn ext->btf_id;\n\t\t}\n",
                      "markdown": "`\n\t\text->btf_id = find_extern_btf_id(obj->btf, ext_name);\n\t\tif (ext->btf_id <= 0) {\n\t\t\tpr_warn(\"failed to find BTF for extern '%s': %d\\n\",\n\t\t\t\text_name, ext->btf_id);\n\t\t\treturn ext->btf_id;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 3856,
                  "startColumn": 24,
                  "endLine": 3856,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t}\n\n\tif (!obj->efile.symbols) {\n\t\tpr_warn(\"elf: couldn't find symbol table in %s, stripped object file?\\n\",\n\t\t\tobj->path);\n\t\treturn -ENOENT;\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (!obj->efile.symbols) {\n\t\tpr_warn(\"elf: couldn't find symbol table in %s, stripped object file?\\n\",\n\t\t\tobj->path);\n\t\treturn -ENOENT;\n\t}\n",
                      "markdown": "`\t}\n\n\tif (!obj->efile.symbols) {\n\t\tpr_warn(\"elf: couldn't find symbol table in %s, stripped object file?\\n\",\n\t\t\tobj->path);\n\t\treturn -ENOENT;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 3383,
                  "startColumn": 32,
                  "endLine": 3383,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n\t\tsym = find_elf_var_sym(obj, var_name);\n\t\tif (IS_ERR(sym)) {\n\t\t\tpr_debug(\"sec '%s': failed to find ELF symbol for VAR '%s'\\n\",\n\t\t\t\t sec_name, var_name);\n\t\t\treturn -ENOENT;\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\tsym = find_elf_var_sym(obj, var_name);\n\t\tif (IS_ERR(sym)) {\n\t\t\tpr_debug(\"sec '%s': failed to find ELF symbol for VAR '%s'\\n\",\n\t\t\t\t sec_name, var_name);\n\t\t\treturn -ENOENT;\n\t\t}\n",
                      "markdown": "`\n\t\tsym = find_elf_var_sym(obj, var_name);\n\t\tif (IS_ERR(sym)) {\n\t\t\tpr_debug(\"sec '%s': failed to find ELF symbol for VAR '%s'\\n\",\n\t\t\t\t sec_name, var_name);\n\t\t\treturn -ENOENT;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 3376,
                  "startColumn": 32,
                  "endLine": 3376,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n\t\tvar_name = btf__name_by_offset(btf, t_var->name_off);\n\t\tif (!var_name) {\n\t\t\tpr_debug(\"sec '%s': failed to find name of DATASEC's member #%d\\n\",\n\t\t\t\t sec_name, i);\n\t\t\treturn -ENOENT;\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\tvar_name = btf__name_by_offset(btf, t_var->name_off);\n\t\tif (!var_name) {\n\t\t\tpr_debug(\"sec '%s': failed to find name of DATASEC's member #%d\\n\",\n\t\t\t\t sec_name, i);\n\t\t\treturn -ENOENT;\n\t\t}\n",
                      "markdown": "`\n\t\tvar_name = btf__name_by_offset(btf, t_var->name_off);\n\t\tif (!var_name) {\n\t\t\tpr_debug(\"sec '%s': failed to find name of DATASEC's member #%d\\n\",\n\t\t\t\t sec_name, i);\n\t\t\treturn -ENOENT;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 2864,
                  "endLine": 2864,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tstruct bpf_map *map;\n\tint err;\n\n\tvi = btf_var_secinfos(sec) + var_idx;\n\tvar = btf__type_by_id(obj->btf, vi->type);\n\tvar_extra = btf_var(var);\n\tmap_name = btf__name_by_offset(obj->btf, var->name_off);\n",
                    "rendered": {
                      "text": "\tstruct bpf_map *map;\n\tint err;\n\n\tvi = btf_var_secinfos(sec) + var_idx;\n\tvar = btf__type_by_id(obj->btf, vi->type);\n\tvar_extra = btf_var(var);\n\tmap_name = btf__name_by_offset(obj->btf, var->name_off);\n",
                      "markdown": "`\tstruct bpf_map *map;\n\tint err;\n\n\tvi = btf_var_secinfos(sec) + var_idx;\n\tvar = btf__type_by_id(obj->btf, vi->type);\n\tvar_extra = btf_var(var);\n\tmap_name = btf__name_by_offset(obj->btf, var->name_off);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 1556,
                  "startColumn": 2,
                  "endLine": 1556,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tchar errmsg[STRERR_BUFSIZE], *cp;\n\n\t\t\terr = -errno;\n\t\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\t\tpr_warn(\"elf: failed to open %s: %s\\n\", obj->path, cp);\n\t\t\treturn err;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tchar errmsg[STRERR_BUFSIZE], *cp;\n\n\t\t\terr = -errno;\n\t\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\t\tpr_warn(\"elf: failed to open %s: %s\\n\", obj->path, cp);\n\t\t\treturn err;\n\t\t}\n",
                      "markdown": "`\t\t\tchar errmsg[STRERR_BUFSIZE], *cp;\n\n\t\t\terr = -errno;\n\t\t\tcp = libbpf_strerror_r(err, errmsg, sizeof(errmsg));\n\t\t\tpr_warn(\"elf: failed to open %s: %s\\n\", obj->path, cp);\n\t\t\treturn err;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/libbpf.c"
                },
                "region": {
                  "startLine": 1191,
                  "startColumn": 44,
                  "endLine": 1191,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\tkern_member = find_member_by_name(kern_btf, kern_type, mname);\n\t\tif (!kern_member) {\n\t\t\tif (!libbpf_is_mem_zeroed(mdata, msize)) {\n\t\t\t\tpr_warn(\"struct_ops init_kern %s: Cannot find member %s in kernel BTF\\n\",\n\t\t\t\t\tmap->name, mname);\n\t\t\t\treturn -ENOTSUP;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\tkern_member = find_member_by_name(kern_btf, kern_type, mname);\n\t\tif (!kern_member) {\n\t\t\tif (!libbpf_is_mem_zeroed(mdata, msize)) {\n\t\t\t\tpr_warn(\"struct_ops init_kern %s: Cannot find member %s in kernel BTF\\n\",\n\t\t\t\t\tmap->name, mname);\n\t\t\t\treturn -ENOTSUP;\n\t\t\t}\n",
                      "markdown": "`\t\tkern_member = find_member_by_name(kern_btf, kern_type, mname);\n\t\tif (!kern_member) {\n\t\t\tif (!libbpf_is_mem_zeroed(mdata, msize)) {\n\t\t\t\tpr_warn(\"struct_ops init_kern %s: Cannot find member %s in kernel BTF\\n\",\n\t\t\t\t\tmap->name, mname);\n\t\t\t\treturn -ENOTSUP;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/README.md"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 23,
                  "endLine": 180,
                  "snippet": {
                    "text": "script. See [SYNC.md](SYNC.md) for instruction.\n\nSome header files in this repo (`include/linux/*.h`) are reduced versions of\ntheir counterpart files at\n[bpf-next](https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/)'s\n`tools/include/linux/*.h` to make compilation successful.\n\nLicense\n",
                    "rendered": {
                      "text": "script. See [SYNC.md](SYNC.md) for instruction.\n\nSome header files in this repo (`include/linux/*.h`) are reduced versions of\ntheir counterpart files at\n[bpf-next](https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/)'s\n`tools/include/linux/*.h` to make compilation successful.\n\nLicense\n",
                      "markdown": "`script. See [SYNC.md](SYNC.md) for instruction.\n\nSome header files in this repo (`include/linux/*.h`) are reduced versions of\ntheir counterpart files at\n[bpf-next](https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/)'s\n`tools/include/linux/*.h` to make compilation successful.\n\nLicense\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/README.md"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  - Debian 11 (LLVM 11)\n  - Alpine 3.13+\n\nOtherwise, please make sure to update it on your system.\n\nThe following resources are useful to understand what BPF CO-RE is and how to\nuse it:\n",
                    "rendered": {
                      "text": "  - Debian 11 (LLVM 11)\n  - Alpine 3.13+\n\nOtherwise, please make sure to update it on your system.\n\nThe following resources are useful to understand what BPF CO-RE is and how to\nuse it:\n",
                      "markdown": "`  - Debian 11 (LLVM 11)\n  - Alpine 3.13+\n\nOtherwise, please make sure to update it on your system.\n\nThe following resources are useful to understand what BPF CO-RE is and how to\nuse it:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/README.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 21,
                  "endLine": 62,
                  "endColumn": 25,
                  "snippet": {
                    "text": "pkg-config is used by default to find libelf, and the program called can be\noverridden with `PKG_CONFIG`.\n\nIf using `pkg-config` at build time is not desired, it can be disabled by\nsetting `NO_PKG_CONFIG=1` when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n",
                    "rendered": {
                      "text": "pkg-config is used by default to find libelf, and the program called can be\noverridden with `PKG_CONFIG`.\n\nIf using `pkg-config` at build time is not desired, it can be disabled by\nsetting `NO_PKG_CONFIG=1` when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n",
                      "markdown": "`pkg-config is used by default to find libelf, and the program called can be\noverridden with `PKG_CONFIG`.\n\nIf using `pkg-config` at build time is not desired, it can be disabled by\nsetting `NO_PKG_CONFIG=1` when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/README.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 30,
                  "endLine": 62,
                  "endColumn": 36,
                  "snippet": {
                    "text": "pkg-config is used by default to find libelf, and the program called can be\noverridden with `PKG_CONFIG`.\n\nIf using `pkg-config` at build time is not desired, it can be disabled by\nsetting `NO_PKG_CONFIG=1` when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n",
                    "rendered": {
                      "text": "pkg-config is used by default to find libelf, and the program called can be\noverridden with `PKG_CONFIG`.\n\nIf using `pkg-config` at build time is not desired, it can be disabled by\nsetting `NO_PKG_CONFIG=1` when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n",
                      "markdown": "`pkg-config is used by default to find libelf, and the program called can be\noverridden with `PKG_CONFIG`.\n\nIf using `pkg-config` at build time is not desired, it can be disabled by\nsetting `NO_PKG_CONFIG=1` when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/README.md"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 32,
                  "endLine": 59,
                  "endColumn": 38,
                  "snippet": {
                    "text": "===============\nlibelf is an internal dependency of libbpf and thus it is required to link\nagainst and must be installed on the system for applications to work.\npkg-config is used by default to find libelf, and the program called can be\noverridden with `PKG_CONFIG`.\n\nIf using `pkg-config` at build time is not desired, it can be disabled by\n",
                    "rendered": {
                      "text": "===============\nlibelf is an internal dependency of libbpf and thus it is required to link\nagainst and must be installed on the system for applications to work.\npkg-config is used by default to find libelf, and the program called can be\noverridden with `PKG_CONFIG`.\n\nIf using `pkg-config` at build time is not desired, it can be disabled by\n",
                      "markdown": "`===============\nlibelf is an internal dependency of libbpf and thus it is required to link\nagainst and must be installed on the system for applications to work.\npkg-config is used by default to find libelf, and the program called can be\noverridden with `PKG_CONFIG`.\n\nIf using `pkg-config` at build time is not desired, it can be disabled by\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/README.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 42,
                  "endLine": 17,
                  "endColumn": 47,
                  "snippet": {
                    "text": "**This is the official home of the libbpf library.**\n\n*Please use this Github repository for building and packaging libbpf\nand when using it in your projects through Git submodule.*\n\nLibbpf *authoritative source code* is developed as part of [bpf-next Linux source\ntree](https://kernel.googlesource.com/pub/scm/linux/kernel/git/bpf/bpf-next) under\n",
                    "rendered": {
                      "text": "**This is the official home of the libbpf library.**\n\n*Please use this Github repository for building and packaging libbpf\nand when using it in your projects through Git submodule.*\n\nLibbpf *authoritative source code* is developed as part of [bpf-next Linux source\ntree](https://kernel.googlesource.com/pub/scm/linux/kernel/git/bpf/bpf-next) under\n",
                      "markdown": "`**This is the official home of the libbpf library.**\n\n*Please use this Github repository for building and packaging libbpf\nand when using it in your projects through Git submodule.*\n\nLibbpf *authoritative source code* is developed as part of [bpf-next Linux source\ntree](https://kernel.googlesource.com/pub/scm/linux/kernel/git/bpf/bpf-next) under\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/diffs/0003-selftests-bpf-Fix-uprobe-consumer-test.patch"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 8,
                  "snippet": {
                    "text": "-\t\t\tif (had_uretprobes && probe_preserved && test_bit(idx, after))\n+\t\t\tif (had_uretprobes && test_bit(idx, after))\n \t\t\t\tval++;\n \t\t\tfmt = \"idx 2/3: uretprobe\";\n \t\t}\n-- \n2.34.1\n",
                    "rendered": {
                      "text": "-\t\t\tif (had_uretprobes && probe_preserved && test_bit(idx, after))\n+\t\t\tif (had_uretprobes && test_bit(idx, after))\n \t\t\t\tval++;\n \t\t\tfmt = \"idx 2/3: uretprobe\";\n \t\t}\n-- \n2.34.1\n",
                      "markdown": "`-\t\t\tif (had_uretprobes && probe_preserved && test_bit(idx, after))\n+\t\t\tif (had_uretprobes && test_bit(idx, after))\n \t\t\t\tval++;\n \t\t\tfmt = \"idx 2/3: uretprobe\";\n \t\t}\n-- \n2.34.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/diffs/0003-selftests-bpf-Fix-uprobe-consumer-test.patch"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 3,
                  "endLine": 34,
                  "endColumn": 8,
                  "snippet": {
                    "text": "--- a/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n+++ b/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n@@ -869,21 +869,14 @@ static void consumer_test(struct uprobe_multi_consumers *skel,\n \t\t\tfmt = \"prog 0/1: uprobe\";\n \t\t} else {\n \t\t\t/*\n-\t\t\t * uprobe return is tricky ;-)\n",
                    "rendered": {
                      "text": "--- a/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n+++ b/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n@@ -869,21 +869,14 @@ static void consumer_test(struct uprobe_multi_consumers *skel,\n \t\t\tfmt = \"prog 0/1: uprobe\";\n \t\t} else {\n \t\t\t/*\n-\t\t\t * uprobe return is tricky ;-)\n",
                      "markdown": "`--- a/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n+++ b/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n@@ -869,21 +869,14 @@ static void consumer_test(struct uprobe_multi_consumers *skel,\n \t\t\tfmt = \"prog 0/1: uprobe\";\n \t\t} else {\n \t\t\t/*\n-\t\t\t * uprobe return is tricky ;-)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/diffs/0003-selftests-bpf-Fix-uprobe-consumer-test.patch"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 29,
                  "endColumn": 5,
                  "snippet": {
                    "text": "---\n .../testing/selftests/bpf/prog_tests/uprobe_multi_test.c | 9 +--------\n 1 file changed, 1 insertion(+), 8 deletions(-)\n\ndiff --git a/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c b/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\nindex 844f6fc8487b..c1ac813ff9ba 100644\n--- a/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n+++ b/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n",
                    "rendered": {
                      "text": "---\n .../testing/selftests/bpf/prog_tests/uprobe_multi_test.c | 9 +--------\n 1 file changed, 1 insertion(+), 8 deletions(-)\n\ndiff --git a/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c b/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\nindex 844f6fc8487b..c1ac813ff9ba 100644\n--- a/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n+++ b/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n",
                      "markdown": "`---\n .../testing/selftests/bpf/prog_tests/uprobe_multi_test.c | 9 +--------\n 1 file changed, 1 insertion(+), 8 deletions(-)\n\ndiff --git a/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c b/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\nindex 844f6fc8487b..c1ac813ff9ba 100644\n--- a/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n+++ b/tools/testing/selftests/bpf/prog_tests/uprobe_multi_test.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/ubuntu.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 7,
                  "endLine": 7,
                  "snippet": {
                    "text": "\nRELEASE=\"focal\"\n\napt-get update\napt-get install -y pkg-config\n\nsource \"$(dirname $0)/travis_wait.bash\"\n\n",
                    "rendered": {
                      "text": "\nRELEASE=\"focal\"\n\napt-get update\napt-get install -y pkg-config\n\nsource \"$(dirname $0)/travis_wait.bash\"\n\n",
                      "markdown": "`\nRELEASE=\"focal\"\n\napt-get update\napt-get install -y pkg-config\n\nsource \"$(dirname $0)/travis_wait.bash\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/ubuntu.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 26,
                  "endLine": 19,
                  "endColumn": 32,
                  "snippet": {
                    "text": "cc --version\nmake -j$((4*$(nproc))) EXTRA_CFLAGS=\"${EXTRA_CFLAGS}\" EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS}\" -C ./src -B OBJDIR=../build\nldd build/libbpf.so\nif ! ldd build/libbpf.so | grep -q libelf; then\n    echo \"FAIL: No reference to libelf.so in libbpf.so!\"\n    exit 1\nfi\n",
                    "rendered": {
                      "text": "cc --version\nmake -j$((4*$(nproc))) EXTRA_CFLAGS=\"${EXTRA_CFLAGS}\" EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS}\" -C ./src -B OBJDIR=../build\nldd build/libbpf.so\nif ! ldd build/libbpf.so | grep -q libelf; then\n    echo \"FAIL: No reference to libelf.so in libbpf.so!\"\n    exit 1\nfi\n",
                      "markdown": "`cc --version\nmake -j$((4*$(nproc))) EXTRA_CFLAGS=\"${EXTRA_CFLAGS}\" EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS}\" -C ./src -B OBJDIR=../build\nldd build/libbpf.so\nif ! ldd build/libbpf.so | grep -q libelf; then\n    echo \"FAIL: No reference to libelf.so in libbpf.so!\"\n    exit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/ubuntu.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nRELEASE=\"focal\"\n\napt-get update\napt-get install -y pkg-config\n\nsource \"$(dirname $0)/travis_wait.bash\"\n\n",
                    "rendered": {
                      "text": "\nRELEASE=\"focal\"\n\napt-get update\napt-get install -y pkg-config\n\nsource \"$(dirname $0)/travis_wait.bash\"\n\n",
                      "markdown": "`\nRELEASE=\"focal\"\n\napt-get update\napt-get install -y pkg-config\n\nsource \"$(dirname $0)/travis_wait.bash\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/ubuntu.sh"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 6,
                  "endColumn": 8,
                  "snippet": {
                    "text": "set -eux\n\nRELEASE=\"focal\"\n\napt-get update\napt-get install -y pkg-config\n\nsource \"$(dirname $0)/travis_wait.bash\"\n",
                    "rendered": {
                      "text": "set -eux\n\nRELEASE=\"focal\"\n\napt-get update\napt-get install -y pkg-config\n\nsource \"$(dirname $0)/travis_wait.bash\"\n",
                      "markdown": "`set -eux\n\nRELEASE=\"focal\"\n\napt-get update\napt-get install -y pkg-config\n\nsource \"$(dirname $0)/travis_wait.bash\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/travis_wait.bash"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 84,
                  "endLine": 3,
                  "endColumn": 90,
                  "snippet": {
                    "text": "# This was borrowed from https://github.com/travis-ci/travis-build/tree/master/lib/travis/build/bash\n# to get around https://github.com/travis-ci/travis-ci/issues/9979. It should probably be removed\n# as soon as Travis CI has started to provide an easy way to export the functions to bash scripts.\n\ntravis_jigger() {\n  local cmd_pid=\"${1}\"\n",
                    "rendered": {
                      "text": "# This was borrowed from https://github.com/travis-ci/travis-build/tree/master/lib/travis/build/bash\n# to get around https://github.com/travis-ci/travis-ci/issues/9979. It should probably be removed\n# as soon as Travis CI has started to provide an easy way to export the functions to bash scripts.\n\ntravis_jigger() {\n  local cmd_pid=\"${1}\"\n",
                      "markdown": "`# This was borrowed from https://github.com/travis-ci/travis-build/tree/master/lib/travis/build/bash\n# to get around https://github.com/travis-ci/travis-ci/issues/9979. It should probably be removed\n# as soon as Travis CI has started to provide an easy way to export the functions to bash scripts.\n\ntravis_jigger() {\n  local cmd_pid=\"${1}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/travis_wait.bash"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  fi\n\n  echo -e \"\\\\n${ANSI_GREEN}Log:${ANSI_RESET}\\\\n\"\n  cat \"${log_file}\"\n\n  return \"${result}\"\n}\n",
                    "rendered": {
                      "text": "  fi\n\n  echo -e \"\\\\n${ANSI_GREEN}Log:${ANSI_RESET}\\\\n\"\n  cat \"${log_file}\"\n\n  return \"${result}\"\n}\n",
                      "markdown": "`  fi\n\n  echo -e \"\\\\n${ANSI_GREEN}Log:${ANSI_RESET}\\\\n\"\n  cat \"${log_file}\"\n\n  return \"${result}\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/travis_wait.bash"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 84,
                  "endLine": 3,
                  "endColumn": 90,
                  "snippet": {
                    "text": "# This was borrowed from https://github.com/travis-ci/travis-build/tree/master/lib/travis/build/bash\n# to get around https://github.com/travis-ci/travis-ci/issues/9979. It should probably be removed\n# as soon as Travis CI has started to provide an easy way to export the functions to bash scripts.\n\ntravis_jigger() {\n  local cmd_pid=\"${1}\"\n",
                    "rendered": {
                      "text": "# This was borrowed from https://github.com/travis-ci/travis-build/tree/master/lib/travis/build/bash\n# to get around https://github.com/travis-ci/travis-ci/issues/9979. It should probably be removed\n# as soon as Travis CI has started to provide an easy way to export the functions to bash scripts.\n\ntravis_jigger() {\n  local cmd_pid=\"${1}\"\n",
                      "markdown": "`# This was borrowed from https://github.com/travis-ci/travis-build/tree/master/lib/travis/build/bash\n# to get around https://github.com/travis-ci/travis-ci/issues/9979. It should probably be removed\n# as soon as Travis CI has started to provide an easy way to export the functions to bash scripts.\n\ntravis_jigger() {\n  local cmd_pid=\"${1}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/test_compile.sh"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nEXTRA_CFLAGS=${EXTRA_CFLAGS:-}\nEXTRA_LDFLAGS=${EXTRA_LDFLAGS:-}\n\ncat << EOF > main.c\n#include <bpf/libbpf.h>\nint main() {\n  return bpf_object__open(0) < 0;\n",
                    "rendered": {
                      "text": "\nEXTRA_CFLAGS=${EXTRA_CFLAGS:-}\nEXTRA_LDFLAGS=${EXTRA_LDFLAGS:-}\n\ncat << EOF > main.c\n#include <bpf/libbpf.h>\nint main() {\n  return bpf_object__open(0) < 0;\n",
                      "markdown": "`\nEXTRA_CFLAGS=${EXTRA_CFLAGS:-}\nEXTRA_LDFLAGS=${EXTRA_LDFLAGS:-}\n\ncat << EOF > main.c\n#include <bpf/libbpf.h>\nint main() {\n  return bpf_object__open(0) < 0;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/relo_core.c"
                },
                "region": {
                  "startLine": 957,
                  "startColumn": 69,
                  "endLine": 957,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\t\terr = 0;\n\t} else if (err == -EOPNOTSUPP) {\n\t\t/* EOPNOTSUPP means unknown/unsupported relocation */\n\t\tpr_warn(\"prog '%s': relo #%d: unrecognized CO-RE relocation %s (%d) at insn #%d\\n\",\n\t\t\tprog_name, relo_idx, core_relo_kind_str(relo->kind),\n\t\t\trelo->kind, relo->insn_off / 8);\n\t}\n",
                    "rendered": {
                      "text": "\t\terr = 0;\n\t} else if (err == -EOPNOTSUPP) {\n\t\t/* EOPNOTSUPP means unknown/unsupported relocation */\n\t\tpr_warn(\"prog '%s': relo #%d: unrecognized CO-RE relocation %s (%d) at insn #%d\\n\",\n\t\t\tprog_name, relo_idx, core_relo_kind_str(relo->kind),\n\t\t\trelo->kind, relo->insn_off / 8);\n\t}\n",
                      "markdown": "`\t\terr = 0;\n\t} else if (err == -EOPNOTSUPP) {\n\t\t/* EOPNOTSUPP means unknown/unsupported relocation */\n\t\tpr_warn(\"prog '%s': relo #%d: unrecognized CO-RE relocation %s (%d) at insn #%d\\n\",\n\t\t\tprog_name, relo_idx, core_relo_kind_str(relo->kind),\n\t\t\trelo->kind, relo->insn_off / 8);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/relo_core.c"
                },
                "region": {
                  "startLine": 743,
                  "startColumn": 31,
                  "endLine": 743,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\twhile (bit_off + bit_sz - byte_off * 8 > byte_sz * 8) {\n\t\t\tif (byte_sz >= 8) {\n\t\t\t\t/* bitfield can't be read with 64-bit read */\n\t\t\t\tpr_warn(\"prog '%s': relo %d at insn #%d can't be satisfied for bitfield\\n\",\n\t\t\t\t\tprog_name, relo->kind, relo->insn_off / 8);\n\t\t\t\treturn -E2BIG;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\twhile (bit_off + bit_sz - byte_off * 8 > byte_sz * 8) {\n\t\t\tif (byte_sz >= 8) {\n\t\t\t\t/* bitfield can't be read with 64-bit read */\n\t\t\t\tpr_warn(\"prog '%s': relo %d at insn #%d can't be satisfied for bitfield\\n\",\n\t\t\t\t\tprog_name, relo->kind, relo->insn_off / 8);\n\t\t\t\treturn -E2BIG;\n\t\t\t}\n",
                      "markdown": "`\t\twhile (bit_off + bit_sz - byte_off * 8 > byte_sz * 8) {\n\t\t\tif (byte_sz >= 8) {\n\t\t\t\t/* bitfield can't be read with 64-bit read */\n\t\t\t\tpr_warn(\"prog '%s': relo %d at insn #%d can't be satisfied for bitfield\\n\",\n\t\t\t\t\tprog_name, relo->kind, relo->insn_off / 8);\n\t\t\t\treturn -E2BIG;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/relo_core.c"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 30,
                  "endLine": 721,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\t\treturn -EINVAL;\n\t\t\t*val = sz;\n\t\t} else {\n\t\t\tpr_warn(\"prog '%s': relo %d at insn #%d can't be applied to array access\\n\",\n\t\t\t\tprog_name, relo->kind, relo->insn_off / 8);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\treturn -EINVAL;\n\t\t\t*val = sz;\n\t\t} else {\n\t\t\tpr_warn(\"prog '%s': relo %d at insn #%d can't be applied to array access\\n\",\n\t\t\t\tprog_name, relo->kind, relo->insn_off / 8);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\t\t\treturn -EINVAL;\n\t\t\t*val = sz;\n\t\t} else {\n\t\t\tpr_warn(\"prog '%s': relo %d at insn #%d can't be applied to array access\\n\",\n\t\t\t\tprog_name, relo->kind, relo->insn_off / 8);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/usdt.bpf.h"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 6,
                  "endLine": 83,
                  "endColumn": 10,
                  "snippet": {
                    "text": "int __bpf_usdt_spec_id(struct pt_regs *ctx)\n{\n\tif (!LINUX_HAS_BPF_COOKIE) {\n\t\tlong ip = PT_REGS_IP(ctx);\n\t\tint *spec_id_ptr;\n\n\t\tspec_id_ptr = bpf_map_lookup_elem(&__bpf_usdt_ip_to_spec_id, &ip);\n",
                    "rendered": {
                      "text": "int __bpf_usdt_spec_id(struct pt_regs *ctx)\n{\n\tif (!LINUX_HAS_BPF_COOKIE) {\n\t\tlong ip = PT_REGS_IP(ctx);\n\t\tint *spec_id_ptr;\n\n\t\tspec_id_ptr = bpf_map_lookup_elem(&__bpf_usdt_ip_to_spec_id, &ip);\n",
                      "markdown": "`int __bpf_usdt_spec_id(struct pt_regs *ctx)\n{\n\tif (!LINUX_HAS_BPF_COOKIE) {\n\t\tlong ip = PT_REGS_IP(ctx);\n\t\tint *spec_id_ptr;\n\n\t\tspec_id_ptr = bpf_map_lookup_elem(&__bpf_usdt_ip_to_spec_id, &ip);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/coverity.sh"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 27,
                  "endLine": 102,
                  "endColumn": 32,
                  "snippet": {
                    "text": "#[local] Coverity used to return 201 on success, but it's 200 now\n# See https://github.com/systemd/systemd/blob/master/tools/coverity.sh#L145\nif [ \"$status_code\" != \"200\" ]; then\n  TEXT=$(echo \"$response\" | sed '$d')\n  echo -e \"\\033[33;1mCoverity Scan upload failed: $TEXT.\\033[0m\"\n  exit 1\nfi\n",
                    "rendered": {
                      "text": "#[local] Coverity used to return 201 on success, but it's 200 now\n# See https://github.com/systemd/systemd/blob/master/tools/coverity.sh#L145\nif [ \"$status_code\" != \"200\" ]; then\n  TEXT=$(echo \"$response\" | sed '$d')\n  echo -e \"\\033[33;1mCoverity Scan upload failed: $TEXT.\\033[0m\"\n  exit 1\nfi\n",
                      "markdown": "`#[local] Coverity used to return 201 on success, but it's 200 now\n# See https://github.com/systemd/systemd/blob/master/tools/coverity.sh#L145\nif [ \"$status_code\" != \"200\" ]; then\n  TEXT=$(echo \"$response\" | sed '$d')\n  echo -e \"\\033[33;1mCoverity Scan upload failed: $TEXT.\\033[0m\"\n  exit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/coverity.sh"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 32,
                  "endLine": 98,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  --form version=$SHA \\\n  --form description=\"Travis CI build\" \\\n  $UPLOAD_URL)\nstatus_code=$(echo \"$response\" | sed -n '$p')\n#[local] Coverity used to return 201 on success, but it's 200 now\n# See https://github.com/systemd/systemd/blob/master/tools/coverity.sh#L145\nif [ \"$status_code\" != \"200\" ]; then\n",
                    "rendered": {
                      "text": "  --form version=$SHA \\\n  --form description=\"Travis CI build\" \\\n  $UPLOAD_URL)\nstatus_code=$(echo \"$response\" | sed -n '$p')\n#[local] Coverity used to return 201 on success, but it's 200 now\n# See https://github.com/systemd/systemd/blob/master/tools/coverity.sh#L145\nif [ \"$status_code\" != \"200\" ]; then\n",
                      "markdown": "`  --form version=$SHA \\\n  --form description=\"Travis CI build\" \\\n  $UPLOAD_URL)\nstatus_code=$(echo \"$response\" | sed -n '$p')\n#[local] Coverity used to return 201 on success, but it's 200 now\n# See https://github.com/systemd/systemd/blob/master/tools/coverity.sh#L145\nif [ \"$status_code\" != \"200\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/coverity.sh"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 36,
                  "endLine": 85,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# Upload results\necho -e \"\\033[33;1mTarring Coverity Scan Analysis results...\\033[0m\"\nRESULTS_ARCHIVE=analysis-results.tgz\ntar czf $RESULTS_ARCHIVE $RESULTS_DIR\nSHA=`git rev-parse --short HEAD`\n\necho -e \"\\033[33;1mUploading Coverity Scan Analysis results...\\033[0m\"\n",
                    "rendered": {
                      "text": "\n# Upload results\necho -e \"\\033[33;1mTarring Coverity Scan Analysis results...\\033[0m\"\nRESULTS_ARCHIVE=analysis-results.tgz\ntar czf $RESULTS_ARCHIVE $RESULTS_DIR\nSHA=`git rev-parse --short HEAD`\n\necho -e \"\\033[33;1mUploading Coverity Scan Analysis results...\\033[0m\"\n",
                      "markdown": "`\n# Upload results\necho -e \"\\033[33;1mTarring Coverity Scan Analysis results...\\033[0m\"\nRESULTS_ARCHIVE=analysis-results.tgz\ntar czf $RESULTS_ARCHIVE $RESULTS_DIR\nSHA=`git rev-parse --short HEAD`\n\necho -e \"\\033[33;1mUploading Coverity Scan Analysis results...\\033[0m\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/coverity.sh"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 39,
                  "endLine": 80,
                  "endColumn": 44,
                  "snippet": {
                    "text": "RESULTS_DIR=\"cov-int\"\neval \"${COVERITY_SCAN_BUILD_COMMAND_PREPEND}\"\nCOVERITY_UNSUPPORTED=1 cov-build --dir $RESULTS_DIR $COV_BUILD_OPTIONS $COVERITY_SCAN_BUILD_COMMAND\ncov-import-scm --dir $RESULTS_DIR --scm git --log $RESULTS_DIR/scm_log.txt 2>&1\n\n# Upload results\necho -e \"\\033[33;1mTarring Coverity Scan Analysis results...\\033[0m\"\n",
                    "rendered": {
                      "text": "RESULTS_DIR=\"cov-int\"\neval \"${COVERITY_SCAN_BUILD_COMMAND_PREPEND}\"\nCOVERITY_UNSUPPORTED=1 cov-build --dir $RESULTS_DIR $COV_BUILD_OPTIONS $COVERITY_SCAN_BUILD_COMMAND\ncov-import-scm --dir $RESULTS_DIR --scm git --log $RESULTS_DIR/scm_log.txt 2>&1\n\n# Upload results\necho -e \"\\033[33;1mTarring Coverity Scan Analysis results...\\033[0m\"\n",
                      "markdown": "`RESULTS_DIR=\"cov-int\"\neval \"${COVERITY_SCAN_BUILD_COMMAND_PREPEND}\"\nCOVERITY_UNSUPPORTED=1 cov-build --dir $RESULTS_DIR $COV_BUILD_OPTIONS $COVERITY_SCAN_BUILD_COMMAND\ncov-import-scm --dir $RESULTS_DIR --scm git --log $RESULTS_DIR/scm_log.txt 2>&1\n\n# Upload results\necho -e \"\\033[33;1mTarring Coverity Scan Analysis results...\\033[0m\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/coverity.sh"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 1,
                  "endLine": 66,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  echo -e \"\\033[33;1mExtracting Coverity Scan Analysis Tool...\\033[0m\"\n  mkdir -p $TOOL_BASE\n  pushd $TOOL_BASE\n  tar xzf $TOOL_ARCHIVE\n  popd\nfi\n\n",
                    "rendered": {
                      "text": "  echo -e \"\\033[33;1mExtracting Coverity Scan Analysis Tool...\\033[0m\"\n  mkdir -p $TOOL_BASE\n  pushd $TOOL_BASE\n  tar xzf $TOOL_ARCHIVE\n  popd\nfi\n\n",
                      "markdown": "`  echo -e \"\\033[33;1mExtracting Coverity Scan Analysis Tool...\\033[0m\"\n  mkdir -p $TOOL_BASE\n  pushd $TOOL_BASE\n  tar xzf $TOOL_ARCHIVE\n  popd\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/coverity.sh"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "endLine": 59,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  # Download Coverity Scan Analysis Tool\n  if [ ! -e $TOOL_ARCHIVE ]; then\n    echo -e \"\\033[33;1mDownloading Coverity Scan Analysis Tool...\\033[0m\"\n    wget -nv -O $TOOL_ARCHIVE $TOOL_URL --post-data \"project=$COVERITY_SCAN_PROJECT_NAME&token=$COVERITY_SCAN_TOKEN\"\n  fi\n\n  # Extract Coverity Scan Analysis Tool\n",
                    "rendered": {
                      "text": "  # Download Coverity Scan Analysis Tool\n  if [ ! -e $TOOL_ARCHIVE ]; then\n    echo -e \"\\033[33;1mDownloading Coverity Scan Analysis Tool...\\033[0m\"\n    wget -nv -O $TOOL_ARCHIVE $TOOL_URL --post-data \"project=$COVERITY_SCAN_PROJECT_NAME&token=$COVERITY_SCAN_TOKEN\"\n  fi\n\n  # Extract Coverity Scan Analysis Tool\n",
                      "markdown": "`  # Download Coverity Scan Analysis Tool\n  if [ ! -e $TOOL_ARCHIVE ]; then\n    echo -e \"\\033[33;1mDownloading Coverity Scan Analysis Tool...\\033[0m\"\n    wget -nv -O $TOOL_ARCHIVE $TOOL_URL --post-data \"project=$COVERITY_SCAN_PROJECT_NAME&token=$COVERITY_SCAN_TOKEN\"\n  fi\n\n  # Extract Coverity Scan Analysis Tool\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/coverity.sh"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 26,
                  "endLine": 49,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  if [ \"$AUTH\" = \"true\" ]; then\n    echo -e \"\\033[33;1mCoverity Scan analysis authorized per quota.\\033[0m\"\n  else\n    WHEN=`echo $AUTH_RES | ruby -e \"require 'rubygems'; require 'json'; puts JSON[STDIN.read]['next_upload_permitted_at']\"`\n    echo -e \"\\033[33;1mCoverity Scan analysis NOT authorized until $WHEN.\\033[0m\"\n    exit 0\n  fi\n",
                    "rendered": {
                      "text": "  if [ \"$AUTH\" = \"true\" ]; then\n    echo -e \"\\033[33;1mCoverity Scan analysis authorized per quota.\\033[0m\"\n  else\n    WHEN=`echo $AUTH_RES | ruby -e \"require 'rubygems'; require 'json'; puts JSON[STDIN.read]['next_upload_permitted_at']\"`\n    echo -e \"\\033[33;1mCoverity Scan analysis NOT authorized until $WHEN.\\033[0m\"\n    exit 0\n  fi\n",
                      "markdown": "`  if [ \"$AUTH\" = \"true\" ]; then\n    echo -e \"\\033[33;1mCoverity Scan analysis authorized per quota.\\033[0m\"\n  else\n    WHEN=`echo $AUTH_RES | ruby -e \"require 'rubygems'; require 'json'; puts JSON[STDIN.read]['next_upload_permitted_at']\"`\n    echo -e \"\\033[33;1mCoverity Scan analysis NOT authorized until $WHEN.\\033[0m\"\n    exit 0\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/coverity.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 24,
                  "endLine": 45,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  echo -e \"\\033[33;1mCoverity Scan API access denied. Check COVERITY_SCAN_PROJECT_NAME and COVERITY_SCAN_TOKEN.\\033[0m\"\n  exit 1\nelse\n  AUTH=`echo $AUTH_RES | ruby -e \"require 'rubygems'; require 'json'; puts JSON[STDIN.read]['upload_permitted']\"`\n  if [ \"$AUTH\" = \"true\" ]; then\n    echo -e \"\\033[33;1mCoverity Scan analysis authorized per quota.\\033[0m\"\n  else\n",
                    "rendered": {
                      "text": "  echo -e \"\\033[33;1mCoverity Scan API access denied. Check COVERITY_SCAN_PROJECT_NAME and COVERITY_SCAN_TOKEN.\\033[0m\"\n  exit 1\nelse\n  AUTH=`echo $AUTH_RES | ruby -e \"require 'rubygems'; require 'json'; puts JSON[STDIN.read]['upload_permitted']\"`\n  if [ \"$AUTH\" = \"true\" ]; then\n    echo -e \"\\033[33;1mCoverity Scan analysis authorized per quota.\\033[0m\"\n  else\n",
                      "markdown": "`  echo -e \"\\033[33;1mCoverity Scan API access denied. Check COVERITY_SCAN_PROJECT_NAME and COVERITY_SCAN_TOKEN.\\033[0m\"\n  exit 1\nelse\n  AUTH=`echo $AUTH_RES | ruby -e \"require 'rubygems'; require 'json'; puts JSON[STDIN.read]['upload_permitted']\"`\n  if [ \"$AUTH\" = \"true\" ]; then\n    echo -e \"\\033[33;1mCoverity Scan analysis authorized per quota.\\033[0m\"\n  else\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 23,
                  "endLine": 84,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            info \"install\"\n            docker_exec make -j$((4*$(nproc))) -C src OBJDIR=../build DESTDIR=../install install\n            info \"link binary\"\n            docker_exec bash -c \"EXTRA_CFLAGS=\\\"${EXTRA_CFLAGS}\\\" EXTRA_LDFLAGS=\\\"${EXTRA_LDFLAGS}\\\" ./ci/managers/test_compile.sh\"\n            ;;\n        CLEANUP)\n            info \"Cleanup phase\"\n",
                    "rendered": {
                      "text": "            info \"install\"\n            docker_exec make -j$((4*$(nproc))) -C src OBJDIR=../build DESTDIR=../install install\n            info \"link binary\"\n            docker_exec bash -c \"EXTRA_CFLAGS=\\\"${EXTRA_CFLAGS}\\\" EXTRA_LDFLAGS=\\\"${EXTRA_LDFLAGS}\\\" ./ci/managers/test_compile.sh\"\n            ;;\n        CLEANUP)\n            info \"Cleanup phase\"\n",
                      "markdown": "`            info \"install\"\n            docker_exec make -j$((4*$(nproc))) -C src OBJDIR=../build DESTDIR=../install install\n            info \"link binary\"\n            docker_exec bash -c \"EXTRA_CFLAGS=\\\"${EXTRA_CFLAGS}\\\" EXTRA_LDFLAGS=\\\"${EXTRA_LDFLAGS}\\\" ./ci/managers/test_compile.sh\"\n            ;;\n        CLEANUP)\n            info \"Cleanup phase\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 34,
                  "endLine": 45,
                  "snippet": {
                    "text": "                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n            docker_exec aptitude -y install \"${ADDITIONAL_DEPS[@]}\"\n            echo -e \"::endgroup::\"\n",
                    "rendered": {
                      "text": "                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n            docker_exec aptitude -y install \"${ADDITIONAL_DEPS[@]}\"\n            echo -e \"::endgroup::\"\n",
                      "markdown": "`                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n            docker_exec aptitude -y install \"${ADDITIONAL_DEPS[@]}\"\n            echo -e \"::endgroup::\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 23,
                  "endLine": 43,
                  "endColumn": 29,
                  "snippet": {
                    "text": "                        -w /build --privileged=true --name $CONT_NAME \\\n                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n",
                    "rendered": {
                      "text": "                        -w /build --privileged=true --name $CONT_NAME \\\n                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n",
                      "markdown": "`                        -w /build --privileged=true --name $CONT_NAME \\\n                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 11,
                  "endLine": 89,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        CLEANUP)\n            info \"Cleanup phase\"\n            docker stop $CONT_NAME\n            docker rm -f $CONT_NAME\n            ;;\n        *)\n            echo >&2 \"Unknown phase '$phase'\"\n",
                    "rendered": {
                      "text": "        CLEANUP)\n            info \"Cleanup phase\"\n            docker stop $CONT_NAME\n            docker rm -f $CONT_NAME\n            ;;\n        *)\n            echo >&2 \"Unknown phase '$phase'\"\n",
                      "markdown": "`        CLEANUP)\n            info \"Cleanup phase\"\n            docker stop $CONT_NAME\n            docker rm -f $CONT_NAME\n            ;;\n        *)\n            echo >&2 \"Unknown phase '$phase'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 11,
                  "endLine": 88,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            ;;\n        CLEANUP)\n            info \"Cleanup phase\"\n            docker stop $CONT_NAME\n            docker rm -f $CONT_NAME\n            ;;\n        *)\n",
                    "rendered": {
                      "text": "            ;;\n        CLEANUP)\n            info \"Cleanup phase\"\n            docker stop $CONT_NAME\n            docker rm -f $CONT_NAME\n            ;;\n        *)\n",
                      "markdown": "`            ;;\n        CLEANUP)\n            info \"Cleanup phase\"\n            docker stop $CONT_NAME\n            docker rm -f $CONT_NAME\n            ;;\n        *)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 23,
                  "endLine": 84,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            info \"install\"\n            docker_exec make -j$((4*$(nproc))) -C src OBJDIR=../build DESTDIR=../install install\n            info \"link binary\"\n            docker_exec bash -c \"EXTRA_CFLAGS=\\\"${EXTRA_CFLAGS}\\\" EXTRA_LDFLAGS=\\\"${EXTRA_LDFLAGS}\\\" ./ci/managers/test_compile.sh\"\n            ;;\n        CLEANUP)\n            info \"Cleanup phase\"\n",
                    "rendered": {
                      "text": "            info \"install\"\n            docker_exec make -j$((4*$(nproc))) -C src OBJDIR=../build DESTDIR=../install install\n            info \"link binary\"\n            docker_exec bash -c \"EXTRA_CFLAGS=\\\"${EXTRA_CFLAGS}\\\" EXTRA_LDFLAGS=\\\"${EXTRA_LDFLAGS}\\\" ./ci/managers/test_compile.sh\"\n            ;;\n        CLEANUP)\n            info \"Cleanup phase\"\n",
                      "markdown": "`            info \"install\"\n            docker_exec make -j$((4*$(nproc))) -C src OBJDIR=../build DESTDIR=../install install\n            info \"link binary\"\n            docker_exec bash -c \"EXTRA_CFLAGS=\\\"${EXTRA_CFLAGS}\\\" EXTRA_LDFLAGS=\\\"${EXTRA_LDFLAGS}\\\" ./ci/managers/test_compile.sh\"\n            ;;\n        CLEANUP)\n            info \"Cleanup phase\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 50,
                  "endLine": 77,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            docker_exec make -j$((4*$(nproc))) EXTRA_CFLAGS=\"${EXTRA_CFLAGS}\" EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS}\" -C ./src -B OBJDIR=../build\n            info \"ldd build/libbpf.so:\"\n            docker_exec ldd build/libbpf.so\n            if ! docker_exec ldd build/libbpf.so | grep -q libelf; then\n                error \"No reference to libelf.so in libbpf.so!\"\n                exit 1\n            fi\n",
                    "rendered": {
                      "text": "            docker_exec make -j$((4*$(nproc))) EXTRA_CFLAGS=\"${EXTRA_CFLAGS}\" EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS}\" -C ./src -B OBJDIR=../build\n            info \"ldd build/libbpf.so:\"\n            docker_exec ldd build/libbpf.so\n            if ! docker_exec ldd build/libbpf.so | grep -q libelf; then\n                error \"No reference to libelf.so in libbpf.so!\"\n                exit 1\n            fi\n",
                      "markdown": "`            docker_exec make -j$((4*$(nproc))) EXTRA_CFLAGS=\"${EXTRA_CFLAGS}\" EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS}\" -C ./src -B OBJDIR=../build\n            info \"ldd build/libbpf.so:\"\n            docker_exec ldd build/libbpf.so\n            if ! docker_exec ldd build/libbpf.so | grep -q libelf; then\n                error \"No reference to libelf.so in libbpf.so!\"\n                exit 1\n            fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 23,
                  "endLine": 45,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n            docker_exec aptitude -y install \"${ADDITIONAL_DEPS[@]}\"\n            echo -e \"::endgroup::\"\n",
                    "rendered": {
                      "text": "            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n            docker_exec aptitude -y install \"${ADDITIONAL_DEPS[@]}\"\n            echo -e \"::endgroup::\"\n",
                      "markdown": "`            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n            docker_exec aptitude -y install \"${ADDITIONAL_DEPS[@]}\"\n            echo -e \"::endgroup::\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 23,
                  "endLine": 44,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n            docker_exec aptitude -y install \"${ADDITIONAL_DEPS[@]}\"\n",
                    "rendered": {
                      "text": "                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n            docker_exec aptitude -y install \"${ADDITIONAL_DEPS[@]}\"\n",
                      "markdown": "`                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n            docker_exec aptitude -y install \"${ADDITIONAL_DEPS[@]}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 23,
                  "endLine": 43,
                  "endColumn": 29,
                  "snippet": {
                    "text": "                        -w /build --privileged=true --name $CONT_NAME \\\n                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n",
                    "rendered": {
                      "text": "                        -w /build --privileged=true --name $CONT_NAME \\\n                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n",
                      "markdown": "`                        -w /build --privileged=true --name $CONT_NAME \\\n                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n            docker_exec aptitude -y install make libz-dev libelf-dev\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 35,
                  "endLine": 42,
                  "endColumn": 40,
                  "snippet": {
                    "text": "            $DOCKER_RUN -v $REPO_ROOT:/build:rw \\\n                        -w /build --privileged=true --name $CONT_NAME \\\n                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n",
                    "rendered": {
                      "text": "            $DOCKER_RUN -v $REPO_ROOT:/build:rw \\\n                        -w /build --privileged=true --name $CONT_NAME \\\n                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n",
                      "markdown": "`            $DOCKER_RUN -v $REPO_ROOT:/build:rw \\\n                        -w /build --privileged=true --name $CONT_NAME \\\n                        -dit --net=host debian:$DEBIAN_RELEASE /bin/bash\n            echo -e \"::group::Build Env Setup\"\n            docker_exec bash -c \"echo deb-src http://deb.debian.org/debian $DEBIAN_RELEASE main >>/etc/apt/sources.list\"\n            docker_exec apt-get -y update\n            docker_exec apt-get -y install aptitude\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 11,
                  "endLine": 37,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n            docker --version\n\n            docker pull debian:$DEBIAN_RELEASE\n            info \"Starting container $CONT_NAME\"\n            $DOCKER_RUN -v $REPO_ROOT:/build:rw \\\n                        -w /build --privileged=true --name $CONT_NAME \\\n",
                    "rendered": {
                      "text": "\n            docker --version\n\n            docker pull debian:$DEBIAN_RELEASE\n            info \"Starting container $CONT_NAME\"\n            $DOCKER_RUN -v $REPO_ROOT:/build:rw \\\n                        -w /build --privileged=true --name $CONT_NAME \\\n",
                      "markdown": "`\n            docker --version\n\n            docker pull debian:$DEBIAN_RELEASE\n            info \"Starting container $CONT_NAME\"\n            $DOCKER_RUN -v $REPO_ROOT:/build:rw \\\n                        -w /build --privileged=true --name $CONT_NAME \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11,
                  "endLine": 35,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            info \"Setup phase\"\n            info \"Using Debian $DEBIAN_RELEASE\"\n\n            docker --version\n\n            docker pull debian:$DEBIAN_RELEASE\n            info \"Starting container $CONT_NAME\"\n",
                    "rendered": {
                      "text": "            info \"Setup phase\"\n            info \"Using Debian $DEBIAN_RELEASE\"\n\n            docker --version\n\n            docker pull debian:$DEBIAN_RELEASE\n            info \"Starting container $CONT_NAME\"\n",
                      "markdown": "`            info \"Setup phase\"\n            info \"Using Debian $DEBIAN_RELEASE\"\n\n            docker --version\n\n            docker pull debian:$DEBIAN_RELEASE\n            info \"Starting container $CONT_NAME\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/managers/debian.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 11,
                  "snippet": {
                    "text": "}\n\nfunction docker_exec() {\n    docker exec $ENV_VARS $CONT_NAME \"$@\"\n}\n\nset -eu\n",
                    "rendered": {
                      "text": "}\n\nfunction docker_exec() {\n    docker exec $ENV_VARS $CONT_NAME \"$@\"\n}\n\nset -eu\n",
                      "markdown": "`}\n\nfunction docker_exec() {\n    docker exec $ENV_VARS $CONT_NAME \"$@\"\n}\n\nset -eu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/bpf_tracing.h"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 19,
                  "endLine": 109,
                  "snippet": {
                    "text": "#define __PT_FP_REG bp\n#define __PT_RC_REG ax\n#define __PT_SP_REG sp\n#define __PT_IP_REG ip\n\n#else\n\n#ifdef __i386__\n",
                    "rendered": {
                      "text": "#define __PT_FP_REG bp\n#define __PT_RC_REG ax\n#define __PT_SP_REG sp\n#define __PT_IP_REG ip\n\n#else\n\n#ifdef __i386__\n",
                      "markdown": "`#define __PT_FP_REG bp\n#define __PT_RC_REG ax\n#define __PT_SP_REG sp\n#define __PT_IP_REG ip\n\n#else\n\n#ifdef __i386__\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/btf_dump.c"
                },
                "region": {
                  "startLine": 1735,
                  "startColumn": 19,
                  "endLine": 1735,
                  "endColumn": 24,
                  "snippet": {
                    "text": " * in the format specifier + value(s).\n */\n#define btf_dump_type_values(d, fmt, ...)\t\t\t\t\\\n\tbtf_dump_printf(d, fmt \"%s%s\",\t\t\t\t\t\\\n\t\t\t##__VA_ARGS__,\t\t\t\t\t\\\n\t\t\tbtf_dump_data_delim(d),\t\t\t\t\\\n\t\t\tbtf_dump_data_newline(d))\n",
                    "rendered": {
                      "text": " * in the format specifier + value(s).\n */\n#define btf_dump_type_values(d, fmt, ...)\t\t\t\t\\\n\tbtf_dump_printf(d, fmt \"%s%s\",\t\t\t\t\t\\\n\t\t\t##__VA_ARGS__,\t\t\t\t\t\\\n\t\t\tbtf_dump_data_delim(d),\t\t\t\t\\\n\t\t\tbtf_dump_data_newline(d))\n",
                      "markdown": "` * in the format specifier + value(s).\n */\n#define btf_dump_type_values(d, fmt, ...)\t\t\t\t\\\n\tbtf_dump_printf(d, fmt \"%s%s\",\t\t\t\t\t\\\n\t\t\t##__VA_ARGS__,\t\t\t\t\t\\\n\t\t\tbtf_dump_data_delim(d),\t\t\t\t\\\n\t\t\tbtf_dump_data_newline(d))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/gen_loader.c"
                },
                "region": {
                  "startLine": 904,
                  "startColumn": 34,
                  "endLine": 904,
                  "endColumn": 38,
                  "snippet": {
                    "text": "{\n\tint insn;\n\n\tpr_debug(\"gen: emit_relo (%d): %s at %d %s\\n\",\n\t\t relo->kind, relo->name, relo->insn_idx, relo->is_ld64 ? \"ld64\" : \"call\");\n\tinsn = insns + sizeof(struct bpf_insn) * relo->insn_idx;\n\temit2(gen, BPF_LD_IMM64_RAW_FULL(BPF_REG_8, BPF_PSEUDO_MAP_IDX_VALUE, 0, 0, 0, insn));\n",
                    "rendered": {
                      "text": "{\n\tint insn;\n\n\tpr_debug(\"gen: emit_relo (%d): %s at %d %s\\n\",\n\t\t relo->kind, relo->name, relo->insn_idx, relo->is_ld64 ? \"ld64\" : \"call\");\n\tinsn = insns + sizeof(struct bpf_insn) * relo->insn_idx;\n\temit2(gen, BPF_LD_IMM64_RAW_FULL(BPF_REG_8, BPF_PSEUDO_MAP_IDX_VALUE, 0, 0, 0, insn));\n",
                      "markdown": "`{\n\tint insn;\n\n\tpr_debug(\"gen: emit_relo (%d): %s at %d %s\\n\",\n\t\t relo->kind, relo->name, relo->insn_idx, relo->is_ld64 ? \"ld64\" : \"call\");\n\tinsn = insns + sizeof(struct bpf_insn) * relo->insn_idx;\n\temit2(gen, BPF_LD_IMM64_RAW_FULL(BPF_REG_8, BPF_PSEUDO_MAP_IDX_VALUE, 0, 0, 0, insn));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/skel_internal.h"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 27,
                  "endLine": 325,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n\terr = skel_map_update_elem(map_fd, &key, opts->data, 0);\n\tif (err < 0) {\n\t\topts->errstr = \"failed to update loader map\";\n\t\tset_err;\n\t\tgoto out;\n\t}\n",
                    "rendered": {
                      "text": "\n\terr = skel_map_update_elem(map_fd, &key, opts->data, 0);\n\tif (err < 0) {\n\t\topts->errstr = \"failed to update loader map\";\n\t\tset_err;\n\t\tgoto out;\n\t}\n",
                      "markdown": "`\n\terr = skel_map_update_elem(map_fd, &key, opts->data, 0);\n\tif (err < 0) {\n\t\topts->errstr = \"failed to update loader map\";\n\t\tset_err;\n\t\tgoto out;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/setup/action.yml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 12,
                  "endLine": 23,
                  "snippet": {
                    "text": "        echo export CI_ROOT=$REPO_ROOT/ci >> /tmp/ci_setup\n        echo export VMTEST_ROOT=$CI_ROOT/vmtest >> /tmp/ci_setup\n        echo 'echo ::endgroup::' >> /tmp/ci_setup\n      shell: bash\n\n",
                    "rendered": {
                      "text": "        echo export CI_ROOT=$REPO_ROOT/ci >> /tmp/ci_setup\n        echo export VMTEST_ROOT=$CI_ROOT/vmtest >> /tmp/ci_setup\n        echo 'echo ::endgroup::' >> /tmp/ci_setup\n      shell: bash\n\n",
                      "markdown": "`        echo export CI_ROOT=$REPO_ROOT/ci >> /tmp/ci_setup\n        echo export VMTEST_ROOT=$CI_ROOT/vmtest >> /tmp/ci_setup\n        echo 'echo ::endgroup::' >> /tmp/ci_setup\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/setup/action.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 25,
                  "endLine": 14,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        # arch specific docker\n        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n        echo export PROJECT_NAME='libbpf' >> /tmp/ci_setup\n        echo export AUTHOR_EMAIL=\"$(git log -1 --pretty=\\\"%aE\\\")\" >> /tmp/ci_setup\n",
                    "rendered": {
                      "text": "        # arch specific docker\n        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n        echo export PROJECT_NAME='libbpf' >> /tmp/ci_setup\n        echo export AUTHOR_EMAIL=\"$(git log -1 --pretty=\\\"%aE\\\")\" >> /tmp/ci_setup\n",
                      "markdown": "`        # arch specific docker\n        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n        echo export PROJECT_NAME='libbpf' >> /tmp/ci_setup\n        echo export AUTHOR_EMAIL=\"$(git log -1 --pretty=\\\"%aE\\\")\" >> /tmp/ci_setup\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/setup/action.yml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 12,
                  "endLine": 23,
                  "snippet": {
                    "text": "        echo export CI_ROOT=$REPO_ROOT/ci >> /tmp/ci_setup\n        echo export VMTEST_ROOT=$CI_ROOT/vmtest >> /tmp/ci_setup\n        echo 'echo ::endgroup::' >> /tmp/ci_setup\n      shell: bash\n\n",
                    "rendered": {
                      "text": "        echo export CI_ROOT=$REPO_ROOT/ci >> /tmp/ci_setup\n        echo export VMTEST_ROOT=$CI_ROOT/vmtest >> /tmp/ci_setup\n        echo 'echo ::endgroup::' >> /tmp/ci_setup\n      shell: bash\n\n",
                      "markdown": "`        echo export CI_ROOT=$REPO_ROOT/ci >> /tmp/ci_setup\n        echo export VMTEST_ROOT=$CI_ROOT/vmtest >> /tmp/ci_setup\n        echo 'echo ::endgroup::' >> /tmp/ci_setup\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/setup/action.yml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 17,
                  "endLine": 15,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n        echo export PROJECT_NAME='libbpf' >> /tmp/ci_setup\n        echo export AUTHOR_EMAIL=\"$(git log -1 --pretty=\\\"%aE\\\")\" >> /tmp/ci_setup\n        echo export REPO_ROOT=$GITHUB_WORKSPACE >> /tmp/ci_setup\n",
                    "rendered": {
                      "text": "        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n        echo export PROJECT_NAME='libbpf' >> /tmp/ci_setup\n        echo export AUTHOR_EMAIL=\"$(git log -1 --pretty=\\\"%aE\\\")\" >> /tmp/ci_setup\n        echo export REPO_ROOT=$GITHUB_WORKSPACE >> /tmp/ci_setup\n",
                      "markdown": "`        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n        echo export PROJECT_NAME='libbpf' >> /tmp/ci_setup\n        echo export AUTHOR_EMAIL=\"$(git log -1 --pretty=\\\"%aE\\\")\" >> /tmp/ci_setup\n        echo export REPO_ROOT=$GITHUB_WORKSPACE >> /tmp/ci_setup\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/setup/action.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 17,
                  "endLine": 14,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        # arch specific docker\n        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n        echo export PROJECT_NAME='libbpf' >> /tmp/ci_setup\n        echo export AUTHOR_EMAIL=\"$(git log -1 --pretty=\\\"%aE\\\")\" >> /tmp/ci_setup\n",
                    "rendered": {
                      "text": "        # arch specific docker\n        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n        echo export PROJECT_NAME='libbpf' >> /tmp/ci_setup\n        echo export AUTHOR_EMAIL=\"$(git log -1 --pretty=\\\"%aE\\\")\" >> /tmp/ci_setup\n",
                      "markdown": "`        # arch specific docker\n        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n        echo export PROJECT_NAME='libbpf' >> /tmp/ci_setup\n        echo export AUTHOR_EMAIL=\"$(git log -1 --pretty=\\\"%aE\\\")\" >> /tmp/ci_setup\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/setup/action.yml"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 12,
                  "snippet": {
                    "text": "        export REPO_ROOT=$GITHUB_WORKSPACE\n        export CI_ROOT=$REPO_ROOT/ci\n        # this is somewhat ugly, but that is the easiest way to share this code with\n        # arch specific docker\n        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n",
                    "rendered": {
                      "text": "        export REPO_ROOT=$GITHUB_WORKSPACE\n        export CI_ROOT=$REPO_ROOT/ci\n        # this is somewhat ugly, but that is the easiest way to share this code with\n        # arch specific docker\n        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n",
                      "markdown": "`        export REPO_ROOT=$GITHUB_WORKSPACE\n        export CI_ROOT=$REPO_ROOT/ci\n        # this is somewhat ugly, but that is the easiest way to share this code with\n        # arch specific docker\n        echo 'echo ::group::Env setup' > /tmp/ci_setup\n        echo export DEBIAN_FRONTEND=noninteractive >> /tmp/ci_setup\n        echo sudo apt-get update >> /tmp/ci_setup\n        echo sudo apt-get install -y aptitude qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev libguestfs-tools >> /tmp/ci_setup\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 12,
                  "endLine": 80,
                  "snippet": {
                    "text": "    # 2. if kernel == LATEST, build kernel image from tree\n    - name: Build kernel image\n      if: ${{ inputs.kernel == 'LATEST' }}\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Build Kernel Image\"\n        cd .kernel\n",
                    "rendered": {
                      "text": "    # 2. if kernel == LATEST, build kernel image from tree\n    - name: Build kernel image\n      if: ${{ inputs.kernel == 'LATEST' }}\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Build Kernel Image\"\n        cd .kernel\n",
                      "markdown": "`    # 2. if kernel == LATEST, build kernel image from tree\n    - name: Build kernel image\n      if: ${{ inputs.kernel == 'LATEST' }}\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Build Kernel Image\"\n        cd .kernel\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 12,
                  "endLine": 65,
                  "snippet": {
                    "text": "        patches-root: '${{ github.workspace }}/ci/diffs'\n        repo-root: '.kernel'\n    - name: Prepare to build BPF selftests\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Prepare building selftest\"\n        cd .kernel\n",
                    "rendered": {
                      "text": "        patches-root: '${{ github.workspace }}/ci/diffs'\n        repo-root: '.kernel'\n    - name: Prepare to build BPF selftests\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Prepare building selftest\"\n        cd .kernel\n",
                      "markdown": "`        patches-root: '${{ github.workspace }}/ci/diffs'\n        repo-root: '.kernel'\n    - name: Prepare to build BPF selftests\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Prepare building selftest\"\n        cd .kernel\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 29,
                  "endLine": 52,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n      uses: libbpf/ci/get-linux-source@main\n      with:\n        repo: 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git'\n",
                    "rendered": {
                      "text": "      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n      uses: libbpf/ci/get-linux-source@main\n      with:\n        repo: 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git'\n",
                      "markdown": "`      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n      uses: libbpf/ci/get-linux-source@main\n      with:\n        repo: 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 12,
                  "endLine": 49,
                  "snippet": {
                    "text": "        llvm-version: ${{ inputs.llvm-version }}\n    # 1. download CHECKPOINT kernel source\n    - name: Get checkpoint commit\n      shell: bash\n      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n",
                    "rendered": {
                      "text": "        llvm-version: ${{ inputs.llvm-version }}\n    # 1. download CHECKPOINT kernel source\n    - name: Get checkpoint commit\n      shell: bash\n      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n",
                      "markdown": "`        llvm-version: ${{ inputs.llvm-version }}\n    # 1. download CHECKPOINT kernel source\n    - name: Get checkpoint commit\n      shell: bash\n      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 24,
                  "endLine": 33,
                  "endColumn": 33,
                  "snippet": {
                    "text": "          if [ $(id -u) != 0 ]; then\n            echo 'KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\", OPTIONS+=\"static_node=kvm\"' \\\n              | sudo tee /etc/udev/rules.d/99-kvm4all.rules > /dev/null\n            sudo udevadm control --reload-rules\n            sudo udevadm trigger --name-match=kvm\n          fi\n        else\n",
                    "rendered": {
                      "text": "          if [ $(id -u) != 0 ]; then\n            echo 'KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\", OPTIONS+=\"static_node=kvm\"' \\\n              | sudo tee /etc/udev/rules.d/99-kvm4all.rules > /dev/null\n            sudo udevadm control --reload-rules\n            sudo udevadm trigger --name-match=kvm\n          fi\n        else\n",
                      "markdown": "`          if [ $(id -u) != 0 ]; then\n            echo 'KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\", OPTIONS+=\"static_node=kvm\"' \\\n              | sudo tee /etc/udev/rules.d/99-kvm4all.rules > /dev/null\n            sudo udevadm control --reload-rules\n            sudo udevadm trigger --name-match=kvm\n          fi\n        else\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 12,
                  "endLine": 27,
                  "snippet": {
                    "text": "    # Allow CI user to access /dev/kvm (via qemu) w/o group change/relogin\n    # by changing permissions set by udev.\n    - name: Set /dev/kvm permissions\n      shell: bash\n      run: |\n        if [ -e /dev/kvm ]; then\n          echo \"/dev/kvm exists\"\n          if [ $(id -u) != 0 ]; then\n",
                    "rendered": {
                      "text": "    # Allow CI user to access /dev/kvm (via qemu) w/o group change/relogin\n    # by changing permissions set by udev.\n    - name: Set /dev/kvm permissions\n      shell: bash\n      run: |\n        if [ -e /dev/kvm ]; then\n          echo \"/dev/kvm exists\"\n          if [ $(id -u) != 0 ]; then\n",
                      "markdown": "`    # Allow CI user to access /dev/kvm (via qemu) w/o group change/relogin\n    # by changing permissions set by udev.\n    - name: Set /dev/kvm permissions\n      shell: bash\n      run: |\n        if [ -e /dev/kvm ]; then\n          echo \"/dev/kvm exists\"\n          if [ $(id -u) != 0 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 7,
                  "endLine": 85,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        foldable start \"Build Kernel Image\"\n        cd .kernel\n        make -j $((4*$(nproc))) all > /dev/null\n        cp vmlinux ${{ github.workspace }}\n        cd -\n        foldable end\n    # else, just download prebuilt kernel image\n",
                    "rendered": {
                      "text": "        foldable start \"Build Kernel Image\"\n        cd .kernel\n        make -j $((4*$(nproc))) all > /dev/null\n        cp vmlinux ${{ github.workspace }}\n        cd -\n        foldable end\n    # else, just download prebuilt kernel image\n",
                      "markdown": "`        foldable start \"Build Kernel Image\"\n        cd .kernel\n        make -j $((4*$(nproc))) all > /dev/null\n        cp vmlinux ${{ github.workspace }}\n        cd -\n        foldable end\n    # else, just download prebuilt kernel image\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 12,
                  "endLine": 80,
                  "snippet": {
                    "text": "    # 2. if kernel == LATEST, build kernel image from tree\n    - name: Build kernel image\n      if: ${{ inputs.kernel == 'LATEST' }}\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Build Kernel Image\"\n        cd .kernel\n",
                    "rendered": {
                      "text": "    # 2. if kernel == LATEST, build kernel image from tree\n    - name: Build kernel image\n      if: ${{ inputs.kernel == 'LATEST' }}\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Build Kernel Image\"\n        cd .kernel\n",
                      "markdown": "`    # 2. if kernel == LATEST, build kernel image from tree\n    - name: Build kernel image\n      if: ${{ inputs.kernel == 'LATEST' }}\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Build Kernel Image\"\n        cd .kernel\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 7,
                  "endLine": 72,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        cat tools/testing/selftests/bpf/config \\\n            tools/testing/selftests/bpf/config.${{ inputs.arch }} > .config\n        # this file might or mihgt not exist depending on kernel version\n        cat tools/testing/selftests/bpf/config.vm >> .config || :\n        make olddefconfig && make prepare\n        cd -\n        foldable end\n",
                    "rendered": {
                      "text": "        cat tools/testing/selftests/bpf/config \\\n            tools/testing/selftests/bpf/config.${{ inputs.arch }} > .config\n        # this file might or mihgt not exist depending on kernel version\n        cat tools/testing/selftests/bpf/config.vm >> .config || :\n        make olddefconfig && make prepare\n        cd -\n        foldable end\n",
                      "markdown": "`        cat tools/testing/selftests/bpf/config \\\n            tools/testing/selftests/bpf/config.${{ inputs.arch }} > .config\n        # this file might or mihgt not exist depending on kernel version\n        cat tools/testing/selftests/bpf/config.vm >> .config || :\n        make olddefconfig && make prepare\n        cd -\n        foldable end\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 7,
                  "endLine": 69,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Prepare building selftest\"\n        cd .kernel\n        cat tools/testing/selftests/bpf/config \\\n            tools/testing/selftests/bpf/config.${{ inputs.arch }} > .config\n        # this file might or mihgt not exist depending on kernel version\n        cat tools/testing/selftests/bpf/config.vm >> .config || :\n",
                    "rendered": {
                      "text": "        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Prepare building selftest\"\n        cd .kernel\n        cat tools/testing/selftests/bpf/config \\\n            tools/testing/selftests/bpf/config.${{ inputs.arch }} > .config\n        # this file might or mihgt not exist depending on kernel version\n        cat tools/testing/selftests/bpf/config.vm >> .config || :\n",
                      "markdown": "`        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Prepare building selftest\"\n        cd .kernel\n        cat tools/testing/selftests/bpf/config \\\n            tools/testing/selftests/bpf/config.${{ inputs.arch }} > .config\n        # this file might or mihgt not exist depending on kernel version\n        cat tools/testing/selftests/bpf/config.vm >> .config || :\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 12,
                  "endLine": 65,
                  "snippet": {
                    "text": "        patches-root: '${{ github.workspace }}/ci/diffs'\n        repo-root: '.kernel'\n    - name: Prepare to build BPF selftests\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Prepare building selftest\"\n        cd .kernel\n",
                    "rendered": {
                      "text": "        patches-root: '${{ github.workspace }}/ci/diffs'\n        repo-root: '.kernel'\n    - name: Prepare to build BPF selftests\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Prepare building selftest\"\n        cd .kernel\n",
                      "markdown": "`        patches-root: '${{ github.workspace }}/ci/diffs'\n        repo-root: '.kernel'\n    - name: Prepare to build BPF selftests\n      shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Prepare building selftest\"\n        cd .kernel\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 7,
                  "endLine": 50,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    - name: Get checkpoint commit\n      shell: bash\n      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n      uses: libbpf/ci/get-linux-source@main\n",
                    "rendered": {
                      "text": "    - name: Get checkpoint commit\n      shell: bash\n      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n      uses: libbpf/ci/get-linux-source@main\n",
                      "markdown": "`    - name: Get checkpoint commit\n      shell: bash\n      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n      uses: libbpf/ci/get-linux-source@main\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 12,
                  "endLine": 49,
                  "snippet": {
                    "text": "        llvm-version: ${{ inputs.llvm-version }}\n    # 1. download CHECKPOINT kernel source\n    - name: Get checkpoint commit\n      shell: bash\n      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n",
                    "rendered": {
                      "text": "        llvm-version: ${{ inputs.llvm-version }}\n    # 1. download CHECKPOINT kernel source\n    - name: Get checkpoint commit\n      shell: bash\n      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n",
                      "markdown": "`        llvm-version: ${{ inputs.llvm-version }}\n    # 1. download CHECKPOINT kernel source\n    - name: Get checkpoint commit\n      shell: bash\n      run: |\n        cat CHECKPOINT-COMMIT\n        echo \"CHECKPOINT=$(cat CHECKPOINT-COMMIT)\" >> $GITHUB_ENV\n    - name: Get kernel source at checkpoint\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 20,
                  "endLine": 32,
                  "endColumn": 25,
                  "snippet": {
                    "text": "          echo \"/dev/kvm exists\"\n          if [ $(id -u) != 0 ]; then\n            echo 'KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\", OPTIONS+=\"static_node=kvm\"' \\\n              | sudo tee /etc/udev/rules.d/99-kvm4all.rules > /dev/null\n            sudo udevadm control --reload-rules\n            sudo udevadm trigger --name-match=kvm\n          fi\n",
                    "rendered": {
                      "text": "          echo \"/dev/kvm exists\"\n          if [ $(id -u) != 0 ]; then\n            echo 'KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\", OPTIONS+=\"static_node=kvm\"' \\\n              | sudo tee /etc/udev/rules.d/99-kvm4all.rules > /dev/null\n            sudo udevadm control --reload-rules\n            sudo udevadm trigger --name-match=kvm\n          fi\n",
                      "markdown": "`          echo \"/dev/kvm exists\"\n          if [ $(id -u) != 0 ]; then\n            echo 'KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\", OPTIONS+=\"static_node=kvm\"' \\\n              | sudo tee /etc/udev/rules.d/99-kvm4all.rules > /dev/null\n            sudo udevadm control --reload-rules\n            sudo udevadm trigger --name-match=kvm\n          fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/vmtest/action.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 12,
                  "endLine": 27,
                  "snippet": {
                    "text": "    # Allow CI user to access /dev/kvm (via qemu) w/o group change/relogin\n    # by changing permissions set by udev.\n    - name: Set /dev/kvm permissions\n      shell: bash\n      run: |\n        if [ -e /dev/kvm ]; then\n          echo \"/dev/kvm exists\"\n          if [ $(id -u) != 0 ]; then\n",
                    "rendered": {
                      "text": "    # Allow CI user to access /dev/kvm (via qemu) w/o group change/relogin\n    # by changing permissions set by udev.\n    - name: Set /dev/kvm permissions\n      shell: bash\n      run: |\n        if [ -e /dev/kvm ]; then\n          echo \"/dev/kvm exists\"\n          if [ $(id -u) != 0 ]; then\n",
                      "markdown": "`    # Allow CI user to access /dev/kvm (via qemu) w/o group change/relogin\n    # by changing permissions set by udev.\n    - name: Set /dev/kvm permissions\n      shell: bash\n      run: |\n        if [ -e /dev/kvm ]; then\n          echo \"/dev/kvm exists\"\n          if [ $(id -u) != 0 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 37,
                  "endColumn": 5,
                  "snippet": {
                    "text": "while read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${LIBBPF_MAILMAP}\"\n",
                    "rendered": {
                      "text": "while read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${LIBBPF_MAILMAP}\"\n",
                      "markdown": "`while read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${LIBBPF_MAILMAP}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 35,
                  "endLine": 35,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\nwhile read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${LIBBPF_MAILMAP}\"\n",
                    "rendered": {
                      "text": "\nwhile read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${LIBBPF_MAILMAP}\"\n",
                      "markdown": "`\nwhile read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${LIBBPF_MAILMAP}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 9,
                  "snippet": {
                    "text": "grep_lines() {\n    local pattern=\"$1\"\n    local file=\"$2\"\n    grep \"${pattern}\" \"${file}\" || true\n}\n\nwhile read -r email; do\n",
                    "rendered": {
                      "text": "grep_lines() {\n    local pattern=\"$1\"\n    local file=\"$2\"\n    grep \"${pattern}\" \"${file}\" || true\n}\n\nwhile read -r email; do\n",
                      "markdown": "`grep_lines() {\n    local pattern=\"$1\"\n    local file=\"$2\"\n    grep \"${pattern}\" \"${file}\" || true\n}\n\nwhile read -r email; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/ci/vmtest/configs/DENYLIST-latest.s390x"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 90,
                  "endLine": 4,
                  "snippet": {
                    "text": "# TEMPORARY\nsockmap_listen/sockhash VSOCK test_vsock_redir\nusdt/basic                               # failing verifier due to bounds check after LLVM update\nusdt/multispec                           # same as above\n\ndeny_namespace                           # not yet in bpf denylist\ntc_redirect/tc_redirect_dtime            # very flaky\n",
                    "rendered": {
                      "text": "# TEMPORARY\nsockmap_listen/sockhash VSOCK test_vsock_redir\nusdt/basic                               # failing verifier due to bounds check after LLVM update\nusdt/multispec                           # same as above\n\ndeny_namespace                           # not yet in bpf denylist\ntc_redirect/tc_redirect_dtime            # very flaky\n",
                      "markdown": "`# TEMPORARY\nsockmap_listen/sockhash VSOCK test_vsock_redir\nusdt/basic                               # failing verifier due to bounds check after LLVM update\nusdt/multispec                           # same as above\n\ndeny_namespace                           # not yet in bpf denylist\ntc_redirect/tc_redirect_dtime            # very flaky\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_naming_convention.rst"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 38,
                  "endLine": 178,
                  "endColumn": 42,
                  "snippet": {
                    "text": "description about this API. It starts with the name of the API, denoted in bold\nlike so: **api_name**. Please include an open and close parenthesis if this is a\nfunction. Follow with the short description of the API. A longer form description\ncan be added below the last directive, at the bottom of the comment.\n\nParameters are denoted with the @param directive, there should be one for each\nparameter. If this is a function with a non-void return, use the @return directive\n",
                    "rendered": {
                      "text": "description about this API. It starts with the name of the API, denoted in bold\nlike so: **api_name**. Please include an open and close parenthesis if this is a\nfunction. Follow with the short description of the API. A longer form description\ncan be added below the last directive, at the bottom of the comment.\n\nParameters are denoted with the @param directive, there should be one for each\nparameter. If this is a function with a non-void return, use the @return directive\n",
                      "markdown": "`description about this API. It starts with the name of the API, denoted in bold\nlike so: **api_name**. Please include an open and close parenthesis if this is a\nfunction. Follow with the short description of the API. A longer form description\ncan be added below the last directive, at the bottom of the comment.\n\nParameters are denoted with the @param directive, there should be one for each\nparameter. If this is a function with a non-void return, use the @return directive\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_naming_convention.rst"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 27,
                  "endLine": 98,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nEvery time ABI is being changed, e.g. because a new symbol is added or\nsemantic of existing symbol is changed, ABI version should be bumped.\nThis bump in ABI version is at most once per kernel development cycle.\n\nFor example, if current state of ``libbpf.map`` is:\n\n",
                    "rendered": {
                      "text": "\nEvery time ABI is being changed, e.g. because a new symbol is added or\nsemantic of existing symbol is changed, ABI version should be bumped.\nThis bump in ABI version is at most once per kernel development cycle.\n\nFor example, if current state of ``libbpf.map`` is:\n\n",
                      "markdown": "`\nEvery time ABI is being changed, e.g. because a new symbol is added or\nsemantic of existing symbol is changed, ABI version should be bumped.\nThis bump in ABI version is at most once per kernel development cycle.\n\nFor example, if current state of ``libbpf.map`` is:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_naming_convention.rst"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 17,
                  "endLine": 132,
                  "endColumn": 25,
                  "snippet": {
                    "text": ", where new version ``LIBBPF_0.0.2`` depends on the previous\n``LIBBPF_0.0.1``.\n\nFormat of version script and ways to handle ABI changes, including\nincompatible ones, described in details in [1].\n\nStand-alone build\n",
                    "rendered": {
                      "text": ", where new version ``LIBBPF_0.0.2`` depends on the previous\n``LIBBPF_0.0.1``.\n\nFormat of version script and ways to handle ABI changes, including\nincompatible ones, described in details in [1].\n\nStand-alone build\n",
                      "markdown": "`, where new version ``LIBBPF_0.0.2`` depends on the previous\n``LIBBPF_0.0.1``.\n\nFormat of version script and ways to handle ABI changes, including\nincompatible ones, described in details in [1].\n\nStand-alone build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_naming_convention.rst"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 5,
                  "endLine": 96,
                  "endColumn": 11,
                  "snippet": {
                    "text": "Version name is ``LIBBPF_`` prefix + three-component numeric version,\nstarting from ``0.0.1``.\n\nEvery time ABI is being changed, e.g. because a new symbol is added or\nsemantic of existing symbol is changed, ABI version should be bumped.\nThis bump in ABI version is at most once per kernel development cycle.\n\n",
                    "rendered": {
                      "text": "Version name is ``LIBBPF_`` prefix + three-component numeric version,\nstarting from ``0.0.1``.\n\nEvery time ABI is being changed, e.g. because a new symbol is added or\nsemantic of existing symbol is changed, ABI version should be bumped.\nThis bump in ABI version is at most once per kernel development cycle.\n\n",
                      "markdown": "`Version name is ``LIBBPF_`` prefix + three-component numeric version,\nstarting from ``0.0.1``.\n\nEvery time ABI is being changed, e.g. because a new symbol is added or\nsemantic of existing symbol is changed, ABI version should be bumped.\nThis bump in ABI version is at most once per kernel development cycle.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_naming_convention.rst"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 51,
                  "endLine": 90,
                  "endColumn": 59,
                  "snippet": {
                    "text": "--------------\n\nTo make future ABI extensions possible libbpf ABI is versioned.\nVersioning is implemented by ``libbpf.map`` version script that is\npassed to linker.\n\nVersion name is ``LIBBPF_`` prefix + three-component numeric version,\n",
                    "rendered": {
                      "text": "--------------\n\nTo make future ABI extensions possible libbpf ABI is versioned.\nVersioning is implemented by ``libbpf.map`` version script that is\npassed to linker.\n\nVersion name is ``LIBBPF_`` prefix + three-component numeric version,\n",
                      "markdown": "`--------------\n\nTo make future ABI extensions possible libbpf ABI is versioned.\nVersioning is implemented by ``libbpf.map`` version script that is\npassed to linker.\n\nVersion name is ``LIBBPF_`` prefix + three-component numeric version,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_build.rst"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 15,
                  "endLine": 35,
                  "snippet": {
                    "text": "dependency installed in /build/root/ and install them together with libbpf\nheaders in a build directory /build/root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ PKG_CONFIG_PATH=/build/root/lib64/pkgconfig DESTDIR=/build/root make",
                    "rendered": {
                      "text": "dependency installed in /build/root/ and install them together with libbpf\nheaders in a build directory /build/root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ PKG_CONFIG_PATH=/build/root/lib64/pkgconfig DESTDIR=/build/root make",
                      "markdown": "`dependency installed in /build/root/ and install them together with libbpf\nheaders in a build directory /build/root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ PKG_CONFIG_PATH=/build/root/lib64/pkgconfig DESTDIR=/build/root make`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_build.rst"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 15,
                  "endLine": 25,
                  "snippet": {
                    "text": "To build only static libbpf.a library in directory build/ and install them\ntogether with libbpf headers in a staging directory root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ mkdir build root\n    $ BUILD_STATIC_ONLY=y OBJDIR=build DESTDIR=root make install\n",
                    "rendered": {
                      "text": "To build only static libbpf.a library in directory build/ and install them\ntogether with libbpf headers in a staging directory root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ mkdir build root\n    $ BUILD_STATIC_ONLY=y OBJDIR=build DESTDIR=root make install\n",
                      "markdown": "`To build only static libbpf.a library in directory build/ and install them\ntogether with libbpf headers in a staging directory root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ mkdir build root\n    $ BUILD_STATIC_ONLY=y OBJDIR=build DESTDIR=root make install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_build.rst"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 15,
                  "endLine": 17,
                  "snippet": {
                    "text": "\nTo build both static libbpf.a and shared libbpf.so:\n\n.. code-block:: bash\n\n    $ cd src\n    $ make\n\n",
                    "rendered": {
                      "text": "\nTo build both static libbpf.a and shared libbpf.so:\n\n.. code-block:: bash\n\n    $ cd src\n    $ make\n\n",
                      "markdown": "`\nTo build both static libbpf.a and shared libbpf.so:\n\n.. code-block:: bash\n\n    $ cd src\n    $ make\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_build.rst"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 19,
                  "endLine": 11,
                  "endColumn": 23,
                  "snippet": {
                    "text": "pkg-config is used by default to find libelf, and the program called\ncan be overridden with PKG_CONFIG.\n\nIf using pkg-config at build time is not desired, it can be disabled by\nsetting NO_PKG_CONFIG=1 when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n",
                    "rendered": {
                      "text": "pkg-config is used by default to find libelf, and the program called\ncan be overridden with PKG_CONFIG.\n\nIf using pkg-config at build time is not desired, it can be disabled by\nsetting NO_PKG_CONFIG=1 when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n",
                      "markdown": "`pkg-config is used by default to find libelf, and the program called\ncan be overridden with PKG_CONFIG.\n\nIf using pkg-config at build time is not desired, it can be disabled by\nsetting NO_PKG_CONFIG=1 when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_build.rst"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 15,
                  "endLine": 35,
                  "snippet": {
                    "text": "dependency installed in /build/root/ and install them together with libbpf\nheaders in a build directory /build/root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ PKG_CONFIG_PATH=/build/root/lib64/pkgconfig DESTDIR=/build/root make",
                    "rendered": {
                      "text": "dependency installed in /build/root/ and install them together with libbpf\nheaders in a build directory /build/root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ PKG_CONFIG_PATH=/build/root/lib64/pkgconfig DESTDIR=/build/root make",
                      "markdown": "`dependency installed in /build/root/ and install them together with libbpf\nheaders in a build directory /build/root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ PKG_CONFIG_PATH=/build/root/lib64/pkgconfig DESTDIR=/build/root make`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_build.rst"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 15,
                  "endLine": 25,
                  "snippet": {
                    "text": "To build only static libbpf.a library in directory build/ and install them\ntogether with libbpf headers in a staging directory root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ mkdir build root\n    $ BUILD_STATIC_ONLY=y OBJDIR=build DESTDIR=root make install\n",
                    "rendered": {
                      "text": "To build only static libbpf.a library in directory build/ and install them\ntogether with libbpf headers in a staging directory root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ mkdir build root\n    $ BUILD_STATIC_ONLY=y OBJDIR=build DESTDIR=root make install\n",
                      "markdown": "`To build only static libbpf.a library in directory build/ and install them\ntogether with libbpf headers in a staging directory root/:\n\n.. code-block:: bash\n\n    $ cd src\n    $ mkdir build root\n    $ BUILD_STATIC_ONLY=y OBJDIR=build DESTDIR=root make install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_build.rst"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 15,
                  "endLine": 17,
                  "snippet": {
                    "text": "\nTo build both static libbpf.a and shared libbpf.so:\n\n.. code-block:: bash\n\n    $ cd src\n    $ make\n\n",
                    "rendered": {
                      "text": "\nTo build both static libbpf.a and shared libbpf.so:\n\n.. code-block:: bash\n\n    $ cd src\n    $ make\n\n",
                      "markdown": "`\nTo build both static libbpf.a and shared libbpf.so:\n\n.. code-block:: bash\n\n    $ cd src\n    $ make\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_build.rst"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 28,
                  "endLine": 11,
                  "endColumn": 34,
                  "snippet": {
                    "text": "pkg-config is used by default to find libelf, and the program called\ncan be overridden with PKG_CONFIG.\n\nIf using pkg-config at build time is not desired, it can be disabled by\nsetting NO_PKG_CONFIG=1 when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n",
                    "rendered": {
                      "text": "pkg-config is used by default to find libelf, and the program called\ncan be overridden with PKG_CONFIG.\n\nIf using pkg-config at build time is not desired, it can be disabled by\nsetting NO_PKG_CONFIG=1 when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n",
                      "markdown": "`pkg-config is used by default to find libelf, and the program called\ncan be overridden with PKG_CONFIG.\n\nIf using pkg-config at build time is not desired, it can be disabled by\nsetting NO_PKG_CONFIG=1 when calling make.\n\nTo build both static libbpf.a and shared libbpf.so:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/libbpf_build.rst"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 32,
                  "endLine": 8,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\nlibelf and zlib are internal dependencies of libbpf and thus are required to link\nagainst and must be installed on the system for applications to work.\npkg-config is used by default to find libelf, and the program called\ncan be overridden with PKG_CONFIG.\n\nIf using pkg-config at build time is not desired, it can be disabled by\n",
                    "rendered": {
                      "text": "\nlibelf and zlib are internal dependencies of libbpf and thus are required to link\nagainst and must be installed on the system for applications to work.\npkg-config is used by default to find libelf, and the program called\ncan be overridden with PKG_CONFIG.\n\nIf using pkg-config at build time is not desired, it can be disabled by\n",
                      "markdown": "`\nlibelf and zlib are internal dependencies of libbpf and thus are required to link\nagainst and must be installed on the system for applications to work.\npkg-config is used by default to find libelf, and the program called\ncan be overridden with PKG_CONFIG.\n\nIf using pkg-config at build time is not desired, it can be disabled by\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/conf.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 32,
                  "endLine": 30,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# This pattern also affects html_static_path and html_extra_path.\nexclude_patterns = []\n\nread_the_docs_build = os.environ.get('READTHEDOCS', None) == 'True'\n\nif read_the_docs_build:\n    subprocess.call('cd sphinx ; make clean', shell=True)\n",
                    "rendered": {
                      "text": "# This pattern also affects html_static_path and html_extra_path.\nexclude_patterns = []\n\nread_the_docs_build = os.environ.get('READTHEDOCS', None) == 'True'\n\nif read_the_docs_build:\n    subprocess.call('cd sphinx ; make clean', shell=True)\n",
                      "markdown": "`# This pattern also affects html_static_path and html_extra_path.\nexclude_patterns = []\n\nread_the_docs_build = os.environ.get('READTHEDOCS', None) == 'True'\n\nif read_the_docs_build:\n    subprocess.call('cd sphinx ; make clean', shell=True)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/docs/conf.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 25,
                  "endLine": 30,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# This pattern also affects html_static_path and html_extra_path.\nexclude_patterns = []\n\nread_the_docs_build = os.environ.get('READTHEDOCS', None) == 'True'\n\nif read_the_docs_build:\n    subprocess.call('cd sphinx ; make clean', shell=True)\n",
                    "rendered": {
                      "text": "# This pattern also affects html_static_path and html_extra_path.\nexclude_patterns = []\n\nread_the_docs_build = os.environ.get('READTHEDOCS', None) == 'True'\n\nif read_the_docs_build:\n    subprocess.call('cd sphinx ; make clean', shell=True)\n",
                      "markdown": "`# This pattern also affects html_static_path and html_extra_path.\nexclude_patterns = []\n\nread_the_docs_build = os.environ.get('READTHEDOCS', None) == 'True'\n\nif read_the_docs_build:\n    subprocess.call('cd sphinx ; make clean', shell=True)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/elf.c"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 26,
                  "endLine": 368,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\"try using shared library path instead\");\n\t\t\tret = -ENOENT;\n\t\t} else {\n\t\t\tpr_warn(\"elf: failed to find symbol '%s' in '%s'\\n\", name, binary_path);\n\t\t}\n\t}\nout:\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\"try using shared library path instead\");\n\t\t\tret = -ENOENT;\n\t\t} else {\n\t\t\tpr_warn(\"elf: failed to find symbol '%s' in '%s'\\n\", name, binary_path);\n\t\t}\n\t}\nout:\n",
                      "markdown": "`\t\t\t\t\t\t\"try using shared library path instead\");\n\t\t\tret = -ENOENT;\n\t\t} else {\n\t\t\tpr_warn(\"elf: failed to find symbol '%s' in '%s'\\n\", name, binary_path);\n\t\t}\n\t}\nout:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/elf.c"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 26,
                  "endLine": 116,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n\tscn = elf_find_next_scn_by_type(elf, sh_type, NULL);\n\tif (!scn) {\n\t\tpr_debug(\"elf: failed to find symbol table ELF sections in '%s'\\n\",\n\t\t\t binary_path);\n\t\treturn -ENOENT;\n\t}\n",
                    "rendered": {
                      "text": "\n\tscn = elf_find_next_scn_by_type(elf, sh_type, NULL);\n\tif (!scn) {\n\t\tpr_debug(\"elf: failed to find symbol table ELF sections in '%s'\\n\",\n\t\t\t binary_path);\n\t\treturn -ENOENT;\n\t}\n",
                      "markdown": "`\n\tscn = elf_find_next_scn_by_type(elf, sh_type, NULL);\n\tif (!scn) {\n\t\tpr_debug(\"elf: failed to find symbol table ELF sections in '%s'\\n\",\n\t\t\t binary_path);\n\t\treturn -ENOENT;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/btf_relocate.c"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 5,
                  "endLine": 113,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\twhile (low <= high) {\n\t\tint mid = (low + high)/2;\n\t\tstruct btf_name_info *val = &vals[mid];\n\t\tint diff = cmp_btf_name_size(key, val);\n\n\t\tif (diff == 0)\n\t\t\tret = val;\n",
                    "rendered": {
                      "text": "\twhile (low <= high) {\n\t\tint mid = (low + high)/2;\n\t\tstruct btf_name_info *val = &vals[mid];\n\t\tint diff = cmp_btf_name_size(key, val);\n\n\t\tif (diff == 0)\n\t\t\tret = val;\n",
                      "markdown": "`\twhile (low <= high) {\n\t\tint mid = (low + high)/2;\n\t\tstruct btf_name_info *val = &vals[mid];\n\t\tint diff = cmp_btf_name_size(key, val);\n\n\t\tif (diff == 0)\n\t\t\tret = val;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/Makefile"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 19,
                  "endLine": 148,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t$(Q)$(INSTALL) $(if $3,-m $3,) $1 '$(DESTDIR)$2'\nendef\n\n# Preserve symlinks at installation.\ndefine do_s_install\n\t$(call msg,INSTALL,$1)\n\t$(Q)if [ ! -d '$(DESTDIR)$2' ]; then\t\t\\\n",
                    "rendered": {
                      "text": "\t$(Q)$(INSTALL) $(if $3,-m $3,) $1 '$(DESTDIR)$2'\nendef\n\n# Preserve symlinks at installation.\ndefine do_s_install\n\t$(call msg,INSTALL,$1)\n\t$(Q)if [ ! -d '$(DESTDIR)$2' ]; then\t\t\\\n",
                      "markdown": "`\t$(Q)$(INSTALL) $(if $3,-m $3,) $1 '$(DESTDIR)$2'\nendef\n\n# Preserve symlinks at installation.\ndefine do_s_install\n\t$(call msg,INSTALL,$1)\n\t$(Q)if [ ! -d '$(DESTDIR)$2' ]; then\t\t\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/Makefile"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 30,
                  "endLine": 91,
                  "endColumn": 34,
                  "snippet": {
                    "text": "endif\n\n# By default let the pc file itself use ${prefix} in includedir/libdir so that\n# the prefix can be overridden at runtime (eg: --define-prefix)\nifndef LIBDIR\n\tLIBDIR_PC := $$\\{prefix\\}/$(LIBSUBDIR)\nelse\n",
                    "rendered": {
                      "text": "endif\n\n# By default let the pc file itself use ${prefix} in includedir/libdir so that\n# the prefix can be overridden at runtime (eg: --define-prefix)\nifndef LIBDIR\n\tLIBDIR_PC := $$\\{prefix\\}/$(LIBSUBDIR)\nelse\n",
                      "markdown": "`endif\n\n# By default let the pc file itself use ${prefix} in includedir/libdir so that\n# the prefix can be overridden at runtime (eg: --define-prefix)\nifndef LIBDIR\n\tLIBDIR_PC := $$\\{prefix\\}/$(LIBSUBDIR)\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/Makefile"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 17,
                  "endLine": 184,
                  "endColumn": 24,
                  "snippet": {
                    "text": "tags:\n\t$(call msg,CTAGS)\n\t$(Q)rm -f TAGS tags\n\t$(Q)ls *.c *.h | xargs $(TAGS_PROG) -a\n\nforce:\n",
                    "rendered": {
                      "text": "tags:\n\t$(call msg,CTAGS)\n\t$(Q)rm -f TAGS tags\n\t$(Q)ls *.c *.h | xargs $(TAGS_PROG) -a\n\nforce:\n",
                      "markdown": "`tags:\n\t$(call msg,CTAGS)\n\t$(Q)rm -f TAGS tags\n\t$(Q)ls *.c *.h | xargs $(TAGS_PROG) -a\n\nforce:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/Makefile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 93,
                  "endLine": 16,
                  "endColumn": 98,
                  "snippet": {
                    "text": "LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n",
                    "rendered": {
                      "text": "LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n",
                      "markdown": "`LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/Makefile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 82,
                  "endLine": 16,
                  "endColumn": 88,
                  "snippet": {
                    "text": "LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n",
                    "rendered": {
                      "text": "LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n",
                      "markdown": "`LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/Makefile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 71,
                  "endLine": 16,
                  "endColumn": 77,
                  "snippet": {
                    "text": "LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n",
                    "rendered": {
                      "text": "LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n",
                      "markdown": "`LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/src/Makefile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 29,
                  "endLine": 16,
                  "endColumn": 35,
                  "snippet": {
                    "text": "LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n",
                    "rendered": {
                      "text": "LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n",
                      "markdown": "`LIBBPF_PATCH_VERSION := 0\nLIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)\nLIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0\nLIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\nifneq ($(LIBBPF_MAJMIN_VERSION), $(LIBBPF_MAP_VERSION))\n$(error Libbpf release ($(LIBBPF_VERSION)) and map ($(LIBBPF_MAP_VERSION)) versions are out of sync!)\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/workflows/coverity.yml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 12,
                  "endLine": 32,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          COVERITY_SCAN_BUILD_COMMAND_PREPEND: 'cd src/'\n          COVERITY_SCAN_BUILD_COMMAND: 'make'\n      - name: SCM log\n        run: cat /home/runner/work/libbpf/libbpf/src/cov-int/scm_log.txt\n",
                    "rendered": {
                      "text": "          COVERITY_SCAN_BUILD_COMMAND_PREPEND: 'cd src/'\n          COVERITY_SCAN_BUILD_COMMAND: 'make'\n      - name: SCM log\n        run: cat /home/runner/work/libbpf/libbpf/src/cov-int/scm_log.txt\n",
                      "markdown": "`          COVERITY_SCAN_BUILD_COMMAND_PREPEND: 'cd src/'\n          COVERITY_SCAN_BUILD_COMMAND: 'make'\n      - name: SCM log\n        run: cat /home/runner/work/libbpf/libbpf/src/cov-int/scm_log.txt\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 5,
                  "snippet": {
                    "text": "fi\n\n# Ideally libbelf should be built using release tarballs available\n# at https://sourceware.org/elfutils/ftp/. Unfortunately sometimes they\n# fail to compile (for example, elfutils-0.185 fails to compile with LDFLAGS enabled\n# due to https://bugs.gentoo.org/794601) so let's just point the script to\n# commits referring to versions of libelf that actually can be built\n",
                    "rendered": {
                      "text": "fi\n\n# Ideally libbelf should be built using release tarballs available\n# at https://sourceware.org/elfutils/ftp/. Unfortunately sometimes they\n# fail to compile (for example, elfutils-0.185 fails to compile with LDFLAGS enabled\n# due to https://bugs.gentoo.org/794601) so let's just point the script to\n# commits referring to versions of libelf that actually can be built\n",
                      "markdown": "`fi\n\n# Ideally libbelf should be built using release tarballs available\n# at https://sourceware.org/elfutils/ftp/. Unfortunately sometimes they\n# fail to compile (for example, elfutils-0.185 fails to compile with LDFLAGS enabled\n# due to https://bugs.gentoo.org/794601) so let's just point the script to\n# commits referring to versions of libelf that actually can be built\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 82,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\n$CC $CFLAGS -Isrc -Iinclude -Iinclude/uapi -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -c fuzz/bpf-object-fuzzer.c -o bpf-object-fuzzer.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE bpf-object-fuzzer.o src/libbpf.a \"$(pwd)/elfutils/libelf/libelf.a\" -l:libz.a -o \"$OUT/bpf-object-fuzzer\"\n\ncp fuzz/bpf-object-fuzzer_seed_corpus.zip \"$OUT\"\n",
                    "rendered": {
                      "text": "\n$CC $CFLAGS -Isrc -Iinclude -Iinclude/uapi -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -c fuzz/bpf-object-fuzzer.c -o bpf-object-fuzzer.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE bpf-object-fuzzer.o src/libbpf.a \"$(pwd)/elfutils/libelf/libelf.a\" -l:libz.a -o \"$OUT/bpf-object-fuzzer\"\n\ncp fuzz/bpf-object-fuzzer_seed_corpus.zip \"$OUT\"\n",
                      "markdown": "`\n$CC $CFLAGS -Isrc -Iinclude -Iinclude/uapi -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -c fuzz/bpf-object-fuzzer.c -o bpf-object-fuzzer.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE bpf-object-fuzzer.o src/libbpf.a \"$(pwd)/elfutils/libelf/libelf.a\" -l:libz.a -o \"$OUT/bpf-object-fuzzer\"\n\ncp fuzz/bpf-object-fuzzer_seed_corpus.zip \"$OUT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 3,
                  "endLine": 67,
                  "endColumn": 8,
                  "snippet": {
                    "text": "if ! ./configure --enable-maintainer-mode --disable-debuginfod --disable-libdebuginfod \\\n            --disable-demangler --without-bzlib --without-lzma --without-zstd \\\n\t    CC=\"$CC\" CFLAGS=\"-Wno-error $CFLAGS\" CXX=\"$CXX\" CXXFLAGS=\"-Wno-error $CXXFLAGS\" LDFLAGS=\"$CFLAGS\"; then\n    cat config.log\n    exit 1\nfi\n\n",
                    "rendered": {
                      "text": "if ! ./configure --enable-maintainer-mode --disable-debuginfod --disable-libdebuginfod \\\n            --disable-demangler --without-bzlib --without-lzma --without-zstd \\\n\t    CC=\"$CC\" CFLAGS=\"-Wno-error $CFLAGS\" CXX=\"$CXX\" CXXFLAGS=\"-Wno-error $CXXFLAGS\" LDFLAGS=\"$CFLAGS\"; then\n    cat config.log\n    exit 1\nfi\n\n",
                      "markdown": "`if ! ./configure --enable-maintainer-mode --disable-debuginfod --disable-libdebuginfod \\\n            --disable-demangler --without-bzlib --without-lzma --without-zstd \\\n\t    CC=\"$CC\" CFLAGS=\"-Wno-error $CFLAGS\" CXX=\"$CXX\" CXXFLAGS=\"-Wno-error $CXXFLAGS\" LDFLAGS=\"$CFLAGS\"; then\n    cat config.log\n    exit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 3,
                  "endLine": 60,
                  "endColumn": 8,
                  "snippet": {
                    "text": "if [[ \"$SANITIZER\" == undefined ]]; then\n    # That's basicaly what --enable-sanitize-undefined does to turn off unaligned access\n    # elfutils heavily relies on on i386/x86_64 but without changing compiler flags along the way\n    sed -i 's/\\(check_undefined_val\\)=[0-9]/\\1=1/' configure.ac\nfi\n\nautoreconf -i -f\n",
                    "rendered": {
                      "text": "if [[ \"$SANITIZER\" == undefined ]]; then\n    # That's basicaly what --enable-sanitize-undefined does to turn off unaligned access\n    # elfutils heavily relies on on i386/x86_64 but without changing compiler flags along the way\n    sed -i 's/\\(check_undefined_val\\)=[0-9]/\\1=1/' configure.ac\nfi\n\nautoreconf -i -f\n",
                      "markdown": "`if [[ \"$SANITIZER\" == undefined ]]; then\n    # That's basicaly what --enable-sanitize-undefined does to turn off unaligned access\n    # elfutils heavily relies on on i386/x86_64 but without changing compiler flags along the way\n    sed -i 's/\\(check_undefined_val\\)=[0-9]/\\1=1/' configure.ac\nfi\n\nautoreconf -i -f\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 57,
                  "endLine": 55,
                  "endColumn": 4,
                  "snippet": {
                    "text": "sed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n\n# ASan isn't compatible with -Wl,-z,defs either:\n# https://clang.llvm.org/docs/AddressSanitizer.html#usage\nsed -i 's/^\\(ZDEFS_LDFLAGS=\\).*/\\1/' configure.ac\n\nif [[ \"$SANITIZER\" == undefined ]]; then\n    # That's basicaly what --enable-sanitize-undefined does to turn off unaligned access\n",
                    "rendered": {
                      "text": "sed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n\n# ASan isn't compatible with -Wl,-z,defs either:\n# https://clang.llvm.org/docs/AddressSanitizer.html#usage\nsed -i 's/^\\(ZDEFS_LDFLAGS=\\).*/\\1/' configure.ac\n\nif [[ \"$SANITIZER\" == undefined ]]; then\n    # That's basicaly what --enable-sanitize-undefined does to turn off unaligned access\n",
                      "markdown": "`sed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n\n# ASan isn't compatible with -Wl,-z,defs either:\n# https://clang.llvm.org/docs/AddressSanitizer.html#usage\nsed -i 's/^\\(ZDEFS_LDFLAGS=\\).*/\\1/' configure.ac\n\nif [[ \"$SANITIZER\" == undefined ]]; then\n    # That's basicaly what --enable-sanitize-undefined does to turn off unaligned access\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 96,
                  "endLine": 51,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git checkout 67a187d4c1790058fc7fd218317851cb68bb087c\ngit log --oneline -1\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\nsed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n\n# ASan isn't compatible with -Wl,-z,defs either:\n# https://clang.llvm.org/docs/AddressSanitizer.html#usage\n",
                    "rendered": {
                      "text": "git checkout 67a187d4c1790058fc7fd218317851cb68bb087c\ngit log --oneline -1\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\nsed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n\n# ASan isn't compatible with -Wl,-z,defs either:\n# https://clang.llvm.org/docs/AddressSanitizer.html#usage\n",
                      "markdown": "`git checkout 67a187d4c1790058fc7fd218317851cb68bb087c\ngit log --oneline -1\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\nsed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n\n# ASan isn't compatible with -Wl,-z,defs either:\n# https://clang.llvm.org/docs/AddressSanitizer.html#usage\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 53,
                  "endLine": 48,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git clone https://sourceware.org/git/elfutils.git\n(\ncd elfutils\ngit checkout 67a187d4c1790058fc7fd218317851cb68bb087c\ngit log --oneline -1\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\nsed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n",
                    "rendered": {
                      "text": "git clone https://sourceware.org/git/elfutils.git\n(\ncd elfutils\ngit checkout 67a187d4c1790058fc7fd218317851cb68bb087c\ngit log --oneline -1\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\nsed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n",
                      "markdown": "`git clone https://sourceware.org/git/elfutils.git\n(\ncd elfutils\ngit checkout 67a187d4c1790058fc7fd218317851cb68bb087c\ngit log --oneline -1\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\nsed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 11,
                  "endLine": 47,
                  "endColumn": 4,
                  "snippet": {
                    "text": "rm -rf elfutils\ngit clone https://sourceware.org/git/elfutils.git\n(\ncd elfutils\ngit checkout 67a187d4c1790058fc7fd218317851cb68bb087c\ngit log --oneline -1\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\n",
                    "rendered": {
                      "text": "rm -rf elfutils\ngit clone https://sourceware.org/git/elfutils.git\n(\ncd elfutils\ngit checkout 67a187d4c1790058fc7fd218317851cb68bb087c\ngit log --oneline -1\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\n",
                      "markdown": "`rm -rf elfutils\ngit clone https://sourceware.org/git/elfutils.git\n(\ncd elfutils\ngit checkout 67a187d4c1790058fc7fd218317851cb68bb087c\ngit log --oneline -1\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 15,
                  "endLine": 44,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# fail to compile (for example, elfutils-0.185 fails to compile with LDFLAGS enabled\n# due to https://bugs.gentoo.org/794601) so let's just point the script to\n# commits referring to versions of libelf that actually can be built\nrm -rf elfutils\ngit clone https://sourceware.org/git/elfutils.git\n(\ncd elfutils\ngit checkout 67a187d4c1790058fc7fd218317851cb68bb087c\n",
                    "rendered": {
                      "text": "# fail to compile (for example, elfutils-0.185 fails to compile with LDFLAGS enabled\n# due to https://bugs.gentoo.org/794601) so let's just point the script to\n# commits referring to versions of libelf that actually can be built\nrm -rf elfutils\ngit clone https://sourceware.org/git/elfutils.git\n(\ncd elfutils\ngit checkout 67a187d4c1790058fc7fd218317851cb68bb087c\n",
                      "markdown": "`# fail to compile (for example, elfutils-0.185 fails to compile with LDFLAGS enabled\n# due to https://bugs.gentoo.org/794601) so let's just point the script to\n# commits referring to versions of libelf that actually can be built\nrm -rf elfutils\ngit clone https://sourceware.org/git/elfutils.git\n(\ncd elfutils\ngit checkout 67a187d4c1790058fc7fd218317851cb68bb087c\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/scripts/build-fuzzers.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 64,
                  "endLine": 41,
                  "endColumn": 72,
                  "snippet": {
                    "text": "# Ideally libbelf should be built using release tarballs available\n# at https://sourceware.org/elfutils/ftp/. Unfortunately sometimes they\n# fail to compile (for example, elfutils-0.185 fails to compile with LDFLAGS enabled\n# due to https://bugs.gentoo.org/794601) so let's just point the script to\n# commits referring to versions of libelf that actually can be built\nrm -rf elfutils\ngit clone https://sourceware.org/git/elfutils.git\n",
                    "rendered": {
                      "text": "# Ideally libbelf should be built using release tarballs available\n# at https://sourceware.org/elfutils/ftp/. Unfortunately sometimes they\n# fail to compile (for example, elfutils-0.185 fails to compile with LDFLAGS enabled\n# due to https://bugs.gentoo.org/794601) so let's just point the script to\n# commits referring to versions of libelf that actually can be built\nrm -rf elfutils\ngit clone https://sourceware.org/git/elfutils.git\n",
                      "markdown": "`# Ideally libbelf should be built using release tarballs available\n# at https://sourceware.org/elfutils/ftp/. Unfortunately sometimes they\n# fail to compile (for example, elfutils-0.185 fails to compile with LDFLAGS enabled\n# due to https://bugs.gentoo.org/794601) so let's just point the script to\n# commits referring to versions of libelf that actually can be built\nrm -rf elfutils\ngit clone https://sourceware.org/git/elfutils.git\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/action.yml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 12,
                  "endLine": 29,
                  "snippet": {
                    "text": "        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n        foldable end\n    - shell: bash\n      run: |\n        export KERNEL=${{ inputs.kernel }}\n        export REPO_ROOT=\"${{ github.workspace }}\"\n        export REPO_PATH=\"${{ inputs.repo-path }}\"\n",
                    "rendered": {
                      "text": "        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n        foldable end\n    - shell: bash\n      run: |\n        export KERNEL=${{ inputs.kernel }}\n        export REPO_ROOT=\"${{ github.workspace }}\"\n        export REPO_PATH=\"${{ inputs.repo-path }}\"\n",
                      "markdown": "`        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n        foldable end\n    - shell: bash\n      run: |\n        export KERNEL=${{ inputs.kernel }}\n        export REPO_ROOT=\"${{ github.workspace }}\"\n        export REPO_PATH=\"${{ inputs.repo-path }}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/action.yml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 12,
                  "endLine": 23,
                  "snippet": {
                    "text": "runs:\n  using: \"composite\"\n  steps:\n    - shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n",
                    "rendered": {
                      "text": "runs:\n  using: \"composite\"\n  steps:\n    - shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n",
                      "markdown": "`runs:\n  using: \"composite\"\n  steps:\n    - shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/action.yml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 12,
                  "endLine": 29,
                  "snippet": {
                    "text": "        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n        foldable end\n    - shell: bash\n      run: |\n        export KERNEL=${{ inputs.kernel }}\n        export REPO_ROOT=\"${{ github.workspace }}\"\n        export REPO_PATH=\"${{ inputs.repo-path }}\"\n",
                    "rendered": {
                      "text": "        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n        foldable end\n    - shell: bash\n      run: |\n        export KERNEL=${{ inputs.kernel }}\n        export REPO_ROOT=\"${{ github.workspace }}\"\n        export REPO_PATH=\"${{ inputs.repo-path }}\"\n",
                      "markdown": "`        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n        foldable end\n    - shell: bash\n      run: |\n        export KERNEL=${{ inputs.kernel }}\n        export REPO_ROOT=\"${{ github.workspace }}\"\n        export REPO_PATH=\"${{ inputs.repo-path }}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/action.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 12,
                  "endLine": 26,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n        foldable end\n    - shell: bash\n      run: |\n",
                    "rendered": {
                      "text": "      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n        foldable end\n    - shell: bash\n      run: |\n",
                      "markdown": "`      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n        foldable end\n    - shell: bash\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/action.yml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 12,
                  "endLine": 23,
                  "snippet": {
                    "text": "runs:\n  using: \"composite\"\n  steps:\n    - shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n",
                    "rendered": {
                      "text": "runs:\n  using: \"composite\"\n  steps:\n    - shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n",
                      "markdown": "`runs:\n  using: \"composite\"\n  steps:\n    - shell: bash\n      run: |\n        source $GITHUB_ACTION_PATH/../../../ci/vmtest/helpers.sh\n        foldable start \"Setup Env\"\n        sudo apt-get install -y qemu-kvm zstd binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 19,
                  "endLine": 89,
                  "endColumn": 27,
                  "snippet": {
                    "text": "          install: |\n            export DEBIAN_FRONTEND=noninteractive\n            export TZ=\"America/Los_Angeles\"\n            apt-get update -y\n            apt-get install -y tzdata build-essential sudo\n          run: source ${GITHUB_WORKSPACE}/ci_setup && $CI_ROOT/managers/ubuntu.sh\n",
                    "rendered": {
                      "text": "          install: |\n            export DEBIAN_FRONTEND=noninteractive\n            export TZ=\"America/Los_Angeles\"\n            apt-get update -y\n            apt-get install -y tzdata build-essential sudo\n          run: source ${GITHUB_WORKSPACE}/ci_setup && $CI_ROOT/managers/ubuntu.sh\n",
                      "markdown": "`          install: |\n            export DEBIAN_FRONTEND=noninteractive\n            export TZ=\"America/Los_Angeles\"\n            apt-get update -y\n            apt-get install -y tzdata build-essential sudo\n          run: source ${GITHUB_WORKSPACE}/ci_setup && $CI_ROOT/managers/ubuntu.sh\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 11,
                  "endLine": 90,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            export DEBIAN_FRONTEND=noninteractive\n            export TZ=\"America/Los_Angeles\"\n            apt-get update -y\n            apt-get install -y tzdata build-essential sudo\n          run: source ${GITHUB_WORKSPACE}/ci_setup && $CI_ROOT/managers/ubuntu.sh\n",
                    "rendered": {
                      "text": "            export DEBIAN_FRONTEND=noninteractive\n            export TZ=\"America/Los_Angeles\"\n            apt-get update -y\n            apt-get install -y tzdata build-essential sudo\n          run: source ${GITHUB_WORKSPACE}/ci_setup && $CI_ROOT/managers/ubuntu.sh\n",
                      "markdown": "`            export DEBIAN_FRONTEND=noninteractive\n            export TZ=\"America/Los_Angeles\"\n            apt-get update -y\n            apt-get install -y tzdata build-essential sudo\n          run: source ${GITHUB_WORKSPACE}/ci_setup && $CI_ROOT/managers/ubuntu.sh\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 11,
                  "endLine": 89,
                  "endColumn": 20,
                  "snippet": {
                    "text": "          install: |\n            export DEBIAN_FRONTEND=noninteractive\n            export TZ=\"America/Los_Angeles\"\n            apt-get update -y\n            apt-get install -y tzdata build-essential sudo\n          run: source ${GITHUB_WORKSPACE}/ci_setup && $CI_ROOT/managers/ubuntu.sh\n",
                    "rendered": {
                      "text": "          install: |\n            export DEBIAN_FRONTEND=noninteractive\n            export TZ=\"America/Los_Angeles\"\n            apt-get update -y\n            apt-get install -y tzdata build-essential sudo\n          run: source ${GITHUB_WORKSPACE}/ci_setup && $CI_ROOT/managers/ubuntu.sh\n",
                      "markdown": "`          install: |\n            export DEBIAN_FRONTEND=noninteractive\n            export TZ=\"America/Los_Angeles\"\n            apt-get update -y\n            apt-get install -y tzdata build-essential sudo\n          run: source ${GITHUB_WORKSPACE}/ci_setup && $CI_ROOT/managers/ubuntu.sh\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 11,
                  "endLine": 82,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          arch:\n            ${{ matrix.arch }}\n          setup:\n            cp /tmp/ci_setup $GITHUB_WORKSPACE\n          dockerRunArgs: |\n            --volume \"${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE}\"\n          shell: /bin/bash\n",
                    "rendered": {
                      "text": "          arch:\n            ${{ matrix.arch }}\n          setup:\n            cp /tmp/ci_setup $GITHUB_WORKSPACE\n          dockerRunArgs: |\n            --volume \"${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE}\"\n          shell: /bin/bash\n",
                      "markdown": "`          arch:\n            ${{ matrix.arch }}\n          setup:\n            cp /tmp/ci_setup $GITHUB_WORKSPACE\n          dockerRunArgs: |\n            --volume \"${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE}\"\n          shell: /bin/bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 22,
                  "endLine": 75,
                  "snippet": {
                    "text": "        if: matrix.arch == 'x86'\n        name: Setup\n      - uses: uraimo/run-on-arch-action@v2.7.1\n        name: Build in docker\n        if: matrix.arch != 'x86'\n        with:\n          distro:\n            ubuntu22.04\n",
                    "rendered": {
                      "text": "        if: matrix.arch == 'x86'\n        name: Setup\n      - uses: uraimo/run-on-arch-action@v2.7.1\n        name: Build in docker\n        if: matrix.arch != 'x86'\n        with:\n          distro:\n            ubuntu22.04\n",
                      "markdown": "`        if: matrix.arch == 'x86'\n        name: Setup\n      - uses: uraimo/run-on-arch-action@v2.7.1\n        name: Build in docker\n        if: matrix.arch != 'x86'\n        with:\n          distro:\n            ubuntu22.04\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 59,
                  "endLine": 472,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nTo apply these terms, attach the following notices to the library. It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\none line to give the library's name and an idea of what it does.\n",
                    "rendered": {
                      "text": "\nTo apply these terms, attach the following notices to the library. It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\none line to give the library's name and an idea of what it does.\n",
                      "markdown": "`\nTo apply these terms, attach the following notices to the library. It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\none line to give the library's name and an idea of what it does.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 34,
                  "endLine": 383,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    excuse you from the conditions of this License. If you cannot\n    distribute so as to satisfy simultaneously your obligations under this\n    License and any other pertinent obligations, then as a consequence you\n    may not distribute the Library at all. For example, if a patent license\n    would not permit royalty-free redistribution of the Library by all\n    those who receive copies directly or indirectly through you, then the\n    only way you could satisfy both it and this License would be to refrain\n",
                    "rendered": {
                      "text": "    excuse you from the conditions of this License. If you cannot\n    distribute so as to satisfy simultaneously your obligations under this\n    License and any other pertinent obligations, then as a consequence you\n    may not distribute the Library at all. For example, if a patent license\n    would not permit royalty-free redistribution of the Library by all\n    those who receive copies directly or indirectly through you, then the\n    only way you could satisfy both it and this License would be to refrain\n",
                      "markdown": "`    excuse you from the conditions of this License. If you cannot\n    distribute so as to satisfy simultaneously your obligations under this\n    License and any other pertinent obligations, then as a consequence you\n    may not distribute the Library at all. For example, if a patent license\n    would not permit royalty-free redistribution of the Library by all\n    those who receive copies directly or indirectly through you, then the\n    only way you could satisfy both it and this License would be to refrain\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 56,
                  "endLine": 311,
                  "endColumn": 60,
                  "snippet": {
                    "text": "      installs one, as long as the modified version is interface-compatible\n      with the version that the work was made with.\n\n   c) Accompany the work with a written offer, valid for at least three\n      years, to give the same user the materials specified in Subsection\n      6a, above, for a charge no more than the cost of performing this\n      distribution.\n",
                    "rendered": {
                      "text": "      installs one, as long as the modified version is interface-compatible\n      with the version that the work was made with.\n\n   c) Accompany the work with a written offer, valid for at least three\n      years, to give the same user the materials specified in Subsection\n      6a, above, for a charge no more than the cost of performing this\n      distribution.\n",
                      "markdown": "`      installs one, as long as the modified version is interface-compatible\n      with the version that the work was made with.\n\n   c) Accompany the work with a written offer, valid for at least three\n      years, to give the same user the materials specified in Subsection\n      6a, above, for a charge no more than the cost of performing this\n      distribution.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 56,
                  "endLine": 304,
                  "endColumn": 60,
                  "snippet": {
                    "text": "      recompile the application to use the modified definitions.)\n\n   b) Use a suitable shared library mechanism for linking with the\n      Library. A suitable mechanism is one that (1) uses at run time a copy\n      of the library already present on the user's computer system, rather\n      than copying library functions into the executable, and (2) will\n      operate properly with a modified version of the library, if the user\n",
                    "rendered": {
                      "text": "      recompile the application to use the modified definitions.)\n\n   b) Use a suitable shared library mechanism for linking with the\n      Library. A suitable mechanism is one that (1) uses at run time a copy\n      of the library already present on the user's computer system, rather\n      than copying library functions into the executable, and (2) will\n      operate properly with a modified version of the library, if the user\n",
                      "markdown": "`      recompile the application to use the modified definitions.)\n\n   b) Use a suitable shared library mechanism for linking with the\n      Library. A suitable mechanism is one that (1) uses at run time a copy\n      of the library already present on the user's computer system, rather\n      than copying library functions into the executable, and (2) will\n      operate properly with a modified version of the library, if the user\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 24,
                  "endLine": 210,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n   Thus, it is not the intent of this section to claim rights or contest\n   your rights to work written entirely by you; rather, the intent is to\n   exercise the right to control the distribution of derivative or\n   collective works based on the Library.\n\n   In addition, mere aggregation of another work not based on the Library\n",
                    "rendered": {
                      "text": "\n   Thus, it is not the intent of this section to claim rights or contest\n   your rights to work written entirely by you; rather, the intent is to\n   exercise the right to control the distribution of derivative or\n   collective works based on the Library.\n\n   In addition, mere aggregation of another work not based on the Library\n",
                      "markdown": "`\n   Thus, it is not the intent of this section to claim rights or contest\n   your rights to work written entirely by you; rather, the intent is to\n   exercise the right to control the distribution of derivative or\n   collective works based on the Library.\n\n   In addition, mere aggregation of another work not based on the Library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 57,
                  "endLine": 180,
                  "endColumn": 61,
                  "snippet": {
                    "text": "   b) You must cause the files modified to carry prominent notices stating\n      that you changed the files and the date of any change.\n\n   c) You must cause the whole of the work to be licensed at no charge to\n      all third parties under the terms of this License.\n\n   d) If a facility in the modified Library refers to a function or a table\n",
                    "rendered": {
                      "text": "   b) You must cause the files modified to carry prominent notices stating\n      that you changed the files and the date of any change.\n\n   c) You must cause the whole of the work to be licensed at no charge to\n      all third parties under the terms of this License.\n\n   d) If a facility in the modified Library refers to a function or a table\n",
                      "markdown": "`   b) You must cause the files modified to carry prominent notices stating\n      that you changed the files and the date of any change.\n\n   c) You must cause the whole of the work to be licensed at no charge to\n      all third parties under the terms of this License.\n\n   d) If a facility in the modified Library refers to a function or a table\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 10,
                  "endLine": 168,
                  "endColumn": 14,
                  "snippet": {
                    "text": "   distribute a copy of this License along with the Library.\n\n   You may charge a fee for the physical act of transferring a copy, and\n   you may at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Library or any portion of it,\n   thus forming a work based on the Library, and copy and distribute such\n",
                    "rendered": {
                      "text": "   distribute a copy of this License along with the Library.\n\n   You may charge a fee for the physical act of transferring a copy, and\n   you may at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Library or any portion of it,\n   thus forming a work based on the Library, and copy and distribute such\n",
                      "markdown": "`   distribute a copy of this License along with the Library.\n\n   You may charge a fee for the physical act of transferring a copy, and\n   you may at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Library or any portion of it,\n   thus forming a work based on the Library, and copy and distribute such\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 45,
                  "endLine": 149,
                  "endColumn": 54,
                  "snippet": {
                    "text": "   \"Source code\" for a work means the preferred form of the work for making\n   modifications to it. For a library, complete source code means all the\n   source code for all modules it contains, plus any associated interface\n   definition files, plus the scripts used to control compilation and\n   installation of the library.\n\n    Activities other than copying, distribution and modification are not\n",
                    "rendered": {
                      "text": "   \"Source code\" for a work means the preferred form of the work for making\n   modifications to it. For a library, complete source code means all the\n   source code for all modules it contains, plus any associated interface\n   definition files, plus the scripts used to control compilation and\n   installation of the library.\n\n    Activities other than copying, distribution and modification are not\n",
                      "markdown": "`   \"Source code\" for a work means the preferred form of the work for making\n   modifications to it. For a library, complete source code means all the\n   source code for all modules it contains, plus any associated interface\n   definition files, plus the scripts used to control compilation and\n   installation of the library.\n\n    Activities other than copying, distribution and modification are not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 10,
                  "endLine": 429,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    version number, you may choose any version ever published by the Free\n    Software Foundation.\n\n14. If you wish to incorporate parts of the Library into other free\n    programs whose distribution conditions are incompatible with these,\n    write to the author to ask for permission. For software which is\n    copyrighted by the Free Software Foundation, write to the Free Software\n",
                    "rendered": {
                      "text": "    version number, you may choose any version ever published by the Free\n    Software Foundation.\n\n14. If you wish to incorporate parts of the Library into other free\n    programs whose distribution conditions are incompatible with these,\n    write to the author to ask for permission. For software which is\n    copyrighted by the Free Software Foundation, write to the Free Software\n",
                      "markdown": "`    version number, you may choose any version ever published by the Free\n    Software Foundation.\n\n14. If you wish to incorporate parts of the Library into other free\n    programs whose distribution conditions are incompatible with these,\n    write to the author to ask for permission. For software which is\n    copyrighted by the Free Software Foundation, write to the Free Software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 42,
                  "endLine": 417,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    limitation as if written in the body of this License.\n\n13. The Free Software Foundation may publish revised and/or new versions of\n    the Lesser General Public License from time to time. Such new versions\n    will be similar in spirit to the present version, but may differ in\n    detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "    limitation as if written in the body of this License.\n\n13. The Free Software Foundation may publish revised and/or new versions of\n    the Lesser General Public License from time to time. Such new versions\n    will be similar in spirit to the present version, but may differ in\n    detail to address new problems or concerns.\n\n",
                      "markdown": "`    limitation as if written in the body of this License.\n\n13. The Free Software Foundation may publish revised and/or new versions of\n    the Lesser General Public License from time to time. Such new versions\n    will be similar in spirit to the present version, but may differ in\n    detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 8,
                  "endLine": 368,
                  "endColumn": 14,
                  "snippet": {
                    "text": "   conditions for copying, distributing or modifying the Library or works\n   based on it.\n\n10. Each time you redistribute the Library (or any work based on the\n    Library), the recipient automatically receives a license from the\n    original licensor to copy, distribute, link with or modify the Library\n    subject to these terms and conditions. You may not impose any further\n",
                    "rendered": {
                      "text": "   conditions for copying, distributing or modifying the Library or works\n   based on it.\n\n10. Each time you redistribute the Library (or any work based on the\n    Library), the recipient automatically receives a license from the\n    original licensor to copy, distribute, link with or modify the Library\n    subject to these terms and conditions. You may not impose any further\n",
                      "markdown": "`   conditions for copying, distributing or modifying the Library or works\n   based on it.\n\n10. Each time you redistribute the Library (or any work based on the\n    Library), the recipient automatically receives a license from the\n    original licensor to copy, distribute, link with or modify the Library\n    subject to these terms and conditions. You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 67,
                  "endLine": 349,
                  "snippet": {
                    "text": "      be distributed under the terms of the Sections above.\n\n   b) Give prominent notice with the combined library of the fact that part\n      of it is a work based on the Library, and explaining where to find\n      the accompanying uncombined form of the same work.\n\n8. You may not copy, modify, sublicense, link with, or distribute the\n   Library except as expressly provided under this License. Any attempt\n",
                    "rendered": {
                      "text": "      be distributed under the terms of the Sections above.\n\n   b) Give prominent notice with the combined library of the fact that part\n      of it is a work based on the Library, and explaining where to find\n      the accompanying uncombined form of the same work.\n\n8. You may not copy, modify, sublicense, link with, or distribute the\n   Library except as expressly provided under this License. Any attempt\n",
                      "markdown": "`      be distributed under the terms of the Sections above.\n\n   b) Give prominent notice with the combined library of the fact that part\n      of it is a work based on the Library, and explaining where to find\n      the accompanying uncombined form of the same work.\n\n8. You may not copy, modify, sublicense, link with, or distribute the\n   Library except as expressly provided under this License. Any attempt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 63,
                  "endLine": 304,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      recompile the application to use the modified definitions.)\n\n   b) Use a suitable shared library mechanism for linking with the\n      Library. A suitable mechanism is one that (1) uses at run time a copy\n      of the library already present on the user's computer system, rather\n      than copying library functions into the executable, and (2) will\n      operate properly with a modified version of the library, if the user\n",
                    "rendered": {
                      "text": "      recompile the application to use the modified definitions.)\n\n   b) Use a suitable shared library mechanism for linking with the\n      Library. A suitable mechanism is one that (1) uses at run time a copy\n      of the library already present on the user's computer system, rather\n      than copying library functions into the executable, and (2) will\n      operate properly with a modified version of the library, if the user\n",
                      "markdown": "`      recompile the application to use the modified definitions.)\n\n   b) Use a suitable shared library mechanism for linking with the\n      Library. A suitable mechanism is one that (1) uses at run time a copy\n      of the library already present on the user's computer system, rather\n      than copying library functions into the executable, and (2) will\n      operate properly with a modified version of the library, if the user\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 33,
                  "endLine": 231,
                  "endColumn": 39,
                  "snippet": {
                    "text": "   copy, so the ordinary GNU General Public License applies to all\n   subsequent copies and derivative works made from that copy.\n\n   This option is useful when you wish to copy part of the code of the\n   Library into a program that is not a library.\n\n4. You may copy and distribute the Library (or a portion or derivative of\n",
                    "rendered": {
                      "text": "   copy, so the ordinary GNU General Public License applies to all\n   subsequent copies and derivative works made from that copy.\n\n   This option is useful when you wish to copy part of the code of the\n   Library into a program that is not a library.\n\n4. You may copy and distribute the Library (or a portion or derivative of\n",
                      "markdown": "`   copy, so the ordinary GNU General Public License applies to all\n   subsequent copies and derivative works made from that copy.\n\n   This option is useful when you wish to copy part of the code of the\n   Library into a program that is not a library.\n\n4. You may copy and distribute the Library (or a portion or derivative of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 16,
                  "endLine": 73,
                  "endColumn": 22,
                  "snippet": {
                    "text": "affected by problems that might be introduced by others.\n\nFinally, software patents pose a constant threat to the existence of any\nfree program. We wish to make sure that a company cannot effectively\nrestrict the users of a free program by obtaining a restrictive license\nfrom a patent holder. Therefore, we insist that any patent license obtained\nfor a version of the library must be consistent with the full freedom of\n",
                    "rendered": {
                      "text": "affected by problems that might be introduced by others.\n\nFinally, software patents pose a constant threat to the existence of any\nfree program. We wish to make sure that a company cannot effectively\nrestrict the users of a free program by obtaining a restrictive license\nfrom a patent holder. Therefore, we insist that any patent license obtained\nfor a version of the library must be consistent with the full freedom of\n",
                      "markdown": "`affected by problems that might be introduced by others.\n\nFinally, software patents pose a constant threat to the existence of any\nfree program. We wish to make sure that a company cannot effectively\nrestrict the users of a free program by obtaining a restrictive license\nfrom a patent holder. Therefore, we insist that any patent license obtained\nfor a version of the library must be consistent with the full freedom of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/LICENSE.LGPL-2.1"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 70,
                  "endLine": 45,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nWhen we speak of free software, we are referring to freedom of use, not\nprice. Our General Public Licenses are designed to make sure that you have\nthe freedom to distribute copies of free software (and charge for this\nservice if you wish); that you receive source code or can get it if you\nwant it; that you can change the software and use pieces of it in new free\nprograms; and that you are informed that you can do these things.\n\n",
                    "rendered": {
                      "text": "\nWhen we speak of free software, we are referring to freedom of use, not\nprice. Our General Public Licenses are designed to make sure that you have\nthe freedom to distribute copies of free software (and charge for this\nservice if you wish); that you receive source code or can get it if you\nwant it; that you can change the software and use pieces of it in new free\nprograms; and that you are informed that you can do these things.\n\n",
                      "markdown": "`\nWhen we speak of free software, we are referring to freedom of use, not\nprice. Our General Public Licenses are designed to make sure that you have\nthe freedom to distribute copies of free software (and charge for this\nservice if you wish); that you receive source code or can get it if you\nwant it; that you can change the software and use pieces of it in new free\nprograms; and that you are informed that you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 87113,
                  "startColumn": 6,
                  "endLine": 87113,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\tstruct hlist_node node;\n\tint hashent;\n\tstruct list_head asocs;\n\t__u8 secret_key[32];\n\t__u8 *digest;\n\t__u32 sndbuf_policy;\n\t__u32 rcvbuf_policy;\n",
                    "rendered": {
                      "text": "\tstruct hlist_node node;\n\tint hashent;\n\tstruct list_head asocs;\n\t__u8 secret_key[32];\n\t__u8 *digest;\n\t__u32 sndbuf_policy;\n\t__u32 rcvbuf_policy;\n",
                      "markdown": "`\tstruct hlist_node node;\n\tint hashent;\n\tstruct list_head asocs;\n\t__u8 secret_key[32];\n\t__u8 *digest;\n\t__u32 sndbuf_policy;\n\t__u32 rcvbuf_policy;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 50269,
                  "startColumn": 4,
                  "endLine": 50269,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nstruct ethtool_module_fw_flash_params {\n\t__be32 password;\n\tu8 password_valid: 1;\n};\n\nstruct ethtool_cmis_fw_update_params {\n",
                    "rendered": {
                      "text": "\nstruct ethtool_module_fw_flash_params {\n\t__be32 password;\n\tu8 password_valid: 1;\n};\n\nstruct ethtool_cmis_fw_update_params {\n",
                      "markdown": "`\nstruct ethtool_module_fw_flash_params {\n\t__be32 password;\n\tu8 password_valid: 1;\n};\n\nstruct ethtool_cmis_fw_update_params {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 50268,
                  "startColumn": 8,
                  "endLine": 50268,
                  "endColumn": 16,
                  "snippet": {
                    "text": "};\n\nstruct ethtool_module_fw_flash_params {\n\t__be32 password;\n\tu8 password_valid: 1;\n};\n\n",
                    "rendered": {
                      "text": "};\n\nstruct ethtool_module_fw_flash_params {\n\t__be32 password;\n\tu8 password_valid: 1;\n};\n\n",
                      "markdown": "`};\n\nstruct ethtool_module_fw_flash_params {\n\t__be32 password;\n\tu8 password_valid: 1;\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 49289,
                  "startColumn": 5,
                  "endLine": 49289,
                  "endColumn": 16,
                  "snippet": {
                    "text": "struct ecdh_ctx {\n\tunsigned int curve_id;\n\tunsigned int ndigits;\n\tu64 private_key[9];\n};\n\nstruct eee_config {\n",
                    "rendered": {
                      "text": "struct ecdh_ctx {\n\tunsigned int curve_id;\n\tunsigned int ndigits;\n\tu64 private_key[9];\n};\n\nstruct eee_config {\n",
                      "markdown": "`struct ecdh_ctx {\n\tunsigned int curve_id;\n\tunsigned int ndigits;\n\tu64 private_key[9];\n};\n\nstruct eee_config {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 43548,
                  "startColumn": 8,
                  "endLine": 43548,
                  "endColumn": 16,
                  "snippet": {
                    "text": "};\n\nstruct cmis_password_entry_pl {\n\t__be32 password;\n};\n\nstruct cmis_rev_rpl {\n",
                    "rendered": {
                      "text": "};\n\nstruct cmis_password_entry_pl {\n\t__be32 password;\n};\n\nstruct cmis_rev_rpl {\n",
                      "markdown": "`};\n\nstruct cmis_password_entry_pl {\n\t__be32 password;\n};\n\nstruct cmis_rev_rpl {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 43547,
                  "startColumn": 12,
                  "endLine": 43547,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tu16 max_duration_complete;\n};\n\nstruct cmis_password_entry_pl {\n\t__be32 password;\n};\n\n",
                    "rendered": {
                      "text": "\tu16 max_duration_complete;\n};\n\nstruct cmis_password_entry_pl {\n\t__be32 password;\n};\n\n",
                      "markdown": "`\tu16 max_duration_complete;\n};\n\nstruct cmis_password_entry_pl {\n\t__be32 password;\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 15608,
                  "startColumn": 5,
                  "endLine": 15608,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tKEY_NEED_SETATTR = 6,\n\tKEY_NEED_UNLINK = 7,\n\tKEY_SYSADMIN_OVERRIDE = 8,\n\tKEY_AUTHTOKEN_OVERRIDE = 9,\n\tKEY_DEFER_PERM_CHECK = 10,\n};\n\n",
                    "rendered": {
                      "text": "\tKEY_NEED_SETATTR = 6,\n\tKEY_NEED_UNLINK = 7,\n\tKEY_SYSADMIN_OVERRIDE = 8,\n\tKEY_AUTHTOKEN_OVERRIDE = 9,\n\tKEY_DEFER_PERM_CHECK = 10,\n};\n\n",
                      "markdown": "`\tKEY_NEED_SETATTR = 6,\n\tKEY_NEED_UNLINK = 7,\n\tKEY_SYSADMIN_OVERRIDE = 8,\n\tKEY_AUTHTOKEN_OVERRIDE = 9,\n\tKEY_DEFER_PERM_CHECK = 10,\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 2004,
                  "startColumn": 27,
                  "endLine": 2004,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tETHTOOL_A_MODULE_FW_FLASH_UNSPEC = 0,\n\tETHTOOL_A_MODULE_FW_FLASH_HEADER = 1,\n\tETHTOOL_A_MODULE_FW_FLASH_FILE_NAME = 2,\n\tETHTOOL_A_MODULE_FW_FLASH_PASSWORD = 3,\n\tETHTOOL_A_MODULE_FW_FLASH_STATUS = 4,\n\tETHTOOL_A_MODULE_FW_FLASH_STATUS_MSG = 5,\n\tETHTOOL_A_MODULE_FW_FLASH_DONE = 6,\n",
                    "rendered": {
                      "text": "\tETHTOOL_A_MODULE_FW_FLASH_UNSPEC = 0,\n\tETHTOOL_A_MODULE_FW_FLASH_HEADER = 1,\n\tETHTOOL_A_MODULE_FW_FLASH_FILE_NAME = 2,\n\tETHTOOL_A_MODULE_FW_FLASH_PASSWORD = 3,\n\tETHTOOL_A_MODULE_FW_FLASH_STATUS = 4,\n\tETHTOOL_A_MODULE_FW_FLASH_STATUS_MSG = 5,\n\tETHTOOL_A_MODULE_FW_FLASH_DONE = 6,\n",
                      "markdown": "`\tETHTOOL_A_MODULE_FW_FLASH_UNSPEC = 0,\n\tETHTOOL_A_MODULE_FW_FLASH_HEADER = 1,\n\tETHTOOL_A_MODULE_FW_FLASH_FILE_NAME = 2,\n\tETHTOOL_A_MODULE_FW_FLASH_PASSWORD = 3,\n\tETHTOOL_A_MODULE_FW_FLASH_STATUS = 4,\n\tETHTOOL_A_MODULE_FW_FLASH_STATUS_MSG = 5,\n\tETHTOOL_A_MODULE_FW_FLASH_DONE = 6,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 77886,
                  "startColumn": 6,
                  "endLine": 77886,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tconst char *name;\n};\n\nstruct node {\n\tstruct device dev;\n\tstruct list_head access_list;\n};\n",
                    "rendered": {
                      "text": "\tconst char *name;\n};\n\nstruct node {\n\tstruct device dev;\n\tstruct list_head access_list;\n};\n",
                      "markdown": "`\tconst char *name;\n};\n\nstruct node {\n\tstruct device dev;\n\tstruct list_head access_list;\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 72066,
                  "startColumn": 7,
                  "endLine": 72066,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tstruct list_head mnt_share;\n\tstruct list_head mnt_slave_list;\n\tstruct list_head mnt_slave;\n\tstruct mount *mnt_master;\n\tstruct mnt_namespace *mnt_ns;\n\tstruct mountpoint *mnt_mp;\n\tunion {\n",
                    "rendered": {
                      "text": "\tstruct list_head mnt_share;\n\tstruct list_head mnt_slave_list;\n\tstruct list_head mnt_slave;\n\tstruct mount *mnt_master;\n\tstruct mnt_namespace *mnt_ns;\n\tstruct mountpoint *mnt_mp;\n\tunion {\n",
                      "markdown": "`\tstruct list_head mnt_share;\n\tstruct list_head mnt_slave_list;\n\tstruct list_head mnt_slave;\n\tstruct mount *mnt_master;\n\tstruct mnt_namespace *mnt_ns;\n\tstruct mountpoint *mnt_mp;\n\tunion {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 72046,
                  "startColumn": 7,
                  "endLine": 72046,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nstruct mount {\n\tstruct hlist_node mnt_hash;\n\tstruct mount *mnt_parent;\n\tstruct dentry *mnt_mountpoint;\n\tstruct vfsmount mnt;\n\tunion {\n",
                    "rendered": {
                      "text": "\nstruct mount {\n\tstruct hlist_node mnt_hash;\n\tstruct mount *mnt_parent;\n\tstruct dentry *mnt_mountpoint;\n\tstruct vfsmount mnt;\n\tunion {\n",
                      "markdown": "`\nstruct mount {\n\tstruct hlist_node mnt_hash;\n\tstruct mount *mnt_parent;\n\tstruct dentry *mnt_mountpoint;\n\tstruct vfsmount mnt;\n\tunion {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 72044,
                  "startColumn": 6,
                  "endLine": 72044,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nstruct mountpoint;\n\nstruct mount {\n\tstruct hlist_node mnt_hash;\n\tstruct mount *mnt_parent;\n\tstruct dentry *mnt_mountpoint;\n",
                    "rendered": {
                      "text": "\nstruct mountpoint;\n\nstruct mount {\n\tstruct hlist_node mnt_hash;\n\tstruct mount *mnt_parent;\n\tstruct dentry *mnt_mountpoint;\n",
                      "markdown": "`\nstruct mountpoint;\n\nstruct mount {\n\tstruct hlist_node mnt_hash;\n\tstruct mount *mnt_parent;\n\tstruct dentry *mnt_mountpoint;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 71793,
                  "startColumn": 7,
                  "endLine": 71793,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nstruct mnt_namespace {\n\tstruct ns_common ns;\n\tstruct mount *root;\n\tstruct rb_root mounts;\n\tstruct user_namespace *user_ns;\n\tstruct ucounts *ucounts;\n",
                    "rendered": {
                      "text": "\nstruct mnt_namespace {\n\tstruct ns_common ns;\n\tstruct mount *root;\n\tstruct rb_root mounts;\n\tstruct user_namespace *user_ns;\n\tstruct ucounts *ucounts;\n",
                      "markdown": "`\nstruct mnt_namespace {\n\tstruct ns_common ns;\n\tstruct mount *root;\n\tstruct rb_root mounts;\n\tstruct user_namespace *user_ns;\n\tstruct ucounts *ucounts;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 54301,
                  "startColumn": 6,
                  "endLine": 54301,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tatomic_t used_dirs;\n};\n\nstruct flock {\n\tshort int l_type;\n\tshort int l_whence;\n\t__kernel_off_t l_start;\n",
                    "rendered": {
                      "text": "\tatomic_t used_dirs;\n};\n\nstruct flock {\n\tshort int l_type;\n\tshort int l_whence;\n\t__kernel_off_t l_start;\n",
                      "markdown": "`\tatomic_t used_dirs;\n};\n\nstruct flock {\n\tshort int l_type;\n\tshort int l_whence;\n\t__kernel_off_t l_start;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 8731,
                  "endLine": 8731,
                  "endColumn": 6,
                  "snippet": {
                    "text": "typedef enum {\n\tHEAD = 0,\n\tFLAGS = 1,\n\tTIME = 2,\n\tOS = 3,\n\tEXLEN = 4,\n\tEXTRA = 5,\n",
                    "rendered": {
                      "text": "typedef enum {\n\tHEAD = 0,\n\tFLAGS = 1,\n\tTIME = 2,\n\tOS = 3,\n\tEXLEN = 4,\n\tEXTRA = 5,\n",
                      "markdown": "`typedef enum {\n\tHEAD = 0,\n\tFLAGS = 1,\n\tTIME = 2,\n\tOS = 3,\n\tEXLEN = 4,\n\tEXTRA = 5,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 8729,
                  "endLine": 8729,
                  "endColumn": 6,
                  "snippet": {
                    "text": "} ext4_iget_flags;\n\ntypedef enum {\n\tHEAD = 0,\n\tFLAGS = 1,\n\tTIME = 2,\n\tOS = 3,\n",
                    "rendered": {
                      "text": "} ext4_iget_flags;\n\ntypedef enum {\n\tHEAD = 0,\n\tFLAGS = 1,\n\tTIME = 2,\n\tOS = 3,\n",
                      "markdown": "`} ext4_iget_flags;\n\ntypedef enum {\n\tHEAD = 0,\n\tFLAGS = 1,\n\tTIME = 2,\n\tOS = 3,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 87152,
                  "startColumn": 9,
                  "endLine": 87152,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nstruct sctp_hostname_param {\n\tstruct sctp_paramhdr param_hdr;\n\tuint8_t hostname[0];\n};\n\nstruct sctp_idatahdr {\n",
                    "rendered": {
                      "text": "\nstruct sctp_hostname_param {\n\tstruct sctp_paramhdr param_hdr;\n\tuint8_t hostname[0];\n};\n\nstruct sctp_idatahdr {\n",
                      "markdown": "`\nstruct sctp_hostname_param {\n\tstruct sctp_paramhdr param_hdr;\n\tuint8_t hostname[0];\n};\n\nstruct sctp_idatahdr {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 87150,
                  "startColumn": 12,
                  "endLine": 87150,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t__be16 hmac_ids[0];\n};\n\nstruct sctp_hostname_param {\n\tstruct sctp_paramhdr param_hdr;\n\tuint8_t hostname[0];\n};\n",
                    "rendered": {
                      "text": "\t__be16 hmac_ids[0];\n};\n\nstruct sctp_hostname_param {\n\tstruct sctp_paramhdr param_hdr;\n\tuint8_t hostname[0];\n};\n",
                      "markdown": "`\t__be16 hmac_ids[0];\n};\n\nstruct sctp_hostname_param {\n\tstruct sctp_paramhdr param_hdr;\n\tuint8_t hostname[0];\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 86943,
                  "startColumn": 13,
                  "endLine": 86943,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tvoid *v;\n\tstruct sctp_paramhdr *p;\n\tstruct sctp_cookie_preserve_param *life;\n\tstruct sctp_hostname_param *dns;\n\tstruct sctp_cookie_param *cookie;\n\tstruct sctp_supported_addrs_param *sat;\n\tstruct sctp_ipv4addr_param *v4;\n",
                    "rendered": {
                      "text": "\tvoid *v;\n\tstruct sctp_paramhdr *p;\n\tstruct sctp_cookie_preserve_param *life;\n\tstruct sctp_hostname_param *dns;\n\tstruct sctp_cookie_param *cookie;\n\tstruct sctp_supported_addrs_param *sat;\n\tstruct sctp_ipv4addr_param *v4;\n",
                      "markdown": "`\tvoid *v;\n\tstruct sctp_paramhdr *p;\n\tstruct sctp_cookie_preserve_param *life;\n\tstruct sctp_hostname_param *dns;\n\tstruct sctp_cookie_param *cookie;\n\tstruct sctp_supported_addrs_param *sat;\n\tstruct sctp_ipv4addr_param *v4;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 86931,
                  "startColumn": 12,
                  "endLine": 86931,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nstruct sctp_cookie_preserve_param;\n\nstruct sctp_hostname_param;\n\nstruct sctp_cookie_param;\n\n",
                    "rendered": {
                      "text": "\nstruct sctp_cookie_preserve_param;\n\nstruct sctp_hostname_param;\n\nstruct sctp_cookie_param;\n\n",
                      "markdown": "`\nstruct sctp_cookie_preserve_param;\n\nstruct sctp_hostname_param;\n\nstruct sctp_cookie_param;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 108396,
                  "startColumn": 55,
                  "endLine": 108396,
                  "endColumn": 102,
                  "snippet": {
                    "text": "\ntypedef void (*serial8250_isa_config_fn)(int, struct uart_port *, u32 *);\n\ntypedef int (*set_callee_state_fn)(struct bpf_verifier_env *, struct bpf_func_state *, struct bpf_func_state *, int);\n\ntypedef struct scatterlist *sg_alloc_fn(unsigned int, gfp_t);\n\n",
                    "rendered": {
                      "text": "\ntypedef void (*serial8250_isa_config_fn)(int, struct uart_port *, u32 *);\n\ntypedef int (*set_callee_state_fn)(struct bpf_verifier_env *, struct bpf_func_state *, struct bpf_func_state *, int);\n\ntypedef struct scatterlist *sg_alloc_fn(unsigned int, gfp_t);\n\n",
                      "markdown": "`\ntypedef void (*serial8250_isa_config_fn)(int, struct uart_port *, u32 *);\n\ntypedef int (*set_callee_state_fn)(struct bpf_verifier_env *, struct bpf_func_state *, struct bpf_func_state *, int);\n\ntypedef struct scatterlist *sg_alloc_fn(unsigned int, gfp_t);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/.github/actions/build-selftests/vmlinux.h"
                },
                "region": {
                  "startLine": 37080,
                  "startColumn": 59,
                  "endLine": 37080,
                  "endColumn": 106,
                  "snippet": {
                    "text": "\tstruct bpf_local_storage ** (*map_owner_storage_ptr)(void *);\n\tlong int (*map_redirect)(struct bpf_map *, u64, u64);\n\tbool (*map_meta_equal)(const struct bpf_map *, const struct bpf_map *);\n\tint (*map_set_for_each_callback_args)(struct bpf_verifier_env *, struct bpf_func_state *, struct bpf_func_state *);\n\tlong int (*map_for_each_callback)(struct bpf_map *, bpf_callback_t, void *, u64);\n\tu64 (*map_mem_usage)(const struct bpf_map *);\n\tint *map_btf_id;\n",
                    "rendered": {
                      "text": "\tstruct bpf_local_storage ** (*map_owner_storage_ptr)(void *);\n\tlong int (*map_redirect)(struct bpf_map *, u64, u64);\n\tbool (*map_meta_equal)(const struct bpf_map *, const struct bpf_map *);\n\tint (*map_set_for_each_callback_args)(struct bpf_verifier_env *, struct bpf_func_state *, struct bpf_func_state *);\n\tlong int (*map_for_each_callback)(struct bpf_map *, bpf_callback_t, void *, u64);\n\tu64 (*map_mem_usage)(const struct bpf_map *);\n\tint *map_btf_id;\n",
                      "markdown": "`\tstruct bpf_local_storage ** (*map_owner_storage_ptr)(void *);\n\tlong int (*map_redirect)(struct bpf_map *, u64, u64);\n\tbool (*map_meta_equal)(const struct bpf_map *, const struct bpf_map *);\n\tint (*map_set_for_each_callback_args)(struct bpf_verifier_env *, struct bpf_func_state *, struct bpf_func_state *);\n\tlong int (*map_for_each_callback)(struct bpf_map *, bpf_callback_t, void *, u64);\n\tu64 (*map_mem_usage)(const struct bpf_map *);\n\tint *map_btf_id;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 75,
                  "endLine": 281,
                  "snippet": {
                    "text": "Deleted branch libbpf-tip-2023-02-28T00-43-35.146Z (was 2d311f480b52).\n```\n\nYou might need to do the same for your `~/libbpf` repo sometimes, depending at\nwhich stage sync script was terminated.\n",
                    "rendered": {
                      "text": "Deleted branch libbpf-tip-2023-02-28T00-43-35.146Z (was 2d311f480b52).\n```\n\nYou might need to do the same for your `~/libbpf` repo sometimes, depending at\nwhich stage sync script was terminated.\n",
                      "markdown": "`Deleted branch libbpf-tip-2023-02-28T00-43-35.146Z (was 2d311f480b52).\n```\n\nYou might need to do the same for your `~/libbpf` repo sometimes, depending at\nwhich stage sync script was terminated.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 20,
                  "endLine": 208,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nTo compile latest BPF selftests against old kernels, we check in pre-generated\n[vmlinux.h](https://github.com/libbpf/libbpf/blob/master/.github/actions/build-selftests/vmlinux.h)\nheader file, located at `.github/actions/build-selftests/vmlinux.h`, which\ncontains type definitions from latest upstream kernel. When after libbpf sync\nupstream BPF selftests require new kernel types, we'd need to regenerate\n`vmlinux.h` and check it in as well.\n",
                    "rendered": {
                      "text": "\nTo compile latest BPF selftests against old kernels, we check in pre-generated\n[vmlinux.h](https://github.com/libbpf/libbpf/blob/master/.github/actions/build-selftests/vmlinux.h)\nheader file, located at `.github/actions/build-selftests/vmlinux.h`, which\ncontains type definitions from latest upstream kernel. When after libbpf sync\nupstream BPF selftests require new kernel types, we'd need to regenerate\n`vmlinux.h` and check it in as well.\n",
                      "markdown": "`\nTo compile latest BPF selftests against old kernels, we check in pre-generated\n[vmlinux.h](https://github.com/libbpf/libbpf/blob/master/.github/actions/build-selftests/vmlinux.h)\nheader file, located at `.github/actions/build-selftests/vmlinux.h`, which\ncontains type definitions from latest upstream kernel. When after libbpf sync\nupstream BPF selftests require new kernel types, we'd need to regenerate\n`vmlinux.h` and check it in as well.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 64,
                  "endLine": 35,
                  "snippet": {
                    "text": "the purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n`~/libbpf`.\n\n",
                    "rendered": {
                      "text": "the purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n`~/libbpf`.\n\n",
                      "markdown": "`the purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n`~/libbpf`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 78,
                  "endLine": 34,
                  "endColumn": 3,
                  "snippet": {
                    "text": "This is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n`~/libbpf`.\n",
                    "rendered": {
                      "text": "This is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n`~/libbpf`.\n",
                      "markdown": "`This is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n`~/libbpf`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 43,
                  "endLine": 33,
                  "endColumn": 47,
                  "snippet": {
                    "text": "This is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n",
                    "rendered": {
                      "text": "This is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n",
                      "markdown": "`This is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 16,
                  "endLine": 281,
                  "endColumn": 24,
                  "snippet": {
                    "text": "```\n\nYou might need to do the same for your `~/libbpf` repo sometimes, depending at\nwhich stage sync script was terminated.\n",
                    "rendered": {
                      "text": "```\n\nYou might need to do the same for your `~/libbpf` repo sometimes, depending at\nwhich stage sync script was terminated.\n",
                      "markdown": "````\n\nYou might need to do the same for your `~/libbpf` repo sometimes, depending at\nwhich stage sync script was terminated.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 60,
                  "endLine": 269,
                  "endColumn": 67,
                  "snippet": {
                    "text": "  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n",
                    "rendered": {
                      "text": "  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n",
                      "markdown": "`  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 37,
                  "endLine": 269,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n",
                    "rendered": {
                      "text": "  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n",
                      "markdown": "`  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 24,
                  "endLine": 269,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n",
                    "rendered": {
                      "text": "  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n",
                      "markdown": "`  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 1,
                  "endLine": 269,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n",
                    "rendered": {
                      "text": "  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n",
                      "markdown": "`  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\nDeleted branch libbpf-baseline-2023-02-28T00-43-35.146Z (was 951bce29c898).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 1,
                  "endLine": 268,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  libbpf-bpf-tip-2023-02-28T00-43-35.146Z\n  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\n",
                    "rendered": {
                      "text": "  libbpf-bpf-tip-2023-02-28T00-43-35.146Z\n  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\n",
                      "markdown": "`  libbpf-bpf-tip-2023-02-28T00-43-35.146Z\n  libbpf-squash-base-2023-02-28T00-43-35.146Z\n* libbpf-squash-tip-2023-02-28T00-43-35.146Z\n$ git cherry-pick --abort\n$ git checkout master && git branch | grep -E 'libbpf-.*Z' | xargs git br -D\nSwitched to branch 'master'\nYour branch is up to date with 'bpf-next/master'.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 14,
                  "endLine": 262,
                  "endColumn": 20,
                  "snippet": {
                    "text": "start fresh:\n\n```\n$ git branch | grep -E 'libbpf-.*Z'\n  libbpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-tip-2023-02-28T00-43-35.146Z\n",
                    "rendered": {
                      "text": "start fresh:\n\n```\n$ git branch | grep -E 'libbpf-.*Z'\n  libbpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-tip-2023-02-28T00-43-35.146Z\n",
                      "markdown": "`start fresh:\n\n```\n$ git branch | grep -E 'libbpf-.*Z'\n  libbpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-tip-2023-02-28T00-43-35.146Z\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 1,
                  "endLine": 262,
                  "endColumn": 6,
                  "snippet": {
                    "text": "start fresh:\n\n```\n$ git branch | grep -E 'libbpf-.*Z'\n  libbpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-tip-2023-02-28T00-43-35.146Z\n",
                    "rendered": {
                      "text": "start fresh:\n\n```\n$ git branch | grep -E 'libbpf-.*Z'\n  libbpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-tip-2023-02-28T00-43-35.146Z\n",
                      "markdown": "`start fresh:\n\n```\n$ git branch | grep -E 'libbpf-.*Z'\n  libbpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-baseline-2023-02-28T00-43-35.146Z\n  libbpf-bpf-tip-2023-02-28T00-43-35.146Z\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 25,
                  "endLine": 256,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\nIf something goes wrong and sync script exits early or is terminated early by\nuser, you might end up with `~/linux` repo on temporary sync-related branch.\nDon't worry, though, sync script never destroys repo state, it follows\n\"copy-on-write\" philosophy and creates new branches where necessary. So it's\nvery easy to restore previous state. So if anything goes wrong, it's easy to\nstart fresh:\n",
                    "rendered": {
                      "text": "\nIf something goes wrong and sync script exits early or is terminated early by\nuser, you might end up with `~/linux` repo on temporary sync-related branch.\nDon't worry, though, sync script never destroys repo state, it follows\n\"copy-on-write\" philosophy and creates new branches where necessary. So it's\nvery easy to restore previous state. So if anything goes wrong, it's easy to\nstart fresh:\n",
                      "markdown": "`\nIf something goes wrong and sync script exits early or is terminated early by\nuser, you might end up with `~/linux` repo on temporary sync-related branch.\nDon't worry, though, sync script never destroys repo state, it follows\n\"copy-on-write\" philosophy and creates new branches where necessary. So it's\nvery easy to restore previous state. So if anything goes wrong, it's easy to\nstart fresh:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 32,
                  "endLine": 254,
                  "endColumn": 40,
                  "snippet": {
                    "text": "Troubleshooting\n---------------\n\nIf something goes wrong and sync script exits early or is terminated early by\nuser, you might end up with `~/linux` repo on temporary sync-related branch.\nDon't worry, though, sync script never destroys repo state, it follows\n\"copy-on-write\" philosophy and creates new branches where necessary. So it's\n",
                    "rendered": {
                      "text": "Troubleshooting\n---------------\n\nIf something goes wrong and sync script exits early or is terminated early by\nuser, you might end up with `~/linux` repo on temporary sync-related branch.\nDon't worry, though, sync script never destroys repo state, it follows\n\"copy-on-write\" philosophy and creates new branches where necessary. So it's\n",
                      "markdown": "`Troubleshooting\n---------------\n\nIf something goes wrong and sync script exits early or is terminated early by\nuser, you might end up with `~/linux` repo on temporary sync-related branch.\nDon't worry, though, sync script never destroys repo state, it follows\n\"copy-on-write\" philosophy and creates new branches where necessary. So it's\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 5,
                  "endLine": 247,
                  "endColumn": 10,
                  "snippet": {
                    "text": "```\n\nCheck in generated `vmlinux.h`, don't forget to use `ci: ` commit prefix, add\nit on top of sync commits. Push to Github and let libbpf CI do the checking for\nyou. See [this commit](https://github.com/libbpf/libbpf/commit/34212c94a64df8eeb1dd5d064630a65e1dfd4c20)\nfor reference.\n\n",
                    "rendered": {
                      "text": "```\n\nCheck in generated `vmlinux.h`, don't forget to use `ci: ` commit prefix, add\nit on top of sync commits. Push to Github and let libbpf CI do the checking for\nyou. See [this commit](https://github.com/libbpf/libbpf/commit/34212c94a64df8eeb1dd5d064630a65e1dfd4c20)\nfor reference.\n\n",
                      "markdown": "````\n\nCheck in generated `vmlinux.h`, don't forget to use `ci: ` commit prefix, add\nit on top of sync commits. Push to Github and let libbpf CI do the checking for\nyou. See [this commit](https://github.com/libbpf/libbpf/commit/34212c94a64df8eeb1dd5d064630a65e1dfd4c20)\nfor reference.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 29,
                  "endLine": 243,
                  "endColumn": 34,
                  "snippet": {
                    "text": "$ make -j$(nproc) olddefconfig all\n...\n$ bpftool btf dump file ~/linux/vmlinux format c > ~/libbpf/.github/actions/build-selftests/vmlinux.h\n$ cd ~/libbpf && git add . && git commit -s\n```\n\nCheck in generated `vmlinux.h`, don't forget to use `ci: ` commit prefix, add\n",
                    "rendered": {
                      "text": "$ make -j$(nproc) olddefconfig all\n...\n$ bpftool btf dump file ~/linux/vmlinux format c > ~/libbpf/.github/actions/build-selftests/vmlinux.h\n$ cd ~/libbpf && git add . && git commit -s\n```\n\nCheck in generated `vmlinux.h`, don't forget to use `ci: ` commit prefix, add\n",
                      "markdown": "`$ make -j$(nproc) olddefconfig all\n...\n$ bpftool btf dump file ~/linux/vmlinux format c > ~/libbpf/.github/actions/build-selftests/vmlinux.h\n$ cd ~/libbpf && git add . && git commit -s\n```\n\nCheck in generated `vmlinux.h`, don't forget to use `ci: ` commit prefix, add\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 16,
                  "endLine": 243,
                  "endColumn": 21,
                  "snippet": {
                    "text": "$ make -j$(nproc) olddefconfig all\n...\n$ bpftool btf dump file ~/linux/vmlinux format c > ~/libbpf/.github/actions/build-selftests/vmlinux.h\n$ cd ~/libbpf && git add . && git commit -s\n```\n\nCheck in generated `vmlinux.h`, don't forget to use `ci: ` commit prefix, add\n",
                    "rendered": {
                      "text": "$ make -j$(nproc) olddefconfig all\n...\n$ bpftool btf dump file ~/linux/vmlinux format c > ~/libbpf/.github/actions/build-selftests/vmlinux.h\n$ cd ~/libbpf && git add . && git commit -s\n```\n\nCheck in generated `vmlinux.h`, don't forget to use `ci: ` commit prefix, add\n",
                      "markdown": "`$ make -j$(nproc) olddefconfig all\n...\n$ bpftool btf dump file ~/linux/vmlinux format c > ~/libbpf/.github/actions/build-selftests/vmlinux.h\n$ cd ~/libbpf && git add . && git commit -s\n```\n\nCheck in generated `vmlinux.h`, don't forget to use `ci: ` commit prefix, add\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 1,
                  "endLine": 238,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```\n$ cd ~/linux\n$ cat tools/testing/selftests/bpf/config \\\n   tools/testing/selftests/bpf/config.x86_64 > .config\n$ make -j$(nproc) olddefconfig all\n...\n",
                    "rendered": {
                      "text": "\n```\n$ cd ~/linux\n$ cat tools/testing/selftests/bpf/config \\\n   tools/testing/selftests/bpf/config.x86_64 > .config\n$ make -j$(nproc) olddefconfig all\n...\n",
                      "markdown": "`\n```\n$ cd ~/linux\n$ cat tools/testing/selftests/bpf/config \\\n   tools/testing/selftests/bpf/config.x86_64 > .config\n$ make -j$(nproc) olddefconfig all\n...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 1,
                  "endLine": 190,
                  "endColumn": 7,
                  "snippet": {
                    "text": "for the case above).\n\n```\n$ find . -name '*LIST*'\n./ci/vmtest/configs/ALLOWLIST-4.9.0\n./ci/vmtest/configs/DENYLIST-5.5.0\n./ci/vmtest/configs/DENYLIST-latest.s390x\n",
                    "rendered": {
                      "text": "for the case above).\n\n```\n$ find . -name '*LIST*'\n./ci/vmtest/configs/ALLOWLIST-4.9.0\n./ci/vmtest/configs/DENYLIST-5.5.0\n./ci/vmtest/configs/DENYLIST-latest.s390x\n",
                      "markdown": "`for the case above).\n\n```\n$ find . -name '*LIST*'\n./ci/vmtest/configs/ALLOWLIST-4.9.0\n./ci/vmtest/configs/DENYLIST-5.5.0\n./ci/vmtest/configs/DENYLIST-latest.s390x\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 49,
                  "endLine": 173,
                  "endColumn": 55,
                  "snippet": {
                    "text": "-------------------------\n\nLibbpf CI intentionally runs a subset of latest BPF selftests on old kernel\n(4.9 and 5.5, currently). It happens from time to time that some tests that\npreviously were successfully running on old kernels now don't, typically due to\nreliance on some freshly added kernel feature. It might look something like this in [CI logs](https://github.com/libbpf/libbpf/actions/runs/4206303272/jobs/7299609578#step:4:2733):\n\n",
                    "rendered": {
                      "text": "-------------------------\n\nLibbpf CI intentionally runs a subset of latest BPF selftests on old kernel\n(4.9 and 5.5, currently). It happens from time to time that some tests that\npreviously were successfully running on old kernels now don't, typically due to\nreliance on some freshly added kernel feature. It might look something like this in [CI logs](https://github.com/libbpf/libbpf/actions/runs/4206303272/jobs/7299609578#step:4:2733):\n\n",
                      "markdown": "`-------------------------\n\nLibbpf CI intentionally runs a subset of latest BPF selftests on old kernel\n(4.9 and 5.5, currently). It happens from time to time that some tests that\npreviously were successfully running on old kernels now don't, typically due to\nreliance on some freshly added kernel feature. It might look something like this in [CI logs](https://github.com/libbpf/libbpf/actions/runs/4206303272/jobs/7299609578#step:4:2733):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 41,
                  "endLine": 173,
                  "endColumn": 47,
                  "snippet": {
                    "text": "-------------------------\n\nLibbpf CI intentionally runs a subset of latest BPF selftests on old kernel\n(4.9 and 5.5, currently). It happens from time to time that some tests that\npreviously were successfully running on old kernels now don't, typically due to\nreliance on some freshly added kernel feature. It might look something like this in [CI logs](https://github.com/libbpf/libbpf/actions/runs/4206303272/jobs/7299609578#step:4:2733):\n\n",
                    "rendered": {
                      "text": "-------------------------\n\nLibbpf CI intentionally runs a subset of latest BPF selftests on old kernel\n(4.9 and 5.5, currently). It happens from time to time that some tests that\npreviously were successfully running on old kernels now don't, typically due to\nreliance on some freshly added kernel feature. It might look something like this in [CI logs](https://github.com/libbpf/libbpf/actions/runs/4206303272/jobs/7299609578#step:4:2733):\n\n",
                      "markdown": "`-------------------------\n\nLibbpf CI intentionally runs a subset of latest BPF selftests on old kernel\n(4.9 and 5.5, currently). It happens from time to time that some tests that\npreviously were successfully running on old kernels now don't, typically due to\nreliance on some freshly added kernel feature. It might look something like this in [CI logs](https://github.com/libbpf/libbpf/actions/runs/4206303272/jobs/7299609578#step:4:2733):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 62,
                  "endLine": 160,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\nIf entirely new source files (typically `*.c`) were added to the library in the\nkernel repository, it may be necessary to add these to the build system\nmanually (you may notice linker errors otherwise), because the script cannot\nhandle such changes automatically. To that end, edit `src/Makefile` as\nnecessary. Commit\n[c2495832ced4](https://github.com/libbpf/libbpf/commit/c2495832ced4239bcd376b9954db38a6addd89ca)\n",
                    "rendered": {
                      "text": "\nIf entirely new source files (typically `*.c`) were added to the library in the\nkernel repository, it may be necessary to add these to the build system\nmanually (you may notice linker errors otherwise), because the script cannot\nhandle such changes automatically. To that end, edit `src/Makefile` as\nnecessary. Commit\n[c2495832ced4](https://github.com/libbpf/libbpf/commit/c2495832ced4239bcd376b9954db38a6addd89ca)\n",
                      "markdown": "`\nIf entirely new source files (typically `*.c`) were added to the library in the\nkernel repository, it may be necessary to add these to the build system\nmanually (you may notice linker errors otherwise), because the script cannot\nhandle such changes automatically. To that end, edit `src/Makefile` as\nnecessary. Commit\n[c2495832ced4](https://github.com/libbpf/libbpf/commit/c2495832ced4239bcd376b9954db38a6addd89ca)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 1,
                  "endLine": 118,
                  "endColumn": 6,
                  "snippet": {
                    "text": "Push this branch into your fork of `libbpf/libbpf` Github repo and create a PR:\n\n```\n$ git push --set-upstream origin libbpf-sync-2023-02-28T00-53-40.072Z\nEnumerating objects: 130, done.\nCounting objects: 100% (115/115), done.\nDelta compression using up to 80 threads\n",
                    "rendered": {
                      "text": "Push this branch into your fork of `libbpf/libbpf` Github repo and create a PR:\n\n```\n$ git push --set-upstream origin libbpf-sync-2023-02-28T00-53-40.072Z\nEnumerating objects: 130, done.\nCounting objects: 100% (115/115), done.\nDelta compression using up to 80 threads\n",
                      "markdown": "`Push this branch into your fork of `libbpf/libbpf` Github repo and create a PR:\n\n```\n$ git push --set-upstream origin libbpf-sync-2023-02-28T00-53-40.072Z\nEnumerating objects: 130, done.\nCounting objects: 100% (115/115), done.\nDelta compression using up to 80 threads\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 12,
                  "endLine": 112,
                  "endColumn": 18,
                  "snippet": {
                    "text": "If it looks sensible and expected, type `y` and script will proceed.\n\nIf sync is successful, your `~/linux` repo will be left in original state on\nthe original HEAD commit. `~/libbpf` repo will now be on a new branch, named\n`libbpf-sync-<timestamp>` (e.g., `libbpf-sync-2023-02-28T00-53-40.072Z`).\n\nPush this branch into your fork of `libbpf/libbpf` Github repo and create a PR:\n",
                    "rendered": {
                      "text": "If it looks sensible and expected, type `y` and script will proceed.\n\nIf sync is successful, your `~/linux` repo will be left in original state on\nthe original HEAD commit. `~/libbpf` repo will now be on a new branch, named\n`libbpf-sync-<timestamp>` (e.g., `libbpf-sync-2023-02-28T00-53-40.072Z`).\n\nPush this branch into your fork of `libbpf/libbpf` Github repo and create a PR:\n",
                      "markdown": "`If it looks sensible and expected, type `y` and script will proceed.\n\nIf sync is successful, your `~/linux` repo will be left in original state on\nthe original HEAD commit. `~/libbpf` repo will now be on a new branch, named\n`libbpf-sync-<timestamp>` (e.g., `libbpf-sync-2023-02-28T00-53-40.072Z`).\n\nPush this branch into your fork of `libbpf/libbpf` Github repo and create a PR:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 47,
                  "endLine": 109,
                  "endColumn": 55,
                  "snippet": {
                    "text": "Does everything look good? [y/N]:\n```\n\nIf it looks sensible and expected, type `y` and script will proceed.\n\nIf sync is successful, your `~/linux` repo will be left in original state on\nthe original HEAD commit. `~/libbpf` repo will now be on a new branch, named\n",
                    "rendered": {
                      "text": "Does everything look good? [y/N]:\n```\n\nIf it looks sensible and expected, type `y` and script will proceed.\n\nIf sync is successful, your `~/linux` repo will be left in original state on\nthe original HEAD commit. `~/libbpf` repo will now be on a new branch, named\n",
                      "markdown": "`Does everything look good? [y/N]:\n```\n\nIf it looks sensible and expected, type `y` and script will proceed.\n\nIf sync is successful, your `~/linux` repo will be left in original state on\nthe original HEAD commit. `~/libbpf` repo will now be on a new branch, named\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 15,
                  "endLine": 85,
                  "endColumn": 21,
                  "snippet": {
                    "text": "Most of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\nGithub repo state. And will ask if these changes look good. Please use your\nbest judgement to verify that differences are indeed from expected `bpf` tree\nfixes. E.g., it might look like below:\n",
                    "rendered": {
                      "text": "Most of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\nGithub repo state. And will ask if these changes look good. Please use your\nbest judgement to verify that differences are indeed from expected `bpf` tree\nfixes. E.g., it might look like below:\n",
                      "markdown": "`Most of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\nGithub repo state. And will ask if these changes look good. Please use your\nbest judgement to verify that differences are indeed from expected `bpf` tree\nfixes. E.g., it might look like below:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 69,
                  "endLine": 85,
                  "snippet": {
                    "text": "\nMost of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\nGithub repo state. And will ask if these changes look good. Please use your\nbest judgement to verify that differences are indeed from expected `bpf` tree\nfixes. E.g., it might look like below:\n",
                    "rendered": {
                      "text": "\nMost of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\nGithub repo state. And will ask if these changes look good. Please use your\nbest judgement to verify that differences are indeed from expected `bpf` tree\nfixes. E.g., it might look like below:\n",
                      "markdown": "`\nMost of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\nGithub repo state. And will ask if these changes look good. Please use your\nbest judgement to verify that differences are indeed from expected `bpf` tree\nfixes. E.g., it might look like below:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 74,
                  "endLine": 83,
                  "endColumn": 7,
                  "snippet": {
                    "text": "...\n```\n\nMost of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\nGithub repo state. And will ask if these changes look good. Please use your\n",
                    "rendered": {
                      "text": "...\n```\n\nMost of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\nGithub repo state. And will ask if these changes look good. Please use your\n",
                      "markdown": "`...\n```\n\nMost of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\nGithub repo state. And will ask if these changes look good. Please use your\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 11,
                  "endLine": 82,
                  "endColumn": 17,
                  "snippet": {
                    "text": "...\n```\n\nMost of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\n",
                    "rendered": {
                      "text": "...\n```\n\nMost of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\n",
                      "markdown": "`...\n```\n\nMost of the time this will go very uneventful. One expected case when sync\nscript might require user intervention is if `bpf` tree has some libbpf fixes,\nwhich is nowadays not a very frequent occurence. But if that happens, script\nwill show you a diff between expected state as of latest bpf-next and synced\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 54,
                  "endLine": 74,
                  "endColumn": 59,
                  "snippet": {
                    "text": "in PR summary for others to check for anything unexpected and suspicious.**\n\n```\n$ scripts/sync-kernel.sh ~/libbpf ~/linux bpf-master | tee /tmp/libbpf-sync.txt\nDumping existing libbpf commit signatures...\nWORKDIR:          /home/andriin/libbpf\nLINUX REPO:       /home/andriin/linux\n",
                    "rendered": {
                      "text": "in PR summary for others to check for anything unexpected and suspicious.**\n\n```\n$ scripts/sync-kernel.sh ~/libbpf ~/linux bpf-master | tee /tmp/libbpf-sync.txt\nDumping existing libbpf commit signatures...\nWORKDIR:          /home/andriin/libbpf\nLINUX REPO:       /home/andriin/linux\n",
                      "markdown": "`in PR summary for others to check for anything unexpected and suspicious.**\n\n```\n$ scripts/sync-kernel.sh ~/libbpf ~/linux bpf-master | tee /tmp/libbpf-sync.txt\nDumping existing libbpf commit signatures...\nWORKDIR:          /home/andriin/libbpf\nLINUX REPO:       /home/andriin/linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 13,
                  "endLine": 61,
                  "snippet": {
                    "text": "Already up to date.\n```\n\nRunning setup script\n--------------------\n\nFirst step is to always run `sync-kernel.sh` script. It expects three arguments:\n\n",
                    "rendered": {
                      "text": "Already up to date.\n```\n\nRunning setup script\n--------------------\n\nFirst step is to always run `sync-kernel.sh` script. It expects three arguments:\n\n",
                      "markdown": "`Already up to date.\n```\n\nRunning setup script\n--------------------\n\nFirst step is to always run `sync-kernel.sh` script. It expects three arguments:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 39,
                  "endLine": 55,
                  "endColumn": 44,
                  "snippet": {
                    "text": "...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n$ cd ~/libbpf && git checkout master && git pull\nYour branch is up to date with 'libbpf/master'.\nAlready up to date.\n```\n",
                    "rendered": {
                      "text": "...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n$ cd ~/libbpf && git checkout master && git pull\nYour branch is up to date with 'libbpf/master'.\nAlready up to date.\n```\n",
                      "markdown": "`...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n$ cd ~/libbpf && git checkout master && git pull\nYour branch is up to date with 'libbpf/master'.\nAlready up to date.\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 16,
                  "endLine": 55,
                  "endColumn": 21,
                  "snippet": {
                    "text": "...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n$ cd ~/libbpf && git checkout master && git pull\nYour branch is up to date with 'libbpf/master'.\nAlready up to date.\n```\n",
                    "rendered": {
                      "text": "...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n$ cd ~/libbpf && git checkout master && git pull\nYour branch is up to date with 'libbpf/master'.\nAlready up to date.\n```\n",
                      "markdown": "`...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n$ cd ~/libbpf && git checkout master && git pull\nYour branch is up to date with 'libbpf/master'.\nAlready up to date.\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n$ cd ~/libbpf && git checkout master && git pull\nYour branch is up to date with 'libbpf/master'.\n",
                    "rendered": {
                      "text": "  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n$ cd ~/libbpf && git checkout master && git pull\nYour branch is up to date with 'libbpf/master'.\n",
                      "markdown": "`  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n$ cd ~/libbpf && git checkout master && git pull\nYour branch is up to date with 'libbpf/master'.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 63,
                  "endLine": 51,
                  "endColumn": 68,
                  "snippet": {
                    "text": "$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n",
                    "rendered": {
                      "text": "$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n",
                      "markdown": "`$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 40,
                  "endLine": 51,
                  "endColumn": 45,
                  "snippet": {
                    "text": "$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n",
                    "rendered": {
                      "text": "$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n",
                      "markdown": "`$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 28,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n",
                    "rendered": {
                      "text": "$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n",
                      "markdown": "`$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 1,
                  "endLine": 51,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n",
                    "rendered": {
                      "text": "$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n",
                      "markdown": "`$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n...\n$ git log --oneline -n1\nc8ee37bde402 (HEAD -> master, bpf-next/master) libbpf: Fix bpf_xdp_query() in old kernels\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 18,
                  "endLine": 48,
                  "endColumn": 24,
                  "snippet": {
                    "text": "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (fetch)\nbpf-next\nssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (push)\n$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n",
                    "rendered": {
                      "text": "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (fetch)\nbpf-next\nssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (push)\n$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n",
                      "markdown": "`https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (fetch)\nbpf-next\nssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (push)\n$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 6,
                  "snippet": {
                    "text": "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (fetch)\nbpf-next\nssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (push)\n$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n",
                    "rendered": {
                      "text": "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (fetch)\nbpf-next\nssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (push)\n$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n",
                      "markdown": "`https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (fetch)\nbpf-next\nssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git (push)\n$ git branch -vv | grep -E '^? (master|bpf-master)'\n* bpf-master                               2d311f480b52 [bpf/master] riscv, bpf: Fix patch_text implicit declaration\n  master                                   c8ee37bde402 [bpf-next/master] libbpf: Fix bpf_xdp_query() in old kernels\n$ git checkout bpf-master && git pull && git checkout master && git pull\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 31,
                  "endLine": 40,
                  "endColumn": 37,
                  "snippet": {
                    "text": "`~/libbpf`.\n\n```\n$ cd ~/linux && git remote -v | grep -E '^(bpf|bpf-next)'\nbpf     https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git (fetch)\nbpf     ssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git\n(push)\n",
                    "rendered": {
                      "text": "`~/libbpf`.\n\n```\n$ cd ~/linux && git remote -v | grep -E '^(bpf|bpf-next)'\nbpf     https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git (fetch)\nbpf     ssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git\n(push)\n",
                      "markdown": "``~/libbpf`.\n\n```\n$ cd ~/linux && git remote -v | grep -E '^(bpf|bpf-next)'\nbpf     https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git (fetch)\nbpf     ssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git\n(push)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 15,
                  "endLine": 40,
                  "endColumn": 20,
                  "snippet": {
                    "text": "`~/libbpf`.\n\n```\n$ cd ~/linux && git remote -v | grep -E '^(bpf|bpf-next)'\nbpf     https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git (fetch)\nbpf     ssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git\n(push)\n",
                    "rendered": {
                      "text": "`~/libbpf`.\n\n```\n$ cd ~/linux && git remote -v | grep -E '^(bpf|bpf-next)'\nbpf     https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git (fetch)\nbpf     ssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git\n(push)\n",
                      "markdown": "``~/libbpf`.\n\n```\n$ cd ~/linux && git remote -v | grep -E '^(bpf|bpf-next)'\nbpf     https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git (fetch)\nbpf     ssh://git@gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git\n(push)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 70,
                  "endLine": 33,
                  "endColumn": 76,
                  "snippet": {
                    "text": "This is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n",
                    "rendered": {
                      "text": "This is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n",
                      "markdown": "`This is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\nat latest `bpf-next/master`, and libbpf's Github repo is located at\n`~/libbpf`, checked out to latest commit on `master` branch. It doesn't matter\nfrom where to run `sync-kernel.sh` script, but we'll be running it from inside\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 25,
                  "endLine": 30,
                  "endColumn": 33,
                  "snippet": {
                    "text": "Sync script has particular expectation of upstream Linux repo setup. It\nexpects that current HEAD of that repo points to bpf-next's master branch and\nthat there is a separate local branch pointing to bpf tree's master branch.\nThis is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\n",
                    "rendered": {
                      "text": "Sync script has particular expectation of upstream Linux repo setup. It\nexpects that current HEAD of that repo points to bpf-next's master branch and\nthat there is a separate local branch pointing to bpf tree's master branch.\nThis is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\n",
                      "markdown": "`Sync script has particular expectation of upstream Linux repo setup. It\nexpects that current HEAD of that repo points to bpf-next's master branch and\nthat there is a separate local branch pointing to bpf tree's master branch.\nThis is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n\nBelow, we assume that Linux repo is located at `~/linux`, it's current head is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 20,
                  "endLine": 28,
                  "endColumn": 26,
                  "snippet": {
                    "text": "------------------\n\nSync script has particular expectation of upstream Linux repo setup. It\nexpects that current HEAD of that repo points to bpf-next's master branch and\nthat there is a separate local branch pointing to bpf tree's master branch.\nThis is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n",
                    "rendered": {
                      "text": "------------------\n\nSync script has particular expectation of upstream Linux repo setup. It\nexpects that current HEAD of that repo points to bpf-next's master branch and\nthat there is a separate local branch pointing to bpf tree's master branch.\nThis is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n",
                      "markdown": "`------------------\n\nSync script has particular expectation of upstream Linux repo setup. It\nexpects that current HEAD of that repo points to bpf-next's master branch and\nthat there is a separate local branch pointing to bpf tree's master branch.\nThis is important, as the script will automatically merge their histories for\nthe purpose of libbpf sync.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": "Setup expectations\n------------------\n\nSync script has particular expectation of upstream Linux repo setup. It\nexpects that current HEAD of that repo points to bpf-next's master branch and\nthat there is a separate local branch pointing to bpf tree's master branch.\nThis is important, as the script will automatically merge their histories for\n",
                    "rendered": {
                      "text": "Setup expectations\n------------------\n\nSync script has particular expectation of upstream Linux repo setup. It\nexpects that current HEAD of that repo points to bpf-next's master branch and\nthat there is a separate local branch pointing to bpf tree's master branch.\nThis is important, as the script will automatically merge their histories for\n",
                      "markdown": "`Setup expectations\n------------------\n\nSync script has particular expectation of upstream Linux repo setup. It\nexpects that current HEAD of that repo points to bpf-next's master branch and\nthat there is a separate local branch pointing to bpf tree's master branch.\nThis is important, as the script will automatically merge their histories for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libbpf.zip/SYNC.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 71,
                  "endLine": 14,
                  "snippet": {
                    "text": "tree](https://kernel.googlesource.com/pub/scm/linux/kernel/git/bpf/bpf-next) under\n`tools/lib/bpf` subdirectory and is periodically synced to Github.\n\nMost of the mundane mechanical things like bpf and bpf-next tree merge, Git\nhistory transformation, cherry-picking relevant commits, re-generating\nauto-generated headers, etc. are taken care by\n[sync-kernel.sh script](https://github.com/libbpf/libbpf/blob/master/scripts/sync-kernel.sh).\nBut occasionally human needs to do few extra things to make everything work\n",
                    "rendered": {
                      "text": "tree](https://kernel.googlesource.com/pub/scm/linux/kernel/git/bpf/bpf-next) under\n`tools/lib/bpf` subdirectory and is periodically synced to Github.\n\nMost of the mundane mechanical things like bpf and bpf-next tree merge, Git\nhistory transformation, cherry-picking relevant commits, re-generating\nauto-generated headers, etc. are taken care by\n[sync-kernel.sh script](https://github.com/libbpf/libbpf/blob/master/scripts/sync-kernel.sh).\nBut occasionally human needs to do few extra things to make everything work\n",
                      "markdown": "`tree](https://kernel.googlesource.com/pub/scm/linux/kernel/git/bpf/bpf-next) under\n`tools/lib/bpf` subdirectory and is periodically synced to Github.\n\nMost of the mundane mechanical things like bpf and bpf-next tree merge, Git\nhistory transformation, cherry-picking relevant commits, re-generating\nauto-generated headers, etc. are taken care by\n[sync-kernel.sh script](https://github.com/libbpf/libbpf/blob/master/scripts/sync-kernel.sh).\nBut occasionally human needs to do few extra things to make everything work\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}