{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/pam_fscrypt/run_fscrypt.go"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 13,
                  "endLine": 210,
                  "snippet": {
                    "text": "\n\t\t// Clone context but modify the mountpoint\n\t\tctx := *protector.Context\n\t\tctx.Mount = mount\n\t\tfor _, policyDescriptor := range policyDescriptors {\n\t\t\tpolicy, err := actions.GetPolicy(&ctx, policyDescriptor)\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"reading policy: %s\", err)\n",
                    "rendered": {
                      "text": "\n\t\t// Clone context but modify the mountpoint\n\t\tctx := *protector.Context\n\t\tctx.Mount = mount\n\t\tfor _, policyDescriptor := range policyDescriptors {\n\t\t\tpolicy, err := actions.GetPolicy(&ctx, policyDescriptor)\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"reading policy: %s\", err)\n",
                      "markdown": "`\n\t\t// Clone context but modify the mountpoint\n\t\tctx := *protector.Context\n\t\tctx.Mount = mount\n\t\tfor _, policyDescriptor := range policyDescriptors {\n\t\t\tpolicy, err := actions.GetPolicy(&ctx, policyDescriptor)\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"reading policy: %s\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/pam_fscrypt/run_fscrypt.go"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 7,
                  "endLine": 192,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t}\n\n\tvar policies []*actions.Policy\n\tfor _, mount := range mounts {\n\t\t// Skip mountpoints that do not use the protector.\n\t\tif _, _, err := mount.GetProtector(protector.Descriptor(),\n\t\t\tprotector.Context.TrustedUser); err != nil {\n",
                    "rendered": {
                      "text": "\t}\n\n\tvar policies []*actions.Policy\n\tfor _, mount := range mounts {\n\t\t// Skip mountpoints that do not use the protector.\n\t\tif _, _, err := mount.GetProtector(protector.Descriptor(),\n\t\t\tprotector.Context.TrustedUser); err != nil {\n",
                      "markdown": "`\t}\n\n\tvar policies []*actions.Policy\n\tfor _, mount := range mounts {\n\t\t// Skip mountpoints that do not use the protector.\n\t\tif _, _, err := mount.GetProtector(protector.Descriptor(),\n\t\t\tprotector.Context.TrustedUser); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 24,
                  "endLine": 81,
                  "endColumn": 3,
                  "snippet": {
                    "text": "policy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$MNT/dir1'\"\n",
                    "rendered": {
                      "text": "policy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$MNT/dir1'\"\n",
                      "markdown": "`policy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$MNT/dir1'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 30,
                  "endLine": 80,
                  "endColumn": 3,
                  "snippet": {
                    "text": "echo hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$MNT/dir1'\"\n",
                    "rendered": {
                      "text": "echo hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$MNT/dir1'\"\n",
                      "markdown": "`echo hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$MNT/dir1'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 59,
                  "endLine": 79,
                  "endColumn": 3,
                  "snippet": {
                    "text": "echo hunter2 | fscrypt encrypt --quiet --name=dir1 --skip-unlock \"$MNT/dir1\"\necho hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$MNT/dir1'\"\n",
                    "rendered": {
                      "text": "echo hunter2 | fscrypt encrypt --quiet --name=dir1 --skip-unlock \"$MNT/dir1\"\necho hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$MNT/dir1'\"\n",
                      "markdown": "`echo hunter2 | fscrypt encrypt --quiet --name=dir1 --skip-unlock \"$MNT/dir1\"\necho hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$MNT/dir1'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 50,
                  "endLine": 78,
                  "endColumn": 56,
                  "snippet": {
                    "text": "echo hunter2 | fscrypt encrypt --quiet --name=dir1 --skip-unlock \"$MNT/dir1\"\necho hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n",
                    "rendered": {
                      "text": "echo hunter2 | fscrypt encrypt --quiet --name=dir1 --skip-unlock \"$MNT/dir1\"\necho hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n",
                      "markdown": "`echo hunter2 | fscrypt encrypt --quiet --name=dir1 --skip-unlock \"$MNT/dir1\"\necho hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\nmv \"$TMPDIR/policy\" \"$policy2\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 50,
                  "endLine": 77,
                  "endColumn": 56,
                  "snippet": {
                    "text": "mkdir \"$MNT/dir2\"\necho hunter2 | fscrypt encrypt --quiet --name=dir1 --skip-unlock \"$MNT/dir1\"\necho hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\n",
                    "rendered": {
                      "text": "mkdir \"$MNT/dir2\"\necho hunter2 | fscrypt encrypt --quiet --name=dir1 --skip-unlock \"$MNT/dir1\"\necho hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\n",
                      "markdown": "`mkdir \"$MNT/dir2\"\necho hunter2 | fscrypt encrypt --quiet --name=dir1 --skip-unlock \"$MNT/dir1\"\necho hunter2 | fscrypt encrypt --quiet --name=dir2 --skip-unlock \"$MNT/dir2\"\npolicy1=$(find \"$MNT/.fscrypt/policies/\" -type f | head -1)\npolicy2=$(find \"$MNT/.fscrypt/policies/\" -type f | tail -1)\nmv \"$policy1\" \"$TMPDIR/policy\"\nmv \"$policy2\" \"$policy1\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 6,
                  "snippet": {
                    "text": "fscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Try to unlock with corrupt policy metadata\"\numount \"$MNT\"\nmount \"$DEV\" \"$MNT\"\necho bad > \"$MNT/.fscrypt/policies/$policy\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$dir'\"\n\n",
                    "rendered": {
                      "text": "fscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Try to unlock with corrupt policy metadata\"\numount \"$MNT\"\nmount \"$DEV\" \"$MNT\"\necho bad > \"$MNT/.fscrypt/policies/$policy\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$dir'\"\n\n",
                      "markdown": "`fscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Try to unlock with corrupt policy metadata\"\numount \"$MNT\"\nmount \"$DEV\" \"$MNT\"\necho bad > \"$MNT/.fscrypt/policies/$policy\"\n_expect_failure \"echo hunter2 | fscrypt unlock '$dir'\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 23,
                  "endLine": 47,
                  "endColumn": 29,
                  "snippet": {
                    "text": "fscrypt status \"$dir\"\ncat \"$dir/file\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Try to unlock with corrupt policy metadata\"\numount \"$MNT\"\n",
                    "rendered": {
                      "text": "fscrypt status \"$dir\"\ncat \"$dir/file\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Try to unlock with corrupt policy metadata\"\numount \"$MNT\"\n",
                      "markdown": "`fscrypt status \"$dir\"\ncat \"$dir/file\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Try to unlock with corrupt policy metadata\"\numount \"$MNT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 21,
                  "endLine": 45,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_print_header \"Unlock directory\"\necho hunter2 | fscrypt unlock \"$dir\"\n_print_header \"=> Check dir status\"\nfscrypt status \"$dir\"\ncat \"$dir/file\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n",
                    "rendered": {
                      "text": "_print_header \"Unlock directory\"\necho hunter2 | fscrypt unlock \"$dir\"\n_print_header \"=> Check dir status\"\nfscrypt status \"$dir\"\ncat \"$dir/file\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n",
                      "markdown": "`_print_header \"Unlock directory\"\necho hunter2 | fscrypt unlock \"$dir\"\n_print_header \"=> Check dir status\"\nfscrypt status \"$dir\"\ncat \"$dir/file\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 23,
                  "endLine": 35,
                  "endColumn": 29,
                  "snippet": {
                    "text": "fscrypt status \"$dir\"\n_expect_failure \"mkdir '$dir/subdir'\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Try to unlock with wrong passphrase\"\n_expect_failure \"echo bad | fscrypt unlock --quiet '$dir'\"\n",
                    "rendered": {
                      "text": "fscrypt status \"$dir\"\n_expect_failure \"mkdir '$dir/subdir'\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Try to unlock with wrong passphrase\"\n_expect_failure \"echo bad | fscrypt unlock --quiet '$dir'\"\n",
                      "markdown": "`fscrypt status \"$dir\"\n_expect_failure \"mkdir '$dir/subdir'\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Try to unlock with wrong passphrase\"\n_expect_failure \"echo bad | fscrypt unlock --quiet '$dir'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 6,
                  "snippet": {
                    "text": "fscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Lock by cycling mount\"\numount \"$MNT\"\nmount \"$DEV\" \"$MNT\"\n_print_header \"=> Check dir status\"\nfscrypt status \"$dir\"\n_expect_failure \"mkdir '$dir/subdir'\"\n",
                    "rendered": {
                      "text": "fscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Lock by cycling mount\"\numount \"$MNT\"\nmount \"$DEV\" \"$MNT\"\n_print_header \"=> Check dir status\"\nfscrypt status \"$dir\"\n_expect_failure \"mkdir '$dir/subdir'\"\n",
                      "markdown": "`fscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Lock by cycling mount\"\numount \"$MNT\"\nmount \"$DEV\" \"$MNT\"\n_print_header \"=> Check dir status\"\nfscrypt status \"$dir\"\n_expect_failure \"mkdir '$dir/subdir'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 23,
                  "endLine": 26,
                  "endColumn": 29,
                  "snippet": {
                    "text": "fscrypt status \"$dir\"\necho contents > \"$dir/file\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Lock by cycling mount\"\numount \"$MNT\"\n",
                    "rendered": {
                      "text": "fscrypt status \"$dir\"\necho contents > \"$dir/file\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Lock by cycling mount\"\numount \"$MNT\"\n",
                      "markdown": "`fscrypt status \"$dir\"\necho contents > \"$dir/file\"\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Lock by cycling mount\"\numount \"$MNT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 29,
                  "snippet": {
                    "text": "_expect_failure \"touch '$dir/file'\"\npolicy=$(fscrypt status \"$dir\" | awk '/Policy:/{print $2}')\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Unlock directory\"\necho hunter2 | fscrypt unlock \"$dir\"\n",
                    "rendered": {
                      "text": "_expect_failure \"touch '$dir/file'\"\npolicy=$(fscrypt status \"$dir\" | awk '/Policy:/{print $2}')\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Unlock directory\"\necho hunter2 | fscrypt unlock \"$dir\"\n",
                      "markdown": "`_expect_failure \"touch '$dir/file'\"\npolicy=$(fscrypt status \"$dir\" | awk '/Policy:/{print $2}')\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n_print_header \"Unlock directory\"\necho hunter2 | fscrypt unlock \"$dir\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 32,
                  "endLine": 16,
                  "endColumn": 37,
                  "snippet": {
                    "text": "_print_header \"=> Check dir status\"\nfscrypt status \"$dir\"\n_expect_failure \"touch '$dir/file'\"\npolicy=$(fscrypt status \"$dir\" | awk '/Policy:/{print $2}')\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n",
                    "rendered": {
                      "text": "_print_header \"=> Check dir status\"\nfscrypt status \"$dir\"\n_expect_failure \"touch '$dir/file'\"\npolicy=$(fscrypt status \"$dir\" | awk '/Policy:/{print $2}')\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n",
                      "markdown": "`_print_header \"=> Check dir status\"\nfscrypt status \"$dir\"\n_expect_failure \"touch '$dir/file'\"\npolicy=$(fscrypt status \"$dir\" | awk '/Policy:/{print $2}')\n_print_header \"=> Get policy status via mount:\"\nfscrypt status \"$MNT\" | grep \"^$policy\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt.out"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 4,
                  "endLine": 45,
                  "endColumn": 8,
                  "snippet": {
                    "text": "     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\nCaution: due to the nature of modern storage devices and filesystems, the\noriginal data may still be recoverable from disk. It's much better to encrypt\n",
                    "rendered": {
                      "text": "     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\nCaution: due to the nature of modern storage devices and filesystems, the\noriginal data may still be recoverable from disk. It's much better to encrypt\n",
                      "markdown": "`     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\nCaution: due to the nature of modern storage devices and filesystems, the\noriginal data may still be recoverable from disk. It's much better to encrypt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt.out"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 37,
                  "endLine": 43,
                  "endColumn": 44,
                  "snippet": {
                    "text": "     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n",
                    "rendered": {
                      "text": "     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n",
                      "markdown": "`     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt.out"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 4,
                  "endLine": 43,
                  "endColumn": 10,
                  "snippet": {
                    "text": "     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n",
                    "rendered": {
                      "text": "     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n",
                      "markdown": "`     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt.out"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 4,
                  "endLine": 42,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n",
                    "rendered": {
                      "text": "\n     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n",
                      "markdown": "`\n     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt.out"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 4,
                  "endLine": 22,
                  "endColumn": 8,
                  "snippet": {
                    "text": "     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\nCaution: due to the nature of modern storage devices and filesystems, the\noriginal data may still be recoverable from disk. It's much better to encrypt\n",
                    "rendered": {
                      "text": "     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\nCaution: due to the nature of modern storage devices and filesystems, the\noriginal data may still be recoverable from disk. It's much better to encrypt\n",
                      "markdown": "`     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\nCaution: due to the nature of modern storage devices and filesystems, the\noriginal data may still be recoverable from disk. It's much better to encrypt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt.out"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 37,
                  "endLine": 20,
                  "endColumn": 44,
                  "snippet": {
                    "text": "     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n",
                    "rendered": {
                      "text": "     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n",
                      "markdown": "`     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt.out"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 4,
                  "endLine": 20,
                  "endColumn": 10,
                  "snippet": {
                    "text": "     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n",
                    "rendered": {
                      "text": "     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n",
                      "markdown": "`     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt.out"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 4,
                  "endLine": 19,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n",
                    "rendered": {
                      "text": "\n     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n",
                      "markdown": "`\n     mkdir \"MNT/dir.new\"\n     fscrypt encrypt \"MNT/dir.new\"\n     cp -a -T \"MNT/dir\" \"MNT/dir.new\"\n     find \"MNT/dir\" -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf \"MNT/dir\"\n     mv \"MNT/dir.new\" \"MNT/dir\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 9,
                  "endLine": 93,
                  "snippet": {
                    "text": "## Attribution\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at\nhttps://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n",
                    "rendered": {
                      "text": "## Attribution\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at\nhttps://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n",
                      "markdown": "`## Attribution\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at\nhttps://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 38,
                  "endLine": 67,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\nIf you see someone violating the code of conduct, you are encouraged to address\nthe behavior directly with those involved. Many issues can be resolved quickly\nand easily, and this gives people more control over the outcome of their\ndispute. If you are unable to resolve the matter for any reason, or if the\nbehavior is threatening or harassing, report it. We are dedicated to providing\nan environment where participants feel welcome and safe.\n",
                    "rendered": {
                      "text": "\nIf you see someone violating the code of conduct, you are encouraged to address\nthe behavior directly with those involved. Many issues can be resolved quickly\nand easily, and this gives people more control over the outcome of their\ndispute. If you are unable to resolve the matter for any reason, or if the\nbehavior is threatening or harassing, report it. We are dedicated to providing\nan environment where participants feel welcome and safe.\n",
                      "markdown": "`\nIf you see someone violating the code of conduct, you are encouraged to address\nthe behavior directly with those involved. Many issues can be resolved quickly\nand easily, and this gives people more control over the outcome of their\ndispute. If you are unable to resolve the matter for any reason, or if the\nbehavior is threatening or harassing, report it. We are dedicated to providing\nan environment where participants feel welcome and safe.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 14,
                  "endLine": 52,
                  "endColumn": 18,
                  "snippet": {
                    "text": "when an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\nThis Code of Conduct also applies outside the project spaces when the Project\n",
                    "rendered": {
                      "text": "when an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\nThis Code of Conduct also applies outside the project spaces when the Project\n",
                      "markdown": "`when an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\nThis Code of Conduct also applies outside the project spaces when the Project\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/flags.go"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 52,
                  "endLine": 200,
                  "snippet": {
                    "text": "\t\tUsage: `Set the global options so that passphrase hashing takes\n\t\t\tTIME long. TIME should be formatted as a sequence of\n\t\t\tdecimal numbers, each with optional fraction and a unit\n\t\t\tsuffix, such as \"300ms\", \"1.5s\" or \"2h45m\". Valid time\n\t\t\tunits are \"ms\", \"s\", \"m\", and \"h\".`,\n\t\tDefault: 1 * time.Second,\n\t}\n\tsourceFlag = &stringFlag{\n",
                    "rendered": {
                      "text": "\t\tUsage: `Set the global options so that passphrase hashing takes\n\t\t\tTIME long. TIME should be formatted as a sequence of\n\t\t\tdecimal numbers, each with optional fraction and a unit\n\t\t\tsuffix, such as \"300ms\", \"1.5s\" or \"2h45m\". Valid time\n\t\t\tunits are \"ms\", \"s\", \"m\", and \"h\".`,\n\t\tDefault: 1 * time.Second,\n\t}\n\tsourceFlag = &stringFlag{\n",
                      "markdown": "`\t\tUsage: `Set the global options so that passphrase hashing takes\n\t\t\tTIME long. TIME should be formatted as a sequence of\n\t\t\tdecimal numbers, each with optional fraction and a unit\n\t\t\tsuffix, such as \"300ms\", \"1.5s\" or \"2h45m\". Valid time\n\t\t\tunits are \"ms\", \"s\", \"m\", and \"h\".`,\n\t\tDefault: 1 * time.Second,\n\t}\n\tsourceFlag = &stringFlag{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/flags.go"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 13,
                  "endLine": 197,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\tName:    \"time\",\n\t\tArgName: \"TIME\",\n\t\tUsage: `Set the global options so that passphrase hashing takes\n\t\t\tTIME long. TIME should be formatted as a sequence of\n\t\t\tdecimal numbers, each with optional fraction and a unit\n\t\t\tsuffix, such as \"300ms\", \"1.5s\" or \"2h45m\". Valid time\n\t\t\tunits are \"ms\", \"s\", \"m\", and \"h\".`,\n",
                    "rendered": {
                      "text": "\t\tName:    \"time\",\n\t\tArgName: \"TIME\",\n\t\tUsage: `Set the global options so that passphrase hashing takes\n\t\t\tTIME long. TIME should be formatted as a sequence of\n\t\t\tdecimal numbers, each with optional fraction and a unit\n\t\t\tsuffix, such as \"300ms\", \"1.5s\" or \"2h45m\". Valid time\n\t\t\tunits are \"ms\", \"s\", \"m\", and \"h\".`,\n",
                      "markdown": "`\t\tName:    \"time\",\n\t\tArgName: \"TIME\",\n\t\tUsage: `Set the global options so that passphrase hashing takes\n\t\t\tTIME long. TIME should be formatted as a sequence of\n\t\t\tdecimal numbers, each with optional fraction and a unit\n\t\t\tsuffix, such as \"300ms\", \"1.5s\" or \"2h45m\". Valid time\n\t\t\tunits are \"ms\", \"s\", \"m\", and \"h\".`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/flags.go"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 2,
                  "endLine": 197,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\tName:    \"time\",\n\t\tArgName: \"TIME\",\n\t\tUsage: `Set the global options so that passphrase hashing takes\n\t\t\tTIME long. TIME should be formatted as a sequence of\n\t\t\tdecimal numbers, each with optional fraction and a unit\n\t\t\tsuffix, such as \"300ms\", \"1.5s\" or \"2h45m\". Valid time\n\t\t\tunits are \"ms\", \"s\", \"m\", and \"h\".`,\n",
                    "rendered": {
                      "text": "\t\tName:    \"time\",\n\t\tArgName: \"TIME\",\n\t\tUsage: `Set the global options so that passphrase hashing takes\n\t\t\tTIME long. TIME should be formatted as a sequence of\n\t\t\tdecimal numbers, each with optional fraction and a unit\n\t\t\tsuffix, such as \"300ms\", \"1.5s\" or \"2h45m\". Valid time\n\t\t\tunits are \"ms\", \"s\", \"m\", and \"h\".`,\n",
                      "markdown": "`\t\tName:    \"time\",\n\t\tArgName: \"TIME\",\n\t\tUsage: `Set the global options so that passphrase hashing takes\n\t\t\tTIME long. TIME should be formatted as a sequence of\n\t\t\tdecimal numbers, each with optional fraction and a unit\n\t\t\tsuffix, such as \"300ms\", \"1.5s\" or \"2h45m\". Valid time\n\t\t\tunits are \"ms\", \"s\", \"m\", and \"h\".`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/flags.go"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 21,
                  "endLine": 129,
                  "endColumn": 29,
                  "snippet": {
                    "text": "var (\n\thelpFlag = &boolFlag{\n\t\tName:  \"help\",\n\t\tUsage: `Prints help screen for commands and subcommands.`,\n\t}\n\tversionFlag = &boolFlag{\n\t\tName:  \"version\",\n",
                    "rendered": {
                      "text": "var (\n\thelpFlag = &boolFlag{\n\t\tName:  \"help\",\n\t\tUsage: `Prints help screen for commands and subcommands.`,\n\t}\n\tversionFlag = &boolFlag{\n\t\tName:  \"version\",\n",
                      "markdown": "`var (\n\thelpFlag = &boolFlag{\n\t\tName:  \"help\",\n\t\tUsage: `Prints help screen for commands and subcommands.`,\n\t}\n\tversionFlag = &boolFlag{\n\t\tName:  \"version\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 24,
                  "endLine": 392,
                  "endColumn": 33,
                  "snippet": {
                    "text": "}\n\n// Check that Unwrap(Wrap(x)) == x with differing lengths of secret key\nfunc TestDifferentLengthSecretKey(t *testing.T) {\n\twk, err := makeKey(1, metadata.InternalKeyLen)\n\tif err != nil {\n\t\tt.Fatal(err)\n",
                    "rendered": {
                      "text": "}\n\n// Check that Unwrap(Wrap(x)) == x with differing lengths of secret key\nfunc TestDifferentLengthSecretKey(t *testing.T) {\n\twk, err := makeKey(1, metadata.InternalKeyLen)\n\tif err != nil {\n\t\tt.Fatal(err)\n",
                      "markdown": "`}\n\n// Check that Unwrap(Wrap(x)) == x with differing lengths of secret key\nfunc TestDifferentLengthSecretKey(t *testing.T) {\n\twk, err := makeKey(1, metadata.InternalKeyLen)\n\tif err != nil {\n\t\tt.Fatal(err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 34,
                  "endLine": 360,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n\tif !bytes.Equal(secretKey.data, secret.data) {\n\t\treturn fmt.Errorf(\"Got %x after wrap/unwrap with w=%x and s=%x\",\n\t\t\tsecret.data, wrappingKey.data, secretKey.data)\n\t}\n\treturn nil\n}\n",
                    "rendered": {
                      "text": "\n\tif !bytes.Equal(secretKey.data, secret.data) {\n\t\treturn fmt.Errorf(\"Got %x after wrap/unwrap with w=%x and s=%x\",\n\t\t\tsecret.data, wrappingKey.data, secretKey.data)\n\t}\n\treturn nil\n}\n",
                      "markdown": "`\n\tif !bytes.Equal(secretKey.data, secret.data) {\n\t\treturn fmt.Errorf(\"Got %x after wrap/unwrap with w=%x and s=%x\",\n\t\t\tsecret.data, wrappingKey.data, secretKey.data)\n\t}\n\treturn nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 17,
                  "endLine": 358,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t}\n\tdefer secret.Wipe()\n\n\tif !bytes.Equal(secretKey.data, secret.data) {\n\t\treturn fmt.Errorf(\"Got %x after wrap/unwrap with w=%x and s=%x\",\n\t\t\tsecret.data, wrappingKey.data, secretKey.data)\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\tdefer secret.Wipe()\n\n\tif !bytes.Equal(secretKey.data, secret.data) {\n\t\treturn fmt.Errorf(\"Got %x after wrap/unwrap with w=%x and s=%x\",\n\t\t\tsecret.data, wrappingKey.data, secretKey.data)\n\t}\n",
                      "markdown": "`\t}\n\tdefer secret.Wipe()\n\n\tif !bytes.Equal(secretKey.data, secret.data) {\n\t\treturn fmt.Errorf(\"Got %x after wrap/unwrap with w=%x and s=%x\",\n\t\t\tsecret.data, wrappingKey.data, secretKey.data)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 32,
                  "endLine": 347,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n// Checks that applying Wrap then Unwrap gives the original data\nfunc testWrapUnwrapEqual(wrappingKey *Key, secretKey *Key) error {\n\tdata, err := Wrap(wrappingKey, secretKey)\n\tif err != nil {\n\t\treturn err\n\t}\n",
                    "rendered": {
                      "text": "\n// Checks that applying Wrap then Unwrap gives the original data\nfunc testWrapUnwrapEqual(wrappingKey *Key, secretKey *Key) error {\n\tdata, err := Wrap(wrappingKey, secretKey)\n\tif err != nil {\n\t\treturn err\n\t}\n",
                      "markdown": "`\n// Checks that applying Wrap then Unwrap gives the original data\nfunc testWrapUnwrapEqual(wrappingKey *Key, secretKey *Key) error {\n\tdata, err := Wrap(wrappingKey, secretKey)\n\tif err != nil {\n\t\treturn err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 43,
                  "endLine": 346,
                  "endColumn": 52,
                  "snippet": {
                    "text": "}\n\n// Checks that applying Wrap then Unwrap gives the original data\nfunc testWrapUnwrapEqual(wrappingKey *Key, secretKey *Key) error {\n\tdata, err := Wrap(wrappingKey, secretKey)\n\tif err != nil {\n\t\treturn err\n",
                    "rendered": {
                      "text": "}\n\n// Checks that applying Wrap then Unwrap gives the original data\nfunc testWrapUnwrapEqual(wrappingKey *Key, secretKey *Key) error {\n\tdata, err := Wrap(wrappingKey, secretKey)\n\tif err != nil {\n\t\treturn err\n",
                      "markdown": "`}\n\n// Checks that applying Wrap then Unwrap gives the original data\nfunc testWrapUnwrapEqual(wrappingKey *Key, secretKey *Key) error {\n\tdata, err := Wrap(wrappingKey, secretKey)\n\tif err != nil {\n\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 9,
                  "endLine": 68,
                  "endColumn": 17,
                  "snippet": {
                    "text": "// Values for test cases pulled from argon2 command line tool.\n// To generate run:\n//\n//\techo \"password\" | argon2 \"aaaaaaaaaaaaaaaa\" -id -t <t> -m <m> -p <p> -l 32\n//\n// where costs.Time = <t>, costs.Memory = 2^<m>, and costs.Parallelism = <p>.\ntype hashTestCase struct {\n",
                    "rendered": {
                      "text": "// Values for test cases pulled from argon2 command line tool.\n// To generate run:\n//\n//\techo \"password\" | argon2 \"aaaaaaaaaaaaaaaa\" -id -t <t> -m <m> -p <p> -l 32\n//\n// where costs.Time = <t>, costs.Memory = 2^<m>, and costs.Parallelism = <p>.\ntype hashTestCase struct {\n",
                      "markdown": "`// Values for test cases pulled from argon2 command line tool.\n// To generate run:\n//\n//\techo \"password\" | argon2 \"aaaaaaaaaaaaaaaa\" -id -t <t> -m <m> -p <p> -l 32\n//\n// where costs.Time = <t>, costs.Memory = 2^<m>, and costs.Parallelism = <p>.\ntype hashTestCase struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 75,
                  "endLine": 62,
                  "endColumn": 83,
                  "snippet": {
                    "text": "// As the passphrase hashing function clears the passphrase, we need to make\n// a new passphrase key for each test\nfunc fakePassphraseKey() (*Key, error) {\n\treturn NewFixedLengthKeyFromReader(bytes.NewReader(fakePassword), len(fakePassword))\n}\n\n// Values for test cases pulled from argon2 command line tool.\n",
                    "rendered": {
                      "text": "// As the passphrase hashing function clears the passphrase, we need to make\n// a new passphrase key for each test\nfunc fakePassphraseKey() (*Key, error) {\n\treturn NewFixedLengthKeyFromReader(bytes.NewReader(fakePassword), len(fakePassword))\n}\n\n// Values for test cases pulled from argon2 command line tool.\n",
                      "markdown": "`// As the passphrase hashing function clears the passphrase, we need to make\n// a new passphrase key for each test\nfunc fakePassphraseKey() (*Key, error) {\n\treturn NewFixedLengthKeyFromReader(bytes.NewReader(fakePassword), len(fakePassword))\n}\n\n// Values for test cases pulled from argon2 command line tool.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 56,
                  "endLine": 62,
                  "endColumn": 64,
                  "snippet": {
                    "text": "// As the passphrase hashing function clears the passphrase, we need to make\n// a new passphrase key for each test\nfunc fakePassphraseKey() (*Key, error) {\n\treturn NewFixedLengthKeyFromReader(bytes.NewReader(fakePassword), len(fakePassword))\n}\n\n// Values for test cases pulled from argon2 command line tool.\n",
                    "rendered": {
                      "text": "// As the passphrase hashing function clears the passphrase, we need to make\n// a new passphrase key for each test\nfunc fakePassphraseKey() (*Key, error) {\n\treturn NewFixedLengthKeyFromReader(bytes.NewReader(fakePassword), len(fakePassword))\n}\n\n// Values for test cases pulled from argon2 command line tool.\n",
                      "markdown": "`// As the passphrase hashing function clears the passphrase, we need to make\n// a new passphrase key for each test\nfunc fakePassphraseKey() (*Key, error) {\n\treturn NewFixedLengthKeyFromReader(bytes.NewReader(fakePassword), len(fakePassword))\n}\n\n// Values for test cases pulled from argon2 command line tool.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 24,
                  "endLine": 53,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\nvar (\n\tfakeSalt     = bytes.Repeat([]byte{'a'}, metadata.SaltLen)\n\tfakePassword = []byte(\"password\")\n\n\tfakeValidPolicyKey, _ = makeKey(42, metadata.PolicyKeyLen)\n\tfakeWrappingKey, _    = makeKey(17, metadata.InternalKeyLen)\n",
                    "rendered": {
                      "text": "\nvar (\n\tfakeSalt     = bytes.Repeat([]byte{'a'}, metadata.SaltLen)\n\tfakePassword = []byte(\"password\")\n\n\tfakeValidPolicyKey, _ = makeKey(42, metadata.PolicyKeyLen)\n\tfakeWrappingKey, _    = makeKey(17, metadata.InternalKeyLen)\n",
                      "markdown": "`\nvar (\n\tfakeSalt     = bytes.Repeat([]byte{'a'}, metadata.SaltLen)\n\tfakePassword = []byte(\"password\")\n\n\tfakeValidPolicyKey, _ = makeKey(42, metadata.PolicyKeyLen)\n\tfakeWrappingKey, _    = makeKey(17, metadata.InternalKeyLen)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 5,
                  "endLine": 53,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nvar (\n\tfakeSalt     = bytes.Repeat([]byte{'a'}, metadata.SaltLen)\n\tfakePassword = []byte(\"password\")\n\n\tfakeValidPolicyKey, _ = makeKey(42, metadata.PolicyKeyLen)\n\tfakeWrappingKey, _    = makeKey(17, metadata.InternalKeyLen)\n",
                    "rendered": {
                      "text": "\nvar (\n\tfakeSalt     = bytes.Repeat([]byte{'a'}, metadata.SaltLen)\n\tfakePassword = []byte(\"password\")\n\n\tfakeValidPolicyKey, _ = makeKey(42, metadata.PolicyKeyLen)\n\tfakeWrappingKey, _    = makeKey(17, metadata.InternalKeyLen)\n",
                      "markdown": "`\nvar (\n\tfakeSalt     = bytes.Repeat([]byte{'a'}, metadata.SaltLen)\n\tfakePassword = []byte(\"password\")\n\n\tfakeValidPolicyKey, _ = makeKey(42, metadata.PolicyKeyLen)\n\tfakeWrappingKey, _    = makeKey(17, metadata.InternalKeyLen)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 11,
                  "endLine": 106,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t// Adding TruncationFixed shouldn't matter if Parallelism < 256.\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 11, Parallelism: 255, TruncationFixed: true},\n\t\thexHash: \"d51af3775bbdd0cba31d96fd6d921d9de27f521ceffe667618cd7624f6643071\",\n\t},\n}\n\n",
                    "rendered": {
                      "text": "\t// Adding TruncationFixed shouldn't matter if Parallelism < 256.\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 11, Parallelism: 255, TruncationFixed: true},\n\t\thexHash: \"d51af3775bbdd0cba31d96fd6d921d9de27f521ceffe667618cd7624f6643071\",\n\t},\n}\n\n",
                      "markdown": "`\t// Adding TruncationFixed shouldn't matter if Parallelism < 256.\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 11, Parallelism: 255, TruncationFixed: true},\n\t\thexHash: \"d51af3775bbdd0cba31d96fd6d921d9de27f521ceffe667618cd7624f6643071\",\n\t},\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 11,
                  "endLine": 101,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 11, Parallelism: 255},\n\t\thexHash: \"d51af3775bbdd0cba31d96fd6d921d9de27f521ceffe667618cd7624f6643071\",\n\t},\n\t// Adding TruncationFixed shouldn't matter if Parallelism < 256.\n\t{\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 11, Parallelism: 255},\n\t\thexHash: \"d51af3775bbdd0cba31d96fd6d921d9de27f521ceffe667618cd7624f6643071\",\n\t},\n\t// Adding TruncationFixed shouldn't matter if Parallelism < 256.\n\t{\n",
                      "markdown": "`\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 11, Parallelism: 255},\n\t\thexHash: \"d51af3775bbdd0cba31d96fd6d921d9de27f521ceffe667618cd7624f6643071\",\n\t},\n\t// Adding TruncationFixed shouldn't matter if Parallelism < 256.\n\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 11,
                  "endLine": 97,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 10},\n\t\thexHash: \"b7c3d7a0be222680b5ea3af3fb1a0b7b02b92cbd7007821dc8b84800c86c7783\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 11, Parallelism: 255},\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 10},\n\t\thexHash: \"b7c3d7a0be222680b5ea3af3fb1a0b7b02b92cbd7007821dc8b84800c86c7783\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 11, Parallelism: 255},\n",
                      "markdown": "`\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 10},\n\t\thexHash: \"b7c3d7a0be222680b5ea3af3fb1a0b7b02b92cbd7007821dc8b84800c86c7783\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 11, Parallelism: 255},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 11,
                  "endLine": 93,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 15, Parallelism: 1},\n\t\thexHash: \"f474a213ed14d16ead619568000939b938ddfbd2ac4a82d253afa81b5ebaef84\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 10},\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 15, Parallelism: 1},\n\t\thexHash: \"f474a213ed14d16ead619568000939b938ddfbd2ac4a82d253afa81b5ebaef84\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 10},\n",
                      "markdown": "`\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 15, Parallelism: 1},\n\t\thexHash: \"f474a213ed14d16ead619568000939b938ddfbd2ac4a82d253afa81b5ebaef84\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 10},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 11,
                  "endLine": 89,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 10, Memory: 1 << 10, Parallelism: 1},\n\t\thexHash: \"5fa2cb89db1f7413ba1776258b7c8ee8c377d122078d28fe1fd645c353787f50\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 15, Parallelism: 1},\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 10, Memory: 1 << 10, Parallelism: 1},\n\t\thexHash: \"5fa2cb89db1f7413ba1776258b7c8ee8c377d122078d28fe1fd645c353787f50\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 15, Parallelism: 1},\n",
                      "markdown": "`\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 10, Memory: 1 << 10, Parallelism: 1},\n\t\thexHash: \"5fa2cb89db1f7413ba1776258b7c8ee8c377d122078d28fe1fd645c353787f50\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 15, Parallelism: 1},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 11,
                  "endLine": 85,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t// Parallelism is truncated to 8-bits unless TruncationFixed is true.\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 257},\n\t\thexHash: \"a66f5398e33761bf161fdf1273e99b148f07d88d12d85b7673fddd723f95ec34\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 10, Memory: 1 << 10, Parallelism: 1},\n",
                    "rendered": {
                      "text": "\t// Parallelism is truncated to 8-bits unless TruncationFixed is true.\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 257},\n\t\thexHash: \"a66f5398e33761bf161fdf1273e99b148f07d88d12d85b7673fddd723f95ec34\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 10, Memory: 1 << 10, Parallelism: 1},\n",
                      "markdown": "`\t// Parallelism is truncated to 8-bits unless TruncationFixed is true.\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 257},\n\t\thexHash: \"a66f5398e33761bf161fdf1273e99b148f07d88d12d85b7673fddd723f95ec34\",\n\t},\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 10, Memory: 1 << 10, Parallelism: 1},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto_test.go"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 11,
                  "endLine": 79,
                  "endColumn": 77,
                  "snippet": {
                    "text": "var hashTestCases = []hashTestCase{\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 1},\n\t\thexHash: \"a66f5398e33761bf161fdf1273e99b148f07d88d12d85b7673fddd723f95ec34\",\n\t},\n\t// Make sure we maintain our backwards compatible behavior, where\n\t// Parallelism is truncated to 8-bits unless TruncationFixed is true.\n",
                    "rendered": {
                      "text": "var hashTestCases = []hashTestCase{\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 1},\n\t\thexHash: \"a66f5398e33761bf161fdf1273e99b148f07d88d12d85b7673fddd723f95ec34\",\n\t},\n\t// Make sure we maintain our backwards compatible behavior, where\n\t// Parallelism is truncated to 8-bits unless TruncationFixed is true.\n",
                      "markdown": "`var hashTestCases = []hashTestCase{\n\t{\n\t\tcosts:   &metadata.HashingCosts{Time: 1, Memory: 1 << 10, Parallelism: 1},\n\t\thexHash: \"a66f5398e33761bf161fdf1273e99b148f07d88d12d85b7673fddd723f95ec34\",\n\t},\n\t// Make sure we maintain our backwards compatible behavior, where\n\t// Parallelism is truncated to 8-bits unless TruncationFixed is true.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_raw_key.sh"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 67,
                  "endLine": 49,
                  "endColumn": 5,
                  "snippet": {
                    "text": "_expect_failure \"head -c 16 /dev/urandom | fscrypt encrypt --quiet --name=prot --source=raw_key '$dir'\"\nshow_status false\n\nbegin \"Encrypt with raw_key protector from file, unlock from stdin\"\nhead -c 32 /dev/urandom > \"$raw_key_file\"\nfscrypt encrypt --quiet --name=prot --source=raw_key --key=\"$raw_key_file\" \"$dir\"\nfscrypt lock \"$dir\"\nfscrypt unlock --quiet \"$dir\" < \"$raw_key_file\"\n",
                    "rendered": {
                      "text": "_expect_failure \"head -c 16 /dev/urandom | fscrypt encrypt --quiet --name=prot --source=raw_key '$dir'\"\nshow_status false\n\nbegin \"Encrypt with raw_key protector from file, unlock from stdin\"\nhead -c 32 /dev/urandom > \"$raw_key_file\"\nfscrypt encrypt --quiet --name=prot --source=raw_key --key=\"$raw_key_file\" \"$dir\"\nfscrypt lock \"$dir\"\nfscrypt unlock --quiet \"$dir\" < \"$raw_key_file\"\n",
                      "markdown": "`_expect_failure \"head -c 16 /dev/urandom | fscrypt encrypt --quiet --name=prot --source=raw_key '$dir'\"\nshow_status false\n\nbegin \"Encrypt with raw_key protector from file, unlock from stdin\"\nhead -c 32 /dev/urandom > \"$raw_key_file\"\nfscrypt encrypt --quiet --name=prot --source=raw_key --key=\"$raw_key_file\" \"$dir\"\nfscrypt lock \"$dir\"\nfscrypt unlock --quiet \"$dir\" < \"$raw_key_file\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_raw_key.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 79,
                  "endLine": 40,
                  "endColumn": 5,
                  "snippet": {
                    "text": "head -c 32 /dev/urandom | fscrypt encrypt --quiet --name=prot --source=raw_key \"$dir\"\nshow_status true\n\nbegin \"Try to encrypt with raw_key protector from file, using wrong key length\"\nhead -c 16 /dev/urandom > \"$raw_key_file\"\n_expect_failure \"fscrypt encrypt --quiet --name=prot --source=raw_key --key='$raw_key_file' '$dir'\"\nshow_status false\n\n",
                    "rendered": {
                      "text": "head -c 32 /dev/urandom | fscrypt encrypt --quiet --name=prot --source=raw_key \"$dir\"\nshow_status true\n\nbegin \"Try to encrypt with raw_key protector from file, using wrong key length\"\nhead -c 16 /dev/urandom > \"$raw_key_file\"\n_expect_failure \"fscrypt encrypt --quiet --name=prot --source=raw_key --key='$raw_key_file' '$dir'\"\nshow_status false\n\n",
                      "markdown": "`head -c 32 /dev/urandom | fscrypt encrypt --quiet --name=prot --source=raw_key \"$dir\"\nshow_status true\n\nbegin \"Try to encrypt with raw_key protector from file, using wrong key length\"\nhead -c 16 /dev/urandom > \"$raw_key_file\"\n_expect_failure \"fscrypt encrypt --quiet --name=prot --source=raw_key --key='$raw_key_file' '$dir'\"\nshow_status false\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_raw_key.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 49,
                  "endLine": 36,
                  "endColumn": 5,
                  "snippet": {
                    "text": "fscrypt encrypt --quiet --name=prot --source=raw_key --key=\"$raw_key_file\" \"$dir\"\nshow_status true\n\nbegin \"Encrypt with raw_key protector from stdin\"\nhead -c 32 /dev/urandom | fscrypt encrypt --quiet --name=prot --source=raw_key \"$dir\"\nshow_status true\n\nbegin \"Try to encrypt with raw_key protector from file, using wrong key length\"\n",
                    "rendered": {
                      "text": "fscrypt encrypt --quiet --name=prot --source=raw_key --key=\"$raw_key_file\" \"$dir\"\nshow_status true\n\nbegin \"Encrypt with raw_key protector from stdin\"\nhead -c 32 /dev/urandom | fscrypt encrypt --quiet --name=prot --source=raw_key \"$dir\"\nshow_status true\n\nbegin \"Try to encrypt with raw_key protector from file, using wrong key length\"\n",
                      "markdown": "`fscrypt encrypt --quiet --name=prot --source=raw_key --key=\"$raw_key_file\" \"$dir\"\nshow_status true\n\nbegin \"Encrypt with raw_key protector from stdin\"\nhead -c 32 /dev/urandom | fscrypt encrypt --quiet --name=prot --source=raw_key \"$dir\"\nshow_status true\n\nbegin \"Try to encrypt with raw_key protector from file, using wrong key length\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_raw_key.sh"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 48,
                  "endLine": 31,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tfi\n}\n\nbegin \"Encrypt with raw_key protector from file\"\nhead -c 32 /dev/urandom > \"$raw_key_file\"\nfscrypt encrypt --quiet --name=prot --source=raw_key --key=\"$raw_key_file\" \"$dir\"\nshow_status true\n\n",
                    "rendered": {
                      "text": "\tfi\n}\n\nbegin \"Encrypt with raw_key protector from file\"\nhead -c 32 /dev/urandom > \"$raw_key_file\"\nfscrypt encrypt --quiet --name=prot --source=raw_key --key=\"$raw_key_file\" \"$dir\"\nshow_status true\n\n",
                      "markdown": "`\tfi\n}\n\nbegin \"Encrypt with raw_key protector from file\"\nhead -c 32 /dev/urandom > \"$raw_key_file\"\nfscrypt encrypt --quiet --name=prot --source=raw_key --key=\"$raw_key_file\" \"$dir\"\nshow_status true\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_v1_policy_fs_keyring.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 12,
                  "endLine": 19,
                  "endColumn": 6,
                  "snippet": {
                    "text": "    -i \"$FSCRYPT_CONF\"\n\ndir=\"$MNT/dir\"\nmkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n\n_print_header \"Try to encrypt directory as user\"\n_user_do_and_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n",
                    "rendered": {
                      "text": "    -i \"$FSCRYPT_CONF\"\n\ndir=\"$MNT/dir\"\nmkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n\n_print_header \"Try to encrypt directory as user\"\n_user_do_and_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n",
                      "markdown": "`    -i \"$FSCRYPT_CONF\"\n\ndir=\"$MNT/dir\"\nmkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n\n_print_header \"Try to encrypt directory as user\"\n_user_do_and_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_v1_policy_fs_keyring.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 50,
                  "endLine": 13,
                  "endColumn": 4,
                  "snippet": {
                    "text": "cd \"$(dirname \"$0\")\"\n. common.sh\n\n_print_header \"Enable v1 policies with fs keyring\"\nsed -E -e 's/\"use_fs_keyring_for_v1_policies\": +false/\"use_fs_keyring_for_v1_policies\": true/' \\\n    -e 's/\"policy_version\": +\"2\"/\"policy_version\": \"1\"/' \\\n    -i \"$FSCRYPT_CONF\"\n\n",
                    "rendered": {
                      "text": "cd \"$(dirname \"$0\")\"\n. common.sh\n\n_print_header \"Enable v1 policies with fs keyring\"\nsed -E -e 's/\"use_fs_keyring_for_v1_policies\": +false/\"use_fs_keyring_for_v1_policies\": true/' \\\n    -e 's/\"policy_version\": +\"2\"/\"policy_version\": \"1\"/' \\\n    -i \"$FSCRYPT_CONF\"\n\n",
                      "markdown": "`cd \"$(dirname \"$0\")\"\n. common.sh\n\n_print_header \"Enable v1 policies with fs keyring\"\nsed -E -e 's/\"use_fs_keyring_for_v1_policies\": +false/\"use_fs_keyring_for_v1_policies\": true/' \\\n    -e 's/\"policy_version\": +\"2\"/\"policy_version\": \"1\"/' \\\n    -i \"$FSCRYPT_CONF\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/metadata/metadata.pb.go"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tTime        int64 `protobuf:\"varint,2,opt,name=time,proto3\" json:\"time,omitempty\"`\n\tMemory      int64 `protobuf:\"varint,3,opt,name=memory,proto3\" json:\"memory,omitempty\"`\n\tParallelism int64 `protobuf:\"varint,4,opt,name=parallelism,proto3\" json:\"parallelism,omitempty\"`\n\t// If true, parallelism should no longer be truncated to 8 bits.\n",
                    "rendered": {
                      "text": "\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tTime        int64 `protobuf:\"varint,2,opt,name=time,proto3\" json:\"time,omitempty\"`\n\tMemory      int64 `protobuf:\"varint,3,opt,name=memory,proto3\" json:\"memory,omitempty\"`\n\tParallelism int64 `protobuf:\"varint,4,opt,name=parallelism,proto3\" json:\"parallelism,omitempty\"`\n\t// If true, parallelism should no longer be truncated to 8 bits.\n",
                      "markdown": "`\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tTime        int64 `protobuf:\"varint,2,opt,name=time,proto3\" json:\"time,omitempty\"`\n\tMemory      int64 `protobuf:\"varint,3,opt,name=memory,proto3\" json:\"memory,omitempty\"`\n\tParallelism int64 `protobuf:\"varint,4,opt,name=parallelism,proto3\" json:\"parallelism,omitempty\"`\n\t// If true, parallelism should no longer be truncated to 8 bits.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto.go"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 8,
                  "endLine": 173,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t}\n\taesCTR(encKey, data.IV, data.EncryptedKey, secretKey.data)\n\n\treturn secretKey, nil\n}\n\nfunc computeKeyDescriptorV1(key *Key) string {\n",
                    "rendered": {
                      "text": "\t}\n\taesCTR(encKey, data.IV, data.EncryptedKey, secretKey.data)\n\n\treturn secretKey, nil\n}\n\nfunc computeKeyDescriptorV1(key *Key) string {\n",
                      "markdown": "`\t}\n\taesCTR(encKey, data.IV, data.EncryptedKey, secretKey.data)\n\n\treturn secretKey, nil\n}\n\nfunc computeKeyDescriptorV1(key *Key) string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto.go"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 44,
                  "endLine": 171,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn nil, err\n\t}\n\taesCTR(encKey, data.IV, data.EncryptedKey, secretKey.data)\n\n\treturn secretKey, nil\n}\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn nil, err\n\t}\n\taesCTR(encKey, data.IV, data.EncryptedKey, secretKey.data)\n\n\treturn secretKey, nil\n}\n",
                      "markdown": "`\tif err != nil {\n\t\treturn nil, err\n\t}\n\taesCTR(encKey, data.IV, data.EncryptedKey, secretKey.data)\n\n\treturn secretKey, nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto.go"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 1,
                  "endLine": 167,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\treturn nil, ErrBadAuth\n\t}\n\n\tsecretKey, err := NewBlankKey(len(data.EncryptedKey))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn nil, ErrBadAuth\n\t}\n\n\tsecretKey, err := NewBlankKey(len(data.EncryptedKey))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n",
                      "markdown": "`\t\treturn nil, ErrBadAuth\n\t}\n\n\tsecretKey, err := NewBlankKey(len(data.EncryptedKey))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto.go"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 25,
                  "endLine": 142,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tdefer authKey.Wipe()\n\n\t// Encrypt the secret and include the HMAC of the output (\"Encrypt-then-MAC\").\n\taesCTR(encKey, data.IV, secretKey.data, data.EncryptedKey)\n\n\tdata.Hmac = getHMAC(authKey, data.IV, data.EncryptedKey)\n\treturn data, nil\n",
                    "rendered": {
                      "text": "\tdefer authKey.Wipe()\n\n\t// Encrypt the secret and include the HMAC of the output (\"Encrypt-then-MAC\").\n\taesCTR(encKey, data.IV, secretKey.data, data.EncryptedKey)\n\n\tdata.Hmac = getHMAC(authKey, data.IV, data.EncryptedKey)\n\treturn data, nil\n",
                      "markdown": "`\tdefer authKey.Wipe()\n\n\t// Encrypt the secret and include the HMAC of the output (\"Encrypt-then-MAC\").\n\taesCTR(encKey, data.IV, secretKey.data, data.EncryptedKey)\n\n\tdata.Hmac = getHMAC(authKey, data.IV, data.EncryptedKey)\n\treturn data, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto.go"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 61,
                  "endLine": 128,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\treturn nil, err\n\t}\n\n\tdata := &metadata.WrappedKeyData{EncryptedKey: make([]byte, secretKey.Len())}\n\n\t// Get random IV\n\tvar err error\n",
                    "rendered": {
                      "text": "\t\treturn nil, err\n\t}\n\n\tdata := &metadata.WrappedKeyData{EncryptedKey: make([]byte, secretKey.Len())}\n\n\t// Get random IV\n\tvar err error\n",
                      "markdown": "`\t\treturn nil, err\n\t}\n\n\tdata := &metadata.WrappedKeyData{EncryptedKey: make([]byte, secretKey.Len())}\n\n\t// Get random IV\n\tvar err error\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/crypto.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 23,
                  "endLine": 123,
                  "endColumn": 32,
                  "snippet": {
                    "text": "// secret Key of any length. This wrapping uses a random IV, the encrypted data,\n// and an HMAC to verify the wrapping key was correct. All of this is included\n// in the returned WrappedKeyData structure.\nfunc Wrap(wrappingKey, secretKey *Key) (*metadata.WrappedKeyData, error) {\n\tif err := checkWrappingKey(wrappingKey); err != nil {\n\t\treturn nil, err\n\t}\n",
                    "rendered": {
                      "text": "// secret Key of any length. This wrapping uses a random IV, the encrypted data,\n// and an HMAC to verify the wrapping key was correct. All of this is included\n// in the returned WrappedKeyData structure.\nfunc Wrap(wrappingKey, secretKey *Key) (*metadata.WrappedKeyData, error) {\n\tif err := checkWrappingKey(wrappingKey); err != nil {\n\t\treturn nil, err\n\t}\n",
                      "markdown": "`// secret Key of any length. This wrapping uses a random IV, the encrypted data,\n// and an HMAC to verify the wrapping key was correct. All of this is included\n// in the returned WrappedKeyData structure.\nfunc Wrap(wrappingKey, secretKey *Key) (*metadata.WrappedKeyData, error) {\n\tif err := checkWrappingKey(wrappingKey); err != nil {\n\t\treturn nil, err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 8,
                  "endLine": 162,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n# Gives the test a new session keyring which contains the test user's keyring\n# but not root's keyring.  Also clears the test user's keyring.  This must be\n# called at the beginning of the test script as it may re-execute the script.\n_setup_session_keyring()\n{\n\t# This *should* just use 'keyctl new_session', but that doesn't work if\n",
                    "rendered": {
                      "text": "\n# Gives the test a new session keyring which contains the test user's keyring\n# but not root's keyring.  Also clears the test user's keyring.  This must be\n# called at the beginning of the test script as it may re-execute the script.\n_setup_session_keyring()\n{\n\t# This *should* just use 'keyctl new_session', but that doesn't work if\n",
                      "markdown": "`\n# Gives the test a new session keyring which contains the test user's keyring\n# but not root's keyring.  Also clears the test user's keyring.  This must be\n# called at the beginning of the test script as it may re-execute the script.\n_setup_session_keyring()\n{\n\t# This *should* just use 'keyctl new_session', but that doesn't work if\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 13,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 8,
                  "endLine": 186,
                  "endColumn": 16,
                  "snippet": {
                    "text": "# Wraps the 'expect' command to force subprocesses to have 80-column output.\nexpect()\n{\n\tcommand expect -c 'set stty_init \"cols 80\"' -f -\n}\n",
                    "rendered": {
                      "text": "# Wraps the 'expect' command to force subprocesses to have 80-column output.\nexpect()\n{\n\tcommand expect -c 'set stty_init \"cols 80\"' -f -\n}\n",
                      "markdown": "`# Wraps the 'expect' command to force subprocesses to have 80-column output.\nexpect()\n{\n\tcommand expect -c 'set stty_init \"cols 80\"' -f -\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 26,
                  "endLine": 171,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tif [ -z \"${FSCRYPT_SESSION_KEYRING_SET:-}\" ]; then\n\t\texport FSCRYPT_SESSION_KEYRING_SET=1\n\t\tset +e\n\t\tkeyctl session - \"$0\" |& grep -v '^Joined session keyring'\n\t\texit \"${PIPESTATUS[0]}\"\n\tfi\n\n",
                    "rendered": {
                      "text": "\tif [ -z \"${FSCRYPT_SESSION_KEYRING_SET:-}\" ]; then\n\t\texport FSCRYPT_SESSION_KEYRING_SET=1\n\t\tset +e\n\t\tkeyctl session - \"$0\" |& grep -v '^Joined session keyring'\n\t\texit \"${PIPESTATUS[0]}\"\n\tfi\n\n",
                      "markdown": "`\tif [ -z \"${FSCRYPT_SESSION_KEYRING_SET:-}\" ]; then\n\t\texport FSCRYPT_SESSION_KEYRING_SET=1\n\t\tset +e\n\t\tkeyctl session - \"$0\" |& grep -v '^Joined session keyring'\n\t\texit \"${PIPESTATUS[0]}\"\n\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 37,
                  "endLine": 162,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n# Gives the test a new session keyring which contains the test user's keyring\n# but not root's keyring.  Also clears the test user's keyring.  This must be\n# called at the beginning of the test script as it may re-execute the script.\n_setup_session_keyring()\n{\n\t# This *should* just use 'keyctl new_session', but that doesn't work if\n",
                    "rendered": {
                      "text": "\n# Gives the test a new session keyring which contains the test user's keyring\n# but not root's keyring.  Also clears the test user's keyring.  This must be\n# called at the beginning of the test script as it may re-execute the script.\n_setup_session_keyring()\n{\n\t# This *should* just use 'keyctl new_session', but that doesn't work if\n",
                      "markdown": "`\n# Gives the test a new session keyring which contains the test user's keyring\n# but not root's keyring.  Also clears the test user's keyring.  This must be\n# called at the beginning of the test script as it may re-execute the script.\n_setup_session_keyring()\n{\n\t# This *should* just use 'keyctl new_session', but that doesn't work if\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 37,
                  "endLine": 154,
                  "endColumn": 42,
                  "snippet": {
                    "text": "{\n\tlocal ringid\n\n\tringid=$(_user_do \"keyctl show @u\" | awk '/keyring: _uid/{print $1}')\n\n\t_user_do \"keyctl clear $ringid\"\n\tkeyctl unlink \"$ringid\" @u &> /dev/null || true\n",
                    "rendered": {
                      "text": "{\n\tlocal ringid\n\n\tringid=$(_user_do \"keyctl show @u\" | awk '/keyring: _uid/{print $1}')\n\n\t_user_do \"keyctl clear $ringid\"\n\tkeyctl unlink \"$ringid\" @u &> /dev/null || true\n",
                      "markdown": "`{\n\tlocal ringid\n\n\tringid=$(_user_do \"keyctl show @u\" | awk '/keyring: _uid/{print $1}')\n\n\t_user_do \"keyctl clear $ringid\"\n\tkeyctl unlink \"$ringid\" @u &> /dev/null || true\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 25,
                  "endLine": 114,
                  "endColumn": 30,
                  "snippet": {
                    "text": "{\n\tlocal count\n\n\tcount=$(fscrypt status | awk '/filesystems with fscrypt metadata/ { print $5 }')\n\tif [ -z \"$count\" ]; then\n\t\t_fail \"fscrypt metadata status line not found\"\n\tfi\n",
                    "rendered": {
                      "text": "{\n\tlocal count\n\n\tcount=$(fscrypt status | awk '/filesystems with fscrypt metadata/ { print $5 }')\n\tif [ -z \"$count\" ]; then\n\t\t_fail \"fscrypt metadata status line not found\"\n\tfi\n",
                      "markdown": "`{\n\tlocal count\n\n\tcount=$(fscrypt status | awk '/filesystems with fscrypt metadata/ { print $5 }')\n\tif [ -z \"$count\" ]; then\n\t\t_fail \"fscrypt metadata status line not found\"\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 14,
                  "endLine": 98,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tdescriptor=$(fscrypt status \"$mnt\" |\n\t\t     awk -F '   *' '{ if ($3 == \"'\"$description\"'\") print $1 }')\n\tif [ -z \"$descriptor\" ]; then\n\t\t_fail \"Can't find $description on $mnt\"\n\tfi\n\techo \"$descriptor\"\n}\n",
                    "rendered": {
                      "text": "\tdescriptor=$(fscrypt status \"$mnt\" |\n\t\t     awk -F '   *' '{ if ($3 == \"'\"$description\"'\") print $1 }')\n\tif [ -z \"$descriptor\" ]; then\n\t\t_fail \"Can't find $description on $mnt\"\n\tfi\n\techo \"$descriptor\"\n}\n",
                      "markdown": "`\tdescriptor=$(fscrypt status \"$mnt\" |\n\t\t     awk -F '   *' '{ if ($3 == \"'\"$description\"'\") print $1 }')\n\tif [ -z \"$descriptor\" ]; then\n\t\t_fail \"Can't find $description on $mnt\"\n\tfi\n\techo \"$descriptor\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 6,
                  "endLine": 96,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n\tlocal descriptor\n\tdescriptor=$(fscrypt status \"$mnt\" |\n\t\t     awk -F '   *' '{ if ($3 == \"'\"$description\"'\") print $1 }')\n\tif [ -z \"$descriptor\" ]; then\n\t\t_fail \"Can't find $description on $mnt\"\n\tfi\n",
                    "rendered": {
                      "text": "\n\tlocal descriptor\n\tdescriptor=$(fscrypt status \"$mnt\" |\n\t\t     awk -F '   *' '{ if ($3 == \"'\"$description\"'\") print $1 }')\n\tif [ -z \"$descriptor\" ]; then\n\t\t_fail \"Can't find $description on $mnt\"\n\tfi\n",
                      "markdown": "`\n\tlocal descriptor\n\tdescriptor=$(fscrypt status \"$mnt\" |\n\t\t     awk -F '   *' '{ if ($3 == \"'\"$description\"'\") print $1 }')\n\tif [ -z \"$descriptor\" ]; then\n\t\t_fail \"Can't find $description on $mnt\"\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 25,
                  "endLine": 68,
                  "endColumn": 30,
                  "snippet": {
                    "text": "{\n\tlocal count\n\n\tcount=$(fscrypt status | awk '/filesystems supporting encryption/ { print $4 }')\n\tif [ -z \"$count\" ]; then\n\t\t_fail \"encryption support status line not found\"\n\tfi\n",
                    "rendered": {
                      "text": "{\n\tlocal count\n\n\tcount=$(fscrypt status | awk '/filesystems supporting encryption/ { print $4 }')\n\tif [ -z \"$count\" ]; then\n\t\t_fail \"encryption support status line not found\"\n\tfi\n",
                      "markdown": "`{\n\tlocal count\n\n\tcount=$(fscrypt status | awk '/filesystems supporting encryption/ { print $4 }')\n\tif [ -z \"$count\" ]; then\n\t\t_fail \"encryption support status line not found\"\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/common.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 23,
                  "endLine": 26,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Don't allow running the test scripts directly.  They need to be run via\n# run.sh, to set up everything correctly.\nif [ -z \"${MNT:-}\" ] || [ -z \"${MNT_ROOT:-}\" ]; then\n\techo 1>&2 \"ERROR: This script can only be run via run.sh, not on its own.\"\n\texit 1\nfi\n\n",
                    "rendered": {
                      "text": "# Don't allow running the test scripts directly.  They need to be run via\n# run.sh, to set up everything correctly.\nif [ -z \"${MNT:-}\" ] || [ -z \"${MNT_ROOT:-}\" ]; then\n\techo 1>&2 \"ERROR: This script can only be run via run.sh, not on its own.\"\n\texit 1\nfi\n\n",
                      "markdown": "`# Don't allow running the test scripts directly.  They need to be run via\n# run.sh, to set up everything correctly.\nif [ -z \"${MNT:-}\" ] || [ -z \"${MNT_ROOT:-}\" ]; then\n\techo 1>&2 \"ERROR: This script can only be run via run.sh, not on its own.\"\n\texit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_v1_policy.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 36,
                  "endLine": 16,
                  "endColumn": 4,
                  "snippet": {
                    "text": "mkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n\n_print_header \"Set policy_version 1\"\nsed -E -i 's/\"policy_version\": +\"2\"/\"policy_version\": \"1\"/' \"$FSCRYPT_CONF\"\n\n_print_header \"Try to encrypt as root\"\n_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n",
                    "rendered": {
                      "text": "mkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n\n_print_header \"Set policy_version 1\"\nsed -E -i 's/\"policy_version\": +\"2\"/\"policy_version\": \"1\"/' \"$FSCRYPT_CONF\"\n\n_print_header \"Try to encrypt as root\"\n_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n",
                      "markdown": "`mkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n\n_print_header \"Set policy_version 1\"\nsed -E -i 's/\"policy_version\": +\"2\"/\"policy_version\": \"1\"/' \"$FSCRYPT_CONF\"\n\n_print_header \"Try to encrypt as root\"\n_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_v1_policy.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 12,
                  "endLine": 13,
                  "endColumn": 6,
                  "snippet": {
                    "text": "trap _cleanup_user_keyrings EXIT\n\ndir=\"$MNT/dir\"\nmkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n\n_print_header \"Set policy_version 1\"\nsed -E -i 's/\"policy_version\": +\"2\"/\"policy_version\": \"1\"/' \"$FSCRYPT_CONF\"\n",
                    "rendered": {
                      "text": "trap _cleanup_user_keyrings EXIT\n\ndir=\"$MNT/dir\"\nmkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n\n_print_header \"Set policy_version 1\"\nsed -E -i 's/\"policy_version\": +\"2\"/\"policy_version\": \"1\"/' \"$FSCRYPT_CONF\"\n",
                      "markdown": "`trap _cleanup_user_keyrings EXIT\n\ndir=\"$MNT/dir\"\nmkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n\n_print_header \"Set policy_version 1\"\nsed -E -i 's/\"policy_version\": +\"2\"/\"policy_version\": \"1\"/' \"$FSCRYPT_CONF\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_custom.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 16,
                  "endLine": 44,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\nexpect \"Confirm passphrase\"\nsend \"hunter2\\r\"\nexpect eof\nEOF\nshow_status true\n\n",
                    "rendered": {
                      "text": "expect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\nexpect \"Confirm passphrase\"\nsend \"hunter2\\r\"\nexpect eof\nEOF\nshow_status true\n\n",
                      "markdown": "`expect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\nexpect \"Confirm passphrase\"\nsend \"hunter2\\r\"\nexpect eof\nEOF\nshow_status true\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_custom.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 16,
                  "endLine": 42,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\nexpect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\nexpect \"Confirm passphrase\"\nsend \"hunter2\\r\"\nexpect eof\nEOF\n",
                    "rendered": {
                      "text": "expect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\nexpect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\nexpect \"Confirm passphrase\"\nsend \"hunter2\\r\"\nexpect eof\nEOF\n",
                      "markdown": "`expect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\nexpect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\nexpect \"Confirm passphrase\"\nsend \"hunter2\\r\"\nexpect eof\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_custom.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 13,
                  "endLine": 40,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect \"Enter the source number for the new protector\"\nsend \"2\\r\"\nexpect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\nexpect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\nexpect \"Confirm passphrase\"\nsend \"hunter2\\r\"\n",
                    "rendered": {
                      "text": "expect \"Enter the source number for the new protector\"\nsend \"2\\r\"\nexpect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\nexpect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\nexpect \"Confirm passphrase\"\nsend \"hunter2\\r\"\n",
                      "markdown": "`expect \"Enter the source number for the new protector\"\nsend \"2\\r\"\nexpect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\nexpect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\nexpect \"Confirm passphrase\"\nsend \"hunter2\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_custom.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 10,
                  "endLine": 38,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"2\\r\"\nexpect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\nexpect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\n",
                    "rendered": {
                      "text": "expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"2\\r\"\nexpect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\nexpect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\n",
                      "markdown": "`expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"2\\r\"\nexpect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\nexpect \"Enter custom passphrase\"\nsend \"hunter2\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_custom.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 28,
                  "endLine": 36,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nbegin \"Encrypt with custom passphrase protector, interactively\"\nexpect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"2\\r\"\nexpect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\n",
                    "rendered": {
                      "text": "\nbegin \"Encrypt with custom passphrase protector, interactively\"\nexpect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"2\\r\"\nexpect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\n",
                      "markdown": "`\nbegin \"Encrypt with custom passphrase protector, interactively\"\nexpect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"2\\r\"\nexpect \"Enter a name for the new protector:\"\nsend \"prot\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_custom.sh"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 63,
                  "endLine": 34,
                  "endColumn": 7,
                  "snippet": {
                    "text": "echo hunter2 | fscrypt encrypt --quiet --name=prot \"$dir\"\nshow_status true\n\nbegin \"Encrypt with custom passphrase protector, interactively\"\nexpect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"2\\r\"\n",
                    "rendered": {
                      "text": "echo hunter2 | fscrypt encrypt --quiet --name=prot \"$dir\"\nshow_status true\n\nbegin \"Encrypt with custom passphrase protector, interactively\"\nexpect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"2\\r\"\n",
                      "markdown": "`echo hunter2 | fscrypt encrypt --quiet --name=prot \"$dir\"\nshow_status true\n\nbegin \"Encrypt with custom passphrase protector, interactively\"\nexpect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"2\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/pam_fscrypt/config"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Session-Final:\n\toptional\tPAM_INSTALL_PATH\nPassword-Type: Additional\nPassword-Final:\n\toptional\tPAM_INSTALL_PATH\n",
                    "rendered": {
                      "text": "Session-Final:\n\toptional\tPAM_INSTALL_PATH\nPassword-Type: Additional\nPassword-Final:\n\toptional\tPAM_INSTALL_PATH\n",
                      "markdown": "`Session-Final:\n\toptional\tPAM_INSTALL_PATH\nPassword-Type: Additional\nPassword-Final:\n\toptional\tPAM_INSTALL_PATH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/pam_fscrypt/config"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Session-Interactive-Only: yes\nSession-Final:\n\toptional\tPAM_INSTALL_PATH\nPassword-Type: Additional\nPassword-Final:\n\toptional\tPAM_INSTALL_PATH\n",
                    "rendered": {
                      "text": "Session-Interactive-Only: yes\nSession-Final:\n\toptional\tPAM_INSTALL_PATH\nPassword-Type: Additional\nPassword-Final:\n\toptional\tPAM_INSTALL_PATH\n",
                      "markdown": "`Session-Interactive-Only: yes\nSession-Final:\n\toptional\tPAM_INSTALL_PATH\nPassword-Type: Additional\nPassword-Final:\n\toptional\tPAM_INSTALL_PATH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/pam_fscrypt/pam_fscrypt.go"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 23,
                  "endLine": 348,
                  "endColumn": 31,
                  "snippet": {
                    "text": "var noOldAuthTokMessage string = `\npam_fscrypt: cannot update login protector for '%s' because old passphrase\nwas not given.  This is expected when changing a user's passphrase as root.\nYou'll need to manually update the protector's passphrase using:\n\n   fscrypt metadata change-passphrase --protector=%s:%s\n`\n",
                    "rendered": {
                      "text": "var noOldAuthTokMessage string = `\npam_fscrypt: cannot update login protector for '%s' because old passphrase\nwas not given.  This is expected when changing a user's passphrase as root.\nYou'll need to manually update the protector's passphrase using:\n\n   fscrypt metadata change-passphrase --protector=%s:%s\n`\n",
                      "markdown": "`var noOldAuthTokMessage string = `\npam_fscrypt: cannot update login protector for '%s' because old passphrase\nwas not given.  This is expected when changing a user's passphrase as root.\nYou'll need to manually update the protector's passphrase using:\n\n   fscrypt metadata change-passphrase --protector=%s:%s\n`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/pam_fscrypt/pam_fscrypt.go"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 19,
                  "endLine": 346,
                  "endColumn": 27,
                  "snippet": {
                    "text": "}\n\nvar noOldAuthTokMessage string = `\npam_fscrypt: cannot update login protector for '%s' because old passphrase\nwas not given.  This is expected when changing a user's passphrase as root.\nYou'll need to manually update the protector's passphrase using:\n\n",
                    "rendered": {
                      "text": "}\n\nvar noOldAuthTokMessage string = `\npam_fscrypt: cannot update login protector for '%s' because old passphrase\nwas not given.  This is expected when changing a user's passphrase as root.\nYou'll need to manually update the protector's passphrase using:\n\n",
                      "markdown": "`}\n\nvar noOldAuthTokMessage string = `\npam_fscrypt: cannot update login protector for '%s' because old passphrase\nwas not given.  This is expected when changing a user's passphrase as root.\nYou'll need to manually update the protector's passphrase using:\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/pam_fscrypt/pam_fscrypt.go"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 52,
                  "endLine": 286,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n\t\tvar errCache error\n\t\tif needDropCaches {\n\t\t\tlog.Print(\"dropping appropriate filesystem caches at session close\")\n\t\t\terrCache = security.DropFilesystemCache()\n\t\t}\n\t\tif errLock != nil {\n",
                    "rendered": {
                      "text": "\n\t\tvar errCache error\n\t\tif needDropCaches {\n\t\t\tlog.Print(\"dropping appropriate filesystem caches at session close\")\n\t\t\terrCache = security.DropFilesystemCache()\n\t\t}\n\t\tif errLock != nil {\n",
                      "markdown": "`\n\t\tvar errCache error\n\t\tif needDropCaches {\n\t\t\tlog.Print(\"dropping appropriate filesystem caches at session close\")\n\t\t\terrCache = security.DropFilesystemCache()\n\t\t}\n\t\tif errLock != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/fs_keyring.go"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 48,
                  "endLine": 279,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n// fsGetEncryptionKeyStatus gets the status of the specified encryption key on\n// the specified filesystem.\nfunc fsGetEncryptionKeyStatus(descriptor string, mount *filesystem.Mount,\n\tuser *user.User) (KeyStatus, error) {\n\n\tdir, err := os.Open(mount.Path)\n",
                    "rendered": {
                      "text": "\n// fsGetEncryptionKeyStatus gets the status of the specified encryption key on\n// the specified filesystem.\nfunc fsGetEncryptionKeyStatus(descriptor string, mount *filesystem.Mount,\n\tuser *user.User) (KeyStatus, error) {\n\n\tdir, err := os.Open(mount.Path)\n",
                      "markdown": "`\n// fsGetEncryptionKeyStatus gets the status of the specified encryption key on\n// the specified filesystem.\nfunc fsGetEncryptionKeyStatus(descriptor string, mount *filesystem.Mount,\n\tuser *user.User) (KeyStatus, error) {\n\n\tdir, err := os.Open(mount.Path)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/fs_keyring.go"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 45,
                  "endLine": 219,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n// fsRemoveEncryptionKey removes the specified encryption key from the specified\n// filesystem.\nfunc fsRemoveEncryptionKey(descriptor string, mount *filesystem.Mount,\n\tuser *user.User) error {\n\n\tdir, err := os.Open(mount.Path)\n",
                    "rendered": {
                      "text": "\n// fsRemoveEncryptionKey removes the specified encryption key from the specified\n// filesystem.\nfunc fsRemoveEncryptionKey(descriptor string, mount *filesystem.Mount,\n\tuser *user.User) error {\n\n\tdir, err := os.Open(mount.Path)\n",
                      "markdown": "`\n// fsRemoveEncryptionKey removes the specified encryption key from the specified\n// filesystem.\nfunc fsRemoveEncryptionKey(descriptor string, mount *filesystem.Mount,\n\tuser *user.User) error {\n\n\tdir, err := os.Open(mount.Path)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/fs_keyring.go"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n// fsAddEncryptionKey adds the specified encryption key to the specified filesystem.\nfunc fsAddEncryptionKey(key *crypto.Key, descriptor string,\n\tmount *filesystem.Mount, user *user.User) error {\n\n\tdir, err := os.Open(mount.Path)\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\n// fsAddEncryptionKey adds the specified encryption key to the specified filesystem.\nfunc fsAddEncryptionKey(key *crypto.Key, descriptor string,\n\tmount *filesystem.Mount, user *user.User) error {\n\n\tdir, err := os.Open(mount.Path)\n\tif err != nil {\n",
                      "markdown": "`\n// fsAddEncryptionKey adds the specified encryption key to the specified filesystem.\nfunc fsAddEncryptionKey(key *crypto.Key, descriptor string,\n\tmount *filesystem.Mount, user *user.User) error {\n\n\tdir, err := os.Open(mount.Path)\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/context_test.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 41,
                  "endLine": 54,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\tos.Remove(ConfigFileLocation)\n\tif badCtx, badCtxErr := NewContextFromMountpoint(mountpoint, nil); badCtxErr == nil {\n\t\tbadCtx.Mount.RemoveAllMetadata()\n\t\treturn nil, fmt.Errorf(\"created context at %q without config file\", badCtx.Mount.Path)\n\t}\n\n\tif err = CreateConfigFile(testTime, 0); err != nil {\n",
                    "rendered": {
                      "text": "\tos.Remove(ConfigFileLocation)\n\tif badCtx, badCtxErr := NewContextFromMountpoint(mountpoint, nil); badCtxErr == nil {\n\t\tbadCtx.Mount.RemoveAllMetadata()\n\t\treturn nil, fmt.Errorf(\"created context at %q without config file\", badCtx.Mount.Path)\n\t}\n\n\tif err = CreateConfigFile(testTime, 0); err != nil {\n",
                      "markdown": "`\tos.Remove(ConfigFileLocation)\n\tif badCtx, badCtxErr := NewContextFromMountpoint(mountpoint, nil); badCtxErr == nil {\n\t\tbadCtx.Mount.RemoveAllMetadata()\n\t\treturn nil, fmt.Errorf(\"created context at %q without config file\", badCtx.Mount.Path)\n\t}\n\n\tif err = CreateConfigFile(testTime, 0); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/context.go"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t// Mount is the filesystem relative to which all Protectors and Policies\n\t// are added, edited, removed, and applied, and to which policies using\n\t// the filesystem keyring are provisioned.\n\tMount *filesystem.Mount\n\t// TargetUser is the user for whom protectors are created, and to whose\n\t// keyring policies using the user keyring are provisioned.  It's also\n\t// the user for whom the keys are claimed in the filesystem keyring when\n",
                    "rendered": {
                      "text": "\t// Mount is the filesystem relative to which all Protectors and Policies\n\t// are added, edited, removed, and applied, and to which policies using\n\t// the filesystem keyring are provisioned.\n\tMount *filesystem.Mount\n\t// TargetUser is the user for whom protectors are created, and to whose\n\t// keyring policies using the user keyring are provisioned.  It's also\n\t// the user for whom the keys are claimed in the filesystem keyring when\n",
                      "markdown": "`\t// Mount is the filesystem relative to which all Protectors and Policies\n\t// are added, edited, removed, and applied, and to which policies using\n\t// the filesystem keyring are provisioned.\n\tMount *filesystem.Mount\n\t// TargetUser is the user for whom protectors are created, and to whose\n\t// keyring policies using the user keyring are provisioned.  It's also\n\t// the user for whom the keys are claimed in the filesystem keyring when\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/policy.go"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 17,
                  "endLine": 119,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nfunc (err *ErrOnlyProtector) Error() string {\n\treturn fmt.Sprintf(`cannot remove the only protector from policy %s. A\n\tpolicy must have at least one protector.`, err.Policy.Descriptor())\n}\n\n// ErrPolicyMetadataMismatch indicates that the policy metadata for an encrypted\n",
                    "rendered": {
                      "text": "\nfunc (err *ErrOnlyProtector) Error() string {\n\treturn fmt.Sprintf(`cannot remove the only protector from policy %s. A\n\tpolicy must have at least one protector.`, err.Policy.Descriptor())\n}\n\n// ErrPolicyMetadataMismatch indicates that the policy metadata for an encrypted\n",
                      "markdown": "`\nfunc (err *ErrOnlyProtector) Error() string {\n\treturn fmt.Sprintf(`cannot remove the only protector from policy %s. A\n\tpolicy must have at least one protector.`, err.Policy.Descriptor())\n}\n\n// ErrPolicyMetadataMismatch indicates that the policy metadata for an encrypted\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/policy.go"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// directory is inconsistent with that directory.\ntype ErrPolicyMetadataMismatch struct {\n\tDirPath   string\n\tMount     *filesystem.Mount\n\tPathData  *metadata.PolicyData\n\tMountData *metadata.PolicyData\n}\n",
                    "rendered": {
                      "text": "// directory is inconsistent with that directory.\ntype ErrPolicyMetadataMismatch struct {\n\tDirPath   string\n\tMount     *filesystem.Mount\n\tPathData  *metadata.PolicyData\n\tMountData *metadata.PolicyData\n}\n",
                      "markdown": "`// directory is inconsistent with that directory.\ntype ErrPolicyMetadataMismatch struct {\n\tDirPath   string\n\tMount     *filesystem.Mount\n\tPathData  *metadata.PolicyData\n\tMountData *metadata.PolicyData\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/policy.go"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// ErrMissingPolicyMetadata indicates that a directory is encrypted but its\n// policy metadata cannot be found.\ntype ErrMissingPolicyMetadata struct {\n\tMount      *filesystem.Mount\n\tDirPath    string\n\tDescriptor string\n}\n",
                    "rendered": {
                      "text": "// ErrMissingPolicyMetadata indicates that a directory is encrypted but its\n// policy metadata cannot be found.\ntype ErrMissingPolicyMetadata struct {\n\tMount      *filesystem.Mount\n\tDirPath    string\n\tDescriptor string\n}\n",
                      "markdown": "`// ErrMissingPolicyMetadata indicates that a directory is encrypted but its\n// policy metadata cannot be found.\ntype ErrMissingPolicyMetadata struct {\n\tMount      *filesystem.Mount\n\tDirPath    string\n\tDescriptor string\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_not_enabled.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 60,
                  "endLine": 16,
                  "endColumn": 6,
                  "snippet": {
                    "text": "_print_header \"Disable encryption on $DEV\"\ncount_before=$(_get_enabled_fs_count)\numount \"$MNT\"\n_run_noisy_command \"debugfs -w -R 'feature -encrypt' '$DEV'\"\nmount \"$DEV\" \"$MNT\"\ncount_after=$(_get_enabled_fs_count)\n(( count_after == count_before - 1 )) || _fail \"wrong enabled count\"\n\n",
                    "rendered": {
                      "text": "_print_header \"Disable encryption on $DEV\"\ncount_before=$(_get_enabled_fs_count)\numount \"$MNT\"\n_run_noisy_command \"debugfs -w -R 'feature -encrypt' '$DEV'\"\nmount \"$DEV\" \"$MNT\"\ncount_after=$(_get_enabled_fs_count)\n(( count_after == count_before - 1 )) || _fail \"wrong enabled count\"\n\n",
                      "markdown": "`_print_header \"Disable encryption on $DEV\"\ncount_before=$(_get_enabled_fs_count)\numount \"$MNT\"\n_run_noisy_command \"debugfs -w -R 'feature -encrypt' '$DEV'\"\nmount \"$DEV\" \"$MNT\"\ncount_after=$(_get_enabled_fs_count)\n(( count_after == count_before - 1 )) || _fail \"wrong enabled count\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_lock.sh"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 27,
                  "endLine": 62,
                  "endColumn": 3,
                  "snippet": {
                    "text": "rm -rf \"$dir\"\nmkdir \"$dir\"\necho hunter2 | fscrypt encrypt --quiet --name=prot \"$dir\"\necho contents > \"$dir/file\"\nmv \"$dir/file\" \"$MNT/file\"  # Make it a loose encrypted file.\nfscrypt lock \"$dir\"\n_expect_failure \"fscrypt status '$MNT/file'\"\n_expect_failure \"fscrypt unlock '$MNT/file'\"\n",
                    "rendered": {
                      "text": "rm -rf \"$dir\"\nmkdir \"$dir\"\necho hunter2 | fscrypt encrypt --quiet --name=prot \"$dir\"\necho contents > \"$dir/file\"\nmv \"$dir/file\" \"$MNT/file\"  # Make it a loose encrypted file.\nfscrypt lock \"$dir\"\n_expect_failure \"fscrypt status '$MNT/file'\"\n_expect_failure \"fscrypt unlock '$MNT/file'\"\n",
                      "markdown": "`rm -rf \"$dir\"\nmkdir \"$dir\"\necho hunter2 | fscrypt encrypt --quiet --name=prot \"$dir\"\necho contents > \"$dir/file\"\nmv \"$dir/file\" \"$MNT/file\"  # Make it a loose encrypted file.\nfscrypt lock \"$dir\"\n_expect_failure \"fscrypt status '$MNT/file'\"\n_expect_failure \"fscrypt unlock '$MNT/file'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_lock.sh"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 37,
                  "endLine": 52,
                  "endColumn": 4,
                  "snippet": {
                    "text": "chown \"$TEST_USER\" \"$dir\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n_user_do \"echo contents > $dir/file\"\n_expect_failure \"fscrypt lock '$dir'\"\ncat \"$dir/file\"\nfscrypt lock --all-users \"$dir\"\n_expect_failure \"cat '$dir/file'\"\n\n",
                    "rendered": {
                      "text": "chown \"$TEST_USER\" \"$dir\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n_user_do \"echo contents > $dir/file\"\n_expect_failure \"fscrypt lock '$dir'\"\ncat \"$dir/file\"\nfscrypt lock --all-users \"$dir\"\n_expect_failure \"cat '$dir/file'\"\n\n",
                      "markdown": "`chown \"$TEST_USER\" \"$dir\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n_user_do \"echo contents > $dir/file\"\n_expect_failure \"fscrypt lock '$dir'\"\ncat \"$dir/file\"\nfscrypt lock --all-users \"$dir\"\n_expect_failure \"cat '$dir/file'\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_lock.sh"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 12,
                  "endLine": 48,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n_print_header \"Try to lock directory while other user has unlocked\"\nrm -rf \"$dir\"\nmkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n_user_do \"echo contents > $dir/file\"\n_expect_failure \"fscrypt lock '$dir'\"\n",
                    "rendered": {
                      "text": "\n_print_header \"Try to lock directory while other user has unlocked\"\nrm -rf \"$dir\"\nmkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n_user_do \"echo contents > $dir/file\"\n_expect_failure \"fscrypt lock '$dir'\"\n",
                      "markdown": "`\n_print_header \"Try to lock directory while other user has unlocked\"\nrm -rf \"$dir\"\nmkdir \"$dir\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\n_user_do \"echo contents > $dir/file\"\n_expect_failure \"fscrypt lock '$dir'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_lock.sh"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 53,
                  "endLine": 34,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_expect_failure \"fscrypt lock '$dir'\"\n_print_header \"=> status should be incompletely locked\"\nfscrypt status \"$dir\"\n_print_header \"=> open file should still be readable\"\ncat \"$dir/file\"\n_print_header \"=> shouldn't be able to create a new file\"\n_expect_failure \"bash -c \\\"echo contents > '$dir/file2'\\\"\"\n\n",
                    "rendered": {
                      "text": "_expect_failure \"fscrypt lock '$dir'\"\n_print_header \"=> status should be incompletely locked\"\nfscrypt status \"$dir\"\n_print_header \"=> open file should still be readable\"\ncat \"$dir/file\"\n_print_header \"=> shouldn't be able to create a new file\"\n_expect_failure \"bash -c \\\"echo contents > '$dir/file2'\\\"\"\n\n",
                      "markdown": "`_expect_failure \"fscrypt lock '$dir'\"\n_print_header \"=> status should be incompletely locked\"\nfscrypt status \"$dir\"\n_print_header \"=> open file should still be readable\"\ncat \"$dir/file\"\n_print_header \"=> shouldn't be able to create a new file\"\n_expect_failure \"bash -c \\\"echo contents > '$dir/file2'\\\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_lock.sh"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 21,
                  "endLine": 26,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n_print_header \"Unlock directory\"\necho hunter2 | fscrypt unlock \"$dir\"\nfscrypt status \"$dir\"\ncat \"$dir/file\"\n\n_print_header \"Try to lock directory while files busy\"\nexec 3<\"$dir/file\"\n",
                    "rendered": {
                      "text": "\n_print_header \"Unlock directory\"\necho hunter2 | fscrypt unlock \"$dir\"\nfscrypt status \"$dir\"\ncat \"$dir/file\"\n\n_print_header \"Try to lock directory while files busy\"\nexec 3<\"$dir/file\"\n",
                      "markdown": "`\n_print_header \"Unlock directory\"\necho hunter2 | fscrypt unlock \"$dir\"\nfscrypt status \"$dir\"\ncat \"$dir/file\"\n\n_print_header \"Try to lock directory while files busy\"\nexec 3<\"$dir/file\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 2,
                  "endLine": 281,
                  "endColumn": 10,
                  "snippet": {
                    "text": "trap cleanup_full EXIT\n\n# Create a test user, so that we can test non-root use of fscrypt.  Give them a\n# password, so that we can test creating login passphrase protected directories.\nuserdel \"$TEST_USER\" &> /dev/null || true\nuseradd \"$TEST_USER\"\necho \"$TEST_USER:TEST_USER_PASS\" | chpasswd\n",
                    "rendered": {
                      "text": "trap cleanup_full EXIT\n\n# Create a test user, so that we can test non-root use of fscrypt.  Give them a\n# password, so that we can test creating login passphrase protected directories.\nuserdel \"$TEST_USER\" &> /dev/null || true\nuseradd \"$TEST_USER\"\necho \"$TEST_USER:TEST_USER_PASS\" | chpasswd\n",
                      "markdown": "`trap cleanup_full EXIT\n\n# Create a test user, so that we can test non-root use of fscrypt.  Give them a\n# password, so that we can test creating login passphrase protected directories.\nuserdel \"$TEST_USER\" &> /dev/null || true\nuseradd \"$TEST_USER\"\necho \"$TEST_USER:TEST_USER_PASS\" | chpasswd\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 2,
                  "endLine": 111,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t# Filter any other paths in TMPDIR.\n\tsedscript+=\"s@$TMPDIR@TMPDIR@g;\"\n\n\t# At some point, 'bash -c COMMAND' started showing error messages as\n\t# \"bash: line 1: \" instead of just \"bash: \".  Filter out the \"line 1: \".\n\tsedscript+=\"s@^bash: line 1: @bash: @;\"\n\n",
                    "rendered": {
                      "text": "\t# Filter any other paths in TMPDIR.\n\tsedscript+=\"s@$TMPDIR@TMPDIR@g;\"\n\n\t# At some point, 'bash -c COMMAND' started showing error messages as\n\t# \"bash: line 1: \" instead of just \"bash: \".  Filter out the \"line 1: \".\n\tsedscript+=\"s@^bash: line 1: @bash: @;\"\n\n",
                      "markdown": "`\t# Filter any other paths in TMPDIR.\n\tsedscript+=\"s@$TMPDIR@TMPDIR@g;\"\n\n\t# At some point, 'bash -c COMMAND' started showing error messages as\n\t# \"bash: line 1: \" instead of just \"bash: \".  Filter out the \"line 1: \".\n\tsedscript+=\"s@^bash: line 1: @bash: @;\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# The loopback devices that correspond to each test device.\nLOOPS=()\n\n# Update the expected output files to match the actual output?\nUPDATE_OUTPUT=false\n\nLONGOPTS_ARRAY=(\n",
                    "rendered": {
                      "text": "# The loopback devices that correspond to each test device.\nLOOPS=()\n\n# Update the expected output files to match the actual output?\nUPDATE_OUTPUT=false\n\nLONGOPTS_ARRAY=(\n",
                      "markdown": "`# The loopback devices that correspond to each test device.\nLOOPS=()\n\n# Update the expected output files to match the actual output?\nUPDATE_OUTPUT=false\n\nLONGOPTS_ARRAY=(\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 13,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 31,
                  "endLine": 264,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n\t\tcat 1>&2 << EOF\nERROR: You must install the '${PREREQ_PKGS[$i]}' package to run these tests.\n       Try a command like 'sudo apt-get install ${PREREQ_PKGS[$i]}'.\nEOF\n\t\texit 1\n\tfi\n",
                    "rendered": {
                      "text": "\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n\t\tcat 1>&2 << EOF\nERROR: You must install the '${PREREQ_PKGS[$i]}' package to run these tests.\n       Try a command like 'sudo apt-get install ${PREREQ_PKGS[$i]}'.\nEOF\n\t\texit 1\n\tfi\n",
                      "markdown": "`\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n\t\tcat 1>&2 << EOF\nERROR: You must install the '${PREREQ_PKGS[$i]}' package to run these tests.\n       Try a command like 'sudo apt-get install ${PREREQ_PKGS[$i]}'.\nEOF\n\t\texit 1\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 1,
                  "endLine": 262,
                  "endColumn": 6,
                  "snippet": {
                    "text": "PREREQ_PKGS=(e2fsprogs expect keyutils)\nfor i in ${!PREREQ_CMDS[*]}; do\n\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n\t\tcat 1>&2 << EOF\nERROR: You must install the '${PREREQ_PKGS[$i]}' package to run these tests.\n       Try a command like 'sudo apt-get install ${PREREQ_PKGS[$i]}'.\nEOF\n",
                    "rendered": {
                      "text": "PREREQ_PKGS=(e2fsprogs expect keyutils)\nfor i in ${!PREREQ_CMDS[*]}; do\n\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n\t\tcat 1>&2 << EOF\nERROR: You must install the '${PREREQ_PKGS[$i]}' package to run these tests.\n       Try a command like 'sudo apt-get install ${PREREQ_PKGS[$i]}'.\nEOF\n",
                      "markdown": "`PREREQ_PKGS=(e2fsprogs expect keyutils)\nfor i in ${!PREREQ_CMDS[*]}; do\n\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n\t\tcat 1>&2 << EOF\nERROR: You must install the '${PREREQ_PKGS[$i]}' package to run these tests.\n       Try a command like 'sudo apt-get install ${PREREQ_PKGS[$i]}'.\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 22,
                  "endLine": 259,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n# Check for prerequisites.\nPREREQ_CMDS=(mkfs.ext4 expect keyctl)\nPREREQ_PKGS=(e2fsprogs expect keyutils)\nfor i in ${!PREREQ_CMDS[*]}; do\n\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n\t\tcat 1>&2 << EOF\n",
                    "rendered": {
                      "text": "\n# Check for prerequisites.\nPREREQ_CMDS=(mkfs.ext4 expect keyctl)\nPREREQ_PKGS=(e2fsprogs expect keyutils)\nfor i in ${!PREREQ_CMDS[*]}; do\n\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n\t\tcat 1>&2 << EOF\n",
                      "markdown": "`\n# Check for prerequisites.\nPREREQ_CMDS=(mkfs.ext4 expect keyctl)\nPREREQ_PKGS=(e2fsprogs expect keyutils)\nfor i in ${!PREREQ_CMDS[*]}; do\n\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n\t\tcat 1>&2 << EOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 22,
                  "endLine": 258,
                  "endColumn": 30,
                  "snippet": {
                    "text": "fi\n\n# Check for prerequisites.\nPREREQ_CMDS=(mkfs.ext4 expect keyctl)\nPREREQ_PKGS=(e2fsprogs expect keyutils)\nfor i in ${!PREREQ_CMDS[*]}; do\n\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n",
                    "rendered": {
                      "text": "fi\n\n# Check for prerequisites.\nPREREQ_CMDS=(mkfs.ext4 expect keyctl)\nPREREQ_PKGS=(e2fsprogs expect keyutils)\nfor i in ${!PREREQ_CMDS[*]}; do\n\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n",
                      "markdown": "`fi\n\n# Check for prerequisites.\nPREREQ_CMDS=(mkfs.ext4 expect keyctl)\nPREREQ_PKGS=(e2fsprogs expect keyutils)\nfor i in ${!PREREQ_CMDS[*]}; do\n\tif ! type -P \"${PREREQ_CMDS[$i]}\" > /dev/null; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 226,
                  "endLine": 226,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nusage()\n{\n\tcat << EOF\nUsage: run.sh [--update-output] [TEST_SCRIPT_NAME]...\"\nEOF\n\texit 1\n",
                    "rendered": {
                      "text": "\nusage()\n{\n\tcat << EOF\nUsage: run.sh [--update-output] [TEST_SCRIPT_NAME]...\"\nEOF\n\texit 1\n",
                      "markdown": "`\nusage()\n{\n\tcat << EOF\nUsage: run.sh [--update-output] [TEST_SCRIPT_NAME]...\"\nEOF\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 2,
                  "endLine": 217,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\techo 1>&2 \"FAILED: $t [output mismatch]\"\n\t\t\techo 1>&2 \"Differences between $t.out and $t.out.actual:\"\n\t\t\techo 1>&2\n\t\t\tdiff 1>&2 \"$t.out\" \"$t.out.actual\"\n\t\t\texit 1\n\t\tfi\n\tfi\n",
                    "rendered": {
                      "text": "\t\t\techo 1>&2 \"FAILED: $t [output mismatch]\"\n\t\t\techo 1>&2 \"Differences between $t.out and $t.out.actual:\"\n\t\t\techo 1>&2\n\t\t\tdiff 1>&2 \"$t.out\" \"$t.out.actual\"\n\t\t\texit 1\n\t\tfi\n\tfi\n",
                      "markdown": "`\t\t\techo 1>&2 \"FAILED: $t [output mismatch]\"\n\t\t\techo 1>&2 \"Differences between $t.out and $t.out.actual:\"\n\t\t\techo 1>&2\n\t\t\tdiff 1>&2 \"$t.out\" \"$t.out.actual\"\n\t\t\texit 1\n\t\tfi\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 2,
                  "endLine": 211,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t# Check for output mismatch.\n\tif ! cmp \"$t.out\" \"$t.out.actual\" &> /dev/null; then\n\t\tif $UPDATE_OUTPUT; then\n\t\t\tcp \"$t.out.actual\" \"$t.out\"\n\t\t\techo \"Updated $t.out\"\n\t\telse\n\t\t\techo 1>&2 \"FAILED: $t [output mismatch]\"\n",
                    "rendered": {
                      "text": "\t# Check for output mismatch.\n\tif ! cmp \"$t.out\" \"$t.out.actual\" &> /dev/null; then\n\t\tif $UPDATE_OUTPUT; then\n\t\t\tcp \"$t.out.actual\" \"$t.out\"\n\t\t\techo \"Updated $t.out\"\n\t\telse\n\t\t\techo 1>&2 \"FAILED: $t [output mismatch]\"\n",
                      "markdown": "`\t# Check for output mismatch.\n\tif ! cmp \"$t.out\" \"$t.out.actual\" &> /dev/null; then\n\t\tif $UPDATE_OUTPUT; then\n\t\t\tcp \"$t.out.actual\" \"$t.out\"\n\t\t\techo \"Updated $t.out\"\n\t\telse\n\t\t\techo 1>&2 \"FAILED: $t [output mismatch]\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 3,
                  "endLine": 202,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\techo 1>&2 \"See $t.out.actual for the full output.\"\n\t\t\telse\n\t\t\t\techo 1>&2 \"Test output:\"\n\t\t\t\tsed 1>&2 's/^/    /' < \"$t.out.actual\"\n\t\t\tfi\n\t\tfi\n\t\texit 1\n",
                    "rendered": {
                      "text": "\t\t\t\techo 1>&2 \"See $t.out.actual for the full output.\"\n\t\t\telse\n\t\t\t\techo 1>&2 \"Test output:\"\n\t\t\t\tsed 1>&2 's/^/    /' < \"$t.out.actual\"\n\t\t\tfi\n\t\tfi\n\t\texit 1\n",
                      "markdown": "`\t\t\t\techo 1>&2 \"See $t.out.actual for the full output.\"\n\t\t\telse\n\t\t\t\techo 1>&2 \"Test output:\"\n\t\t\t\tsed 1>&2 's/^/    /' < \"$t.out.actual\"\n\t\t\tfi\n\t\tfi\n\t\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 31,
                  "endLine": 197,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\tif [ -s \"$t.out.actual\" ]; then\n\t\t\tif (( $(wc -l \"$t.out.actual\" | cut -f1 -d' ') > 10 )); then\n\t\t\t\techo 1>&2 \"Last 10 lines of test output:\"\n\t\t\t\ttail -n10 \"$t.out.actual\" | sed 1>&2 's/^/    /'\n\t\t\t\techo 1>&2\n\t\t\t\techo 1>&2 \"See $t.out.actual for the full output.\"\n\t\t\telse\n",
                    "rendered": {
                      "text": "\t\tif [ -s \"$t.out.actual\" ]; then\n\t\t\tif (( $(wc -l \"$t.out.actual\" | cut -f1 -d' ') > 10 )); then\n\t\t\t\techo 1>&2 \"Last 10 lines of test output:\"\n\t\t\t\ttail -n10 \"$t.out.actual\" | sed 1>&2 's/^/    /'\n\t\t\t\techo 1>&2\n\t\t\t\techo 1>&2 \"See $t.out.actual for the full output.\"\n\t\t\telse\n",
                      "markdown": "`\t\tif [ -s \"$t.out.actual\" ]; then\n\t\t\tif (( $(wc -l \"$t.out.actual\" | cut -f1 -d' ') > 10 )); then\n\t\t\t\techo 1>&2 \"Last 10 lines of test output:\"\n\t\t\t\ttail -n10 \"$t.out.actual\" | sed 1>&2 's/^/    /'\n\t\t\t\techo 1>&2\n\t\t\t\techo 1>&2 \"See $t.out.actual for the full output.\"\n\t\t\telse\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 3,
                  "endLine": 197,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\tif [ -s \"$t.out.actual\" ]; then\n\t\t\tif (( $(wc -l \"$t.out.actual\" | cut -f1 -d' ') > 10 )); then\n\t\t\t\techo 1>&2 \"Last 10 lines of test output:\"\n\t\t\t\ttail -n10 \"$t.out.actual\" | sed 1>&2 's/^/    /'\n\t\t\t\techo 1>&2\n\t\t\t\techo 1>&2 \"See $t.out.actual for the full output.\"\n\t\t\telse\n",
                    "rendered": {
                      "text": "\t\tif [ -s \"$t.out.actual\" ]; then\n\t\t\tif (( $(wc -l \"$t.out.actual\" | cut -f1 -d' ') > 10 )); then\n\t\t\t\techo 1>&2 \"Last 10 lines of test output:\"\n\t\t\t\ttail -n10 \"$t.out.actual\" | sed 1>&2 's/^/    /'\n\t\t\t\techo 1>&2\n\t\t\t\techo 1>&2 \"See $t.out.actual for the full output.\"\n\t\t\telse\n",
                      "markdown": "`\t\tif [ -s \"$t.out.actual\" ]; then\n\t\t\tif (( $(wc -l \"$t.out.actual\" | cut -f1 -d' ') > 10 )); then\n\t\t\t\techo 1>&2 \"Last 10 lines of test output:\"\n\t\t\t\ttail -n10 \"$t.out.actual\" | sed 1>&2 's/^/    /'\n\t\t\t\techo 1>&2\n\t\t\t\techo 1>&2 \"See $t.out.actual for the full output.\"\n\t\t\telse\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 34,
                  "endLine": 195,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tif [ \"$status\" != 0 ]; then\n\t\techo 1>&2 \"FAILED: $t [exited with failure status $status]\"\n\t\tif [ -s \"$t.out.actual\" ]; then\n\t\t\tif (( $(wc -l \"$t.out.actual\" | cut -f1 -d' ') > 10 )); then\n\t\t\t\techo 1>&2 \"Last 10 lines of test output:\"\n\t\t\t\ttail -n10 \"$t.out.actual\" | sed 1>&2 's/^/    /'\n\t\t\t\techo 1>&2\n",
                    "rendered": {
                      "text": "\tif [ \"$status\" != 0 ]; then\n\t\techo 1>&2 \"FAILED: $t [exited with failure status $status]\"\n\t\tif [ -s \"$t.out.actual\" ]; then\n\t\t\tif (( $(wc -l \"$t.out.actual\" | cut -f1 -d' ') > 10 )); then\n\t\t\t\techo 1>&2 \"Last 10 lines of test output:\"\n\t\t\t\ttail -n10 \"$t.out.actual\" | sed 1>&2 's/^/    /'\n\t\t\t\techo 1>&2\n",
                      "markdown": "`\tif [ \"$status\" != 0 ]; then\n\t\techo 1>&2 \"FAILED: $t [exited with failure status $status]\"\n\t\tif [ -s \"$t.out.actual\" ]; then\n\t\t\tif (( $(wc -l \"$t.out.actual\" | cut -f1 -d' ') > 10 )); then\n\t\t\t\techo 1>&2 \"Last 10 lines of test output:\"\n\t\t\t\ttail -n10 \"$t.out.actual\" | sed 1>&2 's/^/    /'\n\t\t\t\techo 1>&2\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 1,
                  "endLine": 170,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\t# The tests assume kernel support for v2 policies.\n\tif ! grep -E -q '\"policy_version\": +\"2\"' \"$FSCRYPT_CONF\"; then\n\t\tcat 1>&2 << EOF\nERROR: Can't run these tests because your kernel doesn't support v2 policies.\nYou need kernel v5.4 or later.\nEOF\n",
                    "rendered": {
                      "text": "\n\t# The tests assume kernel support for v2 policies.\n\tif ! grep -E -q '\"policy_version\": +\"2\"' \"$FSCRYPT_CONF\"; then\n\t\tcat 1>&2 << EOF\nERROR: Can't run these tests because your kernel doesn't support v2 policies.\nYou need kernel v5.4 or later.\nEOF\n",
                      "markdown": "`\n\t# The tests assume kernel support for v2 policies.\n\tif ! grep -E -q '\"policy_version\": +\"2\"' \"$FSCRYPT_CONF\"; then\n\t\tcat 1>&2 << EOF\nERROR: Can't run these tests because your kernel doesn't support v2 policies.\nYou need kernel v5.4 or later.\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 5,
                  "endLine": 169,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tfscrypt setup --time=1ms --quiet --all-users > /dev/null\n\n\t# The tests assume kernel support for v2 policies.\n\tif ! grep -E -q '\"policy_version\": +\"2\"' \"$FSCRYPT_CONF\"; then\n\t\tcat 1>&2 << EOF\nERROR: Can't run these tests because your kernel doesn't support v2 policies.\nYou need kernel v5.4 or later.\n",
                    "rendered": {
                      "text": "\tfscrypt setup --time=1ms --quiet --all-users > /dev/null\n\n\t# The tests assume kernel support for v2 policies.\n\tif ! grep -E -q '\"policy_version\": +\"2\"' \"$FSCRYPT_CONF\"; then\n\t\tcat 1>&2 << EOF\nERROR: Can't run these tests because your kernel doesn't support v2 policies.\nYou need kernel v5.4 or later.\n",
                      "markdown": "`\tfscrypt setup --time=1ms --quiet --all-users > /dev/null\n\n\t# The tests assume kernel support for v2 policies.\n\tif ! grep -E -q '\"policy_version\": +\"2\"' \"$FSCRYPT_CONF\"; then\n\t\tcat 1>&2 << EOF\nERROR: Can't run these tests because your kernel doesn't support v2 policies.\nYou need kernel v5.4 or later.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 34,
                  "endLine": 157,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\tmount \"$loop\" \"$mnt\"\n\tdone\n\n\t# Give the tests their own \"root\" mount for storing login protectors, so\n\t# they don't use the real \"/\".\n\texport FSCRYPT_ROOT_MNT=\"$MNT_ROOT\"\n\n",
                    "rendered": {
                      "text": "\t\tmount \"$loop\" \"$mnt\"\n\tdone\n\n\t# Give the tests their own \"root\" mount for storing login protectors, so\n\t# they don't use the real \"/\".\n\texport FSCRYPT_ROOT_MNT=\"$MNT_ROOT\"\n\n",
                      "markdown": "`\t\tmount \"$loop\" \"$mnt\"\n\tdone\n\n\t# Give the tests their own \"root\" mount for storing login protectors, so\n\t# they don't use the real \"/\".\n\texport FSCRYPT_ROOT_MNT=\"$MNT_ROOT\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 1,
                  "endLine": 154,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\tmnt=\"$TMPDIR/$mnt_var\"\n\t\texport \"$mnt_var=$mnt\"\n\t\tmkdir -p \"$mnt\"\n\t\tmount \"$loop\" \"$mnt\"\n\tdone\n\n\t# Give the tests their own \"root\" mount for storing login protectors, so\n",
                    "rendered": {
                      "text": "\t\tmnt=\"$TMPDIR/$mnt_var\"\n\t\texport \"$mnt_var=$mnt\"\n\t\tmkdir -p \"$mnt\"\n\t\tmount \"$loop\" \"$mnt\"\n\tdone\n\n\t# Give the tests their own \"root\" mount for storing login protectors, so\n",
                      "markdown": "`\t\tmnt=\"$TMPDIR/$mnt_var\"\n\t\texport \"$mnt_var=$mnt\"\n\t\tmkdir -p \"$mnt\"\n\t\tmount \"$loop\" \"$mnt\"\n\tdone\n\n\t# Give the tests their own \"root\" mount for storing login protectors, so\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 2,
                  "endLine": 145,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tif ! mkfs.ext4 -O encrypt -F -b 4096 -I 256 \"$img\" $((1<<15)) \\\n\t\t\t&> \"$TMPDIR/mkfs.out\"\n\t\tthen\n\t\t\tcat 1>&2 \"$TMPDIR/mkfs.out\"\n\t\t\texit 1\n\t\tfi\n\t\tloop=$(losetup --find --show \"$img\")\n",
                    "rendered": {
                      "text": "\t\tif ! mkfs.ext4 -O encrypt -F -b 4096 -I 256 \"$img\" $((1<<15)) \\\n\t\t\t&> \"$TMPDIR/mkfs.out\"\n\t\tthen\n\t\t\tcat 1>&2 \"$TMPDIR/mkfs.out\"\n\t\t\texit 1\n\t\tfi\n\t\tloop=$(losetup --find --show \"$img\")\n",
                      "markdown": "`\t\tif ! mkfs.ext4 -O encrypt -F -b 4096 -I 256 \"$img\" $((1<<15)) \\\n\t\t\t&> \"$TMPDIR/mkfs.out\"\n\t\tthen\n\t\t\tcat 1>&2 \"$TMPDIR/mkfs.out\"\n\t\t\texit 1\n\t\tfi\n\t\tloop=$(losetup --find --show \"$img\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t# $TMPDIR so that $TEST_USER is guaranteed to have access to it.\n\tmkdir \"$TMPDIR/bin\"\n\tcp ../bin/fscrypt \"$TMPDIR/bin/\"\n\tchmod 755 \"$TMPDIR\" \"$TMPDIR/bin\" \"$TMPDIR/bin/fscrypt\"\n\n\t# Create the test filesystems and mountpoints.\n\tLOOPS=()\n",
                    "rendered": {
                      "text": "\t# $TMPDIR so that $TEST_USER is guaranteed to have access to it.\n\tmkdir \"$TMPDIR/bin\"\n\tcp ../bin/fscrypt \"$TMPDIR/bin/\"\n\tchmod 755 \"$TMPDIR\" \"$TMPDIR/bin\" \"$TMPDIR/bin/fscrypt\"\n\n\t# Create the test filesystems and mountpoints.\n\tLOOPS=()\n",
                      "markdown": "`\t# $TMPDIR so that $TEST_USER is guaranteed to have access to it.\n\tmkdir \"$TMPDIR/bin\"\n\tcp ../bin/fscrypt \"$TMPDIR/bin/\"\n\tchmod 755 \"$TMPDIR\" \"$TMPDIR/bin\" \"$TMPDIR/bin/fscrypt\"\n\n\t# Create the test filesystems and mountpoints.\n\tLOOPS=()\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 133,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t# ../bin/fscrypt might not be accessible to $TEST_USER.  Copy it into\n\t# $TMPDIR so that $TEST_USER is guaranteed to have access to it.\n\tmkdir \"$TMPDIR/bin\"\n\tcp ../bin/fscrypt \"$TMPDIR/bin/\"\n\tchmod 755 \"$TMPDIR\" \"$TMPDIR/bin\" \"$TMPDIR/bin/fscrypt\"\n\n\t# Create the test filesystems and mountpoints.\n",
                    "rendered": {
                      "text": "\t# ../bin/fscrypt might not be accessible to $TEST_USER.  Copy it into\n\t# $TMPDIR so that $TEST_USER is guaranteed to have access to it.\n\tmkdir \"$TMPDIR/bin\"\n\tcp ../bin/fscrypt \"$TMPDIR/bin/\"\n\tchmod 755 \"$TMPDIR\" \"$TMPDIR/bin\" \"$TMPDIR/bin/fscrypt\"\n\n\t# Create the test filesystems and mountpoints.\n",
                      "markdown": "`\t# ../bin/fscrypt might not be accessible to $TEST_USER.  Copy it into\n\t# $TMPDIR so that $TEST_USER is guaranteed to have access to it.\n\tmkdir \"$TMPDIR/bin\"\n\tcp ../bin/fscrypt \"$TMPDIR/bin/\"\n\tchmod 755 \"$TMPDIR\" \"$TMPDIR/bin\" \"$TMPDIR/bin/fscrypt\"\n\n\t# Create the test filesystems and mountpoints.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tsedscript+=\"/^Options:  /s@  @ @g;\"\n\tsedscript+=\"s@^Options: @Options:  @;\"\n\n\tsed -e \"$sedscript\" \"$raw_output\"\n}\n\n# Prepares to run a test script.\n",
                    "rendered": {
                      "text": "\tsedscript+=\"/^Options:  /s@  @ @g;\"\n\tsedscript+=\"s@^Options: @Options:  @;\"\n\n\tsed -e \"$sedscript\" \"$raw_output\"\n}\n\n# Prepares to run a test script.\n",
                      "markdown": "`\tsedscript+=\"/^Options:  /s@  @ @g;\"\n\tsedscript+=\"s@^Options: @Options:  @;\"\n\n\tsed -e \"$sedscript\" \"$raw_output\"\n}\n\n# Prepares to run a test script.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 8,
                  "endLine": 106,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t# Filter policy and protector descriptors.\n\tsedscript+=$(grep -E -o '\\<([a-f0-9]{16})|([a-f0-9]{32})\\>' \\\n\t\t     \"$raw_output\" \\\n\t\t     | awk '{ printf \"s@\\\\<\" $1 \"\\\\>@desc\" NR \"@g;\" }')\n\n\t# Filter any other paths in TMPDIR.\n\tsedscript+=\"s@$TMPDIR@TMPDIR@g;\"\n",
                    "rendered": {
                      "text": "\t# Filter policy and protector descriptors.\n\tsedscript+=$(grep -E -o '\\<([a-f0-9]{16})|([a-f0-9]{32})\\>' \\\n\t\t     \"$raw_output\" \\\n\t\t     | awk '{ printf \"s@\\\\<\" $1 \"\\\\>@desc\" NR \"@g;\" }')\n\n\t# Filter any other paths in TMPDIR.\n\tsedscript+=\"s@$TMPDIR@TMPDIR@g;\"\n",
                      "markdown": "`\t# Filter policy and protector descriptors.\n\tsedscript+=$(grep -E -o '\\<([a-f0-9]{16})|([a-f0-9]{32})\\>' \\\n\t\t     \"$raw_output\" \\\n\t\t     | awk '{ printf \"s@\\\\<\" $1 \"\\\\>@desc\" NR \"@g;\" }')\n\n\t# Filter any other paths in TMPDIR.\n\tsedscript+=\"s@$TMPDIR@TMPDIR@g;\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tlocal raw_output=$TMPDIR/raw-test-output\n\tlocal i\n\n\tcat > \"$raw_output\"\n\n\t# Filter mountpoint and device names.\n\tfor i in \"${!DEVICES[@]}\"; do\n",
                    "rendered": {
                      "text": "\tlocal raw_output=$TMPDIR/raw-test-output\n\tlocal i\n\n\tcat > \"$raw_output\"\n\n\t# Filter mountpoint and device names.\n\tfor i in \"${!DEVICES[@]}\"; do\n",
                      "markdown": "`\tlocal raw_output=$TMPDIR/raw-test-output\n\tlocal i\n\n\tcat > \"$raw_output\"\n\n\t# Filter mountpoint and device names.\n\tfor i in \"${!DEVICES[@]}\"; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/run.sh"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 32,
                  "endLine": 82,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tuserdel \"$TEST_USER\" || true\n}\n\n# Filters the output of the test script to make the output consistent on every\n# run of the test.  For example, references to the mountpoint like\n# /tmp/fscrypt.4OTb6y/MNT will be replaced with simply MNT, since the name of\n# the temporary directory is different every time.\n",
                    "rendered": {
                      "text": "\tuserdel \"$TEST_USER\" || true\n}\n\n# Filters the output of the test script to make the output consistent on every\n# run of the test.  For example, references to the mountpoint like\n# /tmp/fscrypt.4OTb6y/MNT will be replaced with simply MNT, since the name of\n# the temporary directory is different every time.\n",
                      "markdown": "`\tuserdel \"$TEST_USER\" || true\n}\n\n# Filters the output of the test script to make the output consistent on every\n# run of the test.  For example, references to the mountpoint like\n# /tmp/fscrypt.4OTb6y/MNT will be replaced with simply MNT, since the name of\n# the temporary directory is different every time.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/pam/constants.go"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "endColumn": 9,
                  "snippet": {
                    "text": "// PAM Item types.\nconst (\n\t// Service is the name which identifies the PAM stack.\n\tService Item = C.PAM_SERVICE\n\t// User identifies the username identity used by a service.\n\tUser = C.PAM_USER\n\t// Tty is the terminal name.\n",
                    "rendered": {
                      "text": "// PAM Item types.\nconst (\n\t// Service is the name which identifies the PAM stack.\n\tService Item = C.PAM_SERVICE\n\t// User identifies the username identity used by a service.\n\tUser = C.PAM_USER\n\t// Tty is the terminal name.\n",
                      "markdown": "`// PAM Item types.\nconst (\n\t// Service is the name which identifies the PAM stack.\n\tService Item = C.PAM_SERVICE\n\t// User identifies the username identity used by a service.\n\tUser = C.PAM_USER\n\t// Tty is the terminal name.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/util/util_test.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 56,
                  "endLine": 67,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t// Convert an array of unsafe pointers to int pointers.\n\tfor i, ptr := range PointerSlice(arrPtr)[:len(ptrArr)] {\n\t\tif ptrArr[i] != (*int)(ptr) {\n\t\t\tt.Errorf(\"generated array and original array disagree at %d\", i)\n\t\t}\n\t}\n}\n",
                    "rendered": {
                      "text": "\t// Convert an array of unsafe pointers to int pointers.\n\tfor i, ptr := range PointerSlice(arrPtr)[:len(ptrArr)] {\n\t\tif ptrArr[i] != (*int)(ptr) {\n\t\t\tt.Errorf(\"generated array and original array disagree at %d\", i)\n\t\t}\n\t}\n}\n",
                      "markdown": "`\t// Convert an array of unsafe pointers to int pointers.\n\tfor i, ptr := range PointerSlice(arrPtr)[:len(ptrArr)] {\n\t\tif ptrArr[i] != (*int)(ptr) {\n\t\t\tt.Errorf(\"generated array and original array disagree at %d\", i)\n\t\t}\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1079,
                  "startColumn": 17,
                  "endLine": 1079,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n  `ChallengeResponseAuthentication no` or `KbdInteractiveAuthentication no`.\n\n#### Getting \"encryption not enabled\" on an ext4 filesystem\n",
                    "rendered": {
                      "text": "  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n  `ChallengeResponseAuthentication no` or `KbdInteractiveAuthentication no`.\n\n#### Getting \"encryption not enabled\" on an ext4 filesystem\n",
                      "markdown": "`  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n  `ChallengeResponseAuthentication no` or `KbdInteractiveAuthentication no`.\n\n#### Getting \"encryption not enabled\" on an ext4 filesystem\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1077,
                  "startColumn": 44,
                  "endLine": 1077,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n  `ChallengeResponseAuthentication no` or `KbdInteractiveAuthentication no`.\n",
                    "rendered": {
                      "text": "  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n  `ChallengeResponseAuthentication no` or `KbdInteractiveAuthentication no`.\n",
                      "markdown": "`  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n  `ChallengeResponseAuthentication no` or `KbdInteractiveAuthentication no`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1077,
                  "startColumn": 3,
                  "endLine": 1077,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n  `ChallengeResponseAuthentication no` or `KbdInteractiveAuthentication no`.\n",
                    "rendered": {
                      "text": "  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n  `ChallengeResponseAuthentication no` or `KbdInteractiveAuthentication no`.\n",
                      "markdown": "`  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n  `ChallengeResponseAuthentication no` or `KbdInteractiveAuthentication no`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1076,
                  "startColumn": 13,
                  "endLine": 1076,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n",
                    "rendered": {
                      "text": "  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n",
                      "markdown": "`  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n  file contains `PasswordAuthentication yes`, `UsePAM yes`, and either\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1060,
                  "startColumn": 31,
                  "endLine": 1060,
                  "endColumn": 39,
                  "snippet": {
                    "text": "authentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\nIf your session did start with password authentication, then the following may\nbe causing the issue:\n\n* The PAM module might not be configured correctly.  Ensure you have correctly\n",
                    "rendered": {
                      "text": "authentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\nIf your session did start with password authentication, then the following may\nbe causing the issue:\n\n* The PAM module might not be configured correctly.  Ensure you have correctly\n",
                      "markdown": "`authentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\nIf your session did start with password authentication, then the following may\nbe causing the issue:\n\n* The PAM module might not be configured correctly.  Ensure you have correctly\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1058,
                  "startColumn": 10,
                  "endLine": 1058,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nFirst, directories won't unlock if your session starts without password\nauthentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\nIf your session did start with password authentication, then the following may\nbe causing the issue:\n",
                    "rendered": {
                      "text": "\nFirst, directories won't unlock if your session starts without password\nauthentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\nIf your session did start with password authentication, then the following may\nbe causing the issue:\n",
                      "markdown": "`\nFirst, directories won't unlock if your session starts without password\nauthentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\nIf your session did start with password authentication, then the following may\nbe causing the issue:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1056,
                  "startColumn": 63,
                  "endLine": 1056,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\n#### Directories using my login passphrase are not automatically unlocking\n\nFirst, directories won't unlock if your session starts without password\nauthentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\n",
                    "rendered": {
                      "text": "\n#### Directories using my login passphrase are not automatically unlocking\n\nFirst, directories won't unlock if your session starts without password\nauthentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\n",
                      "markdown": "`\n#### Directories using my login passphrase are not automatically unlocking\n\nFirst, directories won't unlock if your session starts without password\nauthentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 12,
                  "endLine": 872,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#### Quiet version\n```bash\n>>>>> mkdir /mnt/disk/dir2\n>>>>> echo \"password\" | fscrypt encrypt /mnt/disk/dir2 --source=pam_passphrase --quiet\n```\n\n### Changing a custom passphrase\n",
                    "rendered": {
                      "text": "#### Quiet version\n```bash\n>>>>> mkdir /mnt/disk/dir2\n>>>>> echo \"password\" | fscrypt encrypt /mnt/disk/dir2 --source=pam_passphrase --quiet\n```\n\n### Changing a custom passphrase\n",
                      "markdown": "`#### Quiet version\n```bash\n>>>>> mkdir /mnt/disk/dir2\n>>>>> echo \"password\" | fscrypt encrypt /mnt/disk/dir2 --source=pam_passphrase --quiet\n```\n\n### Changing a custom passphrase\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 538,
                  "startColumn": 42,
                  "endLine": 538,
                  "endColumn": 50,
                  "snippet": {
                    "text": "```\npassword    optional    pam_fscrypt.so\n```\nafter `pam_unix.so` in `/etc/pam.d/common-password` or similar.\n\nThe Auth and Session functionality of `pam_fscrypt.so` are used to automatically\nunlock directories when logging in as a user, and lock them when logging out.\n",
                    "rendered": {
                      "text": "```\npassword    optional    pam_fscrypt.so\n```\nafter `pam_unix.so` in `/etc/pam.d/common-password` or similar.\n\nThe Auth and Session functionality of `pam_fscrypt.so` are used to automatically\nunlock directories when logging in as a user, and lock them when logging out.\n",
                      "markdown": "````\npassword    optional    pam_fscrypt.so\n```\nafter `pam_unix.so` in `/etc/pam.d/common-password` or similar.\n\nThe Auth and Session functionality of `pam_fscrypt.so` are used to automatically\nunlock directories when logging in as a user, and lock them when logging out.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 536,
                  "endLine": 536,
                  "endColumn": 8,
                  "snippet": {
                    "text": "a user's login protector when their unix passphrase changes. An easy way to get\nthe working is to add the line:\n```\npassword    optional    pam_fscrypt.so\n```\nafter `pam_unix.so` in `/etc/pam.d/common-password` or similar.\n\n",
                    "rendered": {
                      "text": "a user's login protector when their unix passphrase changes. An easy way to get\nthe working is to add the line:\n```\npassword    optional    pam_fscrypt.so\n```\nafter `pam_unix.so` in `/etc/pam.d/common-password` or similar.\n\n",
                      "markdown": "`a user's login protector when their unix passphrase changes. An easy way to get\nthe working is to add the line:\n```\npassword    optional    pam_fscrypt.so\n```\nafter `pam_unix.so` in `/etc/pam.d/common-password` or similar.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 4,
                  "endLine": 532,
                  "endColumn": 12,
                  "snippet": {
                    "text": "The `fscrypt` PAM module implements the Auth, Session, and Password\n[types](http://www.linux-pam.org/Linux-PAM-html/sag-configuration-file.html).\n\nThe Password functionality of `pam_fscrypt.so` is used to automatically rewrap\na user's login protector when their unix passphrase changes. An easy way to get\nthe working is to add the line:\n```\n",
                    "rendered": {
                      "text": "The `fscrypt` PAM module implements the Auth, Session, and Password\n[types](http://www.linux-pam.org/Linux-PAM-html/sag-configuration-file.html).\n\nThe Password functionality of `pam_fscrypt.so` is used to automatically rewrap\na user's login protector when their unix passphrase changes. An easy way to get\nthe working is to add the line:\n```\n",
                      "markdown": "`The `fscrypt` PAM module implements the Auth, Session, and Password\n[types](http://www.linux-pam.org/Linux-PAM-html/sag-configuration-file.html).\n\nThe Password functionality of `pam_fscrypt.so` is used to automatically rewrap\na user's login protector when their unix passphrase changes. An easy way to get\nthe working is to add the line:\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 529,
                  "startColumn": 59,
                  "endLine": 529,
                  "endColumn": 67,
                  "snippet": {
                    "text": "On all other Linux distros, follow the general guidance below to edit\nyour PAM configuration files.\n\nThe `fscrypt` PAM module implements the Auth, Session, and Password\n[types](http://www.linux-pam.org/Linux-PAM-html/sag-configuration-file.html).\n\nThe Password functionality of `pam_fscrypt.so` is used to automatically rewrap\n",
                    "rendered": {
                      "text": "On all other Linux distros, follow the general guidance below to edit\nyour PAM configuration files.\n\nThe `fscrypt` PAM module implements the Auth, Session, and Password\n[types](http://www.linux-pam.org/Linux-PAM-html/sag-configuration-file.html).\n\nThe Password functionality of `pam_fscrypt.so` is used to automatically rewrap\n",
                      "markdown": "`On all other Linux distros, follow the general guidance below to edit\nyour PAM configuration files.\n\nThe `fscrypt` PAM module implements the Auth, Session, and Password\n[types](http://www.linux-pam.org/Linux-PAM-html/sag-configuration-file.html).\n\nThe Password functionality of `pam_fscrypt.so` is used to automatically rewrap\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 480,
                  "endLine": 480,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Append `rounds=1000000` (or another number of your choice; the goal is to make\nthe passphrase hashing take about 1 second, similar to `fscrypt`'s default):\n```\npassword\trequired\tpam_unix.so sha512 shadow nullok rounds=1000000\n```\n\nThen, change your login passphrase to a new, strong passphrase:\n",
                    "rendered": {
                      "text": "Append `rounds=1000000` (or another number of your choice; the goal is to make\nthe passphrase hashing take about 1 second, similar to `fscrypt`'s default):\n```\npassword\trequired\tpam_unix.so sha512 shadow nullok rounds=1000000\n```\n\nThen, change your login passphrase to a new, strong passphrase:\n",
                      "markdown": "`Append `rounds=1000000` (or another number of your choice; the goal is to make\nthe passphrase hashing take about 1 second, similar to `fscrypt`'s default):\n```\npassword\trequired\tpam_unix.so sha512 shadow nullok rounds=1000000\n```\n\nThen, change your login passphrase to a new, strong passphrase:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 474,
                  "endLine": 474,
                  "endColumn": 8,
                  "snippet": {
                    "text": "hashing uses (though this doesn't increase security as much as choosing a strong\npassphrase).  To do this, find the line in `/etc/pam.d/passwd` that looks like:\n```\npassword\trequired\tpam_unix.so sha512 shadow nullok\n```\n\nAppend `rounds=1000000` (or another number of your choice; the goal is to make\n",
                    "rendered": {
                      "text": "hashing uses (though this doesn't increase security as much as choosing a strong\npassphrase).  To do this, find the line in `/etc/pam.d/passwd` that looks like:\n```\npassword\trequired\tpam_unix.so sha512 shadow nullok\n```\n\nAppend `rounds=1000000` (or another number of your choice; the goal is to make\n",
                      "markdown": "`hashing uses (though this doesn't increase security as much as choosing a strong\npassphrase).  To do this, find the line in `/etc/pam.d/passwd` that looks like:\n```\npassword\trequired\tpam_unix.so sha512 shadow nullok\n```\n\nAppend `rounds=1000000` (or another number of your choice; the goal is to make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 13,
                  "endLine": 179,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n`fscrypt` is intended to improve upon the work in\n[e4crypt](http://man7.org/linux/man-pages/man8/e4crypt.8.html) by providing a\nmore managed environment and handling more functionality in the background.\n`fscrypt` has a [design document](https://goo.gl/55cCrI) specifying its full\narchitecture.  See also the [kernel documentation for Linux native filesystem\nencryption](https://www.kernel.org/doc/html/latest/filesystems/fscrypt.html).\n",
                    "rendered": {
                      "text": "\n`fscrypt` is intended to improve upon the work in\n[e4crypt](http://man7.org/linux/man-pages/man8/e4crypt.8.html) by providing a\nmore managed environment and handling more functionality in the background.\n`fscrypt` has a [design document](https://goo.gl/55cCrI) specifying its full\narchitecture.  See also the [kernel documentation for Linux native filesystem\nencryption](https://www.kernel.org/doc/html/latest/filesystems/fscrypt.html).\n",
                      "markdown": "`\n`fscrypt` is intended to improve upon the work in\n[e4crypt](http://man7.org/linux/man-pages/man8/e4crypt.8.html) by providing a\nmore managed environment and handling more functionality in the background.\n`fscrypt` has a [design document](https://goo.gl/55cCrI) specifying its full\narchitecture.  See also the [kernel documentation for Linux native filesystem\nencryption](https://www.kernel.org/doc/html/latest/filesystems/fscrypt.html).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1283,
                  "startColumn": 71,
                  "endLine": 1284,
                  "snippet": {
                    "text": "versions 4.19 and later of the LTS (Long Term Support) branches of the Linux\nkernel; specifically v5.10.63, v5.4.145, and v4.19.207.\n\nIf the kernel can't be upgraded, the only workaround for this bug is to update\nany affected programs to not depend on symlink sizes being reported correctly.\n\n## Legal\n\n",
                    "rendered": {
                      "text": "versions 4.19 and later of the LTS (Long Term Support) branches of the Linux\nkernel; specifically v5.10.63, v5.4.145, and v4.19.207.\n\nIf the kernel can't be upgraded, the only workaround for this bug is to update\nany affected programs to not depend on symlink sizes being reported correctly.\n\n## Legal\n\n",
                      "markdown": "`versions 4.19 and later of the LTS (Long Term Support) branches of the Linux\nkernel; specifically v5.10.63, v5.4.145, and v4.19.207.\n\nIf the kernel can't be upgraded, the only workaround for this bug is to update\nany affected programs to not depend on symlink sizes being reported correctly.\n\n## Legal\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1257,
                  "startColumn": 50,
                  "endLine": 1257,
                  "endColumn": 59,
                  "snippet": {
                    "text": "from accessing unlocked encrypted files would be pointless.  On Linux systems,\n`root` is usually all-powerful and can always get access to files in ways that\ncannot be prevented, e.g. `setuid()` and `ptrace()`.  The only reliable way to\nlimit what `root` can do is via a mandatory access control system, e.g. SELinux.\n\nThe original design of Linux native filesystem encryption actually did put the\nkeys into per-user keyrings.  However, this caused a [massive number of\n",
                    "rendered": {
                      "text": "from accessing unlocked encrypted files would be pointless.  On Linux systems,\n`root` is usually all-powerful and can always get access to files in ways that\ncannot be prevented, e.g. `setuid()` and `ptrace()`.  The only reliable way to\nlimit what `root` can do is via a mandatory access control system, e.g. SELinux.\n\nThe original design of Linux native filesystem encryption actually did put the\nkeys into per-user keyrings.  However, this caused a [massive number of\n",
                      "markdown": "`from accessing unlocked encrypted files would be pointless.  On Linux systems,\n`root` is usually all-powerful and can always get access to files in ways that\ncannot be prevented, e.g. `setuid()` and `ptrace()`.  The only reliable way to\nlimit what `root` can do is via a mandatory access control system, e.g. SELinux.\n\nThe original design of Linux native filesystem encryption actually did put the\nkeys into per-user keyrings.  However, this caused a [massive number of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1251,
                  "startColumn": 48,
                  "endLine": 1251,
                  "endColumn": 57,
                  "snippet": {
                    "text": "is done by the filesystem, so in reality the filesystem either has the key or it\ndoesn't.  And once it has the key, any additional checks of whether particular\nusers \"have\" the key would be OS-level access control checks (not cryptography)\nthat are redundant with existing OS-level access control mechanisms.\n\nSimilarly, any attempt of the filesystem encryption feature to prevent `root`\nfrom accessing unlocked encrypted files would be pointless.  On Linux systems,\n",
                    "rendered": {
                      "text": "is done by the filesystem, so in reality the filesystem either has the key or it\ndoesn't.  And once it has the key, any additional checks of whether particular\nusers \"have\" the key would be OS-level access control checks (not cryptography)\nthat are redundant with existing OS-level access control mechanisms.\n\nSimilarly, any attempt of the filesystem encryption feature to prevent `root`\nfrom accessing unlocked encrypted files would be pointless.  On Linux systems,\n",
                      "markdown": "`is done by the filesystem, so in reality the filesystem either has the key or it\ndoesn't.  And once it has the key, any additional checks of whether particular\nusers \"have\" the key would be OS-level access control checks (not cryptography)\nthat are redundant with existing OS-level access control mechanisms.\n\nSimilarly, any attempt of the filesystem encryption feature to prevent `root`\nfrom accessing unlocked encrypted files would be pointless.  On Linux systems,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1250,
                  "startColumn": 45,
                  "endLine": 1250,
                  "endColumn": 54,
                  "snippet": {
                    "text": "may seem unintuitive, but it is actually the only logical way.  The encryption\nis done by the filesystem, so in reality the filesystem either has the key or it\ndoesn't.  And once it has the key, any additional checks of whether particular\nusers \"have\" the key would be OS-level access control checks (not cryptography)\nthat are redundant with existing OS-level access control mechanisms.\n\nSimilarly, any attempt of the filesystem encryption feature to prevent `root`\n",
                    "rendered": {
                      "text": "may seem unintuitive, but it is actually the only logical way.  The encryption\nis done by the filesystem, so in reality the filesystem either has the key or it\ndoesn't.  And once it has the key, any additional checks of whether particular\nusers \"have\" the key would be OS-level access control checks (not cryptography)\nthat are redundant with existing OS-level access control mechanisms.\n\nSimilarly, any attempt of the filesystem encryption feature to prevent `root`\n",
                      "markdown": "`may seem unintuitive, but it is actually the only logical way.  The encryption\nis done by the filesystem, so in reality the filesystem either has the key or it\ndoesn't.  And once it has the key, any additional checks of whether particular\nusers \"have\" the key would be OS-level access control checks (not cryptography)\nthat are redundant with existing OS-level access control mechanisms.\n\nSimilarly, any attempt of the filesystem encryption feature to prevent `root`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1240,
                  "startColumn": 55,
                  "endLine": 1240,
                  "endColumn": 64,
                  "snippet": {
                    "text": "This is working as intended.  When an encrypted directory is unlocked (or\nlocked), it is unlocked (or locked) for all users.  Encryption is not access\ncontrol; the Linux kernel already has many access control mechanisms, such as\nthe standard UNIX file permissions, that can be used to control access to files.\n\nSetting the mode of your encrypted directory to `0700` will prevent users other\nthan the directory's owner and `root` from accessing it while it is unlocked.\n",
                    "rendered": {
                      "text": "This is working as intended.  When an encrypted directory is unlocked (or\nlocked), it is unlocked (or locked) for all users.  Encryption is not access\ncontrol; the Linux kernel already has many access control mechanisms, such as\nthe standard UNIX file permissions, that can be used to control access to files.\n\nSetting the mode of your encrypted directory to `0700` will prevent users other\nthan the directory's owner and `root` from accessing it while it is unlocked.\n",
                      "markdown": "`This is working as intended.  When an encrypted directory is unlocked (or\nlocked), it is unlocked (or locked) for all users.  Encryption is not access\ncontrol; the Linux kernel already has many access control mechanisms, such as\nthe standard UNIX file permissions, that can be used to control access to files.\n\nSetting the mode of your encrypted directory to `0700` will prevent users other\nthan the directory's owner and `root` from accessing it while it is unlocked.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1239,
                  "startColumn": 49,
                  "endLine": 1239,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\nThis is working as intended.  When an encrypted directory is unlocked (or\nlocked), it is unlocked (or locked) for all users.  Encryption is not access\ncontrol; the Linux kernel already has many access control mechanisms, such as\nthe standard UNIX file permissions, that can be used to control access to files.\n\nSetting the mode of your encrypted directory to `0700` will prevent users other\n",
                    "rendered": {
                      "text": "\nThis is working as intended.  When an encrypted directory is unlocked (or\nlocked), it is unlocked (or locked) for all users.  Encryption is not access\ncontrol; the Linux kernel already has many access control mechanisms, such as\nthe standard UNIX file permissions, that can be used to control access to files.\n\nSetting the mode of your encrypted directory to `0700` will prevent users other\n",
                      "markdown": "`\nThis is working as intended.  When an encrypted directory is unlocked (or\nlocked), it is unlocked (or locked) for all users.  Encryption is not access\ncontrol; the Linux kernel already has many access control mechanisms, such as\nthe standard UNIX file permissions, that can be used to control access to files.\n\nSetting the mode of your encrypted directory to `0700` will prevent users other\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1039,
                  "startColumn": 27,
                  "endLine": 1039,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#### I changed my login passphrase, now all my directories are inaccessible\n\nUsually, the PAM module `pam_fscrypt.so` will automatically detect changes to a\nuser's login passphrase and update the user's `fscrypt` login protector so that\nthey retain access their login-passphrase protected directories.  However,\nsometimes a user's login passphrase can become desynchronized from their\n`fscrypt` login protector.  This can happen if `root` assigns the user a new\n",
                    "rendered": {
                      "text": "#### I changed my login passphrase, now all my directories are inaccessible\n\nUsually, the PAM module `pam_fscrypt.so` will automatically detect changes to a\nuser's login passphrase and update the user's `fscrypt` login protector so that\nthey retain access their login-passphrase protected directories.  However,\nsometimes a user's login passphrase can become desynchronized from their\n`fscrypt` login protector.  This can happen if `root` assigns the user a new\n",
                      "markdown": "`#### I changed my login passphrase, now all my directories are inaccessible\n\nUsually, the PAM module `pam_fscrypt.so` will automatically detect changes to a\nuser's login passphrase and update the user's `fscrypt` login protector so that\nthey retain access their login-passphrase protected directories.  However,\nsometimes a user's login passphrase can become desynchronized from their\n`fscrypt` login protector.  This can happen if `root` assigns the user a new\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 957,
                  "startColumn": 75,
                  "endLine": 958,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n`fscrypt` supports the idea of protecting a single directory with multiple\nprotectors. This means having access to any of the protectors is sufficient to\ndecrypt the directory. This is useful for sharing data or setting up access\ncontrol systems.\n\n```bash\n# Add an existing protector to the policy for some directory\n",
                    "rendered": {
                      "text": "\n`fscrypt` supports the idea of protecting a single directory with multiple\nprotectors. This means having access to any of the protectors is sufficient to\ndecrypt the directory. This is useful for sharing data or setting up access\ncontrol systems.\n\n```bash\n# Add an existing protector to the policy for some directory\n",
                      "markdown": "`\n`fscrypt` supports the idea of protecting a single directory with multiple\nprotectors. This means having access to any of the protectors is sufficient to\ndecrypt the directory. This is useful for sharing data or setting up access\ncontrol systems.\n\n```bash\n# Add an existing protector to the policy for some directory\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 727,
                  "startColumn": 28,
                  "endLine": 727,
                  "endColumn": 32,
                  "snippet": {
                    "text": ">>>>> sudo fscrypt setup /mnt/disk\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] y\nMetadata directories created at \"/mnt/disk/.fscrypt\", writable by everyone.\n\n# Initialize encryption on a new empty directory\n>>>>> mkdir /mnt/disk/dir1\n",
                    "rendered": {
                      "text": ">>>>> sudo fscrypt setup /mnt/disk\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] y\nMetadata directories created at \"/mnt/disk/.fscrypt\", writable by everyone.\n\n# Initialize encryption on a new empty directory\n>>>>> mkdir /mnt/disk/dir1\n",
                      "markdown": "`>>>>> sudo fscrypt setup /mnt/disk\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] y\nMetadata directories created at \"/mnt/disk/.fscrypt\", writable by everyone.\n\n# Initialize encryption on a new empty directory\n>>>>> mkdir /mnt/disk/dir1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 28,
                  "endLine": 721,
                  "endColumn": 32,
                  "snippet": {
                    "text": "Created global config file at \"/etc/fscrypt.conf\".\nAllow users other than root to create fscrypt metadata on the root filesystem?\n(See https://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] y\nMetadata directories created at \"/.fscrypt\", writable by everyone.\n\n# Start using fscrypt with our filesystem\n>>>>> sudo fscrypt setup /mnt/disk\n",
                    "rendered": {
                      "text": "Created global config file at \"/etc/fscrypt.conf\".\nAllow users other than root to create fscrypt metadata on the root filesystem?\n(See https://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] y\nMetadata directories created at \"/.fscrypt\", writable by everyone.\n\n# Start using fscrypt with our filesystem\n>>>>> sudo fscrypt setup /mnt/disk\n",
                      "markdown": "`Created global config file at \"/etc/fscrypt.conf\".\nAllow users other than root to create fscrypt metadata on the root filesystem?\n(See https://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] y\nMetadata directories created at \"/.fscrypt\", writable by everyone.\n\n# Start using fscrypt with our filesystem\n>>>>> sudo fscrypt setup /mnt/disk\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 718,
                  "startColumn": 26,
                  "endLine": 718,
                  "endColumn": 30,
                  "snippet": {
                    "text": ">>>>> sudo fscrypt setup\nDefaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"/etc/fscrypt.conf\".\nAllow users other than root to create fscrypt metadata on the root filesystem?\n(See https://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] y\nMetadata directories created at \"/.fscrypt\", writable by everyone.\n",
                    "rendered": {
                      "text": ">>>>> sudo fscrypt setup\nDefaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"/etc/fscrypt.conf\".\nAllow users other than root to create fscrypt metadata on the root filesystem?\n(See https://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] y\nMetadata directories created at \"/.fscrypt\", writable by everyone.\n",
                      "markdown": "`>>>>> sudo fscrypt setup\nDefaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"/etc/fscrypt.conf\".\nAllow users other than root to create fscrypt metadata on the root filesystem?\n(See https://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] y\nMetadata directories created at \"/.fscrypt\", writable by everyone.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 698,
                  "startColumn": 18,
                  "endLine": 698,
                  "endColumn": 22,
                  "snippet": {
                    "text": "## Example usage\n\nAll these examples assume there is an ext4 filesystem which supports\nencryption mounted at `/mnt/disk`.  See\n[here](#getting-encryption-not-enabled-on-an-ext4-filesystem) for how\nto enable encryption support on an ext4 filesystem.\n\n",
                    "rendered": {
                      "text": "## Example usage\n\nAll these examples assume there is an ext4 filesystem which supports\nencryption mounted at `/mnt/disk`.  See\n[here](#getting-encryption-not-enabled-on-an-ext4-filesystem) for how\nto enable encryption support on an ext4 filesystem.\n\n",
                      "markdown": "`## Example usage\n\nAll these examples assume there is an ext4 filesystem which supports\nencryption mounted at `/mnt/disk`.  See\n[here](#getting-encryption-not-enabled-on-an-ext4-filesystem) for how\nto enable encryption support on an ext4 filesystem.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 636,
                  "startColumn": 50,
                  "endLine": 636,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n* Backing up and restoring the `/.fscrypt` directory on the root filesystem.\n  Note that after restoring the `/.fscrypt` directory, unlocking the login\n  protectors will require the passphrases they had at the time the backup was\n  made **even if they were changed later**, so make sure to remember these\n  passphrase(s) or record them in a secure location.  Also note that if the UUID\n  of the root filesystem changed, you will need to manually fix the UUID in any\n",
                    "rendered": {
                      "text": "\n* Backing up and restoring the `/.fscrypt` directory on the root filesystem.\n  Note that after restoring the `/.fscrypt` directory, unlocking the login\n  protectors will require the passphrases they had at the time the backup was\n  made **even if they were changed later**, so make sure to remember these\n  passphrase(s) or record them in a secure location.  Also note that if the UUID\n  of the root filesystem changed, you will need to manually fix the UUID in any\n",
                      "markdown": "`\n* Backing up and restoring the `/.fscrypt` directory on the root filesystem.\n  Note that after restoring the `/.fscrypt` directory, unlocking the login\n  protectors will require the passphrases they had at the time the backup was\n  made **even if they were changed later**, so make sure to remember these\n  passphrase(s) or record them in a secure location.  Also note that if the UUID\n  of the root filesystem changed, you will need to manually fix the UUID in any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 596,
                  "startColumn": 54,
                  "endLine": 596,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\nFor directories protected by a `custom_passphrase` or `raw_key` protector, all\nmetadata needed to unlock the directory (excluding the actual passphrase or raw\nkey, of course) is located in the `.fscrypt` directory at the root of the\nfilesystem that contains the encrypted directory.  For example, if you have an\nencrypted directory `/home/$USER/private` that is protected by a custom\npassphrase, all `fscrypt` metadata needed to unlock the directory with that\n",
                    "rendered": {
                      "text": "\nFor directories protected by a `custom_passphrase` or `raw_key` protector, all\nmetadata needed to unlock the directory (excluding the actual passphrase or raw\nkey, of course) is located in the `.fscrypt` directory at the root of the\nfilesystem that contains the encrypted directory.  For example, if you have an\nencrypted directory `/home/$USER/private` that is protected by a custom\npassphrase, all `fscrypt` metadata needed to unlock the directory with that\n",
                      "markdown": "`\nFor directories protected by a `custom_passphrase` or `raw_key` protector, all\nmetadata needed to unlock the directory (excluding the actual passphrase or raw\nkey, of course) is located in the `.fscrypt` directory at the root of the\nfilesystem that contains the encrypted directory.  For example, if you have an\nencrypted directory `/home/$USER/private` that is protected by a custom\npassphrase, all `fscrypt` metadata needed to unlock the directory with that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 516,
                  "startColumn": 41,
                  "endLine": 516,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n#### Enabling the PAM module on Arch Linux\n\nOn Arch Linux, follow the recommendations at the [Arch Linux\nWiki](https://wiki.archlinux.org/index.php/Fscrypt#Auto-unlocking_directories).\n\nWe recommend using the Arch Linux package, either `fscrypt` (official) or\n",
                    "rendered": {
                      "text": "\n#### Enabling the PAM module on Arch Linux\n\nOn Arch Linux, follow the recommendations at the [Arch Linux\nWiki](https://wiki.archlinux.org/index.php/Fscrypt#Auto-unlocking_directories).\n\nWe recommend using the Arch Linux package, either `fscrypt` (official) or\n",
                      "markdown": "`\n#### Enabling the PAM module on Arch Linux\n\nOn Arch Linux, follow the recommendations at the [Arch Linux\nWiki](https://wiki.archlinux.org/index.php/Fscrypt#Auto-unlocking_directories).\n\nWe recommend using the Arch Linux package, either `fscrypt` (official) or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 21,
                  "endLine": 435,
                  "endColumn": 25,
                  "snippet": {
                    "text": "on the metadata directories to grant write access to specific users or groups.\n\nIf you chose the wrong mode at `fscrypt setup` time, you can change the\ndirectory permissions at any time.  To enable single-user writable mode, run:\n\n    sudo chmod 0755 MOUNTPOINT/.fscrypt/*\n\n",
                    "rendered": {
                      "text": "on the metadata directories to grant write access to specific users or groups.\n\nIf you chose the wrong mode at `fscrypt setup` time, you can change the\ndirectory permissions at any time.  To enable single-user writable mode, run:\n\n    sudo chmod 0755 MOUNTPOINT/.fscrypt/*\n\n",
                      "markdown": "`on the metadata directories to grant write access to specific users or groups.\n\nIf you chose the wrong mode at `fscrypt setup` time, you can change the\ndirectory permissions at any time.  To enable single-user writable mode, run:\n\n    sudo chmod 0755 MOUNTPOINT/.fscrypt/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 27,
                  "endLine": 434,
                  "endColumn": 31,
                  "snippet": {
                    "text": "set up encryption on users' behalf, unless you manually set custom permissions\non the metadata directories to grant write access to specific users or groups.\n\nIf you chose the wrong mode at `fscrypt setup` time, you can change the\ndirectory permissions at any time.  To enable single-user writable mode, run:\n\n    sudo chmod 0755 MOUNTPOINT/.fscrypt/*\n",
                    "rendered": {
                      "text": "set up encryption on users' behalf, unless you manually set custom permissions\non the metadata directories to grant write access to specific users or groups.\n\nIf you chose the wrong mode at `fscrypt setup` time, you can change the\ndirectory permissions at any time.  To enable single-user writable mode, run:\n\n    sudo chmod 0755 MOUNTPOINT/.fscrypt/*\n",
                      "markdown": "`set up encryption on users' behalf, unless you manually set custom permissions\non the metadata directories to grant write access to specific users or groups.\n\nIf you chose the wrong mode at `fscrypt setup` time, you can change the\ndirectory permissions at any time.  To enable single-user writable mode, run:\n\n    sudo chmod 0755 MOUNTPOINT/.fscrypt/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 67,
                  "endLine": 286,
                  "endColumn": 71,
                  "snippet": {
                    "text": "* f2fs, with upstream kernel v4.2 or later.  The kernel configuration must\n  contain `CONFIG_FS_ENCRYPTION=y` (for kernels v5.1+) or\n  `CONFIG_F2FS_FS_ENCRYPTION=y` (for older kernels).  The filesystem must also\n  have the `encrypt` feature flag enabled; this flag can be enabled at format\n  time by `mkfs.f2fs -O encrypt` or later by `fsck.f2fs -O encrypt`.\n\n* UBIFS, with upstream kernel v4.10 or later.  The kernel configuration must\n",
                    "rendered": {
                      "text": "* f2fs, with upstream kernel v4.2 or later.  The kernel configuration must\n  contain `CONFIG_FS_ENCRYPTION=y` (for kernels v5.1+) or\n  `CONFIG_F2FS_FS_ENCRYPTION=y` (for older kernels).  The filesystem must also\n  have the `encrypt` feature flag enabled; this flag can be enabled at format\n  time by `mkfs.f2fs -O encrypt` or later by `fsck.f2fs -O encrypt`.\n\n* UBIFS, with upstream kernel v4.10 or later.  The kernel configuration must\n",
                      "markdown": "`* f2fs, with upstream kernel v4.2 or later.  The kernel configuration must\n  contain `CONFIG_FS_ENCRYPTION=y` (for kernels v5.1+) or\n  `CONFIG_F2FS_FS_ENCRYPTION=y` (for older kernels).  The filesystem must also\n  have the `encrypt` feature flag enabled; this flag can be enabled at format\n  time by `mkfs.f2fs -O encrypt` or later by `fsck.f2fs -O encrypt`.\n\n* UBIFS, with upstream kernel v4.10 or later.  The kernel configuration must\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 78,
                  "endLine": 201,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n3. A raw key file.  See [Using a raw key protector](#using-a-raw-key-protector).\n\nThese protectors are mutable, so the information can change without needing to\nupdate any of your encrypted directories.\n\nPolicies represent the actual key passed to the kernel. This \"policy key\" is\nimmutable and policies are (usually) applied to a single directory. Protectors\n",
                    "rendered": {
                      "text": "\n3. A raw key file.  See [Using a raw key protector](#using-a-raw-key-protector).\n\nThese protectors are mutable, so the information can change without needing to\nupdate any of your encrypted directories.\n\nPolicies represent the actual key passed to the kernel. This \"policy key\" is\nimmutable and policies are (usually) applied to a single directory. Protectors\n",
                      "markdown": "`\n3. A raw key file.  See [Using a raw key protector](#using-a-raw-key-protector).\n\nThese protectors are mutable, so the information can change without needing to\nupdate any of your encrypted directories.\n\nPolicies represent the actual key passed to the kernel. This \"policy key\" is\nimmutable and policies are (usually) applied to a single directory. Protectors\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 54,
                  "endLine": 158,
                  "endColumn": 58,
                  "snippet": {
                    "text": "  makes sense to do this when the keys for each encryption layer are protected\n  in different ways, such that each layer serves a different purpose.  A\n  reasonable set-up would be to encrypt the whole filesystem with dm-crypt/LUKS\n  using a TPM-bound key that is automatically unlocked at boot time, and also\n  encrypt users' home directories with `fscrypt` using their login passphrases.\n\n## Threat model\n",
                    "rendered": {
                      "text": "  makes sense to do this when the keys for each encryption layer are protected\n  in different ways, such that each layer serves a different purpose.  A\n  reasonable set-up would be to encrypt the whole filesystem with dm-crypt/LUKS\n  using a TPM-bound key that is automatically unlocked at boot time, and also\n  encrypt users' home directories with `fscrypt` using their login passphrases.\n\n## Threat model\n",
                      "markdown": "`  makes sense to do this when the keys for each encryption layer are protected\n  in different ways, such that each layer serves a different purpose.  A\n  reasonable set-up would be to encrypt the whole filesystem with dm-crypt/LUKS\n  using a TPM-bound key that is automatically unlocked at boot time, and also\n  encrypt users' home directories with `fscrypt` using their login passphrases.\n\n## Threat model\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 5,
                  "endLine": 145,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  `fscrypt` isn't very useful in the following cases:\n\n    * Single-user systems where the user is willing to enter a strong passphrase\n      at boot time to unlock the entire filesystem.  In this case, the main\n      advantage of `fscrypt` would go unused, so dm-crypt/LUKS would be better\n      as it would provide better security (due to ensuring that all files and\n      all filesystem metadata are encrypted).\n",
                    "rendered": {
                      "text": "  `fscrypt` isn't very useful in the following cases:\n\n    * Single-user systems where the user is willing to enter a strong passphrase\n      at boot time to unlock the entire filesystem.  In this case, the main\n      advantage of `fscrypt` would go unused, so dm-crypt/LUKS would be better\n      as it would provide better security (due to ensuring that all files and\n      all filesystem metadata are encrypted).\n",
                      "markdown": "`  `fscrypt` isn't very useful in the following cases:\n\n    * Single-user systems where the user is willing to enter a strong passphrase\n      at boot time to unlock the entire filesystem.  In this case, the main\n      advantage of `fscrypt` would go unused, so dm-crypt/LUKS would be better\n      as it would provide better security (due to ensuring that all files and\n      all filesystem metadata are encrypted).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 5,
                  "endLine": 137,
                  "endColumn": 9,
                  "snippet": {
                    "text": "      strongest level of protection.  For example, it might be necessary for the\n      system to boot up without user interaction.  Any files that are needed to\n      do so can only be encrypted by a hardware-protected (e.g. TPM-bound) key\n      at best.  If the user's personal files are located on the same filesystem,\n      then with dm-crypt/LUKS the user's personal files would be limited to this\n      weak level of protection.  With `fscrypt`, the user's personal files could\n      be fully protected using the user's passphrase.\n",
                    "rendered": {
                      "text": "      strongest level of protection.  For example, it might be necessary for the\n      system to boot up without user interaction.  Any files that are needed to\n      do so can only be encrypted by a hardware-protected (e.g. TPM-bound) key\n      at best.  If the user's personal files are located on the same filesystem,\n      then with dm-crypt/LUKS the user's personal files would be limited to this\n      weak level of protection.  With `fscrypt`, the user's personal files could\n      be fully protected using the user's passphrase.\n",
                      "markdown": "`      strongest level of protection.  For example, it might be necessary for the\n      system to boot up without user interaction.  Any files that are needed to\n      do so can only be encrypted by a hardware-protected (e.g. TPM-bound) key\n      at best.  If the user's personal files are located on the same filesystem,\n      then with dm-crypt/LUKS the user's personal files would be limited to this\n      weak level of protection.  With `fscrypt`, the user's personal files could\n      be fully protected using the user's passphrase.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 26,
                  "endLine": 120,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  filesystem encryption instead.  The largest users of eCryptfs (Ubuntu and\n  Chrome OS) have switched to dm-crypt or Linux native filesystem encryption.\n\n* If you need fine-grained control of encryption within a filesystem and you are\n  using a filesystem that supports `fscrypt`, then use `fscrypt`, or `fscrypt`\n  together with dm-crypt/LUKS.  If you don't need this, then use dm-crypt/LUKS.\n\n",
                    "rendered": {
                      "text": "  filesystem encryption instead.  The largest users of eCryptfs (Ubuntu and\n  Chrome OS) have switched to dm-crypt or Linux native filesystem encryption.\n\n* If you need fine-grained control of encryption within a filesystem and you are\n  using a filesystem that supports `fscrypt`, then use `fscrypt`, or `fscrypt`\n  together with dm-crypt/LUKS.  If you don't need this, then use dm-crypt/LUKS.\n\n",
                      "markdown": "`  filesystem encryption instead.  The largest users of eCryptfs (Ubuntu and\n  Chrome OS) have switched to dm-crypt or Linux native filesystem encryption.\n\n* If you need fine-grained control of encryption within a filesystem and you are\n  using a filesystem that supports `fscrypt`, then use `fscrypt`, or `fscrypt`\n  together with dm-crypt/LUKS.  If you don't need this, then use dm-crypt/LUKS.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 32,
                  "endLine": 114,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nWhich solution to use?  Here are our recommendations:\n\n* eCryptfs shouldn't be used, if at all possible.  eCryptfs's use of filesystem\n  stacking causes a number of issues, and eCryptfs is no longer actively\n  maintained.  The original author of eCryptfs recommends using Linux native\n  filesystem encryption instead.  The largest users of eCryptfs (Ubuntu and\n",
                    "rendered": {
                      "text": "\nWhich solution to use?  Here are our recommendations:\n\n* eCryptfs shouldn't be used, if at all possible.  eCryptfs's use of filesystem\n  stacking causes a number of issues, and eCryptfs is no longer actively\n  maintained.  The original author of eCryptfs recommends using Linux native\n  filesystem encryption instead.  The largest users of eCryptfs (Ubuntu and\n",
                      "markdown": "`\nWhich solution to use?  Here are our recommendations:\n\n* eCryptfs shouldn't be used, if at all possible.  eCryptfs's use of filesystem\n  stacking causes a number of issues, and eCryptfs is no longer actively\n  maintained.  The original author of eCryptfs recommends using Linux native\n  filesystem encryption instead.  The largest users of eCryptfs (Ubuntu and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 56,
                  "endLine": 66,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n## Alternatives to consider\n\nOperating-system level storage encryption solutions work at either the\nfilesystem or block device level.  [Linux native filesystem\nencryption](https://www.kernel.org/doc/html/latest/filesystems/fscrypt.html)\n(the solution configured by `fscrypt`) is filesystem-level; it encrypts\n",
                    "rendered": {
                      "text": "\n## Alternatives to consider\n\nOperating-system level storage encryption solutions work at either the\nfilesystem or block device level.  [Linux native filesystem\nencryption](https://www.kernel.org/doc/html/latest/filesystems/fscrypt.html)\n(the solution configured by `fscrypt`) is filesystem-level; it encrypts\n",
                      "markdown": "`\n## Alternatives to consider\n\nOperating-system level storage encryption solutions work at either the\nfilesystem or block device level.  [Linux native filesystem\nencryption](https://www.kernel.org/doc/html/latest/filesystems/fscrypt.html)\n(the solution configured by `fscrypt`) is filesystem-level; it encrypts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1215,
                  "startColumn": 4,
                  "endLine": 1215,
                  "endColumn": 8,
                  "snippet": {
                    "text": "     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n   ```\n\n   You don't need to create a new protector.  I.e., when `fscrypt encrypt` asks\n",
                    "rendered": {
                      "text": "     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n   ```\n\n   You don't need to create a new protector.  I.e., when `fscrypt encrypt` asks\n",
                      "markdown": "`     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n   ```\n\n   You don't need to create a new protector.  I.e., when `fscrypt encrypt` asks\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1213,
                  "startColumn": 31,
                  "endLine": 1213,
                  "endColumn": 38,
                  "snippet": {
                    "text": "     mkdir dir.new\n     fscrypt encrypt dir.new\n     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n   ```\n",
                    "rendered": {
                      "text": "     mkdir dir.new\n     fscrypt encrypt dir.new\n     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n   ```\n",
                      "markdown": "`     mkdir dir.new\n     fscrypt encrypt dir.new\n     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n   ```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1213,
                  "startColumn": 4,
                  "endLine": 1213,
                  "endColumn": 10,
                  "snippet": {
                    "text": "     mkdir dir.new\n     fscrypt encrypt dir.new\n     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n   ```\n",
                    "rendered": {
                      "text": "     mkdir dir.new\n     fscrypt encrypt dir.new\n     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n   ```\n",
                      "markdown": "`     mkdir dir.new\n     fscrypt encrypt dir.new\n     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n   ```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1212,
                  "startColumn": 4,
                  "endLine": 1212,
                  "endColumn": 8,
                  "snippet": {
                    "text": "     fscrypt unlock dir  # if not already unlocked\n     mkdir dir.new\n     fscrypt encrypt dir.new\n     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n",
                    "rendered": {
                      "text": "     fscrypt unlock dir  # if not already unlocked\n     mkdir dir.new\n     fscrypt encrypt dir.new\n     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n",
                      "markdown": "`     fscrypt unlock dir  # if not already unlocked\n     mkdir dir.new\n     fscrypt encrypt dir.new\n     cp -a -T dir dir.new\n     find dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\n     rm -rf dir\n     mv dir.new dir\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1180,
                  "startColumn": 1,
                  "endLine": 1180,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* SSH to a user with an encrypted home directory not working, even when that\n  directory is already unlocked\n\n* Docker containers being unable to access encrypted files that were unlocked\n  from outside the container\n\n* NetworkManager being unable to access certificates stored in the user's\n",
                    "rendered": {
                      "text": "* SSH to a user with an encrypted home directory not working, even when that\n  directory is already unlocked\n\n* Docker containers being unable to access encrypted files that were unlocked\n  from outside the container\n\n* NetworkManager being unable to access certificates stored in the user's\n",
                      "markdown": "`* SSH to a user with an encrypted home directory not working, even when that\n  directory is already unlocked\n\n* Docker containers being unable to access encrypted files that were unlocked\n  from outside the container\n\n* NetworkManager being unable to access certificates stored in the user's\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1177,
                  "startColumn": 1,
                  "endLine": 1177,
                  "endColumn": 6,
                  "snippet": {
                    "text": "filesystem encryption which made it difficult to ensure that all processes can\naccess unlocked encrypted files.  This issue can manifest in many ways, such as:\n\n* SSH to a user with an encrypted home directory not working, even when that\n  directory is already unlocked\n\n* Docker containers being unable to access encrypted files that were unlocked\n",
                    "rendered": {
                      "text": "filesystem encryption which made it difficult to ensure that all processes can\naccess unlocked encrypted files.  This issue can manifest in many ways, such as:\n\n* SSH to a user with an encrypted home directory not working, even when that\n  directory is already unlocked\n\n* Docker containers being unable to access encrypted files that were unlocked\n",
                      "markdown": "`filesystem encryption which made it difficult to ensure that all processes can\naccess unlocked encrypted files.  This issue can manifest in many ways, such as:\n\n* SSH to a user with an encrypted home directory not working, even when that\n  directory is already unlocked\n\n* Docker containers being unable to access encrypted files that were unlocked\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1098,
                  "startColumn": 27,
                  "endLine": 1098,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n* Either you only need to use your filesystem on kernels v5.5 and later, or your\n  kernel page size (run `getconf PAGE_SIZE`) and filesystem block size (run\n  `tune2fs -l /dev/device | grep 'Block size'`) are the same.\n\n  (Both values will almost always be 4096, but they may differ if your\n  filesystem is very small, if your system uses the PowerPC CPU architecture, or\n",
                    "rendered": {
                      "text": "\n* Either you only need to use your filesystem on kernels v5.5 and later, or your\n  kernel page size (run `getconf PAGE_SIZE`) and filesystem block size (run\n  `tune2fs -l /dev/device | grep 'Block size'`) are the same.\n\n  (Both values will almost always be 4096, but they may differ if your\n  filesystem is very small, if your system uses the PowerPC CPU architecture, or\n",
                      "markdown": "`\n* Either you only need to use your filesystem on kernels v5.5 and later, or your\n  kernel page size (run `getconf PAGE_SIZE`) and filesystem block size (run\n  `tune2fs -l /dev/device | grep 'Block size'`) are the same.\n\n  (Both values will almost always be 4096, but they may differ if your\n  filesystem is very small, if your system uses the PowerPC CPU architecture, or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1093,
                  "startColumn": 33,
                  "endLine": 1093,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n* You only need to use your filesystem on kernels v4.1 and later.\n\n  (Kernels v4.0 and earlier can't mount ext4 filesystems that have the `encrypt`\n  feature flag.)\n\n* Either you only need to use your filesystem on kernels v5.5 and later, or your\n",
                    "rendered": {
                      "text": "\n* You only need to use your filesystem on kernels v4.1 and later.\n\n  (Kernels v4.0 and earlier can't mount ext4 filesystems that have the `encrypt`\n  feature flag.)\n\n* Either you only need to use your filesystem on kernels v5.5 and later, or your\n",
                      "markdown": "`\n* You only need to use your filesystem on kernels v4.1 and later.\n\n  (Kernels v4.0 and earlier can't mount ext4 filesystems that have the `encrypt`\n  feature flag.)\n\n* Either you only need to use your filesystem on kernels v5.5 and later, or your\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1075,
                  "startColumn": 46,
                  "endLine": 1075,
                  "endColumn": 51,
                  "snippet": {
                    "text": "* Due to a [bug in sshd](https://bugzilla.mindrot.org/show_bug.cgi?id=2548),\n  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n",
                    "rendered": {
                      "text": "* Due to a [bug in sshd](https://bugzilla.mindrot.org/show_bug.cgi?id=2548),\n  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n",
                      "markdown": "`* Due to a [bug in sshd](https://bugzilla.mindrot.org/show_bug.cgi?id=2548),\n  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n  `fscrypt`.  To avoid this issue, make sure that your `/etc/ssh/sshd_config`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1074,
                  "startColumn": 35,
                  "endLine": 1074,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n* Due to a [bug in sshd](https://bugzilla.mindrot.org/show_bug.cgi?id=2548),\n  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n",
                    "rendered": {
                      "text": "\n* Due to a [bug in sshd](https://bugzilla.mindrot.org/show_bug.cgi?id=2548),\n  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n",
                      "markdown": "`\n* Due to a [bug in sshd](https://bugzilla.mindrot.org/show_bug.cgi?id=2548),\n  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n  `PasswordAuthentication`.  However, only `PasswordAuthentication` works with\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1073,
                  "startColumn": 62,
                  "endLine": 1073,
                  "endColumn": 67,
                  "snippet": {
                    "text": "  to get it back in sync with your actual login passphrase.\n\n* Due to a [bug in sshd](https://bugzilla.mindrot.org/show_bug.cgi?id=2548),\n  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n",
                    "rendered": {
                      "text": "  to get it back in sync with your actual login passphrase.\n\n* Due to a [bug in sshd](https://bugzilla.mindrot.org/show_bug.cgi?id=2548),\n  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n",
                      "markdown": "`  to get it back in sync with your actual login passphrase.\n\n* Due to a [bug in sshd](https://bugzilla.mindrot.org/show_bug.cgi?id=2548),\n  encrypted directories won't auto-unlock when logging in with ssh using the\n  `ChallengeResponseAuthentication` ssh authentication method, which is also\n  called `KbdInteractiveAuthentication`.  This ssh authentication method\n  implements password authentication by default, so it might appear similar to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1057,
                  "startColumn": 59,
                  "endLine": 1057,
                  "endColumn": 64,
                  "snippet": {
                    "text": "#### Directories using my login passphrase are not automatically unlocking\n\nFirst, directories won't unlock if your session starts without password\nauthentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\nIf your session did start with password authentication, then the following may\n",
                    "rendered": {
                      "text": "#### Directories using my login passphrase are not automatically unlocking\n\nFirst, directories won't unlock if your session starts without password\nauthentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\nIf your session did start with password authentication, then the following may\n",
                      "markdown": "`#### Directories using my login passphrase are not automatically unlocking\n\nFirst, directories won't unlock if your session starts without password\nauthentication.  The most common case of this is public-key ssh login.  To\ntrigger a password authentication event, run `su $USER -c exit`.\n\nIf your session did start with password authentication, then the following may\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 1048,
                  "startColumn": 32,
                  "endLine": 1048,
                  "endColumn": 38,
                  "snippet": {
                    "text": "or if the PAM module is not properly configured.  See [Enabling the PAM\nmodule](#enabling-the-pam-module) for how to configure the PAM module.\n\nTo fix a user's login protector, find the corresponding protector ID by running\n`fscrypt status \"/\"`.  Then, change this protector's passphrase by running:\n```\nfscrypt metadata change-passphrase --protector=/:ID\n",
                    "rendered": {
                      "text": "or if the PAM module is not properly configured.  See [Enabling the PAM\nmodule](#enabling-the-pam-module) for how to configure the PAM module.\n\nTo fix a user's login protector, find the corresponding protector ID by running\n`fscrypt status \"/\"`.  Then, change this protector's passphrase by running:\n```\nfscrypt metadata change-passphrase --protector=/:ID\n",
                      "markdown": "`or if the PAM module is not properly configured.  See [Enabling the PAM\nmodule](#enabling-the-pam-module) for how to configure the PAM module.\n\nTo fix a user's login protector, find the corresponding protector ID by running\n`fscrypt status \"/\"`.  Then, change this protector's passphrase by running:\n```\nfscrypt metadata change-passphrase --protector=/:ID\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 949,
                  "startColumn": 5,
                  "endLine": 949,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n#### Quiet version\n```bash\n>>>>> head --bytes=32 /dev/urandom > secret.key\n>>>>> fscrypt encrypt /mnt/disk/dir3 --key=secret.key --source=raw_key --name=Skeleton\n```\n\n",
                    "rendered": {
                      "text": "\n#### Quiet version\n```bash\n>>>>> head --bytes=32 /dev/urandom > secret.key\n>>>>> fscrypt encrypt /mnt/disk/dir3 --key=secret.key --source=raw_key --name=Skeleton\n```\n\n",
                      "markdown": "`\n#### Quiet version\n```bash\n>>>>> head --bytes=32 /dev/urandom > secret.key\n>>>>> fscrypt encrypt /mnt/disk/dir3 --key=secret.key --source=raw_key --name=Skeleton\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 914,
                  "startColumn": 5,
                  "endLine": 914,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n```bash\n# Generate a 256-bit key file\n>>>>> head --bytes=32 /dev/urandom > secret.key\n\n# Now create a key file protector without using it on a directory. Note that we\n# could also use `fscrypt encrypt --key=secret.key` to achieve the same thing.\n",
                    "rendered": {
                      "text": "\n```bash\n# Generate a 256-bit key file\n>>>>> head --bytes=32 /dev/urandom > secret.key\n\n# Now create a key file protector without using it on a directory. Note that we\n# could also use `fscrypt encrypt --key=secret.key` to achieve the same thing.\n",
                      "markdown": "`\n```bash\n# Generate a 256-bit key file\n>>>>> head --bytes=32 /dev/urandom > secret.key\n\n# Now create a key file protector without using it on a directory. Note that we\n# could also use `fscrypt encrypt --key=secret.key` to achieve the same thing.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 877,
                  "startColumn": 48,
                  "endLine": 877,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n### Changing a custom passphrase\n```bash\n# First we have to figure out which protector we wish to change.\n>>>>> fscrypt status /mnt/disk/dir1\n\"/mnt/disk/dir1\" is encrypted with fscrypt.\n\n",
                    "rendered": {
                      "text": "\n### Changing a custom passphrase\n```bash\n# First we have to figure out which protector we wish to change.\n>>>>> fscrypt status /mnt/disk/dir1\n\"/mnt/disk/dir1\" is encrypted with fscrypt.\n\n",
                      "markdown": "`\n### Changing a custom passphrase\n```bash\n# First we have to figure out which protector we wish to change.\n>>>>> fscrypt status /mnt/disk/dir1\n\"/mnt/disk/dir1\" is encrypted with fscrypt.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 811,
                  "startColumn": 5,
                  "endLine": 811,
                  "endColumn": 10,
                  "snippet": {
                    "text": "Protected with 1 protector:\nPROTECTOR         LINKED  DESCRIPTION\n7626382168311a9d  No      custom protector \"Super Secret\"\n>>>>> cat /mnt/disk/dir1/secret.txt\nHello World\n```\n\n",
                    "rendered": {
                      "text": "Protected with 1 protector:\nPROTECTOR         LINKED  DESCRIPTION\n7626382168311a9d  No      custom protector \"Super Secret\"\n>>>>> cat /mnt/disk/dir1/secret.txt\nHello World\n```\n\n",
                      "markdown": "`Protected with 1 protector:\nPROTECTOR         LINKED  DESCRIPTION\n7626382168311a9d  No      custom protector \"Super Secret\"\n>>>>> cat /mnt/disk/dir1/secret.txt\nHello World\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 794,
                  "startColumn": 5,
                  "endLine": 794,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Now the filenames and file contents are inaccessible\n>>>>> ls /mnt/disk/dir1\nu,k20l9HrtrizDjh0zGkw2dTfBkX4T0ZDUlsOhBLl4P\n>>>>> cat /mnt/disk/dir1/u,k20l9HrtrizDjh0zGkw2dTfBkX4T0ZDUlsOhBLl4P\ncat: /mnt/disk/dir1/u,k20l9HrtrizDjh0zGkw2dTfBkX4T0ZDUlsOhBLl4P: Required key not available\n\n# Unlocking the directory makes the contents available\n",
                    "rendered": {
                      "text": "# Now the filenames and file contents are inaccessible\n>>>>> ls /mnt/disk/dir1\nu,k20l9HrtrizDjh0zGkw2dTfBkX4T0ZDUlsOhBLl4P\n>>>>> cat /mnt/disk/dir1/u,k20l9HrtrizDjh0zGkw2dTfBkX4T0ZDUlsOhBLl4P\ncat: /mnt/disk/dir1/u,k20l9HrtrizDjh0zGkw2dTfBkX4T0ZDUlsOhBLl4P: Required key not available\n\n# Unlocking the directory makes the contents available\n",
                      "markdown": "`# Now the filenames and file contents are inaccessible\n>>>>> ls /mnt/disk/dir1\nu,k20l9HrtrizDjh0zGkw2dTfBkX4T0ZDUlsOhBLl4P\n>>>>> cat /mnt/disk/dir1/u,k20l9HrtrizDjh0zGkw2dTfBkX4T0ZDUlsOhBLl4P\ncat: /mnt/disk/dir1/u,k20l9HrtrizDjh0zGkw2dTfBkX4T0ZDUlsOhBLl4P: Required key not available\n\n# Unlocking the directory makes the contents available\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 683,
                  "startColumn": 10,
                  "endLine": 684,
                  "endColumn": 3,
                  "snippet": {
                    "text": "fscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n```\n\nHowever, beware that `shred` isn't guaranteed to be effective on all storage\n",
                    "rendered": {
                      "text": "fscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n```\n\nHowever, beware that `shred` isn't guaranteed to be effective on all storage\n",
                      "markdown": "`fscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n```\n\nHowever, beware that `shred` isn't guaranteed to be effective on all storage\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 682,
                  "startColumn": 26,
                  "endLine": 682,
                  "endColumn": 33,
                  "snippet": {
                    "text": "mkdir dir.new\nfscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n```\n",
                    "rendered": {
                      "text": "mkdir dir.new\nfscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n```\n",
                      "markdown": "`mkdir dir.new\nfscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 681,
                  "startColumn": 20,
                  "endLine": 682,
                  "endColumn": 5,
                  "snippet": {
                    "text": "```bash\nmkdir dir.new\nfscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n```\n",
                    "rendered": {
                      "text": "```bash\nmkdir dir.new\nfscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n```\n",
                      "markdown": "````bash\nmkdir dir.new\nfscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 680,
                  "startColumn": 23,
                  "endLine": 681,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\n```bash\nmkdir dir.new\nfscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n",
                    "rendered": {
                      "text": "\n```bash\nmkdir dir.new\nfscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n",
                      "markdown": "`\n```bash\nmkdir dir.new\nfscrypt encrypt dir.new\ncp -a -T dir dir.new\nfind dir -type f -print0 | xargs -0 shred -n1 --remove=unlink\nrm -rf dir\nmv dir.new dir\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 636,
                  "startColumn": 57,
                  "endLine": 636,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n* Backing up and restoring the `/.fscrypt` directory on the root filesystem.\n  Note that after restoring the `/.fscrypt` directory, unlocking the login\n  protectors will require the passphrases they had at the time the backup was\n  made **even if they were changed later**, so make sure to remember these\n  passphrase(s) or record them in a secure location.  Also note that if the UUID\n  of the root filesystem changed, you will need to manually fix the UUID in any\n",
                    "rendered": {
                      "text": "\n* Backing up and restoring the `/.fscrypt` directory on the root filesystem.\n  Note that after restoring the `/.fscrypt` directory, unlocking the login\n  protectors will require the passphrases they had at the time the backup was\n  made **even if they were changed later**, so make sure to remember these\n  passphrase(s) or record them in a secure location.  Also note that if the UUID\n  of the root filesystem changed, you will need to manually fix the UUID in any\n",
                      "markdown": "`\n* Backing up and restoring the `/.fscrypt` directory on the root filesystem.\n  Note that after restoring the `/.fscrypt` directory, unlocking the login\n  protectors will require the passphrases they had at the time the backup was\n  made **even if they were changed later**, so make sure to remember these\n  passphrase(s) or record them in a secure location.  Also note that if the UUID\n  of the root filesystem changed, you will need to manually fix the UUID in any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 25,
                  "endLine": 472,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nYou should also increase the number of rounds that your system's passphrase\nhashing uses (though this doesn't increase security as much as choosing a strong\npassphrase).  To do this, find the line in `/etc/pam.d/passwd` that looks like:\n```\npassword\trequired\tpam_unix.so sha512 shadow nullok\n```\n",
                    "rendered": {
                      "text": "\nYou should also increase the number of rounds that your system's passphrase\nhashing uses (though this doesn't increase security as much as choosing a strong\npassphrase).  To do this, find the line in `/etc/pam.d/passwd` that looks like:\n```\npassword\trequired\tpam_unix.so sha512 shadow nullok\n```\n",
                      "markdown": "`\nYou should also increase the number of rounds that your system's passphrase\nhashing uses (though this doesn't increase security as much as choosing a strong\npassphrase).  To do this, find the line in `/etc/pam.d/passwd` that looks like:\n```\npassword\trequired\tpam_unix.so sha512 shadow nullok\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 441,
                  "startColumn": 8,
                  "endLine": 441,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nTo enable world-writable mode, run:\n\n    sudo chmod 1777 MOUNTPOINT/.fscrypt/*\n\n## Setting up for login protectors\n\n",
                    "rendered": {
                      "text": "\nTo enable world-writable mode, run:\n\n    sudo chmod 1777 MOUNTPOINT/.fscrypt/*\n\n## Setting up for login protectors\n\n",
                      "markdown": "`\nTo enable world-writable mode, run:\n\n    sudo chmod 1777 MOUNTPOINT/.fscrypt/*\n\n## Setting up for login protectors\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 437,
                  "startColumn": 8,
                  "endLine": 437,
                  "endColumn": 15,
                  "snippet": {
                    "text": "If you chose the wrong mode at `fscrypt setup` time, you can change the\ndirectory permissions at any time.  To enable single-user writable mode, run:\n\n    sudo chmod 0755 MOUNTPOINT/.fscrypt/*\n\nTo enable world-writable mode, run:\n\n",
                    "rendered": {
                      "text": "If you chose the wrong mode at `fscrypt setup` time, you can change the\ndirectory permissions at any time.  To enable single-user writable mode, run:\n\n    sudo chmod 0755 MOUNTPOINT/.fscrypt/*\n\nTo enable world-writable mode, run:\n\n",
                      "markdown": "`If you chose the wrong mode at `fscrypt setup` time, you can change the\ndirectory permissions at any time.  To enable single-user writable mode, run:\n\n    sudo chmod 0755 MOUNTPOINT/.fscrypt/*\n\nTo enable world-writable mode, run:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 35,
                  "endLine": 402,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  set to `true` to restore the old behavior on systems where `fscrypt` metadata\n  needs to be shared between multiple users.  Note that this option is\n  independent from the permissions on the metadata files themselves, which are\n  set to 0600 by default; users who wish to share their metadata files with\n  other users would also need to explicitly change their mode to 0644.\n\n## Setting up `fscrypt` on a filesystem\n",
                    "rendered": {
                      "text": "  set to `true` to restore the old behavior on systems where `fscrypt` metadata\n  needs to be shared between multiple users.  Note that this option is\n  independent from the permissions on the metadata files themselves, which are\n  set to 0600 by default; users who wish to share their metadata files with\n  other users would also need to explicitly change their mode to 0644.\n\n## Setting up `fscrypt` on a filesystem\n",
                      "markdown": "`  set to `true` to restore the old behavior on systems where `fscrypt` metadata\n  needs to be shared between multiple users.  Note that this option is\n  independent from the permissions on the metadata files themselves, which are\n  set to 0600 by default; users who wish to share their metadata files with\n  other users would also need to explicitly change their mode to 0644.\n\n## Setting up `fscrypt` on a filesystem\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 27,
                  "endLine": 349,
                  "endColumn": 33,
                  "snippet": {
                    "text": "* \"hash\\_costs\" describes how difficult the passphrase hashing is.\n  By default, `fscrypt setup` calibrates the hashing to use all CPUs\n  and take about 1 second.  The `--time` option to `fscrypt setup` can\n  be used to customize this time when creating the configuration file.\n\n* \"options\" are the encryption options to use for new encrypted\n  directories:\n",
                    "rendered": {
                      "text": "* \"hash\\_costs\" describes how difficult the passphrase hashing is.\n  By default, `fscrypt setup` calibrates the hashing to use all CPUs\n  and take about 1 second.  The `--time` option to `fscrypt setup` can\n  be used to customize this time when creating the configuration file.\n\n* \"options\" are the encryption options to use for new encrypted\n  directories:\n",
                      "markdown": "`* \"hash\\_costs\" describes how difficult the passphrase hashing is.\n  By default, `fscrypt setup` calibrates the hashing to use all CPUs\n  and take about 1 second.  The `--time` option to `fscrypt setup` can\n  be used to customize this time when creating the configuration file.\n\n* \"options\" are the encryption options to use for new encrypted\n  directories:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 69,
                  "endLine": 306,
                  "snippet": {
                    "text": "\nTo check whether the needed option is enabled in your kernel, run:\n```shell\nzgrep -h ENCRYPTION /proc/config.gz /boot/config-$(uname -r) | sort | uniq\n```\n\nIt is also recommended to use Linux kernel v5.4 or later, since this\nallows the use of v2 encryption policies.  v2 policies have several\n",
                    "rendered": {
                      "text": "\nTo check whether the needed option is enabled in your kernel, run:\n```shell\nzgrep -h ENCRYPTION /proc/config.gz /boot/config-$(uname -r) | sort | uniq\n```\n\nIt is also recommended to use Linux kernel v5.4 or later, since this\nallows the use of v2 encryption policies.  v2 policies have several\n",
                      "markdown": "`\nTo check whether the needed option is enabled in your kernel, run:\n```shell\nzgrep -h ENCRYPTION /proc/config.gz /boot/config-$(uname -r) | sort | uniq\n```\n\nIt is also recommended to use Linux kernel v5.4 or later, since this\nallows the use of v2 encryption policies.  v2 policies have several\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 62,
                  "endLine": 305,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\nTo check whether the needed option is enabled in your kernel, run:\n```shell\nzgrep -h ENCRYPTION /proc/config.gz /boot/config-$(uname -r) | sort | uniq\n```\n\nIt is also recommended to use Linux kernel v5.4 or later, since this\n",
                    "rendered": {
                      "text": "\nTo check whether the needed option is enabled in your kernel, run:\n```shell\nzgrep -h ENCRYPTION /proc/config.gz /boot/config-$(uname -r) | sort | uniq\n```\n\nIt is also recommended to use Linux kernel v5.4 or later, since this\n",
                      "markdown": "`\nTo check whether the needed option is enabled in your kernel, run:\n```shell\nzgrep -h ENCRYPTION /proc/config.gz /boot/config-$(uname -r) | sort | uniq\n```\n\nIt is also recommended to use Linux kernel v5.4 or later, since this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 1,
                  "endLine": 287,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  contain `CONFIG_FS_ENCRYPTION=y` (for kernels v5.1+) or\n  `CONFIG_F2FS_FS_ENCRYPTION=y` (for older kernels).  The filesystem must also\n  have the `encrypt` feature flag enabled; this flag can be enabled at format\n  time by `mkfs.f2fs -O encrypt` or later by `fsck.f2fs -O encrypt`.\n\n* UBIFS, with upstream kernel v4.10 or later.  The kernel configuration must\n  contain `CONFIG_FS_ENCRYPTION=y` (for kernels v5.1+) or\n",
                    "rendered": {
                      "text": "  contain `CONFIG_FS_ENCRYPTION=y` (for kernels v5.1+) or\n  `CONFIG_F2FS_FS_ENCRYPTION=y` (for older kernels).  The filesystem must also\n  have the `encrypt` feature flag enabled; this flag can be enabled at format\n  time by `mkfs.f2fs -O encrypt` or later by `fsck.f2fs -O encrypt`.\n\n* UBIFS, with upstream kernel v4.10 or later.  The kernel configuration must\n  contain `CONFIG_FS_ENCRYPTION=y` (for kernels v5.1+) or\n",
                      "markdown": "`  contain `CONFIG_FS_ENCRYPTION=y` (for kernels v5.1+) or\n  `CONFIG_F2FS_FS_ENCRYPTION=y` (for older kernels).  The filesystem must also\n  have the `encrypt` feature flag enabled; this flag can be enabled at format\n  time by `mkfs.f2fs -O encrypt` or later by `fsck.f2fs -O encrypt`.\n\n* UBIFS, with upstream kernel v4.10 or later.  The kernel configuration must\n  contain `CONFIG_FS_ENCRYPTION=y` (for kernels v5.1+) or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 8,
                  "endLine": 240,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      package (usually installed by default)\n\nOnce all the dependencies are installed, clone the repository by running:\n```shell\ngit clone https://github.com/google/fscrypt\n```\nRunning `make` builds the binary (`fscrypt`) and PAM module (`pam_fscrypt.so`)\nin the `bin/` directory.\n",
                    "rendered": {
                      "text": "      package (usually installed by default)\n\nOnce all the dependencies are installed, clone the repository by running:\n```shell\ngit clone https://github.com/google/fscrypt\n```\nRunning `make` builds the binary (`fscrypt`) and PAM module (`pam_fscrypt.so`)\nin the `bin/` directory.\n",
                      "markdown": "`      package (usually installed by default)\n\nOnce all the dependencies are installed, clone the repository by running:\n```shell\ngit clone https://github.com/google/fscrypt\n```\nRunning `make` builds the binary (`fscrypt`) and PAM module (`pam_fscrypt.so`)\nin the `bin/` directory.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 20,
                  "endLine": 234,
                  "endColumn": 25,
                  "snippet": {
                    "text": "*   Headers for [`libpam`](http://www.linux-pam.org/).\n    Install them with the appropriate package manager:\n    - Debian/Ubuntu: `sudo apt install libpam0g-dev`\n    - Red Hat: `sudo yum install pam-devel`\n    - Arch: [`pam`](https://www.archlinux.org/packages/core/x86_64/pam/)\n      package (usually installed by default)\n\n",
                    "rendered": {
                      "text": "*   Headers for [`libpam`](http://www.linux-pam.org/).\n    Install them with the appropriate package manager:\n    - Debian/Ubuntu: `sudo apt install libpam0g-dev`\n    - Red Hat: `sudo yum install pam-devel`\n    - Arch: [`pam`](https://www.archlinux.org/packages/core/x86_64/pam/)\n      package (usually installed by default)\n\n",
                      "markdown": "`*   Headers for [`libpam`](http://www.linux-pam.org/).\n    Install them with the appropriate package manager:\n    - Debian/Ubuntu: `sudo apt install libpam0g-dev`\n    - Red Hat: `sudo yum install pam-devel`\n    - Arch: [`pam`](https://www.archlinux.org/packages/core/x86_64/pam/)\n      package (usually installed by default)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 5,
                  "endLine": 234,
                  "endColumn": 10,
                  "snippet": {
                    "text": "*   Headers for [`libpam`](http://www.linux-pam.org/).\n    Install them with the appropriate package manager:\n    - Debian/Ubuntu: `sudo apt install libpam0g-dev`\n    - Red Hat: `sudo yum install pam-devel`\n    - Arch: [`pam`](https://www.archlinux.org/packages/core/x86_64/pam/)\n      package (usually installed by default)\n\n",
                    "rendered": {
                      "text": "*   Headers for [`libpam`](http://www.linux-pam.org/).\n    Install them with the appropriate package manager:\n    - Debian/Ubuntu: `sudo apt install libpam0g-dev`\n    - Red Hat: `sudo yum install pam-devel`\n    - Arch: [`pam`](https://www.archlinux.org/packages/core/x86_64/pam/)\n      package (usually installed by default)\n\n",
                      "markdown": "`*   Headers for [`libpam`](http://www.linux-pam.org/).\n    Install them with the appropriate package manager:\n    - Debian/Ubuntu: `sudo apt install libpam0g-dev`\n    - Red Hat: `sudo yum install pam-devel`\n    - Arch: [`pam`](https://www.archlinux.org/packages/core/x86_64/pam/)\n      package (usually installed by default)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 26,
                  "endLine": 233,
                  "endColumn": 31,
                  "snippet": {
                    "text": "*   `make`\n*   Headers for [`libpam`](http://www.linux-pam.org/).\n    Install them with the appropriate package manager:\n    - Debian/Ubuntu: `sudo apt install libpam0g-dev`\n    - Red Hat: `sudo yum install pam-devel`\n    - Arch: [`pam`](https://www.archlinux.org/packages/core/x86_64/pam/)\n      package (usually installed by default)\n",
                    "rendered": {
                      "text": "*   `make`\n*   Headers for [`libpam`](http://www.linux-pam.org/).\n    Install them with the appropriate package manager:\n    - Debian/Ubuntu: `sudo apt install libpam0g-dev`\n    - Red Hat: `sudo yum install pam-devel`\n    - Arch: [`pam`](https://www.archlinux.org/packages/core/x86_64/pam/)\n      package (usually installed by default)\n",
                      "markdown": "`*   `make`\n*   Headers for [`libpam`](http://www.linux-pam.org/).\n    Install them with the appropriate package manager:\n    - Debian/Ubuntu: `sudo apt install libpam0g-dev`\n    - Red Hat: `sudo yum install pam-devel`\n    - Arch: [`pam`](https://www.archlinux.org/packages/core/x86_64/pam/)\n      package (usually installed by default)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 13,
                  "endLine": 145,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  `fscrypt` isn't very useful in the following cases:\n\n    * Single-user systems where the user is willing to enter a strong passphrase\n      at boot time to unlock the entire filesystem.  In this case, the main\n      advantage of `fscrypt` would go unused, so dm-crypt/LUKS would be better\n      as it would provide better security (due to ensuring that all files and\n      all filesystem metadata are encrypted).\n",
                    "rendered": {
                      "text": "  `fscrypt` isn't very useful in the following cases:\n\n    * Single-user systems where the user is willing to enter a strong passphrase\n      at boot time to unlock the entire filesystem.  In this case, the main\n      advantage of `fscrypt` would go unused, so dm-crypt/LUKS would be better\n      as it would provide better security (due to ensuring that all files and\n      all filesystem metadata are encrypted).\n",
                      "markdown": "`  `fscrypt` isn't very useful in the following cases:\n\n    * Single-user systems where the user is willing to enter a strong passphrase\n      at boot time to unlock the entire filesystem.  In this case, the main\n      advantage of `fscrypt` would go unused, so dm-crypt/LUKS would be better\n      as it would provide better security (due to ensuring that all files and\n      all filesystem metadata are encrypted).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/README.md"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 12,
                  "endLine": 99,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n* [**eCryptfs**](https://en.wikipedia.org/wiki/ECryptfs) is an alternative\n  filesystem-level encryption solution.  It is a stacked filesystem, which means\n  it sits on top of a real filesystem, rather than being directly integrated\n  into the real filesystem.  Stacked filesystems have a couple advantages (such\n  as working on almost any real filesystem), but also some significant\n  disadvantages.  eCryptfs is usually configured using\n",
                    "rendered": {
                      "text": "\n* [**eCryptfs**](https://en.wikipedia.org/wiki/ECryptfs) is an alternative\n  filesystem-level encryption solution.  It is a stacked filesystem, which means\n  it sits on top of a real filesystem, rather than being directly integrated\n  into the real filesystem.  Stacked filesystems have a couple advantages (such\n  as working on almost any real filesystem), but also some significant\n  disadvantages.  eCryptfs is usually configured using\n",
                      "markdown": "`\n* [**eCryptfs**](https://en.wikipedia.org/wiki/ECryptfs) is an alternative\n  filesystem-level encryption solution.  It is a stacked filesystem, which means\n  it sits on top of a real filesystem, rather than being directly integrated\n  into the real filesystem.  Stacked filesystems have a couple advantages (such\n  as working on almost any real filesystem), but also some significant\n  disadvantages.  eCryptfs is usually configured using\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/keyring.go"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "endColumn": 7,
                  "snippet": {
                    "text": "type Options struct {\n\t// Mount is the filesystem to which the key should be\n\t// added/removed/gotten.\n\tMount *filesystem.Mount\n\t// User is the user for whom the key should be added/removed/gotten.\n\tUser *user.User\n\t// UseFsKeyringForV1Policies is true if keys for v1 encryption policies\n",
                    "rendered": {
                      "text": "type Options struct {\n\t// Mount is the filesystem to which the key should be\n\t// added/removed/gotten.\n\tMount *filesystem.Mount\n\t// User is the user for whom the key should be added/removed/gotten.\n\tUser *user.User\n\t// UseFsKeyringForV1Policies is true if keys for v1 encryption policies\n",
                      "markdown": "`type Options struct {\n\t// Mount is the filesystem to which the key should be\n\t// added/removed/gotten.\n\tMount *filesystem.Mount\n\t// User is the user for whom the key should be added/removed/gotten.\n\tUser *user.User\n\t// UseFsKeyringForV1Policies is true if keys for v1 encryption policies\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/keyring_test.go"
                },
                "region": {
                  "startLine": 269,
                  "endLine": 269,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\n\nfunc TestV2PolicyKeyWrongDescriptor(t *testing.T) {\n\tmount := getTestMountV2(t)\n\toptions := &Options{\n\t\tMount: mount,\n\t\tUser:  testUser,\n",
                    "rendered": {
                      "text": "}\n\nfunc TestV2PolicyKeyWrongDescriptor(t *testing.T) {\n\tmount := getTestMountV2(t)\n\toptions := &Options{\n\t\tMount: mount,\n\t\tUser:  testUser,\n",
                      "markdown": "`}\n\nfunc TestV2PolicyKeyWrongDescriptor(t *testing.T) {\n\tmount := getTestMountV2(t)\n\toptions := &Options{\n\t\tMount: mount,\n\t\tUser:  testUser,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/keyring_test.go"
                },
                "region": {
                  "startLine": 188,
                  "endLine": 188,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\n\nfunc TestV2PolicyKey(t *testing.T) {\n\tmount := getTestMountV2(t)\n\toptions := &Options{\n\t\tMount: mount,\n\t\tUser:  testUser,\n",
                    "rendered": {
                      "text": "}\n\nfunc TestV2PolicyKey(t *testing.T) {\n\tmount := getTestMountV2(t)\n\toptions := &Options{\n\t\tMount: mount,\n\t\tUser:  testUser,\n",
                      "markdown": "`}\n\nfunc TestV2PolicyKey(t *testing.T) {\n\tmount := getTestMountV2(t)\n\toptions := &Options{\n\t\tMount: mount,\n\t\tUser:  testUser,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/keyring_test.go"
                },
                "region": {
                  "startLine": 178,
                  "endLine": 178,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nfunc TestFsKeyringV1PolicyKey(t *testing.T) {\n\trequireRoot(t)\n\tmount := getTestMountV2(t)\n\toptions := &Options{\n\t\tMount:                     mount,\n\t\tUser:                      testUser,\n",
                    "rendered": {
                      "text": "\nfunc TestFsKeyringV1PolicyKey(t *testing.T) {\n\trequireRoot(t)\n\tmount := getTestMountV2(t)\n\toptions := &Options{\n\t\tMount:                     mount,\n\t\tUser:                      testUser,\n",
                      "markdown": "`\nfunc TestFsKeyringV1PolicyKey(t *testing.T) {\n\trequireRoot(t)\n\tmount := getTestMountV2(t)\n\toptions := &Options{\n\t\tMount:                     mount,\n\t\tUser:                      testUser,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/keyring_test.go"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\n\nfunc TestUserKeyring(t *testing.T) {\n\tmount := getTestMount(t)\n\toptions := &Options{\n\t\tMount:                     mount,\n\t\tUser:                      testUser,\n",
                    "rendered": {
                      "text": "}\n\nfunc TestUserKeyring(t *testing.T) {\n\tmount := getTestMount(t)\n\toptions := &Options{\n\t\tMount:                     mount,\n\t\tUser:                      testUser,\n",
                      "markdown": "`}\n\nfunc TestUserKeyring(t *testing.T) {\n\tmount := getTestMount(t)\n\toptions := &Options{\n\t\tMount:                     mount,\n\t\tUser:                      testUser,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/keyring_test.go"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\n\nfunc getOptionsForFsKeyringUsers(t *testing.T, numNonRootUsers int) (rootOptions *Options, userOptions []*Options) {\n\tmount := getTestMountV2(t)\n\tnonRootUsers := getNonRootUsers(t, numNonRootUsers)\n\trootOptions = &Options{\n\t\tMount: mount,\n",
                    "rendered": {
                      "text": "}\n\nfunc getOptionsForFsKeyringUsers(t *testing.T, numNonRootUsers int) (rootOptions *Options, userOptions []*Options) {\n\tmount := getTestMountV2(t)\n\tnonRootUsers := getNonRootUsers(t, numNonRootUsers)\n\trootOptions = &Options{\n\t\tMount: mount,\n",
                      "markdown": "`}\n\nfunc getOptionsForFsKeyringUsers(t *testing.T, numNonRootUsers int) (rootOptions *Options, userOptions []*Options) {\n\tmount := getTestMountV2(t)\n\tnonRootUsers := getNonRootUsers(t, numNonRootUsers)\n\trootOptions = &Options{\n\t\tMount: mount,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/keyring_test.go"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 7,
                  "endLine": 88,
                  "snippet": {
                    "text": "\tif !IsFsKeyringSupported(mount) {\n\t\tt.Skip(\"No support for fs keyring, skipping test.\")\n\t}\n\treturn mount\n}\n\nfunc requireRoot(t *testing.T) {\n\tif !util.IsUserRoot() {\n",
                    "rendered": {
                      "text": "\tif !IsFsKeyringSupported(mount) {\n\t\tt.Skip(\"No support for fs keyring, skipping test.\")\n\t}\n\treturn mount\n}\n\nfunc requireRoot(t *testing.T) {\n\tif !util.IsUserRoot() {\n",
                      "markdown": "`\tif !IsFsKeyringSupported(mount) {\n\t\tt.Skip(\"No support for fs keyring, skipping test.\")\n\t}\n\treturn mount\n}\n\nfunc requireRoot(t *testing.T) {\n\tif !util.IsUserRoot() {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/keyring_test.go"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// getTestMountV2 is like getTestMount, but it also checks that the\n// filesystem keyring and v2 encryption policies are supported.\nfunc getTestMountV2(t *testing.T) *filesystem.Mount {\n\tmount := getTestMount(t)\n\tif !IsFsKeyringSupported(mount) {\n\t\tt.Skip(\"No support for fs keyring, skipping test.\")\n\t}\n",
                    "rendered": {
                      "text": "// getTestMountV2 is like getTestMount, but it also checks that the\n// filesystem keyring and v2 encryption policies are supported.\nfunc getTestMountV2(t *testing.T) *filesystem.Mount {\n\tmount := getTestMount(t)\n\tif !IsFsKeyringSupported(mount) {\n\t\tt.Skip(\"No support for fs keyring, skipping test.\")\n\t}\n",
                      "markdown": "`// getTestMountV2 is like getTestMount, but it also checks that the\n// filesystem keyring and v2 encryption policies are supported.\nfunc getTestMountV2(t *testing.T) *filesystem.Mount {\n\tmount := getTestMount(t)\n\tif !IsFsKeyringSupported(mount) {\n\t\tt.Skip(\"No support for fs keyring, skipping test.\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/keyring/keyring_test.go"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 7,
                  "endLine": 78,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\tt.Skip(err)\n\t}\n\treturn mount\n}\n\n// getTestMountV2 is like getTestMount, but it also checks that the\n// filesystem keyring and v2 encryption policies are supported.\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\tt.Skip(err)\n\t}\n\treturn mount\n}\n\n// getTestMountV2 is like getTestMount, but it also checks that the\n// filesystem keyring and v2 encryption policies are supported.\n",
                      "markdown": "`\tif err != nil {\n\t\tt.Skip(err)\n\t}\n\treturn mount\n}\n\n// getTestMountV2 is like getTestMount, but it also checks that the\n// filesystem keyring and v2 encryption policies are supported.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/protector.go"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 12,
                  "endLine": 275,
                  "endColumn": 20,
                  "snippet": {
                    "text": "}\n\n// Rewrap updates the data that is wrapping the Protector Key. This is useful if\n// a user's password has changed, for example. The keyFn provided to rewrap\n// the Protector key will only be called once. Requires unlocked Protector.\nfunc (protector *Protector) Rewrap(keyFn KeyFunc) error {\n\tif protector.key == nil {\n",
                    "rendered": {
                      "text": "}\n\n// Rewrap updates the data that is wrapping the Protector Key. This is useful if\n// a user's password has changed, for example. The keyFn provided to rewrap\n// the Protector key will only be called once. Requires unlocked Protector.\nfunc (protector *Protector) Rewrap(keyFn KeyFunc) error {\n\tif protector.key == nil {\n",
                      "markdown": "`}\n\n// Rewrap updates the data that is wrapping the Protector Key. This is useful if\n// a user's password has changed, for example. The keyFn provided to rewrap\n// the Protector key will only be called once. Requires unlocked Protector.\nfunc (protector *Protector) Rewrap(keyFn KeyFunc) error {\n\tif protector.key == nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_v1_policy.out"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 29,
                  "endLine": 109,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n",
                    "rendered": {
                      "text": "\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n",
                      "markdown": "`\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_v1_policy.out"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 4,
                  "endLine": 109,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n",
                    "rendered": {
                      "text": "\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n",
                      "markdown": "`\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/README.md"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 62,
                  "endLine": 57,
                  "endColumn": 70,
                  "snippet": {
                    "text": "  file exists and specifies to use v2 policies with the default\n  settings, except password hashing is configured to be extra fast.\n\n* `$TEST_USER`: a non-root user that the test may use.  Their password\n  is `TEST_USER_PASS`.\n\nAny output (stdout and stderr) the test prints is compared to the\n",
                    "rendered": {
                      "text": "  file exists and specifies to use v2 policies with the default\n  settings, except password hashing is configured to be extra fast.\n\n* `$TEST_USER`: a non-root user that the test may use.  Their password\n  is `TEST_USER_PASS`.\n\nAny output (stdout and stderr) the test prints is compared to the\n",
                      "markdown": "`  file exists and specifies to use v2 policies with the default\n  settings, except password hashing is configured to be extra fast.\n\n* `$TEST_USER`: a non-root user that the test may use.  Their password\n  is `TEST_USER_PASS`.\n\nAny output (stdout and stderr) the test prints is compared to the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/README.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 19,
                  "endLine": 55,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n* `$FSCRYPT_CONF`: location of the fscrypt.conf file.  Initially this\n  file exists and specifies to use v2 policies with the default\n  settings, except password hashing is configured to be extra fast.\n\n* `$TEST_USER`: a non-root user that the test may use.  Their password\n  is `TEST_USER_PASS`.\n",
                    "rendered": {
                      "text": "\n* `$FSCRYPT_CONF`: location of the fscrypt.conf file.  Initially this\n  file exists and specifies to use v2 policies with the default\n  settings, except password hashing is configured to be extra fast.\n\n* `$TEST_USER`: a non-root user that the test may use.  Their password\n  is `TEST_USER_PASS`.\n",
                      "markdown": "`\n* `$FSCRYPT_CONF`: location of the fscrypt.conf file.  Initially this\n  file exists and specifies to use v2 policies with the default\n  settings, except password hashing is configured to be extra fast.\n\n* `$TEST_USER`: a non-root user that the test may use.  Their password\n  is `TEST_USER_PASS`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/README.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 33,
                  "endLine": 19,
                  "endColumn": 41,
                  "snippet": {
                    "text": "make cli-test\n```\n\nYou'll need to enter your `sudo` password, as the tests require root.\n\nIf you only want to run specific tests, run a command like:\n\n",
                    "rendered": {
                      "text": "make cli-test\n```\n\nYou'll need to enter your `sudo` password, as the tests require root.\n\nIf you only want to run specific tests, run a command like:\n\n",
                      "markdown": "`make cli-test\n```\n\nYou'll need to enter your `sudo` password, as the tests require root.\n\nIf you only want to run specific tests, run a command like:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/README.md"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 15,
                  "endLine": 42,
                  "endColumn": 21,
                  "snippet": {
                    "text": "The fscrypt CLI tests are `bash` scripts named like `t_*.sh`.\n\nThe test scripts must be executable and begin by sourcing `common.sh`.\nThey all run in bash \"extra-strict mode\" (`-e -u -o pipefail`).  They\nrun as root and have access to the following environment:\n\n* `$DEV`, `$DEV_ROOT`: ext4 filesystem images with encryption enabled\n",
                    "rendered": {
                      "text": "The fscrypt CLI tests are `bash` scripts named like `t_*.sh`.\n\nThe test scripts must be executable and begin by sourcing `common.sh`.\nThey all run in bash \"extra-strict mode\" (`-e -u -o pipefail`).  They\nrun as root and have access to the following environment:\n\n* `$DEV`, `$DEV_ROOT`: ext4 filesystem images with encryption enabled\n",
                      "markdown": "`The fscrypt CLI tests are `bash` scripts named like `t_*.sh`.\n\nThe test scripts must be executable and begin by sourcing `common.sh`.\nThey all run in bash \"extra-strict mode\" (`-e -u -o pipefail`).  They\nrun as root and have access to the following environment:\n\n* `$DEV`, `$DEV_ROOT`: ext4 filesystem images with encryption enabled\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/README.md"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 15,
                  "endLine": 42,
                  "endColumn": 21,
                  "snippet": {
                    "text": "The fscrypt CLI tests are `bash` scripts named like `t_*.sh`.\n\nThe test scripts must be executable and begin by sourcing `common.sh`.\nThey all run in bash \"extra-strict mode\" (`-e -u -o pipefail`).  They\nrun as root and have access to the following environment:\n\n* `$DEV`, `$DEV_ROOT`: ext4 filesystem images with encryption enabled\n",
                    "rendered": {
                      "text": "The fscrypt CLI tests are `bash` scripts named like `t_*.sh`.\n\nThe test scripts must be executable and begin by sourcing `common.sh`.\nThey all run in bash \"extra-strict mode\" (`-e -u -o pipefail`).  They\nrun as root and have access to the following environment:\n\n* `$DEV`, `$DEV_ROOT`: ext4 filesystem images with encryption enabled\n",
                      "markdown": "`The fscrypt CLI tests are `bash` scripts named like `t_*.sh`.\n\nThe test scripts must be executable and begin by sourcing `common.sh`.\nThey all run in bash \"extra-strict mode\" (`-e -u -o pipefail`).  They\nrun as root and have access to the following environment:\n\n* `$DEV`, `$DEV_ROOT`: ext4 filesystem images with encryption enabled\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/README.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 11,
                  "snippet": {
                    "text": "Also ensure that you have the following packages installed:\n\n* e2fsprogs\n* expect\n* keyutils\n\nThen, run:\n\n",
                    "rendered": {
                      "text": "Also ensure that you have the following packages installed:\n\n* e2fsprogs\n* expect\n* keyutils\n\nThen, run:\n\n",
                      "markdown": "`Also ensure that you have the following packages installed:\n\n* e2fsprogs\n* expect\n* keyutils\n\nThen, run:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 20,
                  "endLine": 136,
                  "snippet": {
                    "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev shellcheck\n        make tools\n    - name: Generate\n      run: make gen && bin/files-changed proto\n",
                    "rendered": {
                      "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev shellcheck\n        make tools\n    - name: Generate\n      run: make gen && bin/files-changed proto\n",
                      "markdown": "`        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev shellcheck\n        make tools\n    - name: Generate\n      run: make gen && bin/files-changed proto\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 20,
                  "endLine": 121,
                  "snippet": {
                    "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n\n",
                    "rendered": {
                      "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n\n",
                      "markdown": "`        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 21,
                  "endLine": 101,
                  "snippet": {
                    "text": "  #         # Needed for 'make test-setup' to mount the test filesystem.\n  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n  #           make test-setup\n",
                    "rendered": {
                      "text": "  #         # Needed for 'make test-setup' to mount the test filesystem.\n  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n  #           make test-setup\n",
                      "markdown": "`  #         # Needed for 'make test-setup' to mount the test filesystem.\n  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n  #           make test-setup\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 20,
                  "endLine": 72,
                  "snippet": {
                    "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs keyutils\n    - name: Run integration tests\n      run: |\n        make test-setup\n",
                    "rendered": {
                      "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs keyutils\n    - name: Run integration tests\n      run: |\n        make test-setup\n",
                      "markdown": "`        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs keyutils\n    - name: Run integration tests\n      run: |\n        make test-setup\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 20,
                  "endLine": 57,
                  "snippet": {
                    "text": "    - name: Install dependencies\n      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n      run: CGO_ENABLED=1 GOARCH=386 make\n\n",
                    "rendered": {
                      "text": "    - name: Install dependencies\n      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n      run: CGO_ENABLED=1 GOARCH=386 make\n\n",
                      "markdown": "`    - name: Install dependencies\n      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n      run: CGO_ENABLED=1 GOARCH=386 make\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 20,
                  "endLine": 41,
                  "snippet": {
                    "text": "        go-version: ${{ matrix.go }}\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev\n    - name: Build\n      run: make\n\n",
                    "rendered": {
                      "text": "        go-version: ${{ matrix.go }}\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev\n    - name: Build\n      run: make\n\n",
                      "markdown": "`        go-version: ${{ matrix.go }}\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev\n    - name: Build\n      run: make\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 13,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 12,
                  "endLine": 136,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev shellcheck\n        make tools\n    - name: Generate\n      run: make gen && bin/files-changed proto\n",
                    "rendered": {
                      "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev shellcheck\n        make tools\n    - name: Generate\n      run: make gen && bin/files-changed proto\n",
                      "markdown": "`    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev shellcheck\n        make tools\n    - name: Generate\n      run: make gen && bin/files-changed proto\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 12,
                  "endLine": 135,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev shellcheck\n        make tools\n    - name: Generate\n",
                    "rendered": {
                      "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev shellcheck\n        make tools\n    - name: Generate\n",
                      "markdown": "`        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev shellcheck\n        make tools\n    - name: Generate\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 54,
                  "endLine": 121,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n\n",
                    "rendered": {
                      "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n\n",
                      "markdown": "`    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 12,
                  "endLine": 121,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n\n",
                    "rendered": {
                      "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n\n",
                      "markdown": "`    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 12,
                  "endLine": 120,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n",
                    "rendered": {
                      "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n",
                      "markdown": "`        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs expect keyutils\n    - name: Run command-line interface tests\n      run: make cli-test\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 48,
                  "endLine": 101,
                  "endColumn": 53,
                  "snippet": {
                    "text": "  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n  #           make test-setup\n",
                    "rendered": {
                      "text": "  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n  #           make test-setup\n",
                      "markdown": "`  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n  #           make test-setup\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 13,
                  "endLine": 101,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n  #           make test-setup\n",
                    "rendered": {
                      "text": "  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n  #           make test-setup\n",
                      "markdown": "`  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n  #           make test-setup\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  #         # Needed for 'make test-setup' to mount the test filesystem.\n  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n",
                    "rendered": {
                      "text": "  #         # Needed for 'make test-setup' to mount the test filesystem.\n  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n",
                      "markdown": "`  #         # Needed for 'make test-setup' to mount the test filesystem.\n  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n  #           apt-get install -y build-essential git sudo golang-go \\\n  #                              libpam0g-dev e2fsprogs keyutils\n  #         run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 45,
                  "endLine": 97,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  #         arch: ${{ matrix.arch }}\n  #         distro: buster\n  #         githubToken: ${{ github.token }}\n  #         # Needed for 'make test-setup' to mount the test filesystem.\n  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n",
                    "rendered": {
                      "text": "  #         arch: ${{ matrix.arch }}\n  #         distro: buster\n  #         githubToken: ${{ github.token }}\n  #         # Needed for 'make test-setup' to mount the test filesystem.\n  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n",
                      "markdown": "`  #         arch: ${{ matrix.arch }}\n  #         distro: buster\n  #         githubToken: ${{ github.token }}\n  #         # Needed for 'make test-setup' to mount the test filesystem.\n  #         dockerRunArgs: --privileged\n  #         install: |\n  #           apt-get update\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 12,
                  "endLine": 72,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs keyutils\n    - name: Run integration tests\n      run: |\n        make test-setup\n",
                    "rendered": {
                      "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs keyutils\n    - name: Run integration tests\n      run: |\n        make test-setup\n",
                      "markdown": "`    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs keyutils\n    - name: Run integration tests\n      run: |\n        make test-setup\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 12,
                  "endLine": 71,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs keyutils\n    - name: Run integration tests\n      run: |\n",
                    "rendered": {
                      "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs keyutils\n    - name: Run integration tests\n      run: |\n",
                      "markdown": "`        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev e2fsprogs keyutils\n    - name: Run integration tests\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 12,
                  "endLine": 57,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n      run: CGO_ENABLED=1 GOARCH=386 make\n\n",
                    "rendered": {
                      "text": "      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n      run: CGO_ENABLED=1 GOARCH=386 make\n\n",
                      "markdown": "`      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n      run: CGO_ENABLED=1 GOARCH=386 make\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 12,
                  "endLine": 56,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    - name: Install dependencies\n      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n      run: CGO_ENABLED=1 GOARCH=386 make\n",
                    "rendered": {
                      "text": "    - name: Install dependencies\n      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n      run: CGO_ENABLED=1 GOARCH=386 make\n",
                      "markdown": "`    - name: Install dependencies\n      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n      run: CGO_ENABLED=1 GOARCH=386 make\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 12,
                  "endLine": 55,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n",
                    "rendered": {
                      "text": "        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n",
                      "markdown": "`        go-version: '1.20'\n    - name: Install dependencies\n      run: |\n        sudo dpkg --add-architecture i386\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev:i386 gcc-multilib\n    - name: Build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 12,
                  "endLine": 41,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev\n    - name: Build\n      run: make\n\n",
                    "rendered": {
                      "text": "    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev\n    - name: Build\n      run: make\n\n",
                      "markdown": "`    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev\n    - name: Build\n      run: make\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 12,
                  "endLine": 40,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        go-version: ${{ matrix.go }}\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev\n    - name: Build\n      run: make\n",
                    "rendered": {
                      "text": "        go-version: ${{ matrix.go }}\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev\n    - name: Build\n      run: make\n",
                      "markdown": "`        go-version: ${{ matrix.go }}\n    - name: Install dependencies\n      run: |\n        sudo apt-get update\n        sudo apt-get install -y libpam0g-dev\n    - name: Build\n      run: make\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/errors.go"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 3,
                  "endLine": 199,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n\n\t\tCaution: due to the nature of modern storage devices and filesystems,\n\t\tthe original data may still be recoverable from disk. It's much better\n",
                    "rendered": {
                      "text": "\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n\n\t\tCaution: due to the nature of modern storage devices and filesystems,\n\t\tthe original data may still be recoverable from disk. It's much better\n",
                      "markdown": "`\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n\n\t\tCaution: due to the nature of modern storage devices and filesystems,\n\t\tthe original data may still be recoverable from disk. It's much better\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/errors.go"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 29,
                  "endLine": 197,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t> mkdir %q\n\t\t> fscrypt encrypt %q\n\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n\n",
                    "rendered": {
                      "text": "\t\t> mkdir %q\n\t\t> fscrypt encrypt %q\n\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n\n",
                      "markdown": "`\t\t> mkdir %q\n\t\t> fscrypt encrypt %q\n\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/errors.go"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 3,
                  "endLine": 197,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t> mkdir %q\n\t\t> fscrypt encrypt %q\n\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n\n",
                    "rendered": {
                      "text": "\t\t> mkdir %q\n\t\t> fscrypt encrypt %q\n\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n\n",
                      "markdown": "`\t\t> mkdir %q\n\t\t> fscrypt encrypt %q\n\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/errors.go"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 3,
                  "endLine": 196,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\t\t> mkdir %q\n\t\t> fscrypt encrypt %q\n\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n",
                    "rendered": {
                      "text": "\n\t\t> mkdir %q\n\t\t> fscrypt encrypt %q\n\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n",
                      "markdown": "`\n\t\t> mkdir %q\n\t\t> fscrypt encrypt %q\n\t\t> cp -a -T %q %q\n\t\t> find %q -type f -print0 | xargs -0 shred -n1 --remove=unlink\n\t\t> rm -rf %q\n\t\t> mv %q %q\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/errors.go"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 21,
                  "endLine": 182,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\treturn fmt.Sprintf(`Try killing any processes using files in the\n\t\tdirectory, for example using:\n\n\t\t> find %q -print0 | xargs -0 fuser -k\n\n\t\tThen re-run:\n\n",
                    "rendered": {
                      "text": "\t\treturn fmt.Sprintf(`Try killing any processes using files in the\n\t\tdirectory, for example using:\n\n\t\t> find %q -print0 | xargs -0 fuser -k\n\n\t\tThen re-run:\n\n",
                      "markdown": "`\t\treturn fmt.Sprintf(`Try killing any processes using files in the\n\t\tdirectory, for example using:\n\n\t\t> find %q -print0 | xargs -0 fuser -k\n\n\t\tThen re-run:\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/errors.go"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 3,
                  "endLine": 182,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\treturn fmt.Sprintf(`Try killing any processes using files in the\n\t\tdirectory, for example using:\n\n\t\t> find %q -print0 | xargs -0 fuser -k\n\n\t\tThen re-run:\n\n",
                    "rendered": {
                      "text": "\t\treturn fmt.Sprintf(`Try killing any processes using files in the\n\t\tdirectory, for example using:\n\n\t\t> find %q -print0 | xargs -0 fuser -k\n\n\t\tThen re-run:\n\n",
                      "markdown": "`\t\treturn fmt.Sprintf(`Try killing any processes using files in the\n\t\tdirectory, for example using:\n\n\t\t> find %q -print0 | xargs -0 fuser -k\n\n\t\tThen re-run:\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/errors.go"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 47,
                  "endLine": 99,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\treturn fmt.Sprintf(\"Directory %q cannot be encrypted because it is non-empty.\", err.DirPath)\n}\n\nvar loadHelpText = fmt.Sprintf(\"You may need to mount a linked filesystem. Run with %s for more information.\", shortDisplay(verboseFlag))\n\n// getFullName returns the full name of the application or command being used.\nfunc getFullName(c *cli.Context) string {\n",
                    "rendered": {
                      "text": "\treturn fmt.Sprintf(\"Directory %q cannot be encrypted because it is non-empty.\", err.DirPath)\n}\n\nvar loadHelpText = fmt.Sprintf(\"You may need to mount a linked filesystem. Run with %s for more information.\", shortDisplay(verboseFlag))\n\n// getFullName returns the full name of the application or command being used.\nfunc getFullName(c *cli.Context) string {\n",
                      "markdown": "`\treturn fmt.Sprintf(\"Directory %q cannot be encrypted because it is non-empty.\", err.DirPath)\n}\n\nvar loadHelpText = fmt.Sprintf(\"You may need to mount a linked filesystem. Run with %s for more information.\", shortDisplay(verboseFlag))\n\n// getFullName returns the full name of the application or command being used.\nfunc getFullName(c *cli.Context) string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_not_supported.out"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Mount tmpfs\n\n# Try to create fscrypt metadata on tmpfs\n[ERROR] fscrypt setup: filesystem type tmpfs is not supported for fscrypt setup\n",
                    "rendered": {
                      "text": "\n# Mount tmpfs\n\n# Try to create fscrypt metadata on tmpfs\n[ERROR] fscrypt setup: filesystem type tmpfs is not supported for fscrypt setup\n",
                      "markdown": "`\n# Mount tmpfs\n\n# Try to create fscrypt metadata on tmpfs\n[ERROR] fscrypt setup: filesystem type tmpfs is not supported for fscrypt setup\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_single_user.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 28,
                  "endLine": 32,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nbegin \"Encrypt as root with user's login protector\"\necho TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --user=\"$TEST_USER\" \"$dir\"\n# The user should be able to update the policy and protectors created by the\n# above command themselves.  The easiest way to test this is by updating the\n# policy to remove the auto-generated recovery protector.  This verifies that\n# (a) the policy was made owned by the user, and that (b) policy updates fall\n",
                    "rendered": {
                      "text": "\nbegin \"Encrypt as root with user's login protector\"\necho TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --user=\"$TEST_USER\" \"$dir\"\n# The user should be able to update the policy and protectors created by the\n# above command themselves.  The easiest way to test this is by updating the\n# policy to remove the auto-generated recovery protector.  This verifies that\n# (a) the policy was made owned by the user, and that (b) policy updates fall\n",
                      "markdown": "`\nbegin \"Encrypt as root with user's login protector\"\necho TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --user=\"$TEST_USER\" \"$dir\"\n# The user should be able to update the policy and protectors created by the\n# above command themselves.  The easiest way to test this is by updating the\n# policy to remove the auto-generated recovery protector.  This verifies that\n# (a) the policy was made owned by the user, and that (b) policy updates fall\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_single_user.sh"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 25,
                  "endLine": 53,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nbegin \"Encrypt as user if they set up filesystem (should succeed)\"\n_rm_metadata \"$MNT\"\nchown \"$TEST_USER\" \"$MNT\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt setup --time=1ms --quiet $MNT\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=dir3 --skip-unlock \\\"$dir\\\"\"\n",
                    "rendered": {
                      "text": "\nbegin \"Encrypt as user if they set up filesystem (should succeed)\"\n_rm_metadata \"$MNT\"\nchown \"$TEST_USER\" \"$MNT\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt setup --time=1ms --quiet $MNT\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=dir3 --skip-unlock \\\"$dir\\\"\"\n",
                      "markdown": "`\nbegin \"Encrypt as user if they set up filesystem (should succeed)\"\n_rm_metadata \"$MNT\"\nchown \"$TEST_USER\" \"$MNT\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt setup --time=1ms --quiet $MNT\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=dir3 --skip-unlock \\\"$dir\\\"\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_single_user.sh"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 19,
                  "endLine": 52,
                  "endColumn": 6,
                  "snippet": {
                    "text": "_user_do_and_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=dir --skip-unlock \\\"$dir\\\"\"\n\nbegin \"Encrypt as user if they set up filesystem (should succeed)\"\n_rm_metadata \"$MNT\"\nchown \"$TEST_USER\" \"$MNT\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt setup --time=1ms --quiet $MNT\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=dir3 --skip-unlock \\\"$dir\\\"\"\n",
                    "rendered": {
                      "text": "_user_do_and_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=dir --skip-unlock \\\"$dir\\\"\"\n\nbegin \"Encrypt as user if they set up filesystem (should succeed)\"\n_rm_metadata \"$MNT\"\nchown \"$TEST_USER\" \"$MNT\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt setup --time=1ms --quiet $MNT\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=dir3 --skip-unlock \\\"$dir\\\"\"\n",
                      "markdown": "`_user_do_and_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=dir --skip-unlock \\\"$dir\\\"\"\n\nbegin \"Encrypt as user if they set up filesystem (should succeed)\"\n_rm_metadata \"$MNT\"\nchown \"$TEST_USER\" \"$MNT\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt setup --time=1ms --quiet $MNT\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=dir3 --skip-unlock \\\"$dir\\\"\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_single_user.sh"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 37,
                  "endLine": 47,
                  "endColumn": 6,
                  "snippet": {
                    "text": "_user_do \"fscrypt lock $dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir\"\n\nbegin \"Encrypt as user (should fail)\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do_and_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=dir --skip-unlock \\\"$dir\\\"\"\n\nbegin \"Encrypt as user if they set up filesystem (should succeed)\"\n",
                    "rendered": {
                      "text": "_user_do \"fscrypt lock $dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir\"\n\nbegin \"Encrypt as user (should fail)\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do_and_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=dir --skip-unlock \\\"$dir\\\"\"\n\nbegin \"Encrypt as user if they set up filesystem (should succeed)\"\n",
                      "markdown": "`_user_do \"fscrypt lock $dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir\"\n\nbegin \"Encrypt as user (should fail)\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do_and_expect_failure \"echo hunter2 | fscrypt encrypt --quiet --name=dir --skip-unlock \\\"$dir\\\"\"\n\nbegin \"Encrypt as user if they set up filesystem (should succeed)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_single_user.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 123,
                  "endLine": 42,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# easiest test to do here.)\npolicy=$(fscrypt status \"$dir\" | awk '/Policy/{print $2}')\nrecovery_protector=$(_get_protector_descriptor \"$MNT\" custom 'Recovery passphrase for dir')\n_user_do \"fscrypt metadata remove-protector-from-policy --force --protector=$MNT:$recovery_protector --policy=$MNT:$policy\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt lock $dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir\"\n\n",
                    "rendered": {
                      "text": "# easiest test to do here.)\npolicy=$(fscrypt status \"$dir\" | awk '/Policy/{print $2}')\nrecovery_protector=$(_get_protector_descriptor \"$MNT\" custom 'Recovery passphrase for dir')\n_user_do \"fscrypt metadata remove-protector-from-policy --force --protector=$MNT:$recovery_protector --policy=$MNT:$policy\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt lock $dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir\"\n\n",
                      "markdown": "`# easiest test to do here.)\npolicy=$(fscrypt status \"$dir\" | awk '/Policy/{print $2}')\nrecovery_protector=$(_get_protector_descriptor \"$MNT\" custom 'Recovery passphrase for dir')\n_user_do \"fscrypt metadata remove-protector-from-policy --force --protector=$MNT:$recovery_protector --policy=$MNT:$policy\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt lock $dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_single_user.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 32,
                  "endLine": 39,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# back to overwrites when the process cannot write to the containing directory.\n# (It would be better to test updating the protectors too, but this is the\n# easiest test to do here.)\npolicy=$(fscrypt status \"$dir\" | awk '/Policy/{print $2}')\nrecovery_protector=$(_get_protector_descriptor \"$MNT\" custom 'Recovery passphrase for dir')\n_user_do \"fscrypt metadata remove-protector-from-policy --force --protector=$MNT:$recovery_protector --policy=$MNT:$policy\"\nchown \"$TEST_USER\" \"$dir\"\n",
                    "rendered": {
                      "text": "# back to overwrites when the process cannot write to the containing directory.\n# (It would be better to test updating the protectors too, but this is the\n# easiest test to do here.)\npolicy=$(fscrypt status \"$dir\" | awk '/Policy/{print $2}')\nrecovery_protector=$(_get_protector_descriptor \"$MNT\" custom 'Recovery passphrase for dir')\n_user_do \"fscrypt metadata remove-protector-from-policy --force --protector=$MNT:$recovery_protector --policy=$MNT:$policy\"\nchown \"$TEST_USER\" \"$dir\"\n",
                      "markdown": "`# back to overwrites when the process cannot write to the containing directory.\n# (It would be better to test updating the protectors too, but this is the\n# easiest test to do here.)\npolicy=$(fscrypt status \"$dir\" | awk '/Policy/{print $2}')\nrecovery_protector=$(_get_protector_descriptor \"$MNT\" custom 'Recovery passphrase for dir')\n_user_do \"fscrypt metadata remove-protector-from-policy --force --protector=$MNT:$recovery_protector --policy=$MNT:$policy\"\nchown \"$TEST_USER\" \"$dir\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 56,
                  "endLine": 103,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --user=\"$TEST_USER\" \"$dir\"\nprotector=$(_get_login_descriptor)\nlink_file=$MNT/.fscrypt/protectors/$protector.link\n[ -e \"$link_file\" ] || _fail \"$link_file does not exist\"\nsed -i 's/UUID=.*/UUID=00000000-0000-0000-0000-000000000000/' \"$link_file\"\nfscrypt status \"$MNT\"\n",
                    "rendered": {
                      "text": "echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --user=\"$TEST_USER\" \"$dir\"\nprotector=$(_get_login_descriptor)\nlink_file=$MNT/.fscrypt/protectors/$protector.link\n[ -e \"$link_file\" ] || _fail \"$link_file does not exist\"\nsed -i 's/UUID=.*/UUID=00000000-0000-0000-0000-000000000000/' \"$link_file\"\nfscrypt status \"$MNT\"\n",
                      "markdown": "`echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --user=\"$TEST_USER\" \"$dir\"\nprotector=$(_get_login_descriptor)\nlink_file=$MNT/.fscrypt/protectors/$protector.link\n[ -e \"$link_file\" ] || _fail \"$link_file does not exist\"\nsed -i 's/UUID=.*/UUID=00000000-0000-0000-0000-000000000000/' \"$link_file\"\nfscrypt status \"$MNT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 45,
                  "endLine": 93,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --name=prot '$dir'\"\nshow_status false\n\nbegin \"Try to use the wrong login passphrase\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do_and_expect_failure \\\n\t\"echo wrong_passphrase | fscrypt encrypt --quiet --source=pam_passphrase '$dir'\"\nshow_status false\n",
                    "rendered": {
                      "text": "\t\"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --name=prot '$dir'\"\nshow_status false\n\nbegin \"Try to use the wrong login passphrase\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do_and_expect_failure \\\n\t\"echo wrong_passphrase | fscrypt encrypt --quiet --source=pam_passphrase '$dir'\"\nshow_status false\n",
                      "markdown": "`\t\"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --name=prot '$dir'\"\nshow_status false\n\nbegin \"Try to use the wrong login passphrase\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do_and_expect_failure \\\n\t\"echo wrong_passphrase | fscrypt encrypt --quiet --source=pam_passphrase '$dir'\"\nshow_status false\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 44,
                  "endLine": 87,
                  "endColumn": 6,
                  "snippet": {
                    "text": "fscrypt status \"$MNT_ROOT\"\nrmdir \"$MNT_ROOT/dir\"\n\nbegin \"Try to give a login protector a name\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do_and_expect_failure \\\n\t\"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --name=prot '$dir'\"\nshow_status false\n",
                    "rendered": {
                      "text": "fscrypt status \"$MNT_ROOT\"\nrmdir \"$MNT_ROOT/dir\"\n\nbegin \"Try to give a login protector a name\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do_and_expect_failure \\\n\t\"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --name=prot '$dir'\"\nshow_status false\n",
                      "markdown": "`fscrypt status \"$MNT_ROOT\"\nrmdir \"$MNT_ROOT/dir\"\n\nbegin \"Try to give a login protector a name\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do_and_expect_failure \\\n\t\"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --name=prot '$dir'\"\nshow_status false\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 21,
                  "endLine": 80,
                  "endColumn": 6,
                  "snippet": {
                    "text": "show_status true\n\nbegin \"Encrypt with login protector on root fs (shouldn't generate a recovery passphrase)\"\nmkdir \"$MNT_ROOT/dir\"\nchown \"$TEST_USER\" \"$MNT_ROOT/dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --no-recovery '$MNT_ROOT/dir'\"\nfscrypt status \"$MNT_ROOT/dir\"\nfscrypt status \"$MNT_ROOT\"\n",
                    "rendered": {
                      "text": "show_status true\n\nbegin \"Encrypt with login protector on root fs (shouldn't generate a recovery passphrase)\"\nmkdir \"$MNT_ROOT/dir\"\nchown \"$TEST_USER\" \"$MNT_ROOT/dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --no-recovery '$MNT_ROOT/dir'\"\nfscrypt status \"$MNT_ROOT/dir\"\nfscrypt status \"$MNT_ROOT\"\n",
                      "markdown": "`show_status true\n\nbegin \"Encrypt with login protector on root fs (shouldn't generate a recovery passphrase)\"\nmkdir \"$MNT_ROOT/dir\"\nchown \"$TEST_USER\" \"$MNT_ROOT/dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --no-recovery '$MNT_ROOT/dir'\"\nfscrypt status \"$MNT_ROOT/dir\"\nfscrypt status \"$MNT_ROOT\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 55,
                  "endLine": 74,
                  "endColumn": 6,
                  "snippet": {
                    "text": "_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir --quiet --unlock-with=$MNT_ROOT:$login_protector\"\n_user_do \"fscrypt lock $dir\"\n\nbegin \"Encrypt with login protector with --no-recovery\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --no-recovery '$dir'\"\nshow_status true\n\n",
                    "rendered": {
                      "text": "_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir --quiet --unlock-with=$MNT_ROOT:$login_protector\"\n_user_do \"fscrypt lock $dir\"\n\nbegin \"Encrypt with login protector with --no-recovery\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --no-recovery '$dir'\"\nshow_status true\n\n",
                      "markdown": "`_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir --quiet --unlock-with=$MNT_ROOT:$login_protector\"\n_user_do \"fscrypt lock $dir\"\n\nbegin \"Encrypt with login protector with --no-recovery\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase --no-recovery '$dir'\"\nshow_status true\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 50,
                  "endLine": 68,
                  "endColumn": 6,
                  "snippet": {
                    "text": "echo -e \"\\nProtector is owned by $owner\"\n# The user should be able to lock and unlock the directory themselves.  This\n# tests that the fscrypt metadata file permissions got set appropriately when\n# root set up the encryption on the user's behalf.\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt lock $dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir --quiet --unlock-with=$MNT_ROOT:$login_protector\"\n_user_do \"fscrypt lock $dir\"\n",
                    "rendered": {
                      "text": "echo -e \"\\nProtector is owned by $owner\"\n# The user should be able to lock and unlock the directory themselves.  This\n# tests that the fscrypt metadata file permissions got set appropriately when\n# root set up the encryption on the user's behalf.\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt lock $dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir --quiet --unlock-with=$MNT_ROOT:$login_protector\"\n_user_do \"fscrypt lock $dir\"\n",
                      "markdown": "`echo -e \"\\nProtector is owned by $owner\"\n# The user should be able to lock and unlock the directory themselves.  This\n# tests that the fscrypt metadata file permissions got set appropriately when\n# root set up the encryption on the user's behalf.\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"fscrypt lock $dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt unlock $dir --quiet --unlock-with=$MNT_ROOT:$login_protector\"\n_user_do \"fscrypt lock $dir\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 23,
                  "endLine": 53,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect \"Enter the source number for the new protector\"\nsend \"1\\r\"\nexpect \"Enter login passphrase\"\nsend \"TEST_USER_PASS\\r\"\nexpect eof\nEOF\nshow_status true\n\n",
                    "rendered": {
                      "text": "expect \"Enter the source number for the new protector\"\nsend \"1\\r\"\nexpect \"Enter login passphrase\"\nsend \"TEST_USER_PASS\\r\"\nexpect eof\nEOF\nshow_status true\n\n",
                      "markdown": "`expect \"Enter the source number for the new protector\"\nsend \"1\\r\"\nexpect \"Enter login passphrase\"\nsend \"TEST_USER_PASS\\r\"\nexpect eof\nEOF\nshow_status true\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 10,
                  "endLine": 51,
                  "endColumn": 7,
                  "snippet": {
                    "text": "_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"1\\r\"\nexpect \"Enter login passphrase\"\nsend \"TEST_USER_PASS\\r\"\nexpect eof\nEOF\n",
                    "rendered": {
                      "text": "_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"1\\r\"\nexpect \"Enter login passphrase\"\nsend \"TEST_USER_PASS\\r\"\nexpect eof\nEOF\n",
                      "markdown": "`_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"1\\r\"\nexpect \"Enter login passphrase\"\nsend \"TEST_USER_PASS\\r\"\nexpect eof\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 28,
                  "endLine": 49,
                  "endColumn": 7,
                  "snippet": {
                    "text": "begin \"Encrypt with login protector, interactively\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"1\\r\"\nexpect \"Enter login passphrase\"\nsend \"TEST_USER_PASS\\r\"\n",
                    "rendered": {
                      "text": "begin \"Encrypt with login protector, interactively\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"1\\r\"\nexpect \"Enter login passphrase\"\nsend \"TEST_USER_PASS\\r\"\n",
                      "markdown": "`begin \"Encrypt with login protector, interactively\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"1\\r\"\nexpect \"Enter login passphrase\"\nsend \"TEST_USER_PASS\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 8,
                  "endLine": 47,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\nbegin \"Encrypt with login protector, interactively\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"1\\r\"\n",
                    "rendered": {
                      "text": "\nbegin \"Encrypt with login protector, interactively\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"1\\r\"\n",
                      "markdown": "`\nbegin \"Encrypt with login protector, interactively\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\nsend \"1\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 51,
                  "endLine": 46,
                  "endColumn": 6,
                  "snippet": {
                    "text": "_user_do \"fscrypt lock '$dir'\"\n_user_do \"echo $recovery_passphrase | fscrypt unlock --quiet --unlock-with=$MNT:$recovery_protector '$dir'\"\n\nbegin \"Encrypt with login protector, interactively\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\n",
                    "rendered": {
                      "text": "_user_do \"fscrypt lock '$dir'\"\n_user_do \"echo $recovery_passphrase | fscrypt unlock --quiet --unlock-with=$MNT:$recovery_protector '$dir'\"\n\nbegin \"Encrypt with login protector, interactively\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\n",
                      "markdown": "`_user_do \"fscrypt lock '$dir'\"\n_user_do \"echo $recovery_passphrase | fscrypt unlock --quiet --unlock-with=$MNT:$recovery_protector '$dir'\"\n\nbegin \"Encrypt with login protector, interactively\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do expect << EOF\nspawn fscrypt encrypt \"$dir\"\nexpect \"Enter the source number for the new protector\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 82,
                  "endLine": 34,
                  "endColumn": 87,
                  "snippet": {
                    "text": "chown \"$TEST_USER\" \"$dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase '$dir'\"\nshow_status true\nrecovery_passphrase=$(grep -E '^ +[a-z]{20}$' \"$dir/fscrypt_recovery_readme.txt\" | sed 's/^ +//')\nrecovery_protector=$(_get_protector_descriptor \"$MNT\" custom 'Recovery passphrase for dir')\nlogin_protector=$(_get_login_descriptor)\n_print_header \"=> Lock, then unlock with login passphrase\"\n",
                    "rendered": {
                      "text": "chown \"$TEST_USER\" \"$dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase '$dir'\"\nshow_status true\nrecovery_passphrase=$(grep -E '^ +[a-z]{20}$' \"$dir/fscrypt_recovery_readme.txt\" | sed 's/^ +//')\nrecovery_protector=$(_get_protector_descriptor \"$MNT\" custom 'Recovery passphrase for dir')\nlogin_protector=$(_get_login_descriptor)\n_print_header \"=> Lock, then unlock with login passphrase\"\n",
                      "markdown": "`chown \"$TEST_USER\" \"$dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase '$dir'\"\nshow_status true\nrecovery_passphrase=$(grep -E '^ +[a-z]{20}$' \"$dir/fscrypt_recovery_readme.txt\" | sed 's/^ +//')\nrecovery_protector=$(_get_protector_descriptor \"$MNT\" custom 'Recovery passphrase for dir')\nlogin_protector=$(_get_login_descriptor)\n_print_header \"=> Lock, then unlock with login passphrase\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt_login.sh"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 36,
                  "endLine": 31,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tfi\n}\n\nbegin \"Encrypt with login protector\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase '$dir'\"\nshow_status true\nrecovery_passphrase=$(grep -E '^ +[a-z]{20}$' \"$dir/fscrypt_recovery_readme.txt\" | sed 's/^ +//')\n",
                    "rendered": {
                      "text": "\tfi\n}\n\nbegin \"Encrypt with login protector\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase '$dir'\"\nshow_status true\nrecovery_passphrase=$(grep -E '^ +[a-z]{20}$' \"$dir/fscrypt_recovery_readme.txt\" | sed 's/^ +//')\n",
                      "markdown": "`\tfi\n}\n\nbegin \"Encrypt with login protector\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo TEST_USER_PASS | fscrypt encrypt --quiet --source=pam_passphrase '$dir'\"\nshow_status true\nrecovery_passphrase=$(grep -E '^ +[a-z]{20}$' \"$dir/fscrypt_recovery_readme.txt\" | sed 's/^ +//')\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/metadata/metadata.proto"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 14,
                  "endLine": 12,
                  "snippet": {
                    "text": " *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/metadata/metadata.proto"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7,
                  "endLine": 31,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n// Cost parameters to be used in our hashing functions.\nmessage HashingCosts {\n  int64 time = 2;\n  int64 memory = 3;\n  int64 parallelism = 4;\n  // If true, parallelism should no longer be truncated to 8 bits.\n",
                    "rendered": {
                      "text": "\n// Cost parameters to be used in our hashing functions.\nmessage HashingCosts {\n  int64 time = 2;\n  int64 memory = 3;\n  int64 parallelism = 4;\n  // If true, parallelism should no longer be truncated to 8 bits.\n",
                      "markdown": "`\n// Cost parameters to be used in our hashing functions.\nmessage HashingCosts {\n  int64 time = 2;\n  int64 memory = 3;\n  int64 parallelism = 4;\n  // If true, parallelism should no longer be truncated to 8 bits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/bin/files-changed"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Detect if any files have changed in the git repository. Output an appropriate\n# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Detect if any files have changed in the git repository. Output an appropriate\n# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n",
                      "markdown": "`#!/usr/bin/env bash\n# Detect if any files have changed in the git repository. Output an appropriate\n# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/bin/files-changed"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11,
                  "endLine": 23,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    ;;\n  esac\n  echo \"**************************************************\"\n  git reset HEAD --hard\n  exit 1\nfi",
                    "rendered": {
                      "text": "    ;;\n  esac\n  echo \"**************************************************\"\n  git reset HEAD --hard\n  exit 1\nfi",
                      "markdown": "`    ;;\n  esac\n  echo \"**************************************************\"\n  git reset HEAD --hard\n  exit 1\nfi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/bin/files-changed"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 6,
                  "snippet": {
                    "text": "    ;;\n  esac\n  echo \"**************************************************\"\n  git reset HEAD --hard\n  exit 1\nfi",
                    "rendered": {
                      "text": "    ;;\n  esac\n  echo \"**************************************************\"\n  git reset HEAD --hard\n  exit 1\nfi",
                      "markdown": "`    ;;\n  esac\n  echo \"**************************************************\"\n  git reset HEAD --hard\n  exit 1\nfi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/bin/files-changed"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 20,
                  "endLine": 7,
                  "snippet": {
                    "text": "# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n  git diff --minimal HEAD\n  echo\n  echo \"**************************************************\"\n  case \"$1\" in\n  \"proto\")\n",
                    "rendered": {
                      "text": "# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n  git diff --minimal HEAD\n  echo\n  echo \"**************************************************\"\n  case \"$1\" in\n  \"proto\")\n",
                      "markdown": "`# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n  git diff --minimal HEAD\n  echo\n  echo \"**************************************************\"\n  case \"$1\" in\n  \"proto\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/bin/files-changed"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n  git diff --minimal HEAD\n  echo\n  echo \"**************************************************\"\n  case \"$1\" in\n",
                    "rendered": {
                      "text": "# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n  git diff --minimal HEAD\n  echo\n  echo \"**************************************************\"\n  case \"$1\" in\n",
                      "markdown": "`# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n  git diff --minimal HEAD\n  echo\n  echo \"**************************************************\"\n  case \"$1\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/bin/files-changed"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 41,
                  "endLine": 2,
                  "endColumn": 46,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Detect if any files have changed in the git repository. Output an appropriate\n# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Detect if any files have changed in the git repository. Output an appropriate\n# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n",
                      "markdown": "`#!/usr/bin/env bash\n# Detect if any files have changed in the git repository. Output an appropriate\n# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/bin/files-changed"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Detect if any files have changed in the git repository. Output an appropriate\n# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Detect if any files have changed in the git repository. Output an appropriate\n# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n",
                      "markdown": "`#!/usr/bin/env bash\n# Detect if any files have changed in the git repository. Output an appropriate\n# error message if they have changed.\n\nif [[ -n $(git status -s) ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_not_supported.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 13,
                  "endLine": 10,
                  "endColumn": 6,
                  "snippet": {
                    "text": ". common.sh\n\n_print_header \"Mount tmpfs\"\numount \"$MNT\"\nmount tmpfs -t tmpfs -o size=128m \"$MNT\"\n\n_print_header \"Try to create fscrypt metadata on tmpfs\"\n_expect_failure \"fscrypt setup --quiet '$MNT'\"\n",
                    "rendered": {
                      "text": ". common.sh\n\n_print_header \"Mount tmpfs\"\numount \"$MNT\"\nmount tmpfs -t tmpfs -o size=128m \"$MNT\"\n\n_print_header \"Try to create fscrypt metadata on tmpfs\"\n_expect_failure \"fscrypt setup --quiet '$MNT'\"\n",
                      "markdown": "`. common.sh\n\n_print_header \"Mount tmpfs\"\numount \"$MNT\"\nmount tmpfs -t tmpfs -o size=128m \"$MNT\"\n\n_print_header \"Try to create fscrypt metadata on tmpfs\"\n_expect_failure \"fscrypt setup --quiet '$MNT'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_setup.out"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 104,
                  "endLine": 36,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\n# fscrypt setup filesystem\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] Metadata directories created at \"MNT/.fscrypt\", writable by everyone.\n\n# fscrypt setup filesystem (already set up)\n[ERROR] fscrypt setup: filesystem MNT is already setup for\n",
                    "rendered": {
                      "text": "\n# fscrypt setup filesystem\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] Metadata directories created at \"MNT/.fscrypt\", writable by everyone.\n\n# fscrypt setup filesystem (already set up)\n[ERROR] fscrypt setup: filesystem MNT is already setup for\n",
                      "markdown": "`\n# fscrypt setup filesystem\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] Metadata directories created at \"MNT/.fscrypt\", writable by everyone.\n\n# fscrypt setup filesystem (already set up)\n[ERROR] fscrypt setup: filesystem MNT is already setup for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_setup.out"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 26,
                  "endLine": 24,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# fscrypt setup when fscrypt.conf already exists (accept)\nReplace \"FSCRYPT_CONF\"? [y/N] Defaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nSkipping creating MNT_ROOT/.fscrypt because it already exists.\n\n# fscrypt setup --quiet when fscrypt.conf already exists\n",
                    "rendered": {
                      "text": "# fscrypt setup when fscrypt.conf already exists (accept)\nReplace \"FSCRYPT_CONF\"? [y/N] Defaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nSkipping creating MNT_ROOT/.fscrypt because it already exists.\n\n# fscrypt setup --quiet when fscrypt.conf already exists\n",
                      "markdown": "`# fscrypt setup when fscrypt.conf already exists (accept)\nReplace \"FSCRYPT_CONF\"? [y/N] Defaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nSkipping creating MNT_ROOT/.fscrypt because it already exists.\n\n# fscrypt setup --quiet when fscrypt.conf already exists\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_setup.out"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 104,
                  "endLine": 13,
                  "endColumn": 108,
                  "snippet": {
                    "text": "Customizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] Metadata directories created at \"MNT_ROOT/.fscrypt\", writable by everyone.\n\n# fscrypt setup when fscrypt.conf already exists (cancel)\nReplace \"FSCRYPT_CONF\"? [y/N] [ERROR] fscrypt setup: operation canceled\n",
                    "rendered": {
                      "text": "Customizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] Metadata directories created at \"MNT_ROOT/.fscrypt\", writable by everyone.\n\n# fscrypt setup when fscrypt.conf already exists (cancel)\nReplace \"FSCRYPT_CONF\"? [y/N] [ERROR] fscrypt setup: operation canceled\n",
                      "markdown": "`Customizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] Metadata directories created at \"MNT_ROOT/.fscrypt\", writable by everyone.\n\n# fscrypt setup when fscrypt.conf already exists (cancel)\nReplace \"FSCRYPT_CONF\"? [y/N] [ERROR] fscrypt setup: operation canceled\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_setup.out"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 26,
                  "endLine": 11,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# fscrypt setup creates fscrypt.conf and /.fscrypt\nDefaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] Metadata directories created at \"MNT_ROOT/.fscrypt\", writable by everyone.\n\n",
                    "rendered": {
                      "text": "# fscrypt setup creates fscrypt.conf and /.fscrypt\nDefaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] Metadata directories created at \"MNT_ROOT/.fscrypt\", writable by everyone.\n\n",
                      "markdown": "`# fscrypt setup creates fscrypt.conf and /.fscrypt\nDefaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nAllow users other than root to create fscrypt metadata on this filesystem? (See\nhttps://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem) [y/N] Metadata directories created at \"MNT_ROOT/.fscrypt\", writable by everyone.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_setup.out"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 26,
                  "endLine": 5,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# fscrypt setup creates fscrypt.conf\nDefaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nSkipping creating MNT_ROOT/.fscrypt because it already exists.\n\n# fscrypt setup creates fscrypt.conf and /.fscrypt\n",
                    "rendered": {
                      "text": "# fscrypt setup creates fscrypt.conf\nDefaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nSkipping creating MNT_ROOT/.fscrypt because it already exists.\n\n# fscrypt setup creates fscrypt.conf and /.fscrypt\n",
                      "markdown": "`# fscrypt setup creates fscrypt.conf\nDefaulting to policy_version 2 because kernel supports it.\nCustomizing passphrase hashing difficulty for this system...\nCreated global config file at \"FSCRYPT_CONF\".\nSkipping creating MNT_ROOT/.fscrypt because it already exists.\n\n# fscrypt setup creates fscrypt.conf and /.fscrypt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 14,
                  "endLine": 53,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"pass3\\r\"\nexpect eof\nEOF\n\n_print_header \"Lock, then unlock with new passphrase\"\n",
                    "rendered": {
                      "text": "expect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"pass3\\r\"\nexpect eof\nEOF\n\n_print_header \"Lock, then unlock with new passphrase\"\n",
                      "markdown": "`expect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"pass3\\r\"\nexpect eof\nEOF\n\n_print_header \"Lock, then unlock with new passphrase\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 14,
                  "endLine": 51,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"pass3\\r\"\nexpect eof\nEOF\n",
                    "rendered": {
                      "text": "expect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"pass3\\r\"\nexpect eof\nEOF\n",
                      "markdown": "`expect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"pass3\\r\"\nexpect eof\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 14,
                  "endLine": 49,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"pass3\\r\"\n",
                    "rendered": {
                      "text": "expect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"pass3\\r\"\n",
                      "markdown": "`expect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"pass3\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 68,
                  "endLine": 47,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n_print_header \"Change passphrase (interactively)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\n",
                    "rendered": {
                      "text": "\n_print_header \"Change passphrase (interactively)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\n",
                      "markdown": "`\n_print_header \"Change passphrase (interactively)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 49,
                  "endLine": 45,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect eof\nEOF\n\n_print_header \"Change passphrase (interactively)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\n",
                    "rendered": {
                      "text": "expect eof\nEOF\n\n_print_header \"Change passphrase (interactively)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\n",
                      "markdown": "`expect eof\nEOF\n\n_print_header \"Change passphrase (interactively)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 12,
                  "endLine": 41,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"bad\\r\"\nexpect eof\nEOF\n\n_print_header \"Change passphrase (interactively)\"\n",
                    "rendered": {
                      "text": "expect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"bad\\r\"\nexpect eof\nEOF\n\n_print_header \"Change passphrase (interactively)\"\n",
                      "markdown": "`expect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"bad\\r\"\nexpect eof\nEOF\n\n_print_header \"Change passphrase (interactively)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 14,
                  "endLine": 39,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"bad\\r\"\nexpect eof\nEOF\n",
                    "rendered": {
                      "text": "expect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"bad\\r\"\nexpect eof\nEOF\n",
                      "markdown": "`expect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"bad\\r\"\nexpect eof\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 14,
                  "endLine": 37,
                  "endColumn": 7,
                  "snippet": {
                    "text": "expect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"bad\\r\"\n",
                    "rendered": {
                      "text": "expect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"bad\\r\"\n",
                      "markdown": "`expect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\nexpect \"Confirm passphrase\"\nsend \"bad\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 68,
                  "endLine": 35,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n_print_header \"Try to change passphrase (interactively, mismatch)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\n",
                    "rendered": {
                      "text": "\n_print_header \"Try to change passphrase (interactively, mismatch)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\n",
                      "markdown": "`\n_print_header \"Try to change passphrase (interactively, mismatch)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\nexpect \"Enter new custom passphrase\"\nsend \"pass3\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_change_passphrase.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 66,
                  "endLine": 33,
                  "endColumn": 7,
                  "snippet": {
                    "text": "mkdir \"$dir/subdir\"\nrmdir \"$dir/subdir\"\n\n_print_header \"Try to change passphrase (interactively, mismatch)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\n",
                    "rendered": {
                      "text": "mkdir \"$dir/subdir\"\nrmdir \"$dir/subdir\"\n\n_print_header \"Try to change passphrase (interactively, mismatch)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\n",
                      "markdown": "`mkdir \"$dir/subdir\"\nrmdir \"$dir/subdir\"\n\n_print_header \"Try to change passphrase (interactively, mismatch)\"\nexpect << EOF\nspawn fscrypt metadata change-passphrase --protector=$MNT:$protector\nexpect \"Enter old custom passphrase\"\nsend \"pass2\\r\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_status.sh"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nfilter_mnt_status()\n{\n\tawk '$1 == \"'\"$MNT\"'\" { print $3, $4, $5 }'\n}\n\n# Initially, $MNT has encryption enabled and fscrypt setup.\n",
                    "rendered": {
                      "text": "\nfilter_mnt_status()\n{\n\tawk '$1 == \"'\"$MNT\"'\" { print $3, $4, $5 }'\n}\n\n# Initially, $MNT has encryption enabled and fscrypt setup.\n",
                      "markdown": "`\nfilter_mnt_status()\n{\n\tawk '$1 == \"'\"$MNT\"'\" { print $3, $4, $5 }'\n}\n\n# Initially, $MNT has encryption enabled and fscrypt setup.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint_test.go"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 16,
                  "endLine": 377,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/1\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/1\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                      "markdown": "`\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/1\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint_test.go"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 16,
                  "endLine": 330,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/1\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/1\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                      "markdown": "`\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/1\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint_test.go"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 16,
                  "endLine": 296,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/var/lib/lxc/base/rootfs\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/var/lib/lxc/base/rootfs\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                      "markdown": "`\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/var/lib/lxc/base/rootfs\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint_test.go"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 16,
                  "endLine": 279,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/foo\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/foo\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                      "markdown": "`\tdeviceNumber, _ := newDeviceNumberFromString(\"259:3\")\n\tmnt := mountsByDevice[deviceNumber]\n\tif mnt.Subtree != \"/foo\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint_test.go"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 16,
                  "endLine": 261,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tloadMountInfoFromString(mountinfo)\n\tmnt := mountForDevice(\"259:3\")\n\tif mnt.Subtree != \"/\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\tloadMountInfoFromString(mountinfo)\n\tmnt := mountForDevice(\"259:3\")\n\tif mnt.Subtree != \"/\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                      "markdown": "`\tloadMountInfoFromString(mountinfo)\n\tmnt := mountForDevice(\"259:3\")\n\tif mnt.Subtree != \"/\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint_test.go"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 16,
                  "endLine": 244,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tloadMountInfoFromString(mountinfo)\n\tmnt := mountForDevice(\"259:3\")\n\tif mnt.Path != \"/mnt\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\tloadMountInfoFromString(mountinfo)\n\tmnt := mountForDevice(\"259:3\")\n\tif mnt.Path != \"/mnt\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n",
                      "markdown": "`\tloadMountInfoFromString(mountinfo)\n\tmnt := mountForDevice(\"259:3\")\n\tif mnt.Path != \"/mnt\" {\n\t\tt.Error(\"Wrong mount was chosen\")\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint_test.go"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 18,
                  "endLine": 212,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tfor _, mountinfo := range mountinfos {\n\t\tloadMountInfoFromString(mountinfo)\n\t\tif len(mountsByDevice) != 0 {\n\t\t\tt.Error(\"Loaded mount from invalid mountinfo line\")\n\t\t}\n\t}\n}\n",
                    "rendered": {
                      "text": "\tfor _, mountinfo := range mountinfos {\n\t\tloadMountInfoFromString(mountinfo)\n\t\tif len(mountsByDevice) != 0 {\n\t\t\tt.Error(\"Loaded mount from invalid mountinfo line\")\n\t\t}\n\t}\n}\n",
                      "markdown": "`\tfor _, mountinfo := range mountinfos {\n\t\tloadMountInfoFromString(mountinfo)\n\t\tif len(mountsByDevice) != 0 {\n\t\t\tt.Error(\"Loaded mount from invalid mountinfo line\")\n\t\t}\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint_test.go"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 15,
                  "endLine": 156,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tloadMountInfoFromString(mountinfo)\n\tmnt := mountForDevice(\"259:3\")\n\tif mnt.FilesystemType != \"ubifs\" {\n\t\tt.Error(\"Last mount didn't supersede previous ones\")\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\tloadMountInfoFromString(mountinfo)\n\tmnt := mountForDevice(\"259:3\")\n\tif mnt.FilesystemType != \"ubifs\" {\n\t\tt.Error(\"Last mount didn't supersede previous ones\")\n\t}\n}\n\n",
                      "markdown": "`\tloadMountInfoFromString(mountinfo)\n\tmnt := mountForDevice(\"259:3\")\n\tif mnt.FilesystemType != \"ubifs\" {\n\t\tt.Error(\"Last mount didn't supersede previous ones\")\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint_test.go"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 24,
                  "endLine": 139,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\tmountinfo := fmt.Sprintf(\"15 0 259:3 /foo %s rw,relatime shared:1 - ext4 /dev/root rw\", file.Name())\n\tloadMountInfoFromString(mountinfo)\n\tif len(mountsByDevice) != 0 {\n\t\tt.Error(\"Non-directory mount wasn't ignored\")\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\tmountinfo := fmt.Sprintf(\"15 0 259:3 /foo %s rw,relatime shared:1 - ext4 /dev/root rw\", file.Name())\n\tloadMountInfoFromString(mountinfo)\n\tif len(mountsByDevice) != 0 {\n\t\tt.Error(\"Non-directory mount wasn't ignored\")\n\t}\n}\n\n",
                      "markdown": "`\tmountinfo := fmt.Sprintf(\"15 0 259:3 /foo %s rw,relatime shared:1 - ext4 /dev/root rw\", file.Name())\n\tloadMountInfoFromString(mountinfo)\n\tif len(mountsByDevice) != 0 {\n\t\tt.Error(\"Non-directory mount wasn't ignored\")\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 14,
                  "endLine": 112,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tgo vet ./...\n\tstaticcheck ./...\n\tmisspell -source=text $(FILES)\n\tshellcheck -s bash cmd/fscrypt/fscrypt_bash_completion\n\t( cd cli-tests && shellcheck -x *.sh)\n\nclean:\n",
                    "rendered": {
                      "text": "\tgo vet ./...\n\tstaticcheck ./...\n\tmisspell -source=text $(FILES)\n\tshellcheck -s bash cmd/fscrypt/fscrypt_bash_completion\n\t( cd cli-tests && shellcheck -x *.sh)\n\nclean:\n",
                      "markdown": "`\tgo vet ./...\n\tstaticcheck ./...\n\tmisspell -source=text $(FILES)\n\tshellcheck -s bash cmd/fscrypt/fscrypt_bash_completion\n\t( cd cli-tests && shellcheck -x *.sh)\n\nclean:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 31,
                  "endLine": 36,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#\n# MOUNT: The filesystem where our tests are run.    Default: /mnt/fscrypt_mount\n#   Ex: make test-setup MOUNT=/foo/bar\n#     Creates a test filesystem at that location.\n#   Ex: make test-teardown MOUNT=/foo/bar\n#     Cleans up a test filesystem created with \"make test-setup\".\n#   Ex: make test MOUNT=/foo/bar\n",
                    "rendered": {
                      "text": "#\n# MOUNT: The filesystem where our tests are run.    Default: /mnt/fscrypt_mount\n#   Ex: make test-setup MOUNT=/foo/bar\n#     Creates a test filesystem at that location.\n#   Ex: make test-teardown MOUNT=/foo/bar\n#     Cleans up a test filesystem created with \"make test-setup\".\n#   Ex: make test MOUNT=/foo/bar\n",
                      "markdown": "`#\n# MOUNT: The filesystem where our tests are run.    Default: /mnt/fscrypt_mount\n#   Ex: make test-setup MOUNT=/foo/bar\n#     Creates a test filesystem at that location.\n#   Ex: make test-teardown MOUNT=/foo/bar\n#     Cleans up a test filesystem created with \"make test-setup\".\n#   Ex: make test MOUNT=/foo/bar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# License for the specific language governing permissions and limitations under\n# the License.\n\n# Update this on each new release, along with the NEWS.md file.\nVERSION := v0.3.5\n\nNAME := fscrypt\n",
                    "rendered": {
                      "text": "# License for the specific language governing permissions and limitations under\n# the License.\n\n# Update this on each new release, along with the NEWS.md file.\nVERSION := v0.3.5\n\nNAME := fscrypt\n",
                      "markdown": "`# License for the specific language governing permissions and limitations under\n# the License.\n\n# Update this on each new release, along with the NEWS.md file.\nVERSION := v0.3.5\n\nNAME := fscrypt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 13,
                  "endLine": 9,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 233,
                  "endLine": 233,
                  "endColumn": 4,
                  "snippet": {
                    "text": "PROTOC_PATH := $(shell which protoc)\n$(BIN)/protoc: $(PROTOC_PATH)\nifneq ($(wildcard $(PROTOC_PATH)),)\n\tcp $< $@\nelse\n\t$(error Could not download protoc binary or locate it on the system. Please install it)\nendif\n",
                    "rendered": {
                      "text": "PROTOC_PATH := $(shell which protoc)\n$(BIN)/protoc: $(PROTOC_PATH)\nifneq ($(wildcard $(PROTOC_PATH)),)\n\tcp $< $@\nelse\n\t$(error Could not download protoc binary or locate it on the system. Please install it)\nendif\n",
                      "markdown": "`PROTOC_PATH := $(shell which protoc)\n$(BIN)/protoc: $(PROTOC_PATH)\nifneq ($(wildcard $(PROTOC_PATH)),)\n\tcp $< $@\nelse\n\t$(error Could not download protoc binary or locate it on the system. Please install it)\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 227,
                  "endLine": 227,
                  "endColumn": 6,
                  "snippet": {
                    "text": "ifdef PROTOC_ARCH\nPROTOC_URL := https://github.com/google/protobuf/releases/download/v$(PROTOC_VERSION)/protoc-$(PROTOC_VERSION)-linux-$(PROTOC_ARCH).zip\n$(BIN)/protoc:\n\twget -q $(PROTOC_URL) -O /tmp/protoc.zip\n\tunzip -q -j /tmp/protoc.zip bin/protoc -d $(BIN)\nelse\nPROTOC_PATH := $(shell which protoc)\n",
                    "rendered": {
                      "text": "ifdef PROTOC_ARCH\nPROTOC_URL := https://github.com/google/protobuf/releases/download/v$(PROTOC_VERSION)/protoc-$(PROTOC_VERSION)-linux-$(PROTOC_ARCH).zip\n$(BIN)/protoc:\n\twget -q $(PROTOC_URL) -O /tmp/protoc.zip\n\tunzip -q -j /tmp/protoc.zip bin/protoc -d $(BIN)\nelse\nPROTOC_PATH := $(shell which protoc)\n",
                      "markdown": "`ifdef PROTOC_ARCH\nPROTOC_URL := https://github.com/google/protobuf/releases/download/v$(PROTOC_VERSION)/protoc-$(PROTOC_VERSION)-linux-$(PROTOC_ARCH).zip\n$(BIN)/protoc:\n\twget -q $(PROTOC_URL) -O /tmp/protoc.zip\n\tunzip -q -j /tmp/protoc.zip bin/protoc -d $(BIN)\nelse\nPROTOC_PATH := $(shell which protoc)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 5,
                  "endLine": 136,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tmkfs.ext4 -b 4096 -O encrypt $(IMAGE) -F\n\tmkdir -p $(MOUNT)\n\tsudo mount -o rw,loop,user $(IMAGE) $(MOUNT)\n\tsudo chmod +777 $(MOUNT)\n\ntest-teardown:\n\tsudo umount $(MOUNT)\n",
                    "rendered": {
                      "text": "\tmkfs.ext4 -b 4096 -O encrypt $(IMAGE) -F\n\tmkdir -p $(MOUNT)\n\tsudo mount -o rw,loop,user $(IMAGE) $(MOUNT)\n\tsudo chmod +777 $(MOUNT)\n\ntest-teardown:\n\tsudo umount $(MOUNT)\n",
                      "markdown": "`\tmkfs.ext4 -b 4096 -O encrypt $(IMAGE) -F\n\tmkdir -p $(MOUNT)\n\tsudo mount -o rw,loop,user $(IMAGE) $(MOUNT)\n\tsudo chmod +777 $(MOUNT)\n\ntest-teardown:\n\tsudo umount $(MOUNT)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 5,
                  "endLine": 135,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tdd if=/dev/zero of=$(IMAGE) bs=1M count=20\n\tmkfs.ext4 -b 4096 -O encrypt $(IMAGE) -F\n\tmkdir -p $(MOUNT)\n\tsudo mount -o rw,loop,user $(IMAGE) $(MOUNT)\n\tsudo chmod +777 $(MOUNT)\n\ntest-teardown:\n",
                    "rendered": {
                      "text": "\tdd if=/dev/zero of=$(IMAGE) bs=1M count=20\n\tmkfs.ext4 -b 4096 -O encrypt $(IMAGE) -F\n\tmkdir -p $(MOUNT)\n\tsudo mount -o rw,loop,user $(IMAGE) $(MOUNT)\n\tsudo chmod +777 $(MOUNT)\n\ntest-teardown:\n",
                      "markdown": "`\tdd if=/dev/zero of=$(IMAGE) bs=1M count=20\n\tmkfs.ext4 -b 4096 -O encrypt $(IMAGE) -F\n\tmkdir -p $(MOUNT)\n\tsudo mount -o rw,loop,user $(IMAGE) $(MOUNT)\n\tsudo chmod +777 $(MOUNT)\n\ntest-teardown:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 132,
                  "endLine": 132,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tgo test -p 1 ./...\n\ntest-setup:\n\tdd if=/dev/zero of=$(IMAGE) bs=1M count=20\n\tmkfs.ext4 -b 4096 -O encrypt $(IMAGE) -F\n\tmkdir -p $(MOUNT)\n\tsudo mount -o rw,loop,user $(IMAGE) $(MOUNT)\n",
                    "rendered": {
                      "text": "\tgo test -p 1 ./...\n\ntest-setup:\n\tdd if=/dev/zero of=$(IMAGE) bs=1M count=20\n\tmkfs.ext4 -b 4096 -O encrypt $(IMAGE) -F\n\tmkdir -p $(MOUNT)\n\tsudo mount -o rw,loop,user $(IMAGE) $(MOUNT)\n",
                      "markdown": "`\tgo test -p 1 ./...\n\ntest-setup:\n\tdd if=/dev/zero of=$(IMAGE) bs=1M count=20\n\tmkfs.ext4 -b 4096 -O encrypt $(IMAGE) -F\n\tmkdir -p $(MOUNT)\n\tsudo mount -o rw,loop,user $(IMAGE) $(MOUNT)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 62,
                  "endLine": 122,
                  "endColumn": 6,
                  "snippet": {
                    "text": "###### Go tests ######\n.PHONY: test test-setup test-teardown\n\n# If MOUNT exists signal that we should run integration tests.\nMOUNT := /tmp/$(NAME)-mount\nIMAGE := /tmp/$(NAME)-image\nifneq (\"$(wildcard $(MOUNT))\",\"\")\nexport TEST_FILESYSTEM_ROOT = $(MOUNT)\n",
                    "rendered": {
                      "text": "###### Go tests ######\n.PHONY: test test-setup test-teardown\n\n# If MOUNT exists signal that we should run integration tests.\nMOUNT := /tmp/$(NAME)-mount\nIMAGE := /tmp/$(NAME)-image\nifneq (\"$(wildcard $(MOUNT))\",\"\")\nexport TEST_FILESYSTEM_ROOT = $(MOUNT)\n",
                      "markdown": "`###### Go tests ######\n.PHONY: test test-setup test-teardown\n\n# If MOUNT exists signal that we should run integration tests.\nMOUNT := /tmp/$(NAME)-mount\nIMAGE := /tmp/$(NAME)-image\nifneq (\"$(wildcard $(MOUNT))\",\"\")\nexport TEST_FILESYSTEM_ROOT = $(MOUNT)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 4,
                  "endLine": 121,
                  "endColumn": 11,
                  "snippet": {
                    "text": "###### Go tests ######\n.PHONY: test test-setup test-teardown\n\n# If MOUNT exists signal that we should run integration tests.\nMOUNT := /tmp/$(NAME)-mount\nIMAGE := /tmp/$(NAME)-image\nifneq (\"$(wildcard $(MOUNT))\",\"\")\n",
                    "rendered": {
                      "text": "###### Go tests ######\n.PHONY: test test-setup test-teardown\n\n# If MOUNT exists signal that we should run integration tests.\nMOUNT := /tmp/$(NAME)-mount\nIMAGE := /tmp/$(NAME)-image\nifneq (\"$(wildcard $(MOUNT))\",\"\")\n",
                      "markdown": "`###### Go tests ######\n.PHONY: test test-setup test-teardown\n\n# If MOUNT exists signal that we should run integration tests.\nMOUNT := /tmp/$(NAME)-mount\nIMAGE := /tmp/$(NAME)-image\nifneq (\"$(wildcard $(MOUNT))\",\"\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 14,
                  "endLine": 112,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tgo vet ./...\n\tstaticcheck ./...\n\tmisspell -source=text $(FILES)\n\tshellcheck -s bash cmd/fscrypt/fscrypt_bash_completion\n\t( cd cli-tests && shellcheck -x *.sh)\n\nclean:\n",
                    "rendered": {
                      "text": "\tgo vet ./...\n\tstaticcheck ./...\n\tmisspell -source=text $(FILES)\n\tshellcheck -s bash cmd/fscrypt/fscrypt_bash_completion\n\t( cd cli-tests && shellcheck -x *.sh)\n\nclean:\n",
                      "markdown": "`\tgo vet ./...\n\tstaticcheck ./...\n\tmisspell -source=text $(FILES)\n\tshellcheck -s bash cmd/fscrypt/fscrypt_bash_completion\n\t( cd cli-tests && shellcheck -x *.sh)\n\nclean:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 16,
                  "endLine": 82,
                  "endColumn": 22,
                  "snippet": {
                    "text": "endif\n\n###### Find All Files and Directories ######\nFILES := $(shell find . -path '*/.git*' -prune -o -type f -printf \"%P\\n\")\nGO_FILES := $(filter %.go,$(FILES))\nGO_NONGEN_FILES := $(filter-out %.pb.go,$(GO_FILES))\nGO_DIRS := $(sort $(dir $(GO_FILES)))\n",
                    "rendered": {
                      "text": "endif\n\n###### Find All Files and Directories ######\nFILES := $(shell find . -path '*/.git*' -prune -o -type f -printf \"%P\\n\")\nGO_FILES := $(filter %.go,$(FILES))\nGO_NONGEN_FILES := $(filter-out %.pb.go,$(GO_FILES))\nGO_DIRS := $(sort $(dir $(GO_FILES)))\n",
                      "markdown": "`endif\n\n###### Find All Files and Directories ######\nFILES := $(shell find . -path '*/.git*' -prune -o -type f -printf \"%P\\n\")\nGO_FILES := $(filter %.go,$(FILES))\nGO_NONGEN_FILES := $(filter-out %.pb.go,$(GO_FILES))\nGO_DIRS := $(sort $(dir $(GO_FILES)))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 6,
                  "endLine": 81,
                  "endColumn": 12,
                  "snippet": {
                    "text": "override GO_FLAGS += -trimpath\nendif\n\n###### Find All Files and Directories ######\nFILES := $(shell find . -path '*/.git*' -prune -o -type f -printf \"%P\\n\")\nGO_FILES := $(filter %.go,$(FILES))\nGO_NONGEN_FILES := $(filter-out %.pb.go,$(GO_FILES))\n",
                    "rendered": {
                      "text": "override GO_FLAGS += -trimpath\nendif\n\n###### Find All Files and Directories ######\nFILES := $(shell find . -path '*/.git*' -prune -o -type f -printf \"%P\\n\")\nGO_FILES := $(filter %.go,$(FILES))\nGO_NONGEN_FILES := $(filter-out %.pb.go,$(GO_FILES))\n",
                      "markdown": "`override GO_FLAGS += -trimpath\nendif\n\n###### Find All Files and Directories ######\nFILES := $(shell find . -path '*/.git*' -prune -o -type f -printf \"%P\\n\")\nGO_FILES := $(filter %.go,$(FILES))\nGO_NONGEN_FILES := $(filter-out %.pb.go,$(GO_FILES))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 33,
                  "endLine": 77,
                  "endColumn": 39,
                  "snippet": {
                    "text": "override GO_LINK_FLAGS += $(VERSION_FLAG) -extldflags \"$(LDFLAGS)\"\noverride GO_FLAGS += --ldflags '$(GO_LINK_FLAGS)'\n# Use -trimpath if available\nifneq \"\" \"$(shell go help build | grep trimpath)\"\noverride GO_FLAGS += -trimpath\nendif\n\n",
                    "rendered": {
                      "text": "override GO_LINK_FLAGS += $(VERSION_FLAG) -extldflags \"$(LDFLAGS)\"\noverride GO_FLAGS += --ldflags '$(GO_LINK_FLAGS)'\n# Use -trimpath if available\nifneq \"\" \"$(shell go help build | grep trimpath)\"\noverride GO_FLAGS += -trimpath\nendif\n\n",
                      "markdown": "`override GO_LINK_FLAGS += $(VERSION_FLAG) -extldflags \"$(LDFLAGS)\"\noverride GO_FLAGS += --ldflags '$(GO_LINK_FLAGS)'\n# Use -trimpath if available\nifneq \"\" \"$(shell go help build | grep trimpath)\"\noverride GO_FLAGS += -trimpath\nendif\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/Makefile"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 22,
                  "endLine": 71,
                  "endColumn": 27,
                  "snippet": {
                    "text": "GO_LINK_FLAGS := -s -w\n\n# Flag to embed the version (pulled from tags) into the binary.\nTAG_VERSION := $(shell git describe --tags)\nVERSION_FLAG := -X \"main.version=$(if $(TAG_VERSION),$(TAG_VERSION),$(VERSION))\"\n\noverride GO_LINK_FLAGS += $(VERSION_FLAG) -extldflags \"$(LDFLAGS)\"\n",
                    "rendered": {
                      "text": "GO_LINK_FLAGS := -s -w\n\n# Flag to embed the version (pulled from tags) into the binary.\nTAG_VERSION := $(shell git describe --tags)\nVERSION_FLAG := -X \"main.version=$(if $(TAG_VERSION),$(TAG_VERSION),$(VERSION))\"\n\noverride GO_LINK_FLAGS += $(VERSION_FLAG) -extldflags \"$(LDFLAGS)\"\n",
                      "markdown": "`GO_LINK_FLAGS := -s -w\n\n# Flag to embed the version (pulled from tags) into the binary.\nTAG_VERSION := $(shell git describe --tags)\nVERSION_FLAG := -X \"main.version=$(if $(TAG_VERSION),$(TAG_VERSION),$(VERSION))\"\n\noverride GO_LINK_FLAGS += $(VERSION_FLAG) -extldflags \"$(LDFLAGS)\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 31,
                  "endLine": 34,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# shellcheck disable=SC2034\n#\n# Disable SC2207 (\"Prefer mapfile or read -a to split command output (or quote\n# to avoid splitting)\") because bash completion scripts conventionally use\n# COMPREPLY=($(...)) assignments.\n# shellcheck disable=SC2207\n#\n",
                    "rendered": {
                      "text": "# shellcheck disable=SC2034\n#\n# Disable SC2207 (\"Prefer mapfile or read -a to split command output (or quote\n# to avoid splitting)\") because bash completion scripts conventionally use\n# COMPREPLY=($(...)) assignments.\n# shellcheck disable=SC2207\n#\n",
                      "markdown": "`# shellcheck disable=SC2034\n#\n# Disable SC2207 (\"Prefer mapfile or read -a to split command output (or quote\n# to avoid splitting)\") because bash completion scripts conventionally use\n# COMPREPLY=($(...)) assignments.\n# shellcheck disable=SC2207\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 36,
                  "endLine": 22,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n# for that\") because the 'compgen' built-in expands the argument passed to -W,\n# so that argument *must* be single-quoted to avoid command injection.\n# shellcheck disable=SC2016\n",
                    "rendered": {
                      "text": "# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n# for that\") because the 'compgen' built-in expands the argument passed to -W,\n# so that argument *must* be single-quoted to avoid command injection.\n# shellcheck disable=SC2016\n",
                      "markdown": "`# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n# for that\") because the 'compgen' built-in expands the argument passed to -W,\n# so that argument *must* be single-quoted to avoid command injection.\n# shellcheck disable=SC2016\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# the License.\n\n#\n# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n",
                    "rendered": {
                      "text": "# the License.\n\n#\n# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n",
                      "markdown": "`# the License.\n\n#\n# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 13,
                  "endLine": 9,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 51,
                  "endLine": 111,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            -- \"${id}\"))\n    else\n        # Complete with mountpoints, with colon and without ending space\n        COMPREPLY=($(_fscrypt_compgen_mountpoints | sed s/\\$/:/))\n        compopt -o nospace\n    fi\n}\n",
                    "rendered": {
                      "text": "            -- \"${id}\"))\n    else\n        # Complete with mountpoints, with colon and without ending space\n        COMPREPLY=($(_fscrypt_compgen_mountpoints | sed s/\\$/:/))\n        compopt -o nospace\n    fi\n}\n",
                      "markdown": "`            -- \"${id}\"))\n    else\n        # Complete with mountpoints, with colon and without ending space\n        COMPREPLY=($(_fscrypt_compgen_mountpoints | sed s/\\$/:/))\n        compopt -o nospace\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 15,
                  "endLine": 93,
                  "endColumn": 20,
                  "snippet": {
                    "text": "{\n    local section=${2^^}\n    fscrypt status \"$1\" 2>/dev/null | \\\n        command awk '/^[[:xdigit:]]{16}/ && section == \"'\"$section\"'\" { print $1; next; }\n                     { section = $1 }'\n}\n\n",
                    "rendered": {
                      "text": "{\n    local section=${2^^}\n    fscrypt status \"$1\" 2>/dev/null | \\\n        command awk '/^[[:xdigit:]]{16}/ && section == \"'\"$section\"'\" { print $1; next; }\n                     { section = $1 }'\n}\n\n",
                      "markdown": "`{\n    local section=${2^^}\n    fscrypt status \"$1\" 2>/dev/null | \\\n        command awk '/^[[:xdigit:]]{16}/ && section == \"'\"$section\"'\" { print $1; next; }\n                     { section = $1 }'\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 9,
                  "endLine": 87,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n\n# Output list of possible policy or protector IDs\n# $1: the mount point on which policies are looked for.\n# $2: the section (policy or protector) to retrieve\n_fscrypt_status_section()\n{\n",
                    "rendered": {
                      "text": "\n\n# Output list of possible policy or protector IDs\n# $1: the mount point on which policies are looked for.\n# $2: the section (policy or protector) to retrieve\n_fscrypt_status_section()\n{\n",
                      "markdown": "`\n\n# Output list of possible policy or protector IDs\n# $1: the mount point on which policies are looked for.\n# $2: the section (policy or protector) to retrieve\n_fscrypt_status_section()\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 40,
                  "endLine": 69,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n_fscrypt_mountpoints_internal()\n{\n    fscrypt status 2>/dev/null | command awk -F \" \" \\\n    'substr($0, 1, 1) == \"/\" && $5 == \"Yes\" {\n        gsub(/\\\\040/, \" \", $1)\n        gsub(/\\\\011/, \"\\t\", $1)\n",
                    "rendered": {
                      "text": "\n_fscrypt_mountpoints_internal()\n{\n    fscrypt status 2>/dev/null | command awk -F \" \" \\\n    'substr($0, 1, 1) == \"/\" && $5 == \"Yes\" {\n        gsub(/\\\\040/, \" \", $1)\n        gsub(/\\\\011/, \"\\t\", $1)\n",
                      "markdown": "`\n_fscrypt_mountpoints_internal()\n{\n    fscrypt status 2>/dev/null | command awk -F \" \" \\\n    'substr($0, 1, 1) == \"/\" && $5 == \"Yes\" {\n        gsub(/\\\\040/, \" \", $1)\n        gsub(/\\\\011/, \"\\t\", $1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 18,
                  "endLine": 59,
                  "endColumn": 26,
                  "snippet": {
                    "text": "#       argument passed to compgen -W.  Without either step, command injection\n#       would be possible.  Without both steps, completions would be incorrect.\n#       The list of shell meta-characters used comes from that used by the\n#       completion script for umount, which has to solve this same problem.\n#\n_fscrypt_compgen_mountpoints()\n{\n",
                    "rendered": {
                      "text": "#       argument passed to compgen -W.  Without either step, command injection\n#       would be possible.  Without both steps, completions would be incorrect.\n#       The list of shell meta-characters used comes from that used by the\n#       completion script for umount, which has to solve this same problem.\n#\n_fscrypt_compgen_mountpoints()\n{\n",
                      "markdown": "`#       argument passed to compgen -W.  Without either step, command injection\n#       would be possible.  Without both steps, completions would be incorrect.\n#       The list of shell meta-characters used comes from that used by the\n#       completion script for umount, which has to solve this same problem.\n#\n_fscrypt_compgen_mountpoints()\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 31,
                  "endLine": 34,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# shellcheck disable=SC2034\n#\n# Disable SC2207 (\"Prefer mapfile or read -a to split command output (or quote\n# to avoid splitting)\") because bash completion scripts conventionally use\n# COMPREPLY=($(...)) assignments.\n# shellcheck disable=SC2207\n#\n",
                    "rendered": {
                      "text": "# shellcheck disable=SC2034\n#\n# Disable SC2207 (\"Prefer mapfile or read -a to split command output (or quote\n# to avoid splitting)\") because bash completion scripts conventionally use\n# COMPREPLY=($(...)) assignments.\n# shellcheck disable=SC2207\n#\n",
                      "markdown": "`# shellcheck disable=SC2034\n#\n# Disable SC2207 (\"Prefer mapfile or read -a to split command output (or quote\n# to avoid splitting)\") because bash completion scripts conventionally use\n# COMPREPLY=($(...)) assignments.\n# shellcheck disable=SC2207\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 36,
                  "endLine": 22,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n# for that\") because the 'compgen' built-in expands the argument passed to -W,\n# so that argument *must* be single-quoted to avoid command injection.\n# shellcheck disable=SC2016\n",
                    "rendered": {
                      "text": "# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n# for that\") because the 'compgen' built-in expands the argument passed to -W,\n# so that argument *must* be single-quoted to avoid command injection.\n# shellcheck disable=SC2016\n",
                      "markdown": "`# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n# for that\") because the 'compgen' built-in expands the argument passed to -W,\n# so that argument *must* be single-quoted to avoid command injection.\n# shellcheck disable=SC2016\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 63,
                  "endLine": 20,
                  "snippet": {
                    "text": "# the License.\n\n#\n# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n# for that\") because the 'compgen' built-in expands the argument passed to -W,\n",
                    "rendered": {
                      "text": "# the License.\n\n#\n# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n# for that\") because the 'compgen' built-in expands the argument passed to -W,\n",
                      "markdown": "`# the License.\n\n#\n# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n# for that\") because the 'compgen' built-in expands the argument passed to -W,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/fscrypt_bash_completion"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# the License.\n\n#\n# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n",
                    "rendered": {
                      "text": "# the License.\n\n#\n# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n",
                      "markdown": "`# the License.\n\n#\n# bash completion scripts require exercising some unusual shell script\n# features/quirks, so we have to disable some shellcheck warnings:\n#\n# Disable SC2016 (\"Expressions don't expand in single quotes, use double quotes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/setup.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 46,
                  "endLine": 123,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by everyone.\\n\",\n\t\t\tctx.Mount.BaseDir())\n\t} else {\n\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by %s only.\\n\",\n\t\t\tctx.Mount.BaseDir(), username)\n\t}\n\treturn nil\n",
                    "rendered": {
                      "text": "\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by everyone.\\n\",\n\t\t\tctx.Mount.BaseDir())\n\t} else {\n\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by %s only.\\n\",\n\t\t\tctx.Mount.BaseDir(), username)\n\t}\n\treturn nil\n",
                      "markdown": "`\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by everyone.\\n\",\n\t\t\tctx.Mount.BaseDir())\n\t} else {\n\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by %s only.\\n\",\n\t\t\tctx.Mount.BaseDir(), username)\n\t}\n\treturn nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/setup.go"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 46,
                  "endLine": 120,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t}\n\n\tif allUsers {\n\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by everyone.\\n\",\n\t\t\tctx.Mount.BaseDir())\n\t} else {\n\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by %s only.\\n\",\n",
                    "rendered": {
                      "text": "\t}\n\n\tif allUsers {\n\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by everyone.\\n\",\n\t\t\tctx.Mount.BaseDir())\n\t} else {\n\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by %s only.\\n\",\n",
                      "markdown": "`\t}\n\n\tif allUsers {\n\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by everyone.\\n\",\n\t\t\tctx.Mount.BaseDir())\n\t} else {\n\t\tfmt.Fprintf(w, \"Metadata directories created at %q, writable by %s only.\\n\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/setup.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 43,
                  "endLine": 74,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\treturn err\n\t}\n\n\tfmt.Fprintf(w, \"Created global config file at %q.\\n\", path)\n\treturn nil\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn err\n\t}\n\n\tfmt.Fprintf(w, \"Created global config file at %q.\\n\", path)\n\treturn nil\n}\n\n",
                      "markdown": "`\t\treturn err\n\t}\n\n\tfmt.Fprintf(w, \"Created global config file at %q.\\n\", path)\n\treturn nil\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/status.go"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 7,
                  "endLine": 102,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tuseCount := 0\n\n\tt := makeTableWriter(w, \"MOUNTPOINT\\tDEVICE\\tFILESYSTEM\\tENCRYPTION\\tFSCRYPT\")\n\tfor _, mount := range mounts {\n\t\t// Only print mountpoints backed by devices or using fscrypt.\n\t\tusingFscrypt := mount.CheckSetup(nil) == nil\n\t\tif !usingFscrypt && mount.Device == \"\" {\n",
                    "rendered": {
                      "text": "\tuseCount := 0\n\n\tt := makeTableWriter(w, \"MOUNTPOINT\\tDEVICE\\tFILESYSTEM\\tENCRYPTION\\tFSCRYPT\")\n\tfor _, mount := range mounts {\n\t\t// Only print mountpoints backed by devices or using fscrypt.\n\t\tusingFscrypt := mount.CheckSetup(nil) == nil\n\t\tif !usingFscrypt && mount.Device == \"\" {\n",
                      "markdown": "`\tuseCount := 0\n\n\tt := makeTableWriter(w, \"MOUNTPOINT\\tDEVICE\\tFILESYSTEM\\tENCRYPTION\\tFSCRYPT\")\n\tfor _, mount := range mounts {\n\t\t// Only print mountpoints backed by devices or using fscrypt.\n\t\tusingFscrypt := mount.CheckSetup(nil) == nil\n\t\tif !usingFscrypt && mount.Device == \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.out"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 45,
                  "endLine": 85,
                  "snippet": {
                    "text": "desc1  Yes       desc2\n\n# Try to unlock with corrupt policy metadata\n[ERROR] fscrypt unlock: fscrypt metadata file at\n                        \"MNT/.fscrypt/policies/desc1\"\n                        is corrupt: proto: cannot parse invalid wire-format data\n\n# Try to unlock with missing policy metadata\n",
                    "rendered": {
                      "text": "desc1  Yes       desc2\n\n# Try to unlock with corrupt policy metadata\n[ERROR] fscrypt unlock: fscrypt metadata file at\n                        \"MNT/.fscrypt/policies/desc1\"\n                        is corrupt: proto: cannot parse invalid wire-format data\n\n# Try to unlock with missing policy metadata\n",
                      "markdown": "`desc1  Yes       desc2\n\n# Try to unlock with corrupt policy metadata\n[ERROR] fscrypt unlock: fscrypt metadata file at\n                        \"MNT/.fscrypt/policies/desc1\"\n                        is corrupt: proto: cannot parse invalid wire-format data\n\n# Try to unlock with missing policy metadata\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.out"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 15,
                  "endLine": 99,
                  "endColumn": 22,
                  "snippet": {
                    "text": "# Try to unlock with missing protector metadata\n[ERROR] fscrypt unlock: could not load any protectors\n\nYou may need to mount a linked filesystem. Run with --verbose for more\ninformation.\n\n# Try to unlock with wrong policy metadata\n",
                    "rendered": {
                      "text": "# Try to unlock with missing protector metadata\n[ERROR] fscrypt unlock: could not load any protectors\n\nYou may need to mount a linked filesystem. Run with --verbose for more\ninformation.\n\n# Try to unlock with wrong policy metadata\n",
                      "markdown": "`# Try to unlock with missing protector metadata\n[ERROR] fscrypt unlock: could not load any protectors\n\nYou may need to mount a linked filesystem. Run with --verbose for more\ninformation.\n\n# Try to unlock with wrong policy metadata\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_unlock.out"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 17,
                  "endLine": 37,
                  "snippet": {
                    "text": "# => Get policy status via mount:\ndesc1  Yes       desc2\n\n# Lock by cycling mount\n\n# => Check dir status\n\"MNT/dir\" is encrypted with fscrypt.\n\n",
                    "rendered": {
                      "text": "# => Get policy status via mount:\ndesc1  Yes       desc2\n\n# Lock by cycling mount\n\n# => Check dir status\n\"MNT/dir\" is encrypted with fscrypt.\n\n",
                      "markdown": "`# => Get policy status via mount:\ndesc1  Yes       desc2\n\n# Lock by cycling mount\n\n# => Check dir status\n\"MNT/dir\" is encrypted with fscrypt.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_metadata.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 16,
                  "endLine": 22,
                  "endColumn": 21,
                  "snippet": {
                    "text": "echo foo | fscrypt metadata create policy \"$MNT\" --quiet \\\n\t--protector=\"$prot_foo\"\npolicy=$MNT:$(fscrypt status \"$MNT\" | grep -A10 \"^POLICY\" | \\\n\t      tail -1 | awk '{print $1}')\necho -e \"bar\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n\t--policy=\"$policy\" --protector=\"$prot_bar\"\necho -e \"baz\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n",
                    "rendered": {
                      "text": "echo foo | fscrypt metadata create policy \"$MNT\" --quiet \\\n\t--protector=\"$prot_foo\"\npolicy=$MNT:$(fscrypt status \"$MNT\" | grep -A10 \"^POLICY\" | \\\n\t      tail -1 | awk '{print $1}')\necho -e \"bar\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n\t--policy=\"$policy\" --protector=\"$prot_bar\"\necho -e \"baz\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n",
                      "markdown": "`echo foo | fscrypt metadata create policy \"$MNT\" --quiet \\\n\t--protector=\"$prot_foo\"\npolicy=$MNT:$(fscrypt status \"$MNT\" | grep -A10 \"^POLICY\" | \\\n\t      tail -1 | awk '{print $1}')\necho -e \"bar\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n\t--policy=\"$policy\" --protector=\"$prot_bar\"\necho -e \"baz\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_metadata.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 12,
                  "snippet": {
                    "text": "echo foo | fscrypt metadata create policy \"$MNT\" --quiet \\\n\t--protector=\"$prot_foo\"\npolicy=$MNT:$(fscrypt status \"$MNT\" | grep -A10 \"^POLICY\" | \\\n\t      tail -1 | awk '{print $1}')\necho -e \"bar\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n\t--policy=\"$policy\" --protector=\"$prot_bar\"\necho -e \"baz\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n",
                    "rendered": {
                      "text": "echo foo | fscrypt metadata create policy \"$MNT\" --quiet \\\n\t--protector=\"$prot_foo\"\npolicy=$MNT:$(fscrypt status \"$MNT\" | grep -A10 \"^POLICY\" | \\\n\t      tail -1 | awk '{print $1}')\necho -e \"bar\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n\t--policy=\"$policy\" --protector=\"$prot_bar\"\necho -e \"baz\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n",
                      "markdown": "`echo foo | fscrypt metadata create policy \"$MNT\" --quiet \\\n\t--protector=\"$prot_foo\"\npolicy=$MNT:$(fscrypt status \"$MNT\" | grep -A10 \"^POLICY\" | \\\n\t      tail -1 | awk '{print $1}')\necho -e \"bar\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n\t--policy=\"$policy\" --protector=\"$prot_bar\"\necho -e \"baz\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_metadata.sh"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 37,
                  "endLine": 21,
                  "endColumn": 43,
                  "snippet": {
                    "text": "prot_baz=$MNT:$desc_baz\necho foo | fscrypt metadata create policy \"$MNT\" --quiet \\\n\t--protector=\"$prot_foo\"\npolicy=$MNT:$(fscrypt status \"$MNT\" | grep -A10 \"^POLICY\" | \\\n\t      tail -1 | awk '{print $1}')\necho -e \"bar\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n\t--policy=\"$policy\" --protector=\"$prot_bar\"\n",
                    "rendered": {
                      "text": "prot_baz=$MNT:$desc_baz\necho foo | fscrypt metadata create policy \"$MNT\" --quiet \\\n\t--protector=\"$prot_foo\"\npolicy=$MNT:$(fscrypt status \"$MNT\" | grep -A10 \"^POLICY\" | \\\n\t      tail -1 | awk '{print $1}')\necho -e \"bar\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n\t--policy=\"$policy\" --protector=\"$prot_bar\"\n",
                      "markdown": "`prot_baz=$MNT:$desc_baz\necho foo | fscrypt metadata create policy \"$MNT\" --quiet \\\n\t--protector=\"$prot_foo\"\npolicy=$MNT:$(fscrypt status \"$MNT\" | grep -A10 \"^POLICY\" | \\\n\t      tail -1 | awk '{print $1}')\necho -e \"bar\\nfoo\" | fscrypt metadata add-protector-to-policy --quiet \\\n\t--policy=\"$policy\" --protector=\"$prot_bar\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_encrypt.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 44,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "_expect_failure \"echo hunter2 | fscrypt encrypt --quiet '$dir/'\"\nshow_status false\n\nbegin \"Encrypt a directory as non-root user\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\nshow_status true\n_user_do \"fscrypt status '$MNT'\"\n",
                    "rendered": {
                      "text": "_expect_failure \"echo hunter2 | fscrypt encrypt --quiet '$dir/'\"\nshow_status false\n\nbegin \"Encrypt a directory as non-root user\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\nshow_status true\n_user_do \"fscrypt status '$MNT'\"\n",
                      "markdown": "`_expect_failure \"echo hunter2 | fscrypt encrypt --quiet '$dir/'\"\nshow_status false\n\nbegin \"Encrypt a directory as non-root user\"\nchown \"$TEST_USER\" \"$dir\"\n_user_do \"echo hunter2 | fscrypt encrypt --quiet --name=prot '$dir'\"\nshow_status true\n_user_do \"fscrypt status '$MNT'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 56,
                  "endLine": 259,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n\t// The metadata files shouldn't be readable or writable by other users.\n\t// Having them be world-readable wouldn't necessarily be a huge issue,\n\t// but given that some of these files contain (strong) password hashes,\n\t// we error on the side of caution -- similar to /etc/shadow.\n\t// Note: existing files on-disk might have mode 0644, as that was the\n\t// mode used by fscrypt v0.3.2 and earlier.\n",
                    "rendered": {
                      "text": "\n\t// The metadata files shouldn't be readable or writable by other users.\n\t// Having them be world-readable wouldn't necessarily be a huge issue,\n\t// but given that some of these files contain (strong) password hashes,\n\t// we error on the side of caution -- similar to /etc/shadow.\n\t// Note: existing files on-disk might have mode 0644, as that was the\n\t// mode used by fscrypt v0.3.2 and earlier.\n",
                      "markdown": "`\n\t// The metadata files shouldn't be readable or writable by other users.\n\t// Having them be world-readable wouldn't necessarily be a huge issue,\n\t// but given that some of these files contain (strong) password hashes,\n\t// we error on the side of caution -- similar to /etc/shadow.\n\t// Note: existing files on-disk might have mode 0644, as that was the\n\t// mode used by fscrypt v0.3.2 and earlier.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 810,
                  "startColumn": 47,
                  "endLine": 810,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\treturn err\n\t}\n\n\tlog.Printf(\"successfully removed metadata file at %q\", path)\n\treturn nil\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn err\n\t}\n\n\tlog.Printf(\"successfully removed metadata file at %q\", path)\n\treturn nil\n}\n\n",
                      "markdown": "`\t\treturn err\n\t}\n\n\tlog.Printf(\"successfully removed metadata file at %q\", path)\n\treturn nil\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 806,
                  "startColumn": 44,
                  "endLine": 806,
                  "endColumn": 48,
                  "snippet": {
                    "text": "// path. Works with regular or linked metadata.\nfunc (m *Mount) removeMetadata(path string) error {\n\tif err := os.Remove(path); err != nil {\n\t\tlog.Printf(\"could not remove metadata file at %q: %v\", path, err)\n\t\treturn err\n\t}\n\n",
                    "rendered": {
                      "text": "// path. Works with regular or linked metadata.\nfunc (m *Mount) removeMetadata(path string) error {\n\tif err := os.Remove(path); err != nil {\n\t\tlog.Printf(\"could not remove metadata file at %q: %v\", path, err)\n\t\treturn err\n\t}\n\n",
                      "markdown": "`// path. Works with regular or linked metadata.\nfunc (m *Mount) removeMetadata(path string) error {\n\tif err := os.Remove(path); err != nil {\n\t\tlog.Printf(\"could not remove metadata file at %q: %v\", path, err)\n\t\treturn err\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 42,
                  "endLine": 72,
                  "endColumn": 46,
                  "snippet": {
                    "text": "}\n\nfunc (err *ErrCorruptMetadata) Error() string {\n\treturn fmt.Sprintf(\"fscrypt metadata file at %q is corrupt: %s\",\n\t\terr.Path, err.UnderlyingError)\n}\n\n",
                    "rendered": {
                      "text": "}\n\nfunc (err *ErrCorruptMetadata) Error() string {\n\treturn fmt.Sprintf(\"fscrypt metadata file at %q is corrupt: %s\",\n\t\terr.Path, err.UnderlyingError)\n}\n\n",
                      "markdown": "`}\n\nfunc (err *ErrCorruptMetadata) Error() string {\n\treturn fmt.Sprintf(\"fscrypt metadata file at %q is corrupt: %s\",\n\t\terr.Path, err.UnderlyingError)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 357,
                  "endLine": 357,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// ErrEncryptionNotSupported indicates that encryption is not supported on the\n// given filesystem.\ntype ErrEncryptionNotSupported struct {\n\tMount *Mount\n}\n\nfunc (err *ErrEncryptionNotSupported) Error() string {\n",
                    "rendered": {
                      "text": "// ErrEncryptionNotSupported indicates that encryption is not supported on the\n// given filesystem.\ntype ErrEncryptionNotSupported struct {\n\tMount *Mount\n}\n\nfunc (err *ErrEncryptionNotSupported) Error() string {\n",
                      "markdown": "`// ErrEncryptionNotSupported indicates that encryption is not supported on the\n// given filesystem.\ntype ErrEncryptionNotSupported struct {\n\tMount *Mount\n}\n\nfunc (err *ErrEncryptionNotSupported) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 346,
                  "endLine": 346,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// ErrEncryptionNotEnabled indicates that encryption is not enabled on the given\n// filesystem.\ntype ErrEncryptionNotEnabled struct {\n\tMount *Mount\n}\n\nfunc (err *ErrEncryptionNotEnabled) Error() string {\n",
                    "rendered": {
                      "text": "// ErrEncryptionNotEnabled indicates that encryption is not enabled on the given\n// filesystem.\ntype ErrEncryptionNotEnabled struct {\n\tMount *Mount\n}\n\nfunc (err *ErrEncryptionNotEnabled) Error() string {\n",
                      "markdown": "`// ErrEncryptionNotEnabled indicates that encryption is not enabled on the given\n// filesystem.\ntype ErrEncryptionNotEnabled struct {\n\tMount *Mount\n}\n\nfunc (err *ErrEncryptionNotEnabled) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 4,
                  "endLine": 230,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// We also allow \".fscrypt\" to be a symlink which was previously created. This\n// allows login protectors to be created when the root filesystem is read-only,\n// provided that \"/.fscrypt\" is a symlink pointing to a writable location.\ntype Mount struct {\n\tPath           string\n\tFilesystemType string\n\tDevice         string\n",
                    "rendered": {
                      "text": "// We also allow \".fscrypt\" to be a symlink which was previously created. This\n// allows login protectors to be created when the root filesystem is read-only,\n// provided that \"/.fscrypt\" is a symlink pointing to a writable location.\ntype Mount struct {\n\tPath           string\n\tFilesystemType string\n\tDevice         string\n",
                      "markdown": "`// We also allow \".fscrypt\" to be a symlink which was previously created. This\n// allows login protectors to be created when the root filesystem is read-only,\n// provided that \"/.fscrypt\" is a symlink pointing to a writable location.\ntype Mount struct {\n\tPath           string\n\tFilesystemType string\n\tDevice         string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 184,
                  "endLine": 184,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// ErrProtectorNotFound indicates that the protector metadata was not found.\ntype ErrProtectorNotFound struct {\n\tDescriptor string\n\tMount      *Mount\n}\n\nfunc (err *ErrProtectorNotFound) Error() string {\n",
                    "rendered": {
                      "text": "// ErrProtectorNotFound indicates that the protector metadata was not found.\ntype ErrProtectorNotFound struct {\n\tDescriptor string\n\tMount      *Mount\n}\n\nfunc (err *ErrProtectorNotFound) Error() string {\n",
                      "markdown": "`// ErrProtectorNotFound indicates that the protector metadata was not found.\ntype ErrProtectorNotFound struct {\n\tDescriptor string\n\tMount      *Mount\n}\n\nfunc (err *ErrProtectorNotFound) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// ErrPolicyNotFound indicates that the policy metadata was not found.\ntype ErrPolicyNotFound struct {\n\tDescriptor string\n\tMount      *Mount\n}\n\nfunc (err *ErrPolicyNotFound) Error() string {\n",
                    "rendered": {
                      "text": "// ErrPolicyNotFound indicates that the policy metadata was not found.\ntype ErrPolicyNotFound struct {\n\tDescriptor string\n\tMount      *Mount\n}\n\nfunc (err *ErrPolicyNotFound) Error() string {\n",
                      "markdown": "`// ErrPolicyNotFound indicates that the policy metadata was not found.\ntype ErrPolicyNotFound struct {\n\tDescriptor string\n\tMount      *Mount\n}\n\nfunc (err *ErrPolicyNotFound) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 162,
                  "endLine": 162,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// ErrSetupNotSupported indicates that the given filesystem type is not\n// supported for fscrypt setup.\ntype ErrSetupNotSupported struct {\n\tMount *Mount\n}\n\nfunc (err *ErrSetupNotSupported) Error() string {\n",
                    "rendered": {
                      "text": "// ErrSetupNotSupported indicates that the given filesystem type is not\n// supported for fscrypt setup.\ntype ErrSetupNotSupported struct {\n\tMount *Mount\n}\n\nfunc (err *ErrSetupNotSupported) Error() string {\n",
                      "markdown": "`// ErrSetupNotSupported indicates that the given filesystem type is not\n// supported for fscrypt setup.\ntype ErrSetupNotSupported struct {\n\tMount *Mount\n}\n\nfunc (err *ErrSetupNotSupported) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 152,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// directories is owned by a user that isn't trusted in the current context, so\n// we don't consider fscrypt to be properly setup on the filesystem.\ntype ErrSetupByAnotherUser struct {\n\tMount *Mount\n}\n\nfunc (err *ErrSetupByAnotherUser) Error() string {\n",
                    "rendered": {
                      "text": "// directories is owned by a user that isn't trusted in the current context, so\n// we don't consider fscrypt to be properly setup on the filesystem.\ntype ErrSetupByAnotherUser struct {\n\tMount *Mount\n}\n\nfunc (err *ErrSetupByAnotherUser) Error() string {\n",
                      "markdown": "`// directories is owned by a user that isn't trusted in the current context, so\n// we don't consider fscrypt to be properly setup on the filesystem.\ntype ErrSetupByAnotherUser struct {\n\tMount *Mount\n}\n\nfunc (err *ErrSetupByAnotherUser) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 141,
                  "endLine": 141,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n// ErrNotSetup indicates that a filesystem is not setup for fscrypt.\ntype ErrNotSetup struct {\n\tMount *Mount\n}\n\nfunc (err *ErrNotSetup) Error() string {\n",
                    "rendered": {
                      "text": "\n// ErrNotSetup indicates that a filesystem is not setup for fscrypt.\ntype ErrNotSetup struct {\n\tMount *Mount\n}\n\nfunc (err *ErrNotSetup) Error() string {\n",
                      "markdown": "`\n// ErrNotSetup indicates that a filesystem is not setup for fscrypt.\ntype ErrNotSetup struct {\n\tMount *Mount\n}\n\nfunc (err *ErrNotSetup) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// ErrNoCreatePermission indicates that the current user lacks permission to\n// create fscrypt metadata on the given filesystem.\ntype ErrNoCreatePermission struct {\n\tMount *Mount\n}\n\nfunc (err *ErrNoCreatePermission) Error() string {\n",
                    "rendered": {
                      "text": "// ErrNoCreatePermission indicates that the current user lacks permission to\n// create fscrypt metadata on the given filesystem.\ntype ErrNoCreatePermission struct {\n\tMount *Mount\n}\n\nfunc (err *ErrNoCreatePermission) Error() string {\n",
                      "markdown": "`// ErrNoCreatePermission indicates that the current user lacks permission to\n// create fscrypt metadata on the given filesystem.\ntype ErrNoCreatePermission struct {\n\tMount *Mount\n}\n\nfunc (err *ErrNoCreatePermission) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// owned by a user that isn't trusted in the current context, so we don't\n// consider fscrypt to be properly setup on the filesystem.\ntype ErrMountOwnedByAnotherUser struct {\n\tMount *Mount\n}\n\nfunc (err *ErrMountOwnedByAnotherUser) Error() string {\n",
                    "rendered": {
                      "text": "// owned by a user that isn't trusted in the current context, so we don't\n// consider fscrypt to be properly setup on the filesystem.\ntype ErrMountOwnedByAnotherUser struct {\n\tMount *Mount\n}\n\nfunc (err *ErrMountOwnedByAnotherUser) Error() string {\n",
                      "markdown": "`// owned by a user that isn't trusted in the current context, so we don't\n// consider fscrypt to be properly setup on the filesystem.\ntype ErrMountOwnedByAnotherUser struct {\n\tMount *Mount\n}\n\nfunc (err *ErrMountOwnedByAnotherUser) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/filesystem.go"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n// ErrAlreadySetup indicates that a filesystem is already setup for fscrypt.\ntype ErrAlreadySetup struct {\n\tMount *Mount\n}\n\nfunc (err *ErrAlreadySetup) Error() string {\n",
                    "rendered": {
                      "text": "\n// ErrAlreadySetup indicates that a filesystem is already setup for fscrypt.\ntype ErrAlreadySetup struct {\n\tMount *Mount\n}\n\nfunc (err *ErrAlreadySetup) Error() string {\n",
                      "markdown": "`\n// ErrAlreadySetup indicates that a filesystem is already setup for fscrypt.\ntype ErrAlreadySetup struct {\n\tMount *Mount\n}\n\nfunc (err *ErrAlreadySetup) Error() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 3,
                  "endLine": 262,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  runtime dependency.  Now the dependencies to build `fscrypt` are `go`, `make`,\n  `gcc`, and some system headers.  That's it!\n\n* `PasswordHash` will only use at most 128MiB.  This allows users to encrypt\n  files on removable media and rest assured that it will still work when plugged\n  into another system with less memory.\n\n",
                    "rendered": {
                      "text": "  runtime dependency.  Now the dependencies to build `fscrypt` are `go`, `make`,\n  `gcc`, and some system headers.  That's it!\n\n* `PasswordHash` will only use at most 128MiB.  This allows users to encrypt\n  files on removable media and rest assured that it will still work when plugged\n  into another system with less memory.\n\n",
                      "markdown": "`  runtime dependency.  Now the dependencies to build `fscrypt` are `go`, `make`,\n  `gcc`, and some system headers.  That's it!\n\n* `PasswordHash` will only use at most 128MiB.  This allows users to encrypt\n  files on removable media and rest assured that it will still work when plugged\n  into another system with less memory.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 3,
                  "endLine": 256,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nThis small release makes `fscrypt` much easier to build and use.\n\n* `PasswordHash` has completely moved to\n  [`x/crypto/argon2`](https://godoc.org/golang.org/x/crypto/argon2), eliminating\n  the [`libargon2`](https://github.com/P-H-C/phc-winner-argon2) build and\n  runtime dependency.  Now the dependencies to build `fscrypt` are `go`, `make`,\n",
                    "rendered": {
                      "text": "\nThis small release makes `fscrypt` much easier to build and use.\n\n* `PasswordHash` has completely moved to\n  [`x/crypto/argon2`](https://godoc.org/golang.org/x/crypto/argon2), eliminating\n  the [`libargon2`](https://github.com/P-H-C/phc-winner-argon2) build and\n  runtime dependency.  Now the dependencies to build `fscrypt` are `go`, `make`,\n",
                      "markdown": "`\nThis small release makes `fscrypt` much easier to build and use.\n\n* `PasswordHash` has completely moved to\n  [`x/crypto/argon2`](https://godoc.org/golang.org/x/crypto/argon2), eliminating\n  the [`libargon2`](https://github.com/P-H-C/phc-winner-argon2) build and\n  runtime dependency.  Now the dependencies to build `fscrypt` are `go`, `make`,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 54,
                  "endLine": 213,
                  "endColumn": 62,
                  "snippet": {
                    "text": "Other new features in this release:\n* The `.fscrypt` directory can now be a symlink.\n* When an encrypted directory and a protector reside on different\n  filesystems, we now automatically create a recovery password.\n\nBug fixes in this release:\n* Bind mounts are now handled correctly.\n",
                    "rendered": {
                      "text": "Other new features in this release:\n* The `.fscrypt` directory can now be a symlink.\n* When an encrypted directory and a protector reside on different\n  filesystems, we now automatically create a recovery password.\n\nBug fixes in this release:\n* Bind mounts are now handled correctly.\n",
                      "markdown": "`Other new features in this release:\n* The `.fscrypt` directory can now be a symlink.\n* When an encrypted directory and a protector reside on different\n  filesystems, we now automatically create a recovery password.\n\nBug fixes in this release:\n* Bind mounts are now handled correctly.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 66,
                  "endLine": 98,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n## Version 0.3.1\n\n* Slightly decreased the amount of memory that `fscrypt` uses for password\n  hashing, to avoid out-of-memory situations.\n\n* Made recovery passphrase generation happen without a prompt by default, and\n",
                    "rendered": {
                      "text": "\n## Version 0.3.1\n\n* Slightly decreased the amount of memory that `fscrypt` uses for password\n  hashing, to avoid out-of-memory situations.\n\n* Made recovery passphrase generation happen without a prompt by default, and\n",
                      "markdown": "`\n## Version 0.3.1\n\n* Slightly decreased the amount of memory that `fscrypt` uses for password\n  hashing, to avoid out-of-memory situations.\n\n* Made recovery passphrase generation happen without a prompt by default, and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 25,
                  "endLine": 85,
                  "endColumn": 33,
                  "snippet": {
                    "text": "* Made `fscrypt` work when the root directory is on a btrfs filesystem.\n\n* Made `pam_fscrypt` start warning when a user's login protector is getting\n  de-synced due to their password being changed by root.\n\n* Support reading the key for raw key protectors from standard input.\n\n",
                    "rendered": {
                      "text": "* Made `fscrypt` work when the root directory is on a btrfs filesystem.\n\n* Made `pam_fscrypt` start warning when a user's login protector is getting\n  de-synced due to their password being changed by root.\n\n* Support reading the key for raw key protectors from standard input.\n\n",
                      "markdown": "`* Made `fscrypt` work when the root directory is on a btrfs filesystem.\n\n* Made `pam_fscrypt` start warning when a user's login protector is getting\n  de-synced due to their password being changed by root.\n\n* Support reading the key for raw key protectors from standard input.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 30,
                  "endLine": 262,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  runtime dependency.  Now the dependencies to build `fscrypt` are `go`, `make`,\n  `gcc`, and some system headers.  That's it!\n\n* `PasswordHash` will only use at most 128MiB.  This allows users to encrypt\n  files on removable media and rest assured that it will still work when plugged\n  into another system with less memory.\n\n",
                    "rendered": {
                      "text": "  runtime dependency.  Now the dependencies to build `fscrypt` are `go`, `make`,\n  `gcc`, and some system headers.  That's it!\n\n* `PasswordHash` will only use at most 128MiB.  This allows users to encrypt\n  files on removable media and rest assured that it will still work when plugged\n  into another system with less memory.\n\n",
                      "markdown": "`  runtime dependency.  Now the dependencies to build `fscrypt` are `go`, `make`,\n  `gcc`, and some system headers.  That's it!\n\n* `PasswordHash` will only use at most 128MiB.  This allows users to encrypt\n  files on removable media and rest assured that it will still work when plugged\n  into another system with less memory.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 47,
                  "endLine": 249,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\nThis release contains multiple bug fixes, including a fix for\n[CVE-2018-6558](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-6558),\nwhich allowed for privilege escalation.  Please update `fscrypt` as soon as\npossible.  Debian and Ubuntu updates should be available soon.\n\n## Version 0.2.3\n",
                    "rendered": {
                      "text": "\nThis release contains multiple bug fixes, including a fix for\n[CVE-2018-6558](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-6558),\nwhich allowed for privilege escalation.  Please update `fscrypt` as soon as\npossible.  Debian and Ubuntu updates should be available soon.\n\n## Version 0.2.3\n",
                      "markdown": "`\nThis release contains multiple bug fixes, including a fix for\n[CVE-2018-6558](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-6558),\nwhich allowed for privilege escalation.  Please update `fscrypt` as soon as\npossible.  Debian and Ubuntu updates should be available soon.\n\n## Version 0.2.3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 9,
                  "endLine": 123,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      configured using Debian's / Ubuntu's PAM configuration framework.\n\n* Non-breaking changes:\n    * Add Bash completions for `fscrypt`.\n    * Fix an error message.\n    * Correctly detect \"incompletely locked\" v1-encrypted directories on kernel\n      versions 5.10 and later.\n",
                    "rendered": {
                      "text": "      configured using Debian's / Ubuntu's PAM configuration framework.\n\n* Non-breaking changes:\n    * Add Bash completions for `fscrypt`.\n    * Fix an error message.\n    * Correctly detect \"incompletely locked\" v1-encrypted directories on kernel\n      versions 5.10 and later.\n",
                      "markdown": "`      configured using Debian's / Ubuntu's PAM configuration framework.\n\n* Non-breaking changes:\n    * Add Bash completions for `fscrypt`.\n    * Fix an error message.\n    * Correctly detect \"incompletely locked\" v1-encrypted directories on kernel\n      versions 5.10 and later.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 33,
                  "endLine": 80,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  more reliable when a filesystem UUID changes.\n\n* Made login protectors be owned by the user when they are created as root, so\n  that the user has permission to update them later.\n\n* Made `fscrypt` work when the root directory is on a btrfs filesystem.\n\n",
                    "rendered": {
                      "text": "  more reliable when a filesystem UUID changes.\n\n* Made login protectors be owned by the user when they are created as root, so\n  that the user has permission to update them later.\n\n* Made `fscrypt` work when the root directory is on a btrfs filesystem.\n\n",
                      "markdown": "`  more reliable when a filesystem UUID changes.\n\n* Made login protectors be owned by the user when they are created as root, so\n  that the user has permission to update them later.\n\n* Made `fscrypt` work when the root directory is on a btrfs filesystem.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 62,
                  "endLine": 39,
                  "endColumn": 68,
                  "snippet": {
                    "text": "This release contains fixes for three security vulnerabilities and related\nsecurity hardening:\n\n* Correctly handle malicious mountpoint paths in the `fscrypt` bash completion\n  script (CVE-2022-25328, command injection).\n\n* Validate the size, type, and owner (for login protectors) of policy and\n",
                    "rendered": {
                      "text": "This release contains fixes for three security vulnerabilities and related\nsecurity hardening:\n\n* Correctly handle malicious mountpoint paths in the `fscrypt` bash completion\n  script (CVE-2022-25328, command injection).\n\n* Validate the size, type, and owner (for login protectors) of policy and\n",
                      "markdown": "`This release contains fixes for three security vulnerabilities and related\nsecurity hardening:\n\n* Correctly handle malicious mountpoint paths in the `fscrypt` bash completion\n  script (CVE-2022-25328, command injection).\n\n* Validate the size, type, and owner (for login protectors) of policy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 9,
                  "endLine": 123,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      configured using Debian's / Ubuntu's PAM configuration framework.\n\n* Non-breaking changes:\n    * Add Bash completions for `fscrypt`.\n    * Fix an error message.\n    * Correctly detect \"incompletely locked\" v1-encrypted directories on kernel\n      versions 5.10 and later.\n",
                    "rendered": {
                      "text": "      configured using Debian's / Ubuntu's PAM configuration framework.\n\n* Non-breaking changes:\n    * Add Bash completions for `fscrypt`.\n    * Fix an error message.\n    * Correctly detect \"incompletely locked\" v1-encrypted directories on kernel\n      versions 5.10 and later.\n",
                      "markdown": "`      configured using Debian's / Ubuntu's PAM configuration framework.\n\n* Non-breaking changes:\n    * Add Bash completions for `fscrypt`.\n    * Fix an error message.\n    * Correctly detect \"incompletely locked\" v1-encrypted directories on kernel\n      versions 5.10 and later.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 71,
                  "endLine": 111,
                  "snippet": {
                    "text": "\n## Version 0.3.0\n\nWhile this release includes some potentially breaking changes, we don't expect\nthis to break users in practice.\n\n* Potentially breaking changes to `pam_fscrypt` module:\n    * Remove the `drop_caches` and `lock_policies` options.  The `lock_policies`\n",
                    "rendered": {
                      "text": "\n## Version 0.3.0\n\nWhile this release includes some potentially breaking changes, we don't expect\nthis to break users in practice.\n\n* Potentially breaking changes to `pam_fscrypt` module:\n    * Remove the `drop_caches` and `lock_policies` options.  The `lock_policies`\n",
                      "markdown": "`\n## Version 0.3.0\n\nWhile this release includes some potentially breaking changes, we don't expect\nthis to break users in practice.\n\n* Potentially breaking changes to `pam_fscrypt` module:\n    * Remove the `drop_caches` and `lock_policies` options.  The `lock_policies`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 14,
                  "endLine": 72,
                  "endColumn": 20,
                  "snippet": {
                    "text": "Although upgrading to v0.3.3 shouldn't break existing users, there may be some\nedge cases where users were relying on functionality in ways we didn't\nanticipate.  If you encounter any issues, please report them as soon as possible\nso that we can find a solution for you.\n\n## Version 0.3.2\n\n",
                    "rendered": {
                      "text": "Although upgrading to v0.3.3 shouldn't break existing users, there may be some\nedge cases where users were relying on functionality in ways we didn't\nanticipate.  If you encounter any issues, please report them as soon as possible\nso that we can find a solution for you.\n\n## Version 0.3.2\n\n",
                      "markdown": "`Although upgrading to v0.3.3 shouldn't break existing users, there may be some\nedge cases where users were relying on functionality in ways we didn't\nanticipate.  If you encounter any issues, please report them as soon as possible\nso that we can find a solution for you.\n\n## Version 0.3.2\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 9,
                  "snippet": {
                    "text": "security hardening:\n\n* Correctly handle malicious mountpoint paths in the `fscrypt` bash completion\n  script (CVE-2022-25328, command injection).\n\n* Validate the size, type, and owner (for login protectors) of policy and\n  protector files (CVE-2022-25327, denial of service).\n",
                    "rendered": {
                      "text": "security hardening:\n\n* Correctly handle malicious mountpoint paths in the `fscrypt` bash completion\n  script (CVE-2022-25328, command injection).\n\n* Validate the size, type, and owner (for login protectors) of policy and\n  protector files (CVE-2022-25327, denial of service).\n",
                      "markdown": "`security hardening:\n\n* Correctly handle malicious mountpoint paths in the `fscrypt` bash completion\n  script (CVE-2022-25328, command injection).\n\n* Validate the size, type, and owner (for login protectors) of policy and\n  protector files (CVE-2022-25327, denial of service).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/NEWS.md"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 62,
                  "endLine": 39,
                  "endColumn": 68,
                  "snippet": {
                    "text": "This release contains fixes for three security vulnerabilities and related\nsecurity hardening:\n\n* Correctly handle malicious mountpoint paths in the `fscrypt` bash completion\n  script (CVE-2022-25328, command injection).\n\n* Validate the size, type, and owner (for login protectors) of policy and\n",
                    "rendered": {
                      "text": "This release contains fixes for three security vulnerabilities and related\nsecurity hardening:\n\n* Correctly handle malicious mountpoint paths in the `fscrypt` bash completion\n  script (CVE-2022-25328, command injection).\n\n* Validate the size, type, and owner (for login protectors) of policy and\n",
                      "markdown": "`This release contains fixes for three security vulnerabilities and related\nsecurity hardening:\n\n* Correctly handle malicious mountpoint paths in the `fscrypt` bash completion\n  script (CVE-2022-25328, command injection).\n\n* Validate the size, type, and owner (for login protectors) of policy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 543,
                  "startColumn": 4,
                  "endLine": 543,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nfunc isPossibleNoKeyName(filename string) bool {\n\t// No-key names are at least 22 bytes long, since they are\n\t// base64-encoded and ciphertext filenames are at least 16 bytes.\n\tif len(filename) < 22 {\n\t\treturn false\n\t}\n",
                    "rendered": {
                      "text": "\nfunc isPossibleNoKeyName(filename string) bool {\n\t// No-key names are at least 22 bytes long, since they are\n\t// base64-encoded and ciphertext filenames are at least 16 bytes.\n\tif len(filename) < 22 {\n\t\treturn false\n\t}\n",
                      "markdown": "`\nfunc isPossibleNoKeyName(filename string) bool {\n\t// No-key names are at least 22 bytes long, since they are\n\t// base64-encoded and ciphertext filenames are at least 16 bytes.\n\tif len(filename) < 22 {\n\t\treturn false\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 947,
                  "startColumn": 18,
                  "endLine": 947,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t}\n\tcase 1:\n\t\t// Case (3) - mountpoint destroy\n\t\tpath := c.Args().Get(0)\n\t\tctx, err := actions.NewContextFromMountpoint(path, nil)\n\t\tif err != nil {\n\t\t\treturn newExitError(c, err)\n",
                    "rendered": {
                      "text": "\t\t}\n\tcase 1:\n\t\t// Case (3) - mountpoint destroy\n\t\tpath := c.Args().Get(0)\n\t\tctx, err := actions.NewContextFromMountpoint(path, nil)\n\t\tif err != nil {\n\t\t\treturn newExitError(c, err)\n",
                      "markdown": "`\t\t}\n\tcase 1:\n\t\t// Case (3) - mountpoint destroy\n\t\tpath := c.Args().Get(0)\n\t\tctx, err := actions.NewContextFromMountpoint(path, nil)\n\t\tif err != nil {\n\t\t\treturn newExitError(c, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 833,
                  "startColumn": 54,
                  "endLine": 833,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t\treturn expectedArgsErr(c, 1, false)\n\t}\n\n\tctx, err := actions.NewContextFromMountpoint(c.Args().Get(0), nil)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn expectedArgsErr(c, 1, false)\n\t}\n\n\tctx, err := actions.NewContextFromMountpoint(c.Args().Get(0), nil)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n",
                      "markdown": "`\t\treturn expectedArgsErr(c, 1, false)\n\t}\n\n\tctx, err := actions.NewContextFromMountpoint(c.Args().Get(0), nil)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 789,
                  "startColumn": 23,
                  "endLine": 789,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tmountpoint := c.Args().Get(0)\n\tctx, err := actions.NewContextFromMountpoint(mountpoint, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tmountpoint := c.Args().Get(0)\n\tctx, err := actions.NewContextFromMountpoint(mountpoint, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n",
                      "markdown": "`\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tmountpoint := c.Args().Get(0)\n\tctx, err := actions.NewContextFromMountpoint(mountpoint, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 707,
                  "startColumn": 18,
                  "endLine": 707,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t// Case (1) - global status\n\t\terr = writeGlobalStatus(c.App.Writer)\n\tcase 1:\n\t\tpath := c.Args().Get(0)\n\n\t\tvar ctx *actions.Context\n\t\tctx, err = actions.NewContextFromMountpoint(path, nil)\n",
                    "rendered": {
                      "text": "\t\t// Case (1) - global status\n\t\terr = writeGlobalStatus(c.App.Writer)\n\tcase 1:\n\t\tpath := c.Args().Get(0)\n\n\t\tvar ctx *actions.Context\n\t\tctx, err = actions.NewContextFromMountpoint(path, nil)\n",
                      "markdown": "`\t\t// Case (1) - global status\n\t\terr = writeGlobalStatus(c.App.Writer)\n\tcase 1:\n\t\tpath := c.Args().Get(0)\n\n\t\tvar ctx *actions.Context\n\t\tctx, err = actions.NewContextFromMountpoint(path, nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 643,
                  "startColumn": 23,
                  "endLine": 643,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tmountpoint := c.Args().Get(0)\n\tctx, err := actions.NewContextFromMountpoint(mountpoint, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tmountpoint := c.Args().Get(0)\n\tctx, err := actions.NewContextFromMountpoint(mountpoint, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n",
                      "markdown": "`\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tmountpoint := c.Args().Get(0)\n\tctx, err := actions.NewContextFromMountpoint(mountpoint, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 17,
                  "endLine": 484,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tpath := c.Args().Get(0)\n\tctx, err := actions.NewContextFromPath(path, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tpath := c.Args().Get(0)\n\tctx, err := actions.NewContextFromPath(path, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n",
                      "markdown": "`\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tpath := c.Args().Get(0)\n\tctx, err := actions.NewContextFromPath(path, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 17,
                  "endLine": 397,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tpath := c.Args().Get(0)\n\tctx, err := actions.NewContextFromPath(path, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tpath := c.Args().Get(0)\n\tctx, err := actions.NewContextFromPath(path, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n",
                      "markdown": "`\tif err != nil {\n\t\treturn newExitError(c, err)\n\t}\n\tpath := c.Args().Get(0)\n\tctx, err := actions.NewContextFromPath(path, targetUser)\n\tif err != nil {\n\t\treturn newExitError(c, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 17,
                  "endLine": 119,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\treturn expectedArgsErr(c, 1, false)\n\t}\n\n\tpath := c.Args().Get(0)\n\tif err := encryptPath(path); err != nil {\n\t\treturn newExitError(c, err)\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn expectedArgsErr(c, 1, false)\n\t}\n\n\tpath := c.Args().Get(0)\n\tif err := encryptPath(path); err != nil {\n\t\treturn newExitError(c, err)\n\t}\n",
                      "markdown": "`\t\treturn expectedArgsErr(c, 1, false)\n\t}\n\n\tpath := c.Args().Get(0)\n\tif err := encryptPath(path); err != nil {\n\t\treturn newExitError(c, err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 50,
                  "endLine": 87,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t\t}\n\tcase 1:\n\t\t// Case (2) - filesystem setup\n\t\tif err := setupFilesystem(c.App.Writer, c.Args().Get(0)); err != nil {\n\t\t\treturn newExitError(c, err)\n\t\t}\n\tdefault:\n",
                    "rendered": {
                      "text": "\t\t}\n\tcase 1:\n\t\t// Case (2) - filesystem setup\n\t\tif err := setupFilesystem(c.App.Writer, c.Args().Get(0)); err != nil {\n\t\t\treturn newExitError(c, err)\n\t\t}\n\tdefault:\n",
                      "markdown": "`\t\t}\n\tcase 1:\n\t\t// Case (2) - filesystem setup\n\t\tif err := setupFilesystem(c.App.Writer, c.Args().Get(0)); err != nil {\n\t\t\treturn newExitError(c, err)\n\t\t}\n\tdefault:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 819,
                  "startColumn": 16,
                  "endLine": 819,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tthat has not (yet) been applied to any directory. After\n\t\tcreation, the user can use %s with \"fscrypt encrypt\" to encrypt\n\t\ta directory with this new policy. As all policies must be\n\t\tprotected with at least one protector, this command requires\n\t\tspecifying one with %s. To create a policy protected by many\n\t\tprotectors, use this command and \"fscrypt metadata\n\t\tadd-protector-to-policy\".`, mountpointArg,\n",
                    "rendered": {
                      "text": "\t\tthat has not (yet) been applied to any directory. After\n\t\tcreation, the user can use %s with \"fscrypt encrypt\" to encrypt\n\t\ta directory with this new policy. As all policies must be\n\t\tprotected with at least one protector, this command requires\n\t\tspecifying one with %s. To create a policy protected by many\n\t\tprotectors, use this command and \"fscrypt metadata\n\t\tadd-protector-to-policy\".`, mountpointArg,\n",
                      "markdown": "`\t\tthat has not (yet) been applied to any directory. After\n\t\tcreation, the user can use %s with \"fscrypt encrypt\" to encrypt\n\t\ta directory with this new policy. As all policies must be\n\t\tprotected with at least one protector, this command requires\n\t\tspecifying one with %s. To create a policy protected by many\n\t\tprotectors, use this command and \"fscrypt metadata\n\t\tadd-protector-to-policy\".`, mountpointArg,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 543,
                  "startColumn": 47,
                  "endLine": 543,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\nfunc isPossibleNoKeyName(filename string) bool {\n\t// No-key names are at least 22 bytes long, since they are\n\t// base64-encoded and ciphertext filenames are at least 16 bytes.\n\tif len(filename) < 22 {\n\t\treturn false\n\t}\n",
                    "rendered": {
                      "text": "\nfunc isPossibleNoKeyName(filename string) bool {\n\t// No-key names are at least 22 bytes long, since they are\n\t// base64-encoded and ciphertext filenames are at least 16 bytes.\n\tif len(filename) < 22 {\n\t\treturn false\n\t}\n",
                      "markdown": "`\nfunc isPossibleNoKeyName(filename string) bool {\n\t// No-key names are at least 22 bytes long, since they are\n\t// base64-encoded and ciphertext filenames are at least 16 bytes.\n\tif len(filename) < 22 {\n\t\treturn false\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 542,
                  "startColumn": 20,
                  "endLine": 542,
                  "endColumn": 24,
                  "snippet": {
                    "text": "}\n\nfunc isPossibleNoKeyName(filename string) bool {\n\t// No-key names are at least 22 bytes long, since they are\n\t// base64-encoded and ciphertext filenames are at least 16 bytes.\n\tif len(filename) < 22 {\n\t\treturn false\n",
                    "rendered": {
                      "text": "}\n\nfunc isPossibleNoKeyName(filename string) bool {\n\t// No-key names are at least 22 bytes long, since they are\n\t// base64-encoded and ciphertext filenames are at least 16 bytes.\n\tif len(filename) < 22 {\n\t\treturn false\n",
                      "markdown": "`}\n\nfunc isPossibleNoKeyName(filename string) bool {\n\t// No-key names are at least 22 bytes long, since they are\n\t// base64-encoded and ciphertext filenames are at least 16 bytes.\n\tif len(filename) < 22 {\n\t\treturn false\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 47,
                  "endLine": 60,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\tlogin passphrase protectors are stored.\n\n\t\t(2) When used with %[1]s, this command creates the fscrypt\n\t\tmetadata directory for the filesystem mounted at %[1]s. This\n\t\tallows fscrypt to be used on that filesystem, provided that any\n\t\tkernel and filesystem-specific prerequisites are also met (see\n\t\tthe README). This may require root privileges.`,\n",
                    "rendered": {
                      "text": "\t\tlogin passphrase protectors are stored.\n\n\t\t(2) When used with %[1]s, this command creates the fscrypt\n\t\tmetadata directory for the filesystem mounted at %[1]s. This\n\t\tallows fscrypt to be used on that filesystem, provided that any\n\t\tkernel and filesystem-specific prerequisites are also met (see\n\t\tthe README). This may require root privileges.`,\n",
                      "markdown": "`\t\tlogin passphrase protectors are stored.\n\n\t\t(2) When used with %[1]s, this command creates the fscrypt\n\t\tmetadata directory for the filesystem mounted at %[1]s. This\n\t\tallows fscrypt to be used on that filesystem, provided that any\n\t\tkernel and filesystem-specific prerequisites are also met (see\n\t\tthe README). This may require root privileges.`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 47,
                  "endLine": 127,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t// Most people expect that other users can't see their encrypted files\n\t// while they're unlocked, so change the directory's mode to 0700.\n\tif err := os.Chmod(path, 0700); err != nil {\n\t\tfmt.Fprintf(c.App.Writer, \"Warning: unable to chmod %q to 0700 [%v]\\n\", path, err)\n\t\t// Continue on; don't consider this a fatal error.\n\t}\n\n",
                    "rendered": {
                      "text": "\t// Most people expect that other users can't see their encrypted files\n\t// while they're unlocked, so change the directory's mode to 0700.\n\tif err := os.Chmod(path, 0700); err != nil {\n\t\tfmt.Fprintf(c.App.Writer, \"Warning: unable to chmod %q to 0700 [%v]\\n\", path, err)\n\t\t// Continue on; don't consider this a fatal error.\n\t}\n\n",
                      "markdown": "`\t// Most people expect that other users can't see their encrypted files\n\t// while they're unlocked, so change the directory's mode to 0700.\n\tif err := os.Chmod(path, 0700); err != nil {\n\t\tfmt.Fprintf(c.App.Writer, \"Warning: unable to chmod %q to 0700 [%v]\\n\", path, err)\n\t\t// Continue on; don't consider this a fatal error.\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cmd/fscrypt/commands.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 15,
                  "endLine": 124,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\treturn newExitError(c, err)\n\t}\n\n\t// Most people expect that other users can't see their encrypted files\n\t// while they're unlocked, so change the directory's mode to 0700.\n\tif err := os.Chmod(path, 0700); err != nil {\n\t\tfmt.Fprintf(c.App.Writer, \"Warning: unable to chmod %q to 0700 [%v]\\n\", path, err)\n",
                    "rendered": {
                      "text": "\t\treturn newExitError(c, err)\n\t}\n\n\t// Most people expect that other users can't see their encrypted files\n\t// while they're unlocked, so change the directory's mode to 0700.\n\tif err := os.Chmod(path, 0700); err != nil {\n\t\tfmt.Fprintf(c.App.Writer, \"Warning: unable to chmod %q to 0700 [%v]\\n\", path, err)\n",
                      "markdown": "`\t\treturn newExitError(c, err)\n\t}\n\n\t// Most people expect that other users can't see their encrypted files\n\t// while they're unlocked, so change the directory's mode to 0700.\n\tif err := os.Chmod(path, 0700); err != nil {\n\t\tfmt.Fprintf(c.App.Writer, \"Warning: unable to chmod %q to 0700 [%v]\\n\", path, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/config.go"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 59,
                  "endLine": 183,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\treturn config, nil\n}\n\n// getHashingCosts returns hashing costs so that hashing a password will take\n// approximately the target time. This is done using the total amount of RAM,\n// the number of CPUs present, and by running the passphrase hash many times.\nfunc getHashingCosts(target time.Duration) (*metadata.HashingCosts, error) {\n",
                    "rendered": {
                      "text": "\treturn config, nil\n}\n\n// getHashingCosts returns hashing costs so that hashing a password will take\n// approximately the target time. This is done using the total amount of RAM,\n// the number of CPUs present, and by running the passphrase hash many times.\nfunc getHashingCosts(target time.Duration) (*metadata.HashingCosts, error) {\n",
                      "markdown": "`\treturn config, nil\n}\n\n// getHashingCosts returns hashing costs so that hashing a password will take\n// approximately the target time. This is done using the total amount of RAM,\n// the number of CPUs present, and by running the passphrase hash many times.\nfunc getHashingCosts(target time.Duration) (*metadata.HashingCosts, error) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/config.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 59,
                  "endLine": 89,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\tconfigPermissions = 0644\n\t// Config file should be created for writing and not already exist\n\tcreateFlags = os.O_CREATE | os.O_WRONLY | os.O_EXCL\n\t// 128 MiB is a large enough amount of memory to make the password hash\n\t// very difficult to brute force on specialized hardware, but small\n\t// enough to work on most GNU/Linux systems.\n\tmaxMemoryBytes = 128 * 1024 * 1024\n",
                    "rendered": {
                      "text": "\tconfigPermissions = 0644\n\t// Config file should be created for writing and not already exist\n\tcreateFlags = os.O_CREATE | os.O_WRONLY | os.O_EXCL\n\t// 128 MiB is a large enough amount of memory to make the password hash\n\t// very difficult to brute force on specialized hardware, but small\n\t// enough to work on most GNU/Linux systems.\n\tmaxMemoryBytes = 128 * 1024 * 1024\n",
                      "markdown": "`\tconfigPermissions = 0644\n\t// Config file should be created for writing and not already exist\n\tcreateFlags = os.O_CREATE | os.O_WRONLY | os.O_EXCL\n\t// 128 MiB is a large enough amount of memory to make the password hash\n\t// very difficult to brute force on specialized hardware, but small\n\t// enough to work on most GNU/Linux systems.\n\tmaxMemoryBytes = 128 * 1024 * 1024\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/config.go"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 28,
                  "endLine": 130,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\treturn err\n\t}\n\n\tlog.Printf(\"Creating config at %q with %v\\n\", ConfigFileLocation, config)\n\treturn metadata.WriteConfig(config, configFile)\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn err\n\t}\n\n\tlog.Printf(\"Creating config at %q with %v\\n\", ConfigFileLocation, config)\n\treturn metadata.WriteConfig(config, configFile)\n}\n\n",
                      "markdown": "`\t\treturn err\n\t}\n\n\tlog.Printf(\"Creating config at %q with %v\\n\", ConfigFileLocation, config)\n\treturn metadata.WriteConfig(config, configFile)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/actions/config.go"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 46,
                  "endLine": 102,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n// CreateConfigFile creates a new config file at the appropriate location with\n// the appropriate hashing costs and encryption parameters. The hashing will be\n// configured to take as long as the specified time target. In addition, the\n// version of encryption policy to use may be overridden from the default of v1.\nfunc CreateConfigFile(target time.Duration, policyVersion int64) error {\n\t// Create the config file before computing the hashing costs, so we fail\n",
                    "rendered": {
                      "text": "\n// CreateConfigFile creates a new config file at the appropriate location with\n// the appropriate hashing costs and encryption parameters. The hashing will be\n// configured to take as long as the specified time target. In addition, the\n// version of encryption policy to use may be overridden from the default of v1.\nfunc CreateConfigFile(target time.Duration, policyVersion int64) error {\n\t// Create the config file before computing the hashing costs, so we fail\n",
                      "markdown": "`\n// CreateConfigFile creates a new config file at the appropriate location with\n// the appropriate hashing costs and encryption parameters. The hashing will be\n// configured to take as long as the specified time target. In addition, the\n// version of encryption policy to use may be overridden from the default of v1.\nfunc CreateConfigFile(target time.Duration, policyVersion int64) error {\n\t// Create the config file before computing the hashing costs, so we fail\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/recovery_test.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 40,
                  "endLine": 108,
                  "endColumn": 49,
                  "snippet": {
                    "text": "}\n\nfunc TestFakeSecretKey(t *testing.T) {\n\tbuf, err := getRecoveryCodeFromKey(fakeSecretKey)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc TestFakeSecretKey(t *testing.T) {\n\tbuf, err := getRecoveryCodeFromKey(fakeSecretKey)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                      "markdown": "`}\n\nfunc TestFakeSecretKey(t *testing.T) {\n\tbuf, err := getRecoveryCodeFromKey(fakeSecretKey)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/recovery_test.go"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 13,
                  "endLine": 107,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t// t.Fail() // Uncomment to see an example random recovery code\n}\n\nfunc TestFakeSecretKey(t *testing.T) {\n\tbuf, err := getRecoveryCodeFromKey(fakeSecretKey)\n\tif err != nil {\n\t\tt.Fatal(err)\n",
                    "rendered": {
                      "text": "\t// t.Fail() // Uncomment to see an example random recovery code\n}\n\nfunc TestFakeSecretKey(t *testing.T) {\n\tbuf, err := getRecoveryCodeFromKey(fakeSecretKey)\n\tif err != nil {\n\t\tt.Fatal(err)\n",
                      "markdown": "`\t// t.Fail() // Uncomment to see an example random recovery code\n}\n\nfunc TestFakeSecretKey(t *testing.T) {\n\tbuf, err := getRecoveryCodeFromKey(fakeSecretKey)\n\tif err != nil {\n\t\tt.Fatal(err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/crypto/recovery_test.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 8,
                  "endLine": 33,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nconst fakeSecretRecoveryCode = \"EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJQ=\"\n\nvar fakeSecretKey, _ = makeKey(38, metadata.PolicyKeyLen)\n\n// Note that this function is INSECURE. FOR TESTING ONLY\nfunc getRecoveryCodeFromKey(key *Key) ([]byte, error) {\n",
                    "rendered": {
                      "text": "\nconst fakeSecretRecoveryCode = \"EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJQ=\"\n\nvar fakeSecretKey, _ = makeKey(38, metadata.PolicyKeyLen)\n\n// Note that this function is INSECURE. FOR TESTING ONLY\nfunc getRecoveryCodeFromKey(key *Key) ([]byte, error) {\n",
                      "markdown": "`\nconst fakeSecretRecoveryCode = \"EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJRG-EYTCMJQ=\"\n\nvar fakeSecretKey, _ = makeKey(38, metadata.PolicyKeyLen)\n\n// Note that this function is INSECURE. FOR TESTING ONLY\nfunc getRecoveryCodeFromKey(key *Key) ([]byte, error) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_lock.out"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 29,
                  "endLine": 41,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n",
                    "rendered": {
                      "text": "\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n",
                      "markdown": "`\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/cli-tests/t_lock.out"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 4,
                  "endLine": 41,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n",
                    "rendered": {
                      "text": "\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n",
                      "markdown": "`\nTry killing any processes using files in the directory, for example using:\n\n     find \"MNT/dir\" -print0 | xargs -0 fuser -k\n\nThen re-run:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint.go"
                },
                "region": {
                  "startLine": 530,
                  "startColumn": 31,
                  "endLine": 530,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t}\n\t\tlog.Print(err)\n\t\tif errMsg == \"\" {\n\t\t\terrMsg = fmt.Sprintf(\"cannot find filesystem with main mountpoint %q\", path)\n\t\t} else {\n\t\t\terrMsg += fmt.Sprintf(\" or main mountpoint %q\", path)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tlog.Print(err)\n\t\tif errMsg == \"\" {\n\t\t\terrMsg = fmt.Sprintf(\"cannot find filesystem with main mountpoint %q\", path)\n\t\t} else {\n\t\t\terrMsg += fmt.Sprintf(\" or main mountpoint %q\", path)\n\t\t}\n",
                      "markdown": "`\t\t}\n\t\tlog.Print(err)\n\t\tif errMsg == \"\" {\n\t\t\terrMsg = fmt.Sprintf(\"cannot find filesystem with main mountpoint %q\", path)\n\t\t} else {\n\t\t\terrMsg += fmt.Sprintf(\" or main mountpoint %q\", path)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint.go"
                },
                "region": {
                  "startLine": 516,
                  "startColumn": 31,
                  "endLine": 516,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t} else {\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q: %v\", uuid, err)\n\t\t}\n\t\terrMsg += fmt.Sprintf(\"cannot find filesystem with UUID %q\", uuid)\n\t\tif path != \"\" {\n\t\t\tlog.Printf(\"falling back to using mountpoint path instead of UUID\")\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t} else {\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q: %v\", uuid, err)\n\t\t}\n\t\terrMsg += fmt.Sprintf(\"cannot find filesystem with UUID %q\", uuid)\n\t\tif path != \"\" {\n\t\t\tlog.Printf(\"falling back to using mountpoint path instead of UUID\")\n\t\t}\n",
                      "markdown": "`\t\t} else {\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q: %v\", uuid, err)\n\t\t}\n\t\terrMsg += fmt.Sprintf(\"cannot find filesystem with UUID %q\", uuid)\n\t\tif path != \"\" {\n\t\t\tlog.Printf(\"falling back to using mountpoint path instead of UUID\")\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint.go"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 21,
                  "endLine": 514,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q\", uuid)\n\t\t} else {\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q: %v\", uuid, err)\n\t\t}\n\t\terrMsg += fmt.Sprintf(\"cannot find filesystem with UUID %q\", uuid)\n\t\tif path != \"\" {\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q\", uuid)\n\t\t} else {\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q: %v\", uuid, err)\n\t\t}\n\t\terrMsg += fmt.Sprintf(\"cannot find filesystem with UUID %q\", uuid)\n\t\tif path != \"\" {\n",
                      "markdown": "`\t\t\t}\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q\", uuid)\n\t\t} else {\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q: %v\", uuid, err)\n\t\t}\n\t\terrMsg += fmt.Sprintf(\"cannot find filesystem with UUID %q\", uuid)\n\t\tif path != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint.go"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 21,
                  "endLine": 512,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\tif ok {\n\t\t\t\treturn nil, &ErrFollowLink{link, filesystemLacksMainMountError(deviceNumber)}\n\t\t\t}\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q\", uuid)\n\t\t} else {\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q: %v\", uuid, err)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tif ok {\n\t\t\t\treturn nil, &ErrFollowLink{link, filesystemLacksMainMountError(deviceNumber)}\n\t\t\t}\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q\", uuid)\n\t\t} else {\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q: %v\", uuid, err)\n\t\t}\n",
                      "markdown": "`\t\t\tif ok {\n\t\t\t\treturn nil, &ErrFollowLink{link, filesystemLacksMainMountError(deviceNumber)}\n\t\t\t}\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q\", uuid)\n\t\t} else {\n\t\t\tlog.Printf(\"cannot find filesystem with UUID %q: %v\", uuid, err)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint.go"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 38,
                  "endLine": 410,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t// Move to the parent directory unless we have reached the root.\n\t\tparent := filepath.Dir(curPath)\n\t\tif parent == curPath {\n\t\t\treturn nil, errors.Errorf(\"couldn't find mountpoint containing %q\", path)\n\t\t}\n\t\tcurPath = parent\n\t}\n",
                    "rendered": {
                      "text": "\t\t// Move to the parent directory unless we have reached the root.\n\t\tparent := filepath.Dir(curPath)\n\t\tif parent == curPath {\n\t\t\treturn nil, errors.Errorf(\"couldn't find mountpoint containing %q\", path)\n\t\t}\n\t\tcurPath = parent\n\t}\n",
                      "markdown": "`\t\t// Move to the parent directory unless we have reached the root.\n\t\tparent := filepath.Dir(curPath)\n\t\tif parent == curPath {\n\t\t\treturn nil, errors.Errorf(\"couldn't find mountpoint containing %q\", path)\n\t\t}\n\t\tcurPath = parent\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint.go"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 7,
                  "endLine": 355,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t}\n\n\tmounts := make([]*Mount, 0, len(mountsByPath))\n\tfor _, mount := range mountsByPath {\n\t\tmounts = append(mounts, mount)\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\n\tmounts := make([]*Mount, 0, len(mountsByPath))\n\tfor _, mount := range mountsByPath {\n\t\tmounts = append(mounts, mount)\n\t}\n\n",
                      "markdown": "`\t}\n\n\tmounts := make([]*Mount, 0, len(mountsByPath))\n\tfor _, mount := range mountsByPath {\n\t\tmounts = append(mounts, mount)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint.go"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 80,
                  "endLine": 341,
                  "endColumn": 87,
                  "snippet": {
                    "text": "}\n\nfunc filesystemLacksMainMountError(deviceNumber DeviceNumber) error {\n\treturn errors.Errorf(\"Device %q (%v) lacks a \\\"main\\\" mountpoint in the current mount namespace, so it's ambiguous where to store the fscrypt metadata.\",\n\t\tgetDeviceName(deviceNumber), deviceNumber)\n}\n\n",
                    "rendered": {
                      "text": "}\n\nfunc filesystemLacksMainMountError(deviceNumber DeviceNumber) error {\n\treturn errors.Errorf(\"Device %q (%v) lacks a \\\"main\\\" mountpoint in the current mount namespace, so it's ambiguous where to store the fscrypt metadata.\",\n\t\tgetDeviceName(deviceNumber), deviceNumber)\n}\n\n",
                      "markdown": "`}\n\nfunc filesystemLacksMainMountError(deviceNumber DeviceNumber) error {\n\treturn errors.Errorf(\"Device %q (%v) lacks a \\\"main\\\" mountpoint in the current mount namespace, so it's ambiguous where to store the fscrypt metadata.\",\n\t\tgetDeviceName(deviceNumber), deviceNumber)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint.go"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167,
                  "endColumn": 6,
                  "snippet": {
                    "text": "}\n\nfunc addUncontainedSubtreesRecursive(dst map[string]bool,\n\tnode *mountpointTreeNode, allUncontainedSubtrees map[string]bool) {\n\tif allUncontainedSubtrees[node.mount.Subtree] {\n\t\tdst[node.mount.Subtree] = true\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc addUncontainedSubtreesRecursive(dst map[string]bool,\n\tnode *mountpointTreeNode, allUncontainedSubtrees map[string]bool) {\n\tif allUncontainedSubtrees[node.mount.Subtree] {\n\t\tdst[node.mount.Subtree] = true\n\t}\n",
                      "markdown": "`}\n\nfunc addUncontainedSubtreesRecursive(dst map[string]bool,\n\tnode *mountpointTreeNode, allUncontainedSubtrees map[string]bool) {\n\tif allUncontainedSubtrees[node.mount.Subtree] {\n\t\tdst[node.mount.Subtree] = true\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/filesystem/mountpoint.go"
                },
                "region": {
                  "startLine": 161,
                  "endLine": 161,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\n\ntype mountpointTreeNode struct {\n\tmount    *Mount\n\tparent   *mountpointTreeNode\n\tchildren []*mountpointTreeNode\n}\n",
                    "rendered": {
                      "text": "}\n\ntype mountpointTreeNode struct {\n\tmount    *Mount\n\tparent   *mountpointTreeNode\n\tchildren []*mountpointTreeNode\n}\n",
                      "markdown": "`}\n\ntype mountpointTreeNode struct {\n\tmount    *Mount\n\tparent   *mountpointTreeNode\n\tchildren []*mountpointTreeNode\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 45,
                  "endLine": 132,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\nfscrypt's dependencies are managed using the\n[Go module system](https://github.com/golang/go/wiki/Modules).\nIf you add or remove a dependency, be sure to update `go.mod` and `go.sum`.\n\nAlso, when adding a dependency, the license of the package must be compatible\nwith [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0). See the\n",
                    "rendered": {
                      "text": "\nfscrypt's dependencies are managed using the\n[Go module system](https://github.com/golang/go/wiki/Modules).\nIf you add or remove a dependency, be sure to update `go.mod` and `go.sum`.\n\nAlso, when adding a dependency, the license of the package must be compatible\nwith [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0). See the\n",
                      "markdown": "`\nfscrypt's dependencies are managed using the\n[Go module system](https://github.com/golang/go/wiki/Modules).\nIf you add or remove a dependency, be sure to update `go.mod` and `go.sum`.\n\nAlso, when adding a dependency, the license of the package must be compatible\nwith [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0). See the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 72,
                  "endLine": 116,
                  "endColumn": 76,
                  "snippet": {
                    "text": "Otherwise, you can use the `make test-setup`/`make test-teardown` commands to\ncreate/destroy a test filesystem for running integration tests. By default, a\nfilesystem will be created (then destroyed) at `/tmp/fscrypt-mount` (using an\nimage file at `/tmp/fscrypt-image`). To create/test/destroy a filesystem at a\ncustom mountpoint `/foo/bar`, run:\n```bash\nmake test-setup MOUNT=/foo/bar\n",
                    "rendered": {
                      "text": "Otherwise, you can use the `make test-setup`/`make test-teardown` commands to\ncreate/destroy a test filesystem for running integration tests. By default, a\nfilesystem will be created (then destroyed) at `/tmp/fscrypt-mount` (using an\nimage file at `/tmp/fscrypt-image`). To create/test/destroy a filesystem at a\ncustom mountpoint `/foo/bar`, run:\n```bash\nmake test-setup MOUNT=/foo/bar\n",
                      "markdown": "`Otherwise, you can use the `make test-setup`/`make test-teardown` commands to\ncreate/destroy a test filesystem for running integration tests. By default, a\nfilesystem will be created (then destroyed) at `/tmp/fscrypt-mount` (using an\nimage file at `/tmp/fscrypt-image`). To create/test/destroy a filesystem at a\ncustom mountpoint `/foo/bar`, run:\n```bash\nmake test-setup MOUNT=/foo/bar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 10,
                  "endLine": 116,
                  "endColumn": 14,
                  "snippet": {
                    "text": "Otherwise, you can use the `make test-setup`/`make test-teardown` commands to\ncreate/destroy a test filesystem for running integration tests. By default, a\nfilesystem will be created (then destroyed) at `/tmp/fscrypt-mount` (using an\nimage file at `/tmp/fscrypt-image`). To create/test/destroy a filesystem at a\ncustom mountpoint `/foo/bar`, run:\n```bash\nmake test-setup MOUNT=/foo/bar\n",
                    "rendered": {
                      "text": "Otherwise, you can use the `make test-setup`/`make test-teardown` commands to\ncreate/destroy a test filesystem for running integration tests. By default, a\nfilesystem will be created (then destroyed) at `/tmp/fscrypt-mount` (using an\nimage file at `/tmp/fscrypt-image`). To create/test/destroy a filesystem at a\ncustom mountpoint `/foo/bar`, run:\n```bash\nmake test-setup MOUNT=/foo/bar\n",
                      "markdown": "`Otherwise, you can use the `make test-setup`/`make test-teardown` commands to\ncreate/destroy a test filesystem for running integration tests. By default, a\nfilesystem will be created (then destroyed) at `/tmp/fscrypt-mount` (using an\nimage file at `/tmp/fscrypt-image`). To create/test/destroy a filesystem at a\ncustom mountpoint `/foo/bar`, run:\n```bash\nmake test-setup MOUNT=/foo/bar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 43,
                  "endLine": 115,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\nOtherwise, you can use the `make test-setup`/`make test-teardown` commands to\ncreate/destroy a test filesystem for running integration tests. By default, a\nfilesystem will be created (then destroyed) at `/tmp/fscrypt-mount` (using an\nimage file at `/tmp/fscrypt-image`). To create/test/destroy a filesystem at a\ncustom mountpoint `/foo/bar`, run:\n```bash\n",
                    "rendered": {
                      "text": "\nOtherwise, you can use the `make test-setup`/`make test-teardown` commands to\ncreate/destroy a test filesystem for running integration tests. By default, a\nfilesystem will be created (then destroyed) at `/tmp/fscrypt-mount` (using an\nimage file at `/tmp/fscrypt-image`). To create/test/destroy a filesystem at a\ncustom mountpoint `/foo/bar`, run:\n```bash\n",
                      "markdown": "`\nOtherwise, you can use the `make test-setup`/`make test-teardown` commands to\ncreate/destroy a test filesystem for running integration tests. By default, a\nfilesystem will be created (then destroyed) at `/tmp/fscrypt-mount` (using an\nimage file at `/tmp/fscrypt-image`). To create/test/destroy a filesystem at a\ncustom mountpoint `/foo/bar`, run:\n```bash\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 78,
                  "endLine": 108,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\nRunning `make test` will build each package and run the unit tests, but will\nskip the integration tests. To run the integration tests, you will need a\nfilesystem that supports encryption. If you already have some empty filesystem\nat `/foo/bar` that supports filesystem encryption, just run:\n```bash\nmake test MOUNT=/foo/bar\n```\n",
                    "rendered": {
                      "text": "\nRunning `make test` will build each package and run the unit tests, but will\nskip the integration tests. To run the integration tests, you will need a\nfilesystem that supports encryption. If you already have some empty filesystem\nat `/foo/bar` that supports filesystem encryption, just run:\n```bash\nmake test MOUNT=/foo/bar\n```\n",
                      "markdown": "`\nRunning `make test` will build each package and run the unit tests, but will\nskip the integration tests. To run the integration tests, you will need a\nfilesystem that supports encryption. If you already have some empty filesystem\nat `/foo/bar` that supports filesystem encryption, just run:\n```bash\nmake test MOUNT=/foo/bar\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 37,
                  "endLine": 34,
                  "endColumn": 41,
                  "snippet": {
                    "text": "If reporting an issue around the fscrypt command-line tool, post the\nrelevant output from fscrypt, running with the `--verbose` flag. For the\n`pam_fscrypt` module, use the `debug` option with the module and post the\nrelevant parts of the syslog (usually at `/var/log/syslog`).\n\nBe sure to correctly tag your issue. The usage for the tags is as follows:\n* `bug` - General problems with the program's behavior\n",
                    "rendered": {
                      "text": "If reporting an issue around the fscrypt command-line tool, post the\nrelevant output from fscrypt, running with the `--verbose` flag. For the\n`pam_fscrypt` module, use the `debug` option with the module and post the\nrelevant parts of the syslog (usually at `/var/log/syslog`).\n\nBe sure to correctly tag your issue. The usage for the tags is as follows:\n* `bug` - General problems with the program's behavior\n",
                      "markdown": "`If reporting an issue around the fscrypt command-line tool, post the\nrelevant output from fscrypt, running with the `--verbose` flag. For the\n`pam_fscrypt` module, use the `debug` option with the module and post the\nrelevant parts of the syslog (usually at `/var/log/syslog`).\n\nBe sure to correctly tag your issue. The usage for the tags is as follows:\n* `bug` - General problems with the program's behavior\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 54,
                  "endLine": 100,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\nOn Ubuntu, the following command installs the needed packages:\n```\nsudo apt-get install clang-format shellcheck e2fsprogs expect keyutils\n```\n\n### Running Integration Tests\n",
                    "rendered": {
                      "text": "\nOn Ubuntu, the following command installs the needed packages:\n```\nsudo apt-get install clang-format shellcheck e2fsprogs expect keyutils\n```\n\n### Running Integration Tests\n",
                      "markdown": "`\nOn Ubuntu, the following command installs the needed packages:\n```\nsudo apt-get install clang-format shellcheck e2fsprogs expect keyutils\n```\n\n### Running Integration Tests\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 4,
                  "endLine": 100,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nOn Ubuntu, the following command installs the needed packages:\n```\nsudo apt-get install clang-format shellcheck e2fsprogs expect keyutils\n```\n\n### Running Integration Tests\n",
                    "rendered": {
                      "text": "\nOn Ubuntu, the following command installs the needed packages:\n```\nsudo apt-get install clang-format shellcheck e2fsprogs expect keyutils\n```\n\n### Running Integration Tests\n",
                      "markdown": "`\nOn Ubuntu, the following command installs the needed packages:\n```\nsudo apt-get install clang-format shellcheck e2fsprogs expect keyutils\n```\n\n### Running Integration Tests\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fscrypt.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 20,
                  "endLine": 11,
                  "endColumn": 26,
                  "snippet": {
                    "text": "Contributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution,\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n",
                    "rendered": {
                      "text": "Contributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution,\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n",
                      "markdown": "`Contributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution,\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}